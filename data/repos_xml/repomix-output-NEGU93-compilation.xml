This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
.classpath
.gitattributes
.gitignore
.project
asm.o
Compilation.iml
lib/lib.iml
Practice/.metadata/.plugins/org.eclipse.core.resources/.history/15/c03b1999e1d700161a15a32011681f65
Practice/.metadata/.plugins/org.eclipse.core.resources/.history/1f/502d05ebe0d700161a15a32011681f65
Practice/.metadata/.plugins/org.eclipse.core.resources/.history/23/80b377dbe0d700161a15a32011681f65
Practice/.metadata/.plugins/org.eclipse.core.resources/.history/24/20f20fb0e0d700161a15a32011681f65
Practice/.metadata/.plugins/org.eclipse.core.resources/.history/2a/503f0106e0d700161a15a32011681f65
Practice/.metadata/.plugins/org.eclipse.core.resources/.history/38/a09566cce0d700161a15a32011681f65
Practice/.metadata/.plugins/org.eclipse.core.resources/.history/3b/7026f01de1d700161a15a32011681f65
Practice/.metadata/.plugins/org.eclipse.core.resources/.history/4b/505854eee0d700161a15a32011681f65
Practice/.metadata/.plugins/org.eclipse.core.resources/.history/4b/50db48dbe0d700161a15a32011681f65
Practice/.metadata/.plugins/org.eclipse.core.resources/.history/4c/b027f8dee0d700161a15a32011681f65
Practice/.metadata/.plugins/org.eclipse.core.resources/.history/4f/30858bd7e0d700161a15a32011681f65
Practice/.metadata/.plugins/org.eclipse.core.resources/.history/61/90757eeee0d700161a15a32011681f65
Practice/.metadata/.plugins/org.eclipse.core.resources/.history/6b/30908b00f3d7001618fe84a016a1c128
Practice/.metadata/.plugins/org.eclipse.core.resources/.history/88/30630eade6d700161a15a32011681f65
Practice/.metadata/.plugins/org.eclipse.core.resources/.history/94/80ec37b0e0d700161a15a32011681f65
Practice/.metadata/.plugins/org.eclipse.core.resources/.history/95/202aa6eaf0d7001618fe84a016a1c128
Practice/.metadata/.plugins/org.eclipse.core.resources/.history/a4/70e906cce0d700161a15a32011681f65
Practice/.metadata/.plugins/org.eclipse.core.resources/.history/aa/502f23dfe0d700161a15a32011681f65
Practice/.metadata/.plugins/org.eclipse.core.resources/.history/b5/20212391e5d700161a15a32011681f65
Practice/.metadata/.plugins/org.eclipse.core.resources/.history/b5/b0bda461f3d7001618fe84a016a1c128
Practice/.metadata/.plugins/org.eclipse.core.resources/.history/c4/9046ea6befd7001618fe84a016a1c128
Practice/.metadata/.plugins/org.eclipse.core.resources/.history/cf/60f329ebe0d700161a15a32011681f65
Practice/.metadata/.plugins/org.eclipse.core.resources/.history/e/90565de3e0d700161a15a32011681f65
Practice/.metadata/.plugins/org.eclipse.core.resources/.history/f/50e3b2d7e0d700161a15a32011681f65
Practice/.metadata/.plugins/org.eclipse.core.resources/.history/fb/606033e3e0d700161a15a32011681f65
Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.core.resources.prefs
Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.debug.ui.prefs
Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.epp.logging.aeri.ide.prefs
Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.core.prefs
Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.launching.prefs
Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.ui.prefs
Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.m2e.discovery.prefs
Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.mylyn.context.core.prefs
Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.mylyn.java.ui.prefs
Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.mylyn.monitor.ui.prefs
Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.mylyn.tasks.ui.prefs
Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.recommenders.completion.rcp.prefs
Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.search.prefs
Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.team.ui.prefs
Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.editors.prefs
Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.ide.prefs
Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.prefs
Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.workbench.prefs
Practice/.metadata/.plugins/org.eclipse.debug.core/.launches/Main.launch
Practice/.metadata/.plugins/org.eclipse.debug.ui/launchConfigurationHistory.xml
Practice/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi
Practice/.metadata/.plugins/org.eclipse.epp.logging.aeri.ide/org.eclipse.epp.logging.aeri.ide.server/server-config.json
Practice/.metadata/.plugins/org.eclipse.jdt.core/savedIndexNames.txt
Practice/.metadata/.plugins/org.eclipse.jdt.launching/.install.xml
Practice/.metadata/.plugins/org.eclipse.jdt.launching/libraryInfos.xml
Practice/.metadata/.plugins/org.eclipse.jdt.ui/dialog_settings.xml
Practice/.metadata/.plugins/org.eclipse.jdt.ui/OpenTypeHistory.xml
Practice/.metadata/.plugins/org.eclipse.jdt.ui/QualifiedTypeNameHistory.xml
Practice/.metadata/.plugins/org.eclipse.m2e.logback.configuration/logback.1.6.2.20150902-0002.xml
Practice/.metadata/.plugins/org.eclipse.oomph.setup/workspace.setup
Practice/.metadata/.plugins/org.eclipse.search/dialog_settings.xml
Practice/.metadata/.plugins/org.eclipse.ui.workbench.texteditor/dialog_settings.xml
Practice/.metadata/.plugins/org.eclipse.ui.workbench/dialog_settings.xml
Practice/.metadata/.plugins/org.eclipse.ui.workbench/workingsets.xml
Practice/.metadata/version.ini
Practice/.recommenders/caches/identified-project-coordinates.json
Practice/.recommenders/caches/manual-mappings.json
Practice/flexExample/Lexer.flex
Practice/flexExample/pascal.flex
Practice/flexExample/PascalLexer.java
Practice/mini-python-java/.classpath
Practice/mini-python-java/.gitignore
Practice/mini-python-java/.idea/compiler.xml
Practice/mini-python-java/.idea/copyright/profiles_settings.xml
Practice/mini-python-java/.idea/encodings.xml
Practice/mini-python-java/.idea/misc.xml
Practice/mini-python-java/.idea/modules.xml
Practice/mini-python-java/.project
Practice/mini-python-java/.settings/org.eclipse.jdt.core.prefs
Practice/mini-python-java/bin/.gitignore
Practice/mini-python-java/bin/Lexer.flex
Practice/mini-python-java/bin/mini_python/Lexer.flex
Practice/mini-python-java/bin/mini_python/Parser.cup
Practice/mini-python-java/bin/pascal.flex
Practice/mini-python-java/Makefile
Practice/mini-python-java/mini-python-java.eml
Practice/mini-python-java/mini-python-java.iml
Practice/mini-python-java/run-tests
Practice/mini-python-java/src/mini_python/Interp.java
Practice/mini-python-java/src/mini_python/Lexer.flex
Practice/mini-python-java/src/mini_python/Lexer.java
Practice/mini-python-java/src/mini_python/Main.java
Practice/mini-python-java/src/mini_python/MyLexer.java
Practice/mini-python-java/src/mini_python/MyParser.java
Practice/mini-python-java/src/mini_python/Parser.cup
Practice/mini-python-java/src/mini_python/parser.java
Practice/mini-python-java/src/mini_python/sym.java
Practice/mini-python-java/src/mini_python/Syntax.java
Practice/mini-python-java/test.py
Practice/mini-python-java/tests/bad/add1.py
Practice/mini-python-java/tests/bad/bool1.py
Practice/mini-python-java/tests/bad/bool2.py
Practice/mini-python-java/tests/bad/for1.py
Practice/mini-python-java/tests/bad/len1.py
Practice/mini-python-java/tests/bad/range1.py
Practice/mini-python-java/tests/bad/range2.py
Practice/mini-python-java/tests/good/arith1.py
Practice/mini-python-java/tests/good/arith2.py
Practice/mini-python-java/tests/good/arith3.py
Practice/mini-python-java/tests/good/arith4.py
Practice/mini-python-java/tests/good/bool1.py
Practice/mini-python-java/tests/good/bool2.py
Practice/mini-python-java/tests/good/bool3.py
Practice/mini-python-java/tests/good/bool4.py
Practice/mini-python-java/tests/good/bool5.py
Practice/mini-python-java/tests/good/bool6.py
Practice/mini-python-java/tests/good/compare_list1.py
Practice/mini-python-java/tests/good/compare_list2.py
Practice/mini-python-java/tests/good/compare_string1.py
Practice/mini-python-java/tests/good/concat1.py
Practice/mini-python-java/tests/good/concat2.py
Practice/mini-python-java/tests/good/eval1.py
Practice/mini-python-java/tests/good/fib.py
Practice/mini-python-java/tests/good/list1.py
Practice/mini-python-java/tests/good/list2.py
Practice/mini-python-java/tests/good/loop1.py
Practice/mini-python-java/tests/good/mandelbrot.py
Practice/mini-python-java/tests/good/none.py
Practice/mini-python-java/tests/good/pascal.py
Practice/mini-python-java/tests/good/primes1.py
Practice/mini-python-java/tests/good/print_int.py
Practice/mini-python-java/tests/good/print_list1.py
Practice/mini-python-java/tests/good/print_list2.py
Practice/mini-python-java/tests/good/print_list3.py
Practice/mini-python-java/tests/good/print_string.py
Practice/mini-python-java/tests/good/range1.py
Practice/mini-python-java/tests/good/range2.py
Practice/mini-python-java/tests/good/range3.py
Practice/mini-python-java/tests/good/str1.py
Practice/mini-python-java/tests/good/var1.py
Practice/mini-python-java/tests/good/var2.py
Practice/mini-python/.depend
Practice/mini-python/ast.mli
Practice/mini-python/interp.ml
Practice/mini-python/lexer.mll
Practice/mini-python/main.ml
Practice/mini-python/Makefile
Practice/mini-python/parser.mly
Practice/mini-python/run-tests
Practice/mini-python/test.py
Practice/mini-python/tests/bad/add1.py
Practice/mini-python/tests/bad/bool1.py
Practice/mini-python/tests/bad/bool2.py
Practice/mini-python/tests/bad/for1.py
Practice/mini-python/tests/bad/len1.py
Practice/mini-python/tests/bad/range1.py
Practice/mini-python/tests/bad/range2.py
Practice/mini-python/tests/good/arith1.py
Practice/mini-python/tests/good/arith2.py
Practice/mini-python/tests/good/arith3.py
Practice/mini-python/tests/good/arith4.py
Practice/mini-python/tests/good/bool1.py
Practice/mini-python/tests/good/bool2.py
Practice/mini-python/tests/good/bool3.py
Practice/mini-python/tests/good/bool4.py
Practice/mini-python/tests/good/bool5.py
Practice/mini-python/tests/good/bool6.py
Practice/mini-python/tests/good/compare_list1.py
Practice/mini-python/tests/good/compare_list2.py
Practice/mini-python/tests/good/compare_string1.py
Practice/mini-python/tests/good/concat1.py
Practice/mini-python/tests/good/concat2.py
Practice/mini-python/tests/good/eval1.py
Practice/mini-python/tests/good/fib.py
Practice/mini-python/tests/good/list1.py
Practice/mini-python/tests/good/list2.py
Practice/mini-python/tests/good/loop1.py
Practice/mini-python/tests/good/mandelbrot.py
Practice/mini-python/tests/good/none.py
Practice/mini-python/tests/good/pascal.py
Practice/mini-python/tests/good/primes1.py
Practice/mini-python/tests/good/print_int.py
Practice/mini-python/tests/good/print_list1.py
Practice/mini-python/tests/good/print_list2.py
Practice/mini-python/tests/good/print_list3.py
Practice/mini-python/tests/good/print_string.py
Practice/mini-python/tests/good/range1.py
Practice/mini-python/tests/good/range2.py
Practice/mini-python/tests/good/range3.py
Practice/mini-python/tests/good/str1.py
Practice/mini-python/tests/good/var1.py
Practice/mini-python/tests/good/var2.py
Practice/Part1/matrix.c
Practice/Part1/matrix.txt
README.md
report/IEEEtran.cls
report/ref.bib
report/report.aux
report/report.bbl
report/report.blg
report/report.fdb_latexmk
report/report.fls
report/report.tex
report/report.toc
src/mini_c/Arcs.java
src/mini_c/Coloring.java
src/mini_c/ERTL.java
src/mini_c/flex+cup.bat
src/mini_c/Label.java
src/mini_c/lex.yy.c
src/mini_c/Lexer.flex
src/mini_c/Lexer.java
src/mini_c/Lexer.java~
src/mini_c/Lin.java
src/mini_c/Liveness.java
src/mini_c/LTL.java
src/mini_c/Main.java
src/mini_c/Ops.java
src/mini_c/Parser.cup
src/mini_c/Parser.java
src/mini_c/Register.java
src/mini_c/RTL.java
src/mini_c/sym.java
src/mini_c/Syntax.java
src/mini_c/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.core.resources.prefs
src/mini_c/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.epp.logging.aeri.ide.prefs
src/mini_c/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.core.prefs
src/mini_c/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.launching.prefs
src/mini_c/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.ui.prefs
src/mini_c/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.m2e.discovery.prefs
src/mini_c/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.mylyn.context.core.prefs
src/mini_c/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.mylyn.monitor.ui.prefs
src/mini_c/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.mylyn.tasks.ui.prefs
src/mini_c/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.ide.prefs
src/mini_c/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.prefs
src/mini_c/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.workbench.prefs
src/mini_c/workspace/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi
src/mini_c/workspace/.metadata/.plugins/org.eclipse.epp.logging.aeri.ide/org.eclipse.epp.logging.aeri.ide.server/server-config.json
src/mini_c/workspace/.metadata/.plugins/org.eclipse.jdt.launching/.install.xml
src/mini_c/workspace/.metadata/.plugins/org.eclipse.jdt.launching/libraryInfos.xml
src/mini_c/workspace/.metadata/.plugins/org.eclipse.jdt.ui/dialog_settings.xml
src/mini_c/workspace/.metadata/.plugins/org.eclipse.jdt.ui/OpenTypeHistory.xml
src/mini_c/workspace/.metadata/.plugins/org.eclipse.jdt.ui/QualifiedTypeNameHistory.xml
src/mini_c/workspace/.metadata/.plugins/org.eclipse.m2e.logback.configuration/logback.1.6.2.20150902-0002.xml
src/mini_c/workspace/.metadata/.plugins/org.eclipse.oomph.setup/workspace.setup
src/mini_c/workspace/.metadata/.plugins/org.eclipse.ui.ide/dialog_settings.xml
src/mini_c/workspace/.metadata/.plugins/org.eclipse.ui.intro/dialog_settings.xml
src/mini_c/workspace/.metadata/.plugins/org.eclipse.ui.workbench/dialog_settings.xml
src/mini_c/workspace/.metadata/.plugins/org.eclipse.ui.workbench/workingsets.xml
src/mini_c/workspace/.metadata/version.ini
src/mini_c/X86_64.java
test.c
tests/compil
tests/exec-fail/deref_null.c
tests/exec-fail/division_by_zero1.c
tests/exec/abr.c
tests/exec/and1.c
tests/exec/and2.c
tests/exec/arith1.c
tests/exec/assign1.c
tests/exec/assign2.c
tests/exec/assign3.c
tests/exec/assign6.c
tests/exec/assign7.c
tests/exec/block1.c
tests/exec/block2.c
tests/exec/call1.c
tests/exec/call2.c
tests/exec/char1.c
tests/exec/char2.c
tests/exec/char3.c
tests/exec/char4.c
tests/exec/dllist.c
tests/exec/fact_imp.c
tests/exec/fact_rec.c
tests/exec/fact.c
tests/exec/field2.c
tests/exec/field4.c
tests/exec/field7.c
tests/exec/field8.c
tests/exec/for1.c
tests/exec/for2.c
tests/exec/for3.c
tests/exec/for4.c
tests/exec/for5.c
tests/exec/for6.c
tests/exec/global1.c
tests/exec/global2.c
tests/exec/hello_world.c
tests/exec/if1.c
tests/exec/josephus.c
tests/exec/local1.c
tests/exec/local2.c
tests/exec/local3.c
tests/exec/mandelbrot.c
tests/exec/not1.c
tests/exec/not2.c
tests/exec/or1.c
tests/exec/pascal.c
tests/exec/print_int.c
tests/exec/putchar_hexa1.c
tests/exec/putchar-octal1.c
tests/exec/putchar1.c
tests/exec/return1.c
tests/exec/return2.c
tests/exec/sizeof2.c
tests/exec/uminus1.c
tests/exec/while1.c
tests/exec/while2.c
tests/exec/while3.c
tests/exec/while4.c
tests/LISEZMOI
tests/PersonalTests/fact.c
tests/run
tests/syntax/bad/testfile-bad_ident1-1.c
tests/syntax/bad/testfile-bad_ident2-1.c
tests/syntax/bad/testfile-block1-1.c
tests/syntax/bad/testfile-block2-1.c
tests/syntax/bad/testfile-expr2-1.c
tests/syntax/bad/testfile-expr3-1.c
tests/syntax/bad/testfile-expr4-1.c
tests/syntax/bad/testfile-expr6-1.c
tests/syntax/bad/testfile-expr7-1.c
tests/syntax/bad/testfile-if_else-1.c
tests/syntax/bad/testfile-if1-1.c
tests/syntax/bad/testfile-if2-1.c
tests/syntax/bad/testfile-if3-1.c
tests/syntax/bad/testfile-instr_decl1-1.c
tests/syntax/bad/testfile-instr_expr-1.c
tests/syntax/bad/testfile-lexing2-1.c
tests/syntax/bad/testfile-lexing3-1.c
tests/syntax/bad/testfile-lexing4-1.c
tests/syntax/bad/testfile-lexing5-1.c
tests/syntax/bad/testfile-lexing6-1.c
tests/syntax/bad/testfile-parameters1-1.c
tests/syntax/bad/testfile-parameters2-1.c
tests/syntax/bad/testfile-return1-1.c
tests/syntax/bad/testfile-struct-1.c
tests/syntax/bad/testfile-struct-2.c
tests/syntax/bad/testfile-unclosed_comment-1.c
tests/syntax/bad/testfile-var2-1.c
tests/syntax/good/testfile-assign-1.c
tests/syntax/good/testfile-bool-1.c
tests/typing/bad/testfile-arith-1.c
tests/typing/bad/testfile-arith-2.c
tests/typing/bad/testfile-arith-3.c
tests/typing/bad/testfile-arrow-1.c
tests/typing/bad/testfile-arrow-2.c
tests/typing/bad/testfile-arrow-3.c
tests/typing/bad/testfile-arrow-4.c
tests/typing/bad/testfile-assign-1.c
tests/typing/bad/testfile-assign-2.c
tests/typing/bad/testfile-assign-3.c
tests/typing/bad/testfile-call-1.c
tests/typing/bad/testfile-redef-1.c
tests/typing/bad/testfile-redef-2.c
tests/typing/bad/testfile-redef-3.c
tests/typing/bad/testfile-redef-4.c
tests/typing/bad/testfile-redef-5.c
tests/typing/bad/testfile-redef-6.c
tests/typing/bad/testfile-scope-1.c
tests/typing/bad/testfile-scope-2.c
tests/typing/bad/testfile-unary_minus-1.c
tests/typing/bad/testfile-undef_var-1.c
tests/typing/bad/testfile-undef_var-2.c
tests/typing/bad/testfile-undef_var-3.c
tests/typing/good/testfile-subtype-1.c
tests/typing/good/testfile-subtype-2.c
tests/typing/good/testfile-unique-1.c
workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.core.resources.prefs
workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.epp.logging.aeri.ide.prefs
workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.ui.prefs
workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.m2e.discovery.prefs
workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.mylyn.context.core.prefs
workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.mylyn.monitor.ui.prefs
workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.mylyn.tasks.ui.prefs
workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.ide.prefs
workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.prefs
workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.workbench.prefs
workspace/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi
workspace/.metadata/.plugins/org.eclipse.epp.logging.aeri.ide/org.eclipse.epp.logging.aeri.ide.server/server-config.json
workspace/.metadata/.plugins/org.eclipse.jdt.ui/dialog_settings.xml
workspace/.metadata/.plugins/org.eclipse.jdt.ui/OpenTypeHistory.xml
workspace/.metadata/.plugins/org.eclipse.jdt.ui/QualifiedTypeNameHistory.xml
workspace/.metadata/.plugins/org.eclipse.m2e.logback.configuration/logback.1.6.2.20150902-0002.xml
workspace/.metadata/.plugins/org.eclipse.oomph.setup/workspace.setup
workspace/.metadata/.plugins/org.eclipse.ui.ide/dialog_settings.xml
workspace/.metadata/.plugins/org.eclipse.ui.intro/dialog_settings.xml
workspace/.metadata/.plugins/org.eclipse.ui.workbench/dialog_settings.xml
workspace/.metadata/.plugins/org.eclipse.ui.workbench/workingsets.xml
workspace/.metadata/version.ini
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path=".classpath">
<?xml version="1.0" encoding="UTF-8"?>
<classpath>
	<classpathentry kind="src" path="Practice/flexExample"/>
	<classpathentry kind="src" path="Practice/mini-python-java/src"/>
	<classpathentry kind="src" path="src"/>
	<classpathentry kind="lib" path="lib/java-cup-11a-runtime.jar"/>
	<classpathentry kind="lib" path="lib/java-cup-11a.jar"/>
	<classpathentry kind="lib" path="Practice/mini-python-java/lib/java-cup-11a-runtime.jar"/>
	<classpathentry kind="lib" path="Practice/mini-python-java/lib/java-cup-11a.jar"/>
	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/>
	<classpathentry kind="output" path="Practice/mini-python-java/bin"/>
</classpath>
</file>

<file path=".gitattributes">
*.rb linguist-language=Java
report/** linguist-vendored
</file>

<file path=".gitignore">
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio

#Don't do the .s and .out
*.s
*.out

# User-specific stuff:
.idea/workspace.xml
.idea/tasks.xml
.idea/dictionaries
.idea/shelf

# Sensitive or high-churn files:
.idea/dataSources.ids
.idea/dataSources.xml
.idea/sqlDataSources.xml
.idea/dynamic.xml
.idea/uiDesigner.xml

# Gradle:
.idea/gradle.xml
.idea/libraries

# Mongo Explorer plugin:
.idea/mongoSettings.xml

## File-based project format:
*.ipr
*.iws

## Plugin-specific files:

# IntelliJ
out/*

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties
</file>

<file path=".project">
<?xml version="1.0" encoding="UTF-8"?>
<projectDescription>
	<name>Compilation</name>
	<comment></comment>
	<projects>
	</projects>
	<buildSpec>
		<buildCommand>
			<name>org.eclipse.jdt.core.javabuilder</name>
			<arguments>
			</arguments>
		</buildCommand>
	</buildSpec>
	<natures>
		<nature>org.eclipse.jdt.core.javanature</nature>
	</natures>
</projectDescription>
</file>

<file path="asm.o">
.text
	.globl main
main:
	movq $9, %rdi
	movq %rdi, 0(%rcx) 
	movq $0, %rax
	ret
	.data
</file>

<file path="Compilation.iml">
<?xml version="1.0" encoding="UTF-8"?>
<module type="JAVA_MODULE" version="4">
  <component name="NewModuleRootManager" inherit-compiler-output="true">
    <exclude-output />
    <content url="file://$MODULE_DIR$">
      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
    </content>
    <orderEntry type="inheritedJdk" />
    <orderEntry type="sourceFolder" forTests="false" />
    <orderEntry type="library" name="lib" level="project" />
    <orderEntry type="library" name="lib1" level="project" />
    <orderEntry type="module-library">
      <library>
        <CLASSES>
          <root url="file://$MODULE_DIR$/../../Java/java-cup-bin-11b-20160615" />
        </CLASSES>
        <JAVADOC />
        <SOURCES />
        <jarDirectory url="file://$MODULE_DIR$/../../Java/java-cup-bin-11b-20160615" recursive="false" />
      </library>
    </orderEntry>
    <orderEntry type="module-library" exported="">
      <library>
        <CLASSES>
          <root url="jar://$MODULE_DIR$/lib/java-cup-11a-runtime.jar!/" />
        </CLASSES>
        <JAVADOC />
        <SOURCES />
      </library>
    </orderEntry>
    <orderEntry type="module-library" exported="">
      <library>
        <CLASSES>
          <root url="jar://$MODULE_DIR$/lib/java-cup-11a.jar!/" />
        </CLASSES>
        <JAVADOC />
        <SOURCES />
      </library>
    </orderEntry>
  </component>
</module>
</file>

<file path="lib/lib.iml">
<?xml version="1.0" encoding="UTF-8"?>
<module type="WEB_MODULE" version="4">
  <component name="NewModuleRootManager" inherit-compiler-output="true">
    <exclude-output />
    <content url="file://$MODULE_DIR$" />
    <orderEntry type="inheritedJdk" />
    <orderEntry type="sourceFolder" forTests="false" />
  </component>
</module>
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.resources/.history/15/c03b1999e1d700161a15a32011681f65">
package mini_python;

import java.util.HashMap;
//import java.util.Iterator;

/* Les valeurs de mini-Python

   - une différence notable avec Python : on
     utilise ici le type int alors que les entiers de Python sont de
     précision arbitraire ; on pourrait utiliser les grands entiers de Java
     mais on choisit la facilité
   - ce que Python appelle une liste est en réalité un tableau
     redimensionnable ; dans le fragment considéré ici, il n'y a pas
     de possibilité d'en modifier la longueur, donc un simple tableau
     convient */

abstract class Value implements Comparable<Value> {
	abstract boolean isFalse();

	boolean isTrue() {
		throw new Todo(); // à compléter (question 2)
	}

	int asInt() {
		if (!(this instanceof Vint))
			throw new Error("integer expected");
		return ((Vint) this).i;
	}

	Vlist asList() {
		if (!(this instanceof Vlist))
			throw new Error("list expected");
		return (Vlist) this;
	}
}

class Vnone extends Value {
	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return "None";
	}

	@Override
	public int compareTo(Value o) {
		return o instanceof Vnone ? 0 : -1;
	}
}

class Vbool extends Value {
	final boolean b;

	Vbool(boolean b) {
		this.b = b;
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return this.b ? "True" : "False";
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone)
			return 1;
		if (o instanceof Vbool) {
			boolean ob = ((Vbool) o).b;
			return b ? (ob ? 0 : 1) : (ob ? -1 : 0);
		}
		return -1;
	}
}

class Vint extends Value {
	final int i;

	Vint(int i) {
		this.i = i;
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return "" + this.i;
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone || o instanceof Vbool)
			return 1;
		if (o instanceof Vint)
			return this.i - o.asInt();
		return -1;
	}
}

class Vstring extends Value {
	final String s;

	Vstring(String s) {
		this.s = s;
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return this.s;
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone || o instanceof Vbool || o instanceof Vint)
			return 1;
		if (o instanceof Vstring)
			return this.s.compareTo(((Vstring) o).s);
		return -1;
	}
}

class Vlist extends Value {
	final Value[] l;

	Vlist(int n) {
		this.l = new Value[n];
	}

	Vlist(Value[] l1, Value[] l2) {
		this.l = new Value[l1.length + l2.length];
		System.arraycopy(l1, 0, l, 0, l1.length);
		System.arraycopy(l2, 0, l, l1.length, l2.length);
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		StringBuffer b = new StringBuffer();
		b.append("[");
		for (int i = 0; i < this.l.length; i++) {
			if (i != 0)
				b.append(", ");
			b.append(this.l[i]);
		}
		b.append("]");
		return b.toString();
	}

	@Override
	public int compareTo(Value o) {
		if (!(o instanceof Vlist))
			return -1;
		Value[] ol = ((Vlist) o).l;
		int n1 = this.l.length, n2 = ol.length;
		int i1 = 0, i2 = 0;
		for (; i1 < n1 && i2 < n2; i1++, i2++) {
			Value v1 = this.l[i1];
			Value v2 = ol[i2];
			int c = v1.compareTo(v2);
			if (c != 0)
				return c;
		}
		if (i1 < n1)
			return 1;
		if (i2 < n2)
			return -1;
		return 0;
	}
}

/* on utilise l'exception ci-dessous pour interpréter la construction return
 * de mini-Python */

class Return extends Exception {
	private static final long serialVersionUID = 1L;
	
	final Value v;

	Return(Value v) {
		this.v = v;
	}
}

class Todo extends Error {
	private static final long serialVersionUID = 1L;
}

/* l'interprète */

class Interp implements Interpreter {

	// variables de mini-Python (globales, locales, arguments)
	HashMap<String, Value> vars;

	Interp() {
		this.vars = new HashMap<String, Value>();
	}

	// les définitions de fonctions
	static HashMap<String, Def> functions = new HashMap<String, Def>();

	// interprétation d'une opération binaire sur deux valeurs
	static Value binop(Binop op, Value v1, Value v2) {
		switch (op) {
		case Bsub:
		case Bmul:
		case Bdiv:
		case Bmod:
			throw new Todo(); // à compléter (question 1)
		case Badd:
			if (v1 instanceof Vint && v2 instanceof Vint)
				throw new Todo(); // à compléter (question 1)
			if (v1 instanceof Vstring && v2 instanceof Vstring)
				throw new Todo(); // à compléter (question 3)
			if (v1 instanceof Vlist && v2 instanceof Vlist)
				throw new Todo(); // à compléter (question 5)
			break;
		case Beq:
			throw new Todo(); // à compléter (question 2)
		case Bneq:
			throw new Todo(); // à compléter (question 2)
		case Blt:
			throw new Todo(); // à compléter (question 2)
		case Ble:
			throw new Todo(); // à compléter (question 2)
		case Bgt:
			throw new Todo(); // à compléter (question 2)
		case Bge:
			throw new Todo(); // à compléter (question 2)
		default:
		}
		throw new Error("unsupported operand types");
	}

	// interprétation des différentes constructions de mini-Python

	@Override
	public Value interp(Ecst e) {
		return e.c.interp();
	}

	@Override
	public Value interp(Ebinop e) {
		Value v1 = e.e1.accept(this);
		switch (e.op) {
		case Band:
			throw new Todo(); // à compléter (question 2)
		case Bor:
			throw new Todo(); // à compléter (question 2)
		default:
			return binop(e.op, v1, e.e2.accept(this));
		}
	}

	@Override
	public Value interp(Eunop e) {
		switch (e.op) {
		case Unot:
			throw new Todo(); // à compléter (question 2)
		case Uneg:
			throw new Todo(); // à compléter (question 1)
		}
		throw new Error("unreachable");
	}

	@Override
	public Value interp(Ecall e) {
		switch (e.f) {
		case "len":
			throw new Todo(); // à compléter (question 5)
		case "range":
			throw new Todo(); // à compléter (question 5)
		default:
			throw new Todo(); // à compléter (question 4)
		}
	}

	@Override
	public Value interp(Elist e) {
		throw new Todo(); // à compléter (question 5)
	}

	@Override
	public Value interp(Eleft e) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public Value interp(Lident lv) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public Value interp(Lnth lv) {
		throw new Todo(); // à compléter (question 5)
	}

	@Override
	public void assign(Lident lv, Expr e) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public void assign(Lnth lv, Expr e) {
		throw new Todo(); // à compléter (question 5)
	}

	/* instructions */
	
	@Override
	public void interp(Seval s) throws Return {
		s.e.accept(this);
	}

	@Override
	public void interp(Sprint s) throws Return {
		System.out.println(s.e.accept(this).toString());
	}

	@Override
	public void interp(Sblock s) throws Return {
		for (Stmt st: s.l)
			st.accept(this);
	}

	@Override
	public void interp(Sif s) throws Return {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public void interp(Sassign s) throws Return {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public void interp(Sreturn s) throws Return {
		throw new Todo(); // à compléter (question 4)
	}

	@Override
	public void interp(Sfor s) throws Return {
		throw new Todo(); // à compléter (question 5)
	}

}
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.resources/.history/1f/502d05ebe0d700161a15a32011681f65">
package mini_python;

public class Main {

	public static void main(String[] args) throws Exception {
		String file = args.length > 0 ? args[0] : "test.py";
		java.io.Reader reader = new java.io.FileReader(file);
		Lexer lexer = new MyLexer(reader);
		MyParser parser = new MyParser(lexer);
		File f = (File) parser.parse().value;
		for (Def d: f.l)
			Interp.functions.put(d.f, d);
		try {
			f.s.accept(new Interp());
		} catch (Error e) {
			System.out.println("error: " + e.toString());
			System.exit(1);
		}
	}

}
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.resources/.history/23/80b377dbe0d700161a15a32011681f65">
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Mon Jan 09 21:31:35 CET 2017
//----------------------------------------------------

package mini_python;

/** CUP generated class containing symbol constants. */
public class sym {
  /* terminals */
  public static final int TIMES = 29;
  public static final int MOD = 31;
  public static final int AND = 14;
  public static final int ELSE = 9;
  public static final int IDENT = 2;
  public static final int PLUS = 27;
  public static final int OR = 15;
  public static final int EQUAL = 22;
  public static final int LP = 17;
  public static final int IN = 13;
  public static final int RP = 18;
  public static final int NOT = 16;
  public static final int END = 25;
  public static final int RETURN = 10;
  public static final int DECINDENT = 6;
  public static final int IF = 8;
  public static final int COLON = 23;
  public static final int BEGIN = 24;
  public static final int COMMA = 21;
  public static final int CST = 3;
  public static final int LSQ = 19;
  public static final int EOF = 0;
  public static final int CMP = 4;
  public static final int DEF = 7;
  public static final int DIV = 30;
  public static final int MINUS = 28;
  public static final int NEWLINE = 26;
  public static final int INCINDENT = 5;
  public static final int PRINT = 11;
  public static final int error = 1;
  public static final int FOR = 12;
  public static final int RSQ = 20;
  public static final int UMINUS = 32;
}
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.resources/.history/24/20f20fb0e0d700161a15a32011681f65">
package mini_python;

import java.util.HashMap;
import java.util.Iterator;

/* Les valeurs de mini-Python

   - une différence notable avec Python : on
     utilise ici le type int alors que les entiers de Python sont de
     précision arbitraire ; on pourrait utiliser les grands entiers de Java
     mais on choisit la facilité
   - ce que Python appelle une liste est en réalité un tableau
     redimensionnable ; dans le fragment considéré ici, il n'y a pas
     de possibilité d'en modifier la longueur, donc un simple tableau
     convient */

abstract class Value implements Comparable<Value> {
	abstract boolean isFalse();

	boolean isTrue() {
		throw new Todo(); // à compléter (question 2)
	}

	int asInt() {
		if (!(this instanceof Vint))
			throw new Error("integer expected");
		return ((Vint) this).i;
	}

	Vlist asList() {
		if (!(this instanceof Vlist))
			throw new Error("list expected");
		return (Vlist) this;
	}
}

class Vnone extends Value {
	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return "None";
	}

	@Override
	public int compareTo(Value o) {
		return o instanceof Vnone ? 0 : -1;
	}
}

class Vbool extends Value {
	final boolean b;

	Vbool(boolean b) {
		this.b = b;
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return this.b ? "True" : "False";
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone)
			return 1;
		if (o instanceof Vbool) {
			boolean ob = ((Vbool) o).b;
			return b ? (ob ? 0 : 1) : (ob ? -1 : 0);
		}
		return -1;
	}
}

class Vint extends Value {
	final int i;

	Vint(int i) {
		this.i = i;
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return "" + this.i;
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone || o instanceof Vbool)
			return 1;
		if (o instanceof Vint)
			return this.i - o.asInt();
		return -1;
	}
}

class Vstring extends Value {
	final String s;

	Vstring(String s) {
		this.s = s;
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return this.s;
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone || o instanceof Vbool || o instanceof Vint)
			return 1;
		if (o instanceof Vstring)
			return this.s.compareTo(((Vstring) o).s);
		return -1;
	}
}

class Vlist extends Value {
	final Value[] l;

	Vlist(int n) {
		this.l = new Value[n];
	}

	Vlist(Value[] l1, Value[] l2) {
		this.l = new Value[l1.length + l2.length];
		System.arraycopy(l1, 0, l, 0, l1.length);
		System.arraycopy(l2, 0, l, l1.length, l2.length);
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		StringBuffer b = new StringBuffer();
		b.append("[");
		for (int i = 0; i < this.l.length; i++) {
			if (i != 0)
				b.append(", ");
			b.append(this.l[i]);
		}
		b.append("]");
		return b.toString();
	}

	@Override
	public int compareTo(Value o) {
		if (!(o instanceof Vlist))
			return -1;
		Value[] ol = ((Vlist) o).l;
		int n1 = this.l.length, n2 = ol.length;
		int i1 = 0, i2 = 0;
		for (; i1 < n1 && i2 < n2; i1++, i2++) {
			Value v1 = this.l[i1];
			Value v2 = ol[i2];
			int c = v1.compareTo(v2);
			if (c != 0)
				return c;
		}
		if (i1 < n1)
			return 1;
		if (i2 < n2)
			return -1;
		return 0;
	}
}

/* on utilise l'exception ci-dessous pour interpréter la construction return
 * de mini-Python */

class Return extends Exception {
	private static final long serialVersionUID = 1L;
	
	final Value v;

	Return(Value v) {
		this.v = v;
	}
}

class Todo extends Error {
	private static final long serialVersionUID = 1L;
}

/* l'interprète */

class Interp implements Interpreter {

	// variables de mini-Python (globales, locales, arguments)
	HashMap<String, Value> vars;

	Interp() {
		this.vars = new HashMap<String, Value>();
	}

	// les définitions de fonctions
	static HashMap<String, Def> functions = new HashMap<String, Def>();

	// interprétation d'une opération binaire sur deux valeurs
	static Value binop(Binop op, Value v1, Value v2) {
		switch (op) {
		case Bsub:
		case Bmul:
		case Bdiv:
		case Bmod:
			throw new Todo(); // à compléter (question 1)
		case Badd:
			if (v1 instanceof Vint && v2 instanceof Vint)
				throw new Todo(); // à compléter (question 1)
			if (v1 instanceof Vstring && v2 instanceof Vstring)
				throw new Todo(); // à compléter (question 3)
			if (v1 instanceof Vlist && v2 instanceof Vlist)
				throw new Todo(); // à compléter (question 5)
			break;
		case Beq:
			throw new Todo(); // à compléter (question 2)
		case Bneq:
			throw new Todo(); // à compléter (question 2)
		case Blt:
			throw new Todo(); // à compléter (question 2)
		case Ble:
			throw new Todo(); // à compléter (question 2)
		case Bgt:
			throw new Todo(); // à compléter (question 2)
		case Bge:
			throw new Todo(); // à compléter (question 2)
		default:
		}
		throw new Error("unsupported operand types");
	}

	// interprétation des différentes constructions de mini-Python

	@Override
	public Value interp(Ecst e) {
		return e.c.interp();
	}

	@Override
	public Value interp(Ebinop e) {
		Value v1 = e.e1.accept(this);
		switch (e.op) {
		case Band:
			throw new Todo(); // à compléter (question 2)
		case Bor:
			throw new Todo(); // à compléter (question 2)
		default:
			return binop(e.op, v1, e.e2.accept(this));
		}
	}

	@Override
	public Value interp(Eunop e) {
		switch (e.op) {
		case Unot:
			throw new Todo(); // à compléter (question 2)
		case Uneg:
			throw new Todo(); // à compléter (question 1)
		}
		throw new Error("unreachable");
	}

	@Override
	public Value interp(Ecall e) {
		switch (e.f) {
		case "len":
			throw new Todo(); // à compléter (question 5)
		case "range":
			throw new Todo(); // à compléter (question 5)
		default:
			throw new Todo(); // à compléter (question 4)
		}
	}

	@Override
	public Value interp(Elist e) {
		throw new Todo(); // à compléter (question 5)
	}

	@Override
	public Value interp(Eleft e) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public Value interp(Lident lv) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public Value interp(Lnth lv) {
		throw new Todo(); // à compléter (question 5)
	}

	@Override
	public void assign(Lident lv, Expr e) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public void assign(Lnth lv, Expr e) {
		throw new Todo(); // à compléter (question 5)
	}

	/* instructions */
	
	@Override
	public void interp(Seval s) throws Return {
		s.e.accept(this);
	}

	@Override
	public void interp(Sprint s) throws Return {
		System.out.println(s.e.accept(this).toString());
	}

	@Override
	public void interp(Sblock s) throws Return {
		for (Stmt st: s.l)
			st.accept(this);
	}

	@Override
	public void interp(Sif s) throws Return {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public void interp(Sassign s) throws Return {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public void interp(Sreturn s) throws Return {
		throw new Todo(); // à compléter (question 4)
	}

	@Override
	public void interp(Sfor s) throws Return {
		throw new Todo(); // à compléter (question 5)
	}

}
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.resources/.history/2a/503f0106e0d700161a15a32011681f65">
eclipse.preferences.version=1
org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
org.eclipse.jdt.core.compiler.compliance=1.8
org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
org.eclipse.jdt.core.compiler.source=1.8
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.resources/.history/38/a09566cce0d700161a15a32011681f65">
/* The following code was generated by JFlex 1.4.3 on 1/5/17 10:16 AM */


package mini_python;

import java_cup.runtime.*;
import java.util.*;
import static mini_python.sym.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 1/5/17 10:16 AM from the specification file
 * <tt>src/mini_python/Lexer.flex</tt>
 */
class Lexer implements java_cup.runtime.Scanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\7\1\3\1\2\1\0\1\3\1\1\16\7\4\0\1\3\1\27"+
    "\1\4\1\5\1\6\1\24\2\0\1\14\1\15\1\22\1\20\1\13"+
    "\1\21\1\0\1\23\12\10\1\12\1\0\1\25\1\11\1\26\2\0"+
    "\5\6\1\47\7\6\1\45\5\6\1\46\6\6\1\16\1\0\1\17"+
    "\1\0\1\6\1\0\1\30\2\6\1\32\1\36\1\37\2\6\1\40"+
    "\2\6\1\41\1\6\1\31\1\33\1\44\1\6\1\34\1\42\1\35"+
    "\1\43\5\6\4\0\41\7\2\0\4\6\4\0\1\6\2\0\1\7"+
    "\7\0\1\6\4\0\1\6\5\0\27\6\1\0\37\6\1\0\u01ca\6"+
    "\4\0\14\6\16\0\5\6\7\0\1\6\1\0\1\6\21\0\160\7"+
    "\5\6\1\0\2\6\2\0\4\6\10\0\1\6\1\0\3\6\1\0"+
    "\1\6\1\0\24\6\1\0\123\6\1\0\213\6\1\0\5\7\2\0"+
    "\236\6\11\0\46\6\2\0\1\6\7\0\47\6\7\0\1\6\1\0"+
    "\55\7\1\0\1\7\1\0\2\7\1\0\2\7\1\0\1\7\10\0"+
    "\33\6\5\0\3\6\15\0\5\7\6\0\1\6\4\0\13\7\5\0"+
    "\53\6\25\7\12\10\4\0\2\6\1\7\143\6\1\0\1\6\10\7"+
    "\1\0\6\7\2\6\2\7\1\0\4\7\2\6\12\10\3\6\2\0"+
    "\1\6\17\0\1\7\1\6\1\7\36\6\33\7\2\0\131\6\13\7"+
    "\1\6\16\0\12\10\41\6\11\7\2\6\4\0\1\6\5\0\26\6"+
    "\4\7\1\6\11\7\1\6\3\7\1\6\5\7\22\0\31\6\3\7"+
    "\104\0\1\6\1\0\13\6\67\0\33\7\1\0\4\7\66\6\3\7"+
    "\1\6\22\7\1\6\7\7\12\6\2\7\2\0\12\10\1\0\7\6"+
    "\1\0\7\6\1\0\3\7\1\0\10\6\2\0\2\6\2\0\26\6"+
    "\1\0\7\6\1\0\1\6\3\0\4\6\2\0\1\7\1\6\7\7"+
    "\2\0\2\7\2\0\3\7\1\6\10\0\1\7\4\0\2\6\1\0"+
    "\3\6\2\7\2\0\12\10\4\6\7\0\1\6\5\0\3\7\1\0"+
    "\6\6\4\0\2\6\2\0\26\6\1\0\7\6\1\0\2\6\1\0"+
    "\2\6\1\0\2\6\2\0\1\7\1\0\5\7\4\0\2\7\2\0"+
    "\3\7\3\0\1\7\7\0\4\6\1\0\1\6\7\0\12\10\2\7"+
    "\3\6\1\7\13\0\3\7\1\0\11\6\1\0\3\6\1\0\26\6"+
    "\1\0\7\6\1\0\2\6\1\0\5\6\2\0\1\7\1\6\10\7"+
    "\1\0\3\7\1\0\3\7\2\0\1\6\17\0\2\6\2\7\2\0"+
    "\12\10\1\0\1\6\17\0\3\7\1\0\10\6\2\0\2\6\2\0"+
    "\26\6\1\0\7\6\1\0\2\6\1\0\5\6\2\0\1\7\1\6"+
    "\7\7\2\0\2\7\2\0\3\7\10\0\2\7\4\0\2\6\1\0"+
    "\3\6\2\7\2\0\12\10\1\0\1\6\20\0\1\7\1\6\1\0"+
    "\6\6\3\0\3\6\1\0\4\6\3\0\2\6\1\0\1\6\1\0"+
    "\2\6\3\0\2\6\3\0\3\6\3\0\14\6\4\0\5\7\3\0"+
    "\3\7\1\0\4\7\2\0\1\6\6\0\1\7\16\0\12\10\11\0"+
    "\1\6\7\0\3\7\1\0\10\6\1\0\3\6\1\0\27\6\1\0"+
    "\12\6\1\0\5\6\3\0\1\6\7\7\1\0\3\7\1\0\4\7"+
    "\7\0\2\7\1\0\2\6\6\0\2\6\2\7\2\0\12\10\22\0"+
    "\2\7\1\0\10\6\1\0\3\6\1\0\27\6\1\0\12\6\1\0"+
    "\5\6\2\0\1\7\1\6\7\7\1\0\3\7\1\0\4\7\7\0"+
    "\2\7\7\0\1\6\1\0\2\6\2\7\2\0\12\10\1\0\2\6"+
    "\17\0\2\7\1\0\10\6\1\0\3\6\1\0\51\6\2\0\1\6"+
    "\7\7\1\0\3\7\1\0\4\7\1\6\10\0\1\7\10\0\2\6"+
    "\2\7\2\0\12\10\12\0\6\6\2\0\2\7\1\0\22\6\3\0"+
    "\30\6\1\0\11\6\1\0\1\6\2\0\7\6\3\0\1\7\4\0"+
    "\6\7\1\0\1\7\1\0\10\7\22\0\2\7\15\0\60\6\1\7"+
    "\2\6\7\7\4\0\10\6\10\7\1\0\12\10\47\0\2\6\1\0"+
    "\1\6\2\0\2\6\1\0\1\6\2\0\1\6\6\0\4\6\1\0"+
    "\7\6\1\0\3\6\1\0\1\6\1\0\1\6\2\0\2\6\1\0"+
    "\4\6\1\7\2\6\6\7\1\0\2\7\1\6\2\0\5\6\1\0"+
    "\1\6\1\0\6\7\2\0\12\10\2\0\4\6\40\0\1\6\27\0"+
    "\2\7\6\0\12\10\13\0\1\7\1\0\1\7\1\0\1\7\4\0"+
    "\2\7\10\6\1\0\44\6\4\0\24\7\1\0\2\7\5\6\13\7"+
    "\1\0\44\7\11\0\1\7\71\0\53\6\24\7\1\6\12\10\6\0"+
    "\6\6\4\7\4\6\3\7\1\6\3\7\2\6\7\7\3\6\4\7"+
    "\15\6\14\7\1\6\1\7\12\10\4\7\2\0\46\6\1\0\1\6"+
    "\5\0\1\6\2\0\53\6\1\0\u014d\6\1\0\4\6\2\0\7\6"+
    "\1\0\1\6\1\0\4\6\2\0\51\6\1\0\4\6\2\0\41\6"+
    "\1\0\4\6\2\0\7\6\1\0\1\6\1\0\4\6\2\0\17\6"+
    "\1\0\71\6\1\0\4\6\2\0\103\6\2\0\3\7\40\0\20\6"+
    "\20\0\125\6\14\0\u026c\6\2\0\21\6\1\0\32\6\5\0\113\6"+
    "\3\0\3\6\17\0\15\6\1\0\4\6\3\7\13\0\22\6\3\7"+
    "\13\0\22\6\2\7\14\0\15\6\1\0\3\6\1\0\2\7\14\0"+
    "\64\6\40\7\3\0\1\6\3\0\2\6\1\7\2\0\12\10\41\0"+
    "\3\7\2\0\12\10\6\0\130\6\10\0\51\6\1\7\1\6\5\0"+
    "\106\6\12\0\35\6\3\0\14\7\4\0\14\7\12\0\12\10\36\6"+
    "\2\0\5\6\13\0\54\6\4\0\21\7\7\6\2\7\6\0\12\10"+
    "\46\0\27\6\5\7\4\0\65\6\12\7\1\0\35\7\2\0\1\7"+
    "\12\10\6\0\12\10\15\0\1\6\130\0\5\7\57\6\21\7\7\6"+
    "\4\0\12\10\21\0\11\7\14\0\3\7\36\6\15\7\2\6\12\10"+
    "\54\6\16\7\14\0\44\6\24\7\10\0\12\10\3\0\3\6\12\10"+
    "\44\6\122\0\3\7\1\0\25\7\4\6\1\7\4\6\3\7\2\6"+
    "\11\0\300\6\47\7\25\0\4\7\u0116\6\2\0\6\6\2\0\46\6"+
    "\2\0\6\6\2\0\10\6\1\0\1\6\1\0\1\6\1\0\1\6"+
    "\1\0\37\6\2\0\65\6\1\0\7\6\1\0\1\6\3\0\3\6"+
    "\1\0\7\6\3\0\4\6\2\0\6\6\4\0\15\6\5\0\3\6"+
    "\1\0\7\6\16\0\5\7\32\0\5\7\20\0\2\6\23\0\1\6"+
    "\13\0\5\7\5\0\6\7\1\0\1\6\15\0\1\6\20\0\15\6"+
    "\3\0\33\6\25\0\15\7\4\0\1\7\3\0\14\7\21\0\1\6"+
    "\4\0\1\6\2\0\12\6\1\0\1\6\3\0\5\6\6\0\1\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\13\6\2\0\4\6"+
    "\5\0\5\6\4\0\1\6\21\0\51\6\u0a77\0\57\6\1\0\57\6"+
    "\1\0\205\6\6\0\4\6\3\7\2\6\14\0\46\6\1\0\1\6"+
    "\5\0\1\6\2\0\70\6\7\0\1\6\17\0\1\7\27\6\11\0"+
    "\7\6\1\0\7\6\1\0\7\6\1\0\7\6\1\0\7\6\1\0"+
    "\7\6\1\0\7\6\1\0\7\6\1\0\40\7\57\0\1\6\u01d5\0"+
    "\3\6\31\0\11\6\6\7\1\0\5\6\2\0\5\6\4\0\126\6"+
    "\2\0\2\7\2\0\3\6\1\0\132\6\1\0\4\6\5\0\51\6"+
    "\3\0\136\6\21\0\33\6\65\0\20\6\u0200\0\u19b6\6\112\0\u51cd\6"+
    "\63\0\u048d\6\103\0\56\6\2\0\u010d\6\3\0\20\6\12\10\2\6"+
    "\24\0\57\6\1\7\4\0\12\7\1\0\31\6\7\0\1\7\120\6"+
    "\2\7\45\0\11\6\2\0\147\6\2\0\4\6\1\0\4\6\14\0"+
    "\13\6\115\0\12\6\1\7\3\6\1\7\4\6\1\7\27\6\5\7"+
    "\20\0\1\6\7\0\64\6\14\0\2\7\62\6\21\7\13\0\12\10"+
    "\6\0\22\7\6\6\3\0\1\6\4\0\12\10\34\6\10\7\2\0"+
    "\27\6\15\7\14\0\35\6\3\0\4\7\57\6\16\7\16\0\1\6"+
    "\12\10\46\0\51\6\16\7\11\0\3\6\1\7\10\6\2\7\2\0"+
    "\12\10\6\0\27\6\3\0\1\6\1\7\4\0\60\6\1\7\1\6"+
    "\3\7\2\6\2\7\5\6\2\7\1\6\1\7\1\6\30\0\3\6"+
    "\2\0\13\6\5\7\2\0\3\6\2\7\12\0\6\6\2\0\6\6"+
    "\2\0\6\6\11\0\7\6\1\0\7\6\221\0\43\6\10\7\1\0"+
    "\2\7\2\0\12\10\6\0\u2ba4\6\14\0\27\6\4\0\61\6\u2104\0"+
    "\u016e\6\2\0\152\6\46\0\7\6\14\0\5\6\5\0\1\6\1\7"+
    "\12\6\1\0\15\6\1\0\5\6\1\0\1\6\1\0\2\6\1\0"+
    "\2\6\1\0\154\6\41\0\u016b\6\22\0\100\6\2\0\66\6\50\0"+
    "\15\6\3\0\20\7\20\0\7\7\14\0\2\6\30\0\3\6\31\0"+
    "\1\6\6\0\5\6\1\0\207\6\2\0\1\7\4\0\1\6\13\0"+
    "\12\10\7\0\32\6\4\0\1\6\1\0\32\6\13\0\131\6\3\0"+
    "\6\6\2\0\6\6\2\0\6\6\2\0\3\6\3\0\2\6\3\0"+
    "\2\6\22\0\3\7\4\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\2\1\1\4\1\5\1\6"+
    "\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16"+
    "\1\17\1\20\1\21\1\22\1\23\1\1\14\4\2\0"+
    "\1\24\1\0\1\3\1\25\1\26\1\27\1\30\3\4"+
    "\1\31\3\4\1\32\1\33\4\4\1\0\1\34\1\35"+
    "\1\36\2\4\1\37\5\4\1\40\1\4\1\41\1\42"+
    "\2\4\1\43\1\44\1\45";

  private static int [] zzUnpackAction() {
    int [] result = new int[78];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\50\0\120\0\50\0\170\0\240\0\310\0\360"+
    "\0\u0118\0\50\0\50\0\50\0\50\0\50\0\50\0\50"+
    "\0\50\0\50\0\50\0\50\0\u0140\0\u0168\0\u0190\0\u01b8"+
    "\0\u01e0\0\u0208\0\u0230\0\u0258\0\u0280\0\u02a8\0\u02d0\0\u02f8"+
    "\0\u0320\0\u0348\0\u0370\0\u0398\0\170\0\50\0\240\0\u03c0"+
    "\0\50\0\50\0\50\0\50\0\u03e8\0\u0410\0\u0438\0\310"+
    "\0\u0460\0\u0488\0\u04b0\0\310\0\310\0\u04d8\0\u0500\0\u0528"+
    "\0\u0550\0\u0578\0\310\0\310\0\310\0\u05a0\0\u05c8\0\310"+
    "\0\u05f0\0\u0618\0\u0640\0\u0668\0\u0690\0\310\0\u06b8\0\310"+
    "\0\310\0\u06e0\0\u0708\0\310\0\310\0\310";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[78];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\2\3\1\4\1\5\1\6\1\7\1\2\1\10"+
    "\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20"+
    "\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30"+
    "\1\31\1\32\1\33\1\34\1\7\1\35\1\36\1\37"+
    "\3\7\1\40\1\41\1\42\1\43\51\0\3\3\1\0"+
    "\1\44\42\0\4\45\1\46\43\45\1\47\1\50\1\4"+
    "\45\47\6\0\3\7\17\0\20\7\10\0\1\10\50\0"+
    "\1\51\47\0\1\52\47\0\1\53\47\0\1\54\44\0"+
    "\3\7\17\0\1\7\1\55\16\7\6\0\3\7\17\0"+
    "\3\7\1\56\14\7\6\0\3\7\17\0\6\7\1\57"+
    "\11\7\6\0\3\7\17\0\4\7\1\60\13\7\6\0"+
    "\3\7\17\0\6\7\1\61\11\7\6\0\3\7\17\0"+
    "\11\7\1\62\6\7\6\0\3\7\17\0\3\7\1\63"+
    "\14\7\6\0\3\7\17\0\1\7\1\64\5\7\1\65"+
    "\10\7\6\0\3\7\17\0\4\7\1\66\13\7\6\0"+
    "\3\7\17\0\3\7\1\67\14\7\6\0\3\7\17\0"+
    "\4\7\1\70\13\7\6\0\3\7\17\0\1\71\17\7"+
    "\1\44\2\72\45\44\2\0\1\4\53\0\3\7\17\0"+
    "\2\7\1\73\15\7\6\0\3\7\17\0\5\7\1\74"+
    "\12\7\6\0\3\7\17\0\7\7\1\75\10\7\6\0"+
    "\3\7\17\0\5\7\1\76\12\7\6\0\3\7\17\0"+
    "\12\7\1\77\5\7\6\0\3\7\17\0\4\7\1\100"+
    "\13\7\6\0\3\7\17\0\10\7\1\101\7\7\6\0"+
    "\3\7\17\0\1\7\1\102\16\7\6\0\3\7\17\0"+
    "\13\7\1\103\4\7\6\0\3\7\17\0\11\7\1\104"+
    "\6\7\1\0\2\3\1\72\1\0\1\44\50\0\3\7"+
    "\17\0\13\7\1\105\4\7\6\0\3\7\17\0\6\7"+
    "\1\106\11\7\6\0\3\7\17\0\1\7\1\107\16\7"+
    "\6\0\3\7\17\0\6\7\1\110\11\7\6\0\3\7"+
    "\17\0\6\7\1\111\11\7\6\0\3\7\17\0\12\7"+
    "\1\112\5\7\6\0\3\7\17\0\4\7\1\113\13\7"+
    "\6\0\3\7\17\0\5\7\1\114\12\7\6\0\3\7"+
    "\17\0\6\7\1\115\11\7\6\0\3\7\17\0\1\7"+
    "\1\116\16\7";

  private static int [] zzUnpackTrans() {
    int [] result = new int[1840];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\1\1\1\11\5\1\13\11\17\1\2\0"+
    "\1\11\1\0\1\1\4\11\15\1\1\0\24\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[78];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */

    private Symbol symbol(int id)
    {
	return new Symbol(id, yyline, yycolumn);
    }

    private Symbol symbol(int id, Object value)
    {
	return new Symbol(id, yyline, yycolumn, value);
    }

    static Stack<Integer> indent = new Stack<Integer>();
    { indent.push(0); }



  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  Lexer(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 2248) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
      yyclose();
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public java_cup.runtime.Symbol next_token() throws java.io.IOException, Exception {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      for (zzCurrentPosL = zzStartRead; zzCurrentPosL < zzMarkedPosL;
                                                             zzCurrentPosL++) {
        switch (zzBufferL[zzCurrentPosL]) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn++;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 3: 
          { /* ignore */
          }
        case 38: break;
        case 10: 
          { return symbol(RP);
          }
        case 39: break;
        case 37: 
          { return symbol(RETURN);
          }
        case 40: break;
        case 14: 
          { return symbol(MINUS);
          }
        case 41: break;
        case 35: 
          { return symbol(PRINT);
          }
        case 42: break;
        case 13: 
          { return symbol(PLUS);
          }
        case 43: break;
        case 8: 
          { return symbol(COMMA);
          }
        case 44: break;
        case 32: 
          { return symbol(ELSE);
          }
        case 45: break;
        case 12: 
          { return symbol(RSQ);
          }
        case 46: break;
        case 21: 
          { return symbol(CMP, Binop.Beq);
          }
        case 47: break;
        case 29: 
          { return symbol(NOT);
          }
        case 48: break;
        case 28: 
          { return symbol(AND);
          }
        case 49: break;
        case 24: 
          { return symbol(CMP, Binop.Bneq);
          }
        case 50: break;
        case 16: 
          { return symbol(DIV);
          }
        case 51: break;
        case 2: 
          { String s = yytext();
      int n = s.length() - 1 - s.lastIndexOf('\n');
      // System.out.println("n = " + n);
      if (indent.peek() < n) {
        indent.push(n);
        return symbol(INCINDENT);
      } else {
        int k = 0;
        while (indent.peek() > n) { indent.pop(); k++; }
        return symbol(DECINDENT, k);
      }
          }
        case 52: break;
        case 27: 
          { return symbol(IF);
          }
        case 53: break;
        case 17: 
          { return symbol(MOD);
          }
        case 54: break;
        case 34: 
          { return symbol(CST, new Cbool(true));
          }
        case 55: break;
        case 25: 
          { return symbol(OR);
          }
        case 56: break;
        case 26: 
          { return symbol(IN);
          }
        case 57: break;
        case 9: 
          { return symbol(LP);
          }
        case 58: break;
        case 23: 
          { return symbol(CMP, Binop.Bge);
          }
        case 59: break;
        case 5: 
          { return symbol(CST, new Cint(Integer.parseInt(yytext())));
          }
        case 60: break;
        case 22: 
          { return symbol(CMP, Binop.Ble);
          }
        case 61: break;
        case 30: 
          { return symbol(DEF);
          }
        case 62: break;
        case 1: 
          { throw new Exception (String.format (
        "Line %d, column %d: illegal character: '%s'\n", yyline, yycolumn, yytext()
      ));
          }
        case 63: break;
        case 36: 
          { return symbol(CST, new Cbool(false));
          }
        case 64: break;
        case 4: 
          { return symbol(IDENT, yytext().intern());
          }
        case 65: break;
        case 15: 
          { return symbol(TIMES);
          }
        case 66: break;
        case 7: 
          { return symbol(COLON);
          }
        case 67: break;
        case 31: 
          { return symbol(FOR);
          }
        case 68: break;
        case 20: 
          { String s = yytext();
      return symbol(CST, new Cstring(s.substring(1, s.length() - 1)));
          }
        case 69: break;
        case 19: 
          { return symbol(CMP, Binop.Bgt);
          }
        case 70: break;
        case 6: 
          { return symbol(EQUAL);
          }
        case 71: break;
        case 33: 
          { return symbol(CST, Constant.None);
          }
        case 72: break;
        case 18: 
          { return symbol(CMP, Binop.Blt);
          }
        case 73: break;
        case 11: 
          { return symbol(LSQ);
          }
        case 74: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            zzDoEOF();
              { return new java_cup.runtime.Symbol(sym.EOF); }
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }

  /**
   * Converts an int token code into the name of the
   * token by reflection on the cup symbol class/interface sym
   *
   * This code was contributed by Karl Meissner <meissnersd@yahoo.com>
   */
  private String getTokenName(int token) {
    try {
      java.lang.reflect.Field [] classFields = sym.class.getFields();
      for (int i = 0; i < classFields.length; i++) {
        if (classFields[i].getInt(null) == token) {
          return classFields[i].getName();
        }
      }
    } catch (Exception e) {
      e.printStackTrace(System.err);
    }

    return "UNKNOWN TOKEN";
  }

  /**
   * Same as next_token but also prints the token to standard out
   * for debugging.
   *
   * This code was contributed by Karl Meissner <meissnersd@yahoo.com>
   */
  public java_cup.runtime.Symbol debug_next_token() throws java.io.IOException, Exception {
    java_cup.runtime.Symbol s = next_token();
    System.out.println( "line:" + (yyline+1) + " col:" + (yycolumn+1) + " --"+ yytext() + "--" + getTokenName(s.sym) + "--");
    return s;
  }

  /**
   * Runs the scanner on input files.
   *
   * This main method is the debugging routine for the scanner.
   * It prints debugging information about each returned token to
   * System.out until the end of file is reached, or an error occured.
   *
   * @param argv   the command line, contains the filenames to run
   *               the scanner on.
   */
  public static void main(String argv[]) {
    if (argv.length == 0) {
      System.out.println("Usage : java Lexer <inputfile>");
    }
    else {
      for (int i = 0; i < argv.length; i++) {
        Lexer scanner = null;
        try {
          scanner = new Lexer( new java.io.FileReader(argv[i]) );
          while ( !scanner.zzAtEOF ) scanner.debug_next_token();
        }
        catch (java.io.FileNotFoundException e) {
          System.out.println("File not found : \""+argv[i]+"\"");
        }
        catch (java.io.IOException e) {
          System.out.println("IO error scanning file \""+argv[i]+"\"");
          System.out.println(e);
        }
        catch (Exception e) {
          System.out.println("Unexpected exception:");
          e.printStackTrace();
        }
      }
    }
  }


}
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.resources/.history/3b/7026f01de1d700161a15a32011681f65">
package mini_python;

import java.util.HashMap;
import java.util.Iterator;

/* Les valeurs de mini-Python

   - une différence notable avec Python : on
     utilise ici le type int alors que les entiers de Python sont de
     précision arbitraire ; on pourrait utiliser les grands entiers de Java
     mais on choisit la facilité
   - ce que Python appelle une liste est en réalité un tableau
     redimensionnable ; dans le fragment considéré ici, il n'y a pas
     de possibilité d'en modifier la longueur, donc un simple tableau
     convient */

abstract class Value implements Comparable<Value> {
	abstract boolean isFalse();

	boolean isTrue() {
		throw new Todo(); // à compléter (question 2)
	}

	int asInt() {
		if (!(this instanceof Vint))
			throw new Error("integer expected");
		return ((Vint) this).i;
	}

	Vlist asList() {
		if (!(this instanceof Vlist))
			throw new Error("list expected");
		return (Vlist) this;
	}
}

class Vnone extends Value {
	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return "None";
	}

	@Override
	public int compareTo(Value o) {
		return o instanceof Vnone ? 0 : -1;
	}
}

class Vbool extends Value {
	final boolean b;

	Vbool(boolean b) {
		this.b = b;
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return this.b ? "True" : "False";
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone)
			return 1;
		if (o instanceof Vbool) {
			boolean ob = ((Vbool) o).b;
			return b ? (ob ? 0 : 1) : (ob ? -1 : 0);
		}
		return -1;
	}
}

class Vint extends Value {
	final int i;

	Vint(int i) {
		this.i = i;
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return "" + this.i;
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone || o instanceof Vbool)
			return 1;
		if (o instanceof Vint)
			return this.i - o.asInt();
		return -1;
	}
}

class Vstring extends Value {
	final String s;

	Vstring(String s) {
		this.s = s;
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return this.s;
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone || o instanceof Vbool || o instanceof Vint)
			return 1;
		if (o instanceof Vstring)
			return this.s.compareTo(((Vstring) o).s);
		return -1;
	}
}

class Vlist extends Value {
	final Value[] l;

	Vlist(int n) {
		this.l = new Value[n];
	}

	Vlist(Value[] l1, Value[] l2) {
		this.l = new Value[l1.length + l2.length];
		System.arraycopy(l1, 0, l, 0, l1.length);
		System.arraycopy(l2, 0, l, l1.length, l2.length);
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		StringBuffer b = new StringBuffer();
		b.append("[");
		for (int i = 0; i < this.l.length; i++) {
			if (i != 0)
				b.append(", ");
			b.append(this.l[i]);
		}
		b.append("]");
		return b.toString();
	}

	@Override
	public int compareTo(Value o) {
		if (!(o instanceof Vlist))
			return -1;
		Value[] ol = ((Vlist) o).l;
		int n1 = this.l.length, n2 = ol.length;
		int i1 = 0, i2 = 0;
		for (; i1 < n1 && i2 < n2; i1++, i2++) {
			Value v1 = this.l[i1];
			Value v2 = ol[i2];
			int c = v1.compareTo(v2);
			if (c != 0)
				return c;
		}
		if (i1 < n1)
			return 1;
		if (i2 < n2)
			return -1;
		return 0;
	}
}

/* on utilise l'exception ci-dessous pour interpréter la construction return
 * de mini-Python */

class Return extends Exception {
	private static final long serialVersionUID = 1L;
	
	final Value v;

	Return(Value v) {
		this.v = v;
	}
}

class Todo extends Error {
	private static final long serialVersionUID = 1L;
}

/* l'interprète */

class Interp implements Interpreter {

	// variables de mini-Python (globales, locales, arguments)
	HashMap<String, Value> vars;

	Interp() {
		this.vars = new HashMap<String, Value>();
	}

	// les définitions de fonctions
	static HashMap<String, Def> functions = new HashMap<String, Def>();

	// interprétation d'une opération binaire sur deux valeurs
	static Value binop(Binop op, Value v1, Value v2) {
		switch (op) {
		case Bsub:
		case Bmul:
		case Bdiv:
		case Bmod:
			throw new Todo(); // à compléter (question 1)
		case Badd:
			if (v1 instanceof Vint && v2 instanceof Vint)
				throw new Todo(); // à compléter (question 1)
			if (v1 instanceof Vstring && v2 instanceof Vstring)
				throw new Todo(); // à compléter (question 3)
			if (v1 instanceof Vlist && v2 instanceof Vlist)
				throw new Todo(); // à compléter (question 5)
			break;
		case Beq:
			throw new Todo(); // à compléter (question 2)
		case Bneq:
			throw new Todo(); // à compléter (question 2)
		case Blt:
			throw new Todo(); // à compléter (question 2)
		case Ble:
			throw new Todo(); // à compléter (question 2)
		case Bgt:
			throw new Todo(); // à compléter (question 2)
		case Bge:
			throw new Todo(); // à compléter (question 2)
		default:
		}
		throw new Error("unsupported operand types");
	}

	// interprétation des différentes constructions de mini-Python

	@Override
	public Value interp(Ecst e) {
		return e.c.interp();
	}

	@Override
	public Value interp(Ebinop e) {
		Value v1 = e.e1.accept(this);
		switch (e.op) {
		case Band:
			throw new Todo(); // à compléter (question 2)
		case Bor:
			throw new Todo(); // à compléter (question 2)
		default:
			return binop(e.op, v1, e.e2.accept(this));
		}
	}

	@Override
	public Value interp(Eunop e) {
		switch (e.op) {
		case Unot:
			throw new Todo(); // à compléter (question 2)
		case Uneg:
			throw new Todo(); // à compléter (question 1)
		}
		throw new Error("unreachable");
	}

	@Override
	public Value interp(Ecall e) {
		switch (e.f) {
		case "len":
			throw new Todo(); // à compléter (question 5)
		case "range":
			throw new Todo(); // à compléter (question 5)
		default:
			throw new Todo(); // à compléter (question 4)
		}
	}

	@Override
	public Value interp(Elist e) {
		throw new Todo(); // à compléter (question 5)
	}

	@Override
	public Value interp(Eleft e) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public Value interp(Lident lv) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public Value interp(Lnth lv) {
		throw new Todo(); // à compléter (question 5)
	}

	@Override
	public void assign(Lident lv, Expr e) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public void assign(Lnth lv, Expr e) {
		throw new Todo(); // à compléter (question 5)
	}

	/* instructions */
	
	@Override
	public void interp(Seval s) throws Return {
		s.e.accept(this);
	}

	@Override
	public void interp(Sprint s) throws Return {
		System.out.println(s.e.accept(this).toString());
	}

	@Override
	public void interp(Sblock s) throws Return {
		for (Stmt st: s.l)
			st.accept(this);
	}

	@Override
	public void interp(Sif s) throws Return {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public void interp(Sassign s) throws Return {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public void interp(Sreturn s) throws Return {
		throw new Todo(); // à compléter (question 4)
	}

	@Override
	public void interp(Sfor s) throws Return {
		throw new Todo(); // à compléter (question 5)
	}

}
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.resources/.history/4b/505854eee0d700161a15a32011681f65">
package mini_python;

import java.io.IOException;
import java.io.Reader;
import java.util.LinkedList;
import java.util.Queue;

import java_cup.runtime.Symbol;

public class MyLexer extends Lexer {

	MyLexer(Reader in) {
		super(in);
	}
	
	Queue<Symbol> tokens = new LinkedList<Symbol>();
	
	@Override
	public Symbol next_token() throws IOException, Exception {
		if (tokens.isEmpty()) {
			Symbol token = super.next_token();
			// System.out.println("next_token => " + token);
			if (token.sym == sym.INCINDENT) {
				// System.out.println("INC");
				tokens.add(new Symbol(sym.NEWLINE));
				tokens.add(new Symbol(sym.BEGIN));
			} else if (token.sym == sym.DECINDENT) {
				tokens.add(new Symbol(sym.NEWLINE));
				// System.out.println("DEC " + (Integer)token.value);
				for (int i = 0; i < (Integer)token.value; i++)
					tokens.add(new Symbol(sym.END));
			} else
				tokens.add(token);
		}
		return tokens.poll();
	}
	
}
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.resources/.history/4b/50db48dbe0d700161a15a32011681f65">
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Mon Jan 09 21:31:35 CET 2017
//----------------------------------------------------

package mini_python;

/** CUP generated class containing symbol constants. */
public class sym {
  /* terminals */
  public static final int TIMES = 29;
  public static final int MOD = 31;
  public static final int AND = 14;
  public static final int ELSE = 9;
  public static final int IDENT = 2;
  public static final int PLUS = 27;
  public static final int OR = 15;
  public static final int EQUAL = 22;
  public static final int LP = 17;
  public static final int IN = 13;
  public static final int RP = 18;
  public static final int NOT = 16;
  public static final int END = 25;
  public static final int RETURN = 10;
  public static final int DECINDENT = 6;
  public static final int IF = 8;
  public static final int COLON = 23;
  public static final int BEGIN = 24;
  public static final int COMMA = 21;
  public static final int CST = 3;
  public static final int LSQ = 19;
  public static final int EOF = 0;
  public static final int CMP = 4;
  public static final int DEF = 7;
  public static final int DIV = 30;
  public static final int MINUS = 28;
  public static final int NEWLINE = 26;
  public static final int INCINDENT = 5;
  public static final int PRINT = 11;
  public static final int error = 1;
  public static final int FOR = 12;
  public static final int RSQ = 20;
  public static final int UMINUS = 32;
}
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.resources/.history/4c/b027f8dee0d700161a15a32011681f65">
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Mon Jan 09 21:31:35 CET 2017
//----------------------------------------------------

package mini_python;

import java_cup.runtime.*;
import java.util.*;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Mon Jan 09 21:31:35 CET 2017
  */
public class parser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\055\000\002\002\004\000\002\002\005\000\002\003" +
    "\011\000\002\014\004\000\002\014\006\000\002\013\004" +
    "\000\002\013\006\000\002\013\011\000\002\013\010\000" +
    "\002\012\004\000\002\012\005\000\002\012\004\000\002" +
    "\012\003\000\002\015\003\000\002\015\003\000\002\015" +
    "\004\000\002\015\004\000\002\015\005\000\002\015\005" +
    "\000\002\015\005\000\002\015\005\000\002\015\005\000" +
    "\002\015\005\000\002\015\005\000\002\015\005\000\002" +
    "\015\006\000\002\015\005\000\002\015\005\000\002\016" +
    "\003\000\002\016\006\000\002\020\003\000\002\020\002" +
    "\000\002\017\005\000\002\017\003\000\002\010\003\000" +
    "\002\010\002\000\002\011\005\000\002\011\003\000\002" +
    "\005\004\000\002\005\002\000\002\007\004\000\002\006" +
    "\004\000\002\006\002\000\002\004\003\000\002\004\002" +
    "" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\134\000\032\004\uffd5\005\uffd5\011\uffd5\012\uffd5\014" +
    "\uffd5\015\uffd5\016\uffd5\022\uffd5\023\uffd5\025\uffd5\034\006" +
    "\036\uffd5\001\002\000\004\002\136\001\002\000\030\004" +
    "\uffda\005\uffda\011\010\012\uffda\014\uffda\015\uffda\016\uffda" +
    "\022\uffda\023\uffda\025\uffda\036\uffda\001\002\000\030\004" +
    "\uffd6\005\uffd6\011\uffd6\012\uffd6\014\uffd6\015\uffd6\016\uffd6" +
    "\022\uffd6\023\uffd6\025\uffd6\036\uffd6\001\002\000\026\004" +
    "\030\005\025\012\045\014\037\015\034\016\042\022\036" +
    "\023\026\025\027\036\024\001\002\000\004\004\013\001" +
    "\002\000\030\004\uffda\005\uffda\011\010\012\uffda\014\uffda" +
    "\015\uffda\016\uffda\022\uffda\023\uffda\025\uffda\036\uffda\001" +
    "\002\000\026\004\uffdb\005\uffdb\012\uffdb\014\uffdb\015\uffdb" +
    "\016\uffdb\022\uffdb\023\uffdb\025\uffdb\036\uffdb\001\002\000" +
    "\004\023\014\001\002\000\006\004\017\024\uffde\001\002" +
    "\000\004\024\uffdf\001\002\000\004\024\022\001\002\000" +
    "\006\024\uffdc\027\020\001\002\000\004\004\017\001\002" +
    "\000\004\024\uffdd\001\002\000\004\031\023\001\002\000" +
    "\024\004\030\005\025\014\037\015\034\022\036\023\026" +
    "\025\027\034\040\036\024\001\002\000\016\004\030\005" +
    "\025\022\036\023\026\025\027\036\024\001\002\000\036" +
    "\006\ufff4\020\ufff4\021\ufff4\024\ufff4\025\ufff4\026\ufff4\027" +
    "\ufff4\031\ufff4\034\ufff4\035\ufff4\036\ufff4\037\ufff4\040\ufff4" +
    "\041\ufff4\001\002\000\016\004\030\005\025\022\036\023" +
    "\026\025\027\036\024\001\002\000\020\004\030\005\025" +
    "\022\036\023\026\025\027\026\uffe2\036\024\001\002\000" +
    "\042\006\uffe5\020\uffe5\021\uffe5\023\121\024\uffe5\025\uffe5" +
    "\026\uffe5\027\uffe5\030\uffe5\031\uffe5\034\uffe5\035\uffe5\036" +
    "\uffe5\037\uffe5\040\uffe5\041\uffe5\001\002\000\030\004\uffff" +
    "\005\uffff\011\uffff\012\uffff\014\uffff\015\uffff\016\uffff\022" +
    "\uffff\023\uffff\025\uffff\036\uffff\001\002\000\004\034\120" +
    "\001\002\000\030\006\ufff3\020\ufff3\021\ufff3\025\ufff3\030" +
    "\116\034\ufff3\035\ufff3\036\ufff3\037\ufff3\040\ufff3\041\ufff3" +
    "\001\002\000\016\004\030\005\025\022\036\023\026\025" +
    "\027\036\024\001\002\000\026\006\056\020\052\021\063" +
    "\025\054\034\ufff5\035\060\036\053\037\062\040\061\041" +
    "\057\001\002\000\016\004\030\005\025\022\036\023\026" +
    "\025\027\036\024\001\002\000\016\004\030\005\025\022" +
    "\036\023\026\025\027\036\024\001\002\000\004\032\041" +
    "\001\002\000\026\004\030\005\025\012\045\014\037\015" +
    "\034\016\042\022\036\023\026\025\027\036\024\001\002" +
    "\000\004\004\106\001\002\000\032\002\uffd7\004\030\005" +
    "\025\012\045\014\037\015\034\016\042\022\036\023\026" +
    "\025\027\033\uffd7\036\024\001\002\000\004\033\102\001" +
    "\002\000\016\004\030\005\025\022\036\023\026\025\027" +
    "\036\024\001\002\000\004\034\047\001\002\000\032\002" +
    "\ufffc\004\ufffc\005\ufffc\012\ufffc\014\ufffc\015\ufffc\016\ufffc" +
    "\022\ufffc\023\ufffc\025\ufffc\033\ufffc\036\ufffc\001\002\000" +
    "\036\006\ufff3\020\ufff3\021\ufff3\024\ufff3\025\ufff3\026\ufff3" +
    "\027\ufff3\031\ufff3\034\ufff3\035\ufff3\036\ufff3\037\ufff3\040" +
    "\ufff3\041\ufff3\001\002\000\026\006\056\020\052\021\063" +
    "\025\054\031\055\035\060\036\053\037\062\040\061\041" +
    "\057\001\002\000\016\004\030\005\025\022\036\023\026" +
    "\025\027\036\024\001\002\000\016\004\030\005\025\022" +
    "\036\023\026\025\027\036\024\001\002\000\016\004\030" +
    "\005\025\022\036\023\026\025\027\036\024\001\002\000" +
    "\024\004\030\005\025\014\037\015\034\022\036\023\026" +
    "\025\027\034\040\036\024\001\002\000\016\004\030\005" +
    "\025\022\036\023\026\025\027\036\024\001\002\000\016" +
    "\004\030\005\025\022\036\023\026\025\027\036\024\001" +
    "\002\000\016\004\030\005\025\022\036\023\026\025\027" +
    "\036\024\001\002\000\016\004\030\005\025\022\036\023" +
    "\026\025\027\036\024\001\002\000\016\004\030\005\025" +
    "\022\036\023\026\025\027\036\024\001\002\000\016\004" +
    "\030\005\025\022\036\023\026\025\027\036\024\001\002" +
    "\000\036\006\056\020\052\021\uffe9\024\uffe9\025\054\026" +
    "\uffe9\027\uffe9\031\uffe9\034\uffe9\035\060\036\053\037\062" +
    "\040\061\041\057\001\002\000\036\006\uffee\020\uffee\021" +
    "\uffee\024\uffee\025\054\026\uffee\027\uffee\031\uffee\034\uffee" +
    "\035\uffee\036\uffee\037\uffee\040\uffee\041\uffee\001\002\000" +
    "\036\006\uffed\020\uffed\021\uffed\024\uffed\025\054\026\uffed" +
    "\027\uffed\031\uffed\034\uffed\035\uffed\036\uffed\037\uffed\040" +
    "\uffed\041\uffed\001\002\000\036\006\ufff0\020\ufff0\021\ufff0" +
    "\024\ufff0\025\054\026\ufff0\027\ufff0\031\ufff0\034\ufff0\035" +
    "\ufff0\036\ufff0\037\062\040\061\041\057\001\002\000\036" +
    "\006\uffec\020\uffec\021\uffec\024\uffec\025\054\026\uffec\027" +
    "\uffec\031\uffec\034\uffec\035\uffec\036\uffec\037\uffec\040\uffec" +
    "\041\uffec\001\002\000\034\020\uffeb\021\uffeb\024\uffeb\025" +
    "\054\026\uffeb\027\uffeb\031\uffeb\034\uffeb\035\060\036\053" +
    "\037\062\040\061\041\057\001\002\000\034\002\ufffb\004" +
    "\ufffb\005\ufffb\012\ufffb\013\073\014\ufffb\015\ufffb\016\ufffb" +
    "\022\ufffb\023\ufffb\025\ufffb\033\ufffb\036\ufffb\001\002\000" +
    "\004\031\074\001\002\000\024\004\030\005\025\014\037" +
    "\015\034\022\036\023\026\025\027\034\040\036\024\001" +
    "\002\000\032\002\ufffa\004\ufffa\005\ufffa\012\ufffa\014\ufffa" +
    "\015\ufffa\016\ufffa\022\ufffa\023\ufffa\025\ufffa\033\ufffa\036" +
    "\ufffa\001\002\000\026\006\056\020\052\021\063\025\054" +
    "\026\077\035\060\036\053\037\062\040\061\041\057\001" +
    "\002\000\040\006\uffe4\020\uffe4\021\uffe4\024\uffe4\025\uffe4" +
    "\026\uffe4\027\uffe4\030\uffe4\031\uffe4\034\uffe4\035\uffe4\036" +
    "\uffe4\037\uffe4\040\uffe4\041\uffe4\001\002\000\036\006\uffef" +
    "\020\uffef\021\uffef\024\uffef\025\054\026\uffef\027\uffef\031" +
    "\uffef\034\uffef\035\uffef\036\uffef\037\062\040\061\041\057" +
    "\001\002\000\036\006\056\020\uffea\021\uffea\024\uffea\025" +
    "\054\026\uffea\027\uffea\031\uffea\034\uffea\035\060\036\053" +
    "\037\062\040\061\041\057\001\002\000\036\002\ufffd\004" +
    "\ufffd\005\ufffd\011\ufffd\012\ufffd\013\ufffd\014\ufffd\015\ufffd" +
    "\016\ufffd\022\ufffd\023\ufffd\025\ufffd\033\ufffd\036\ufffd\001" +
    "\002\000\032\002\uffd7\004\030\005\025\012\045\014\037" +
    "\015\034\016\042\022\036\023\026\025\027\033\uffd7\036" +
    "\024\001\002\000\006\002\uffd9\033\uffd9\001\002\000\006" +
    "\002\uffd8\033\uffd8\001\002\000\004\017\107\001\002\000" +
    "\016\004\030\005\025\022\036\023\026\025\027\036\024" +
    "\001\002\000\026\006\056\020\052\021\063\025\054\031" +
    "\111\035\060\036\053\037\062\040\061\041\057\001\002" +
    "\000\024\004\030\005\025\014\037\015\034\022\036\023" +
    "\026\025\027\034\040\036\024\001\002\000\032\002\ufff9" +
    "\004\ufff9\005\ufff9\012\ufff9\014\ufff9\015\ufff9\016\ufff9\022" +
    "\ufff9\023\ufff9\025\ufff9\033\ufff9\036\ufff9\001\002\000\026" +
    "\006\056\020\052\021\063\025\054\034\ufff8\035\060\036" +
    "\053\037\062\040\061\041\057\001\002\000\036\006\056" +
    "\020\ufff1\021\ufff1\024\ufff1\025\054\026\ufff1\027\ufff1\031" +
    "\ufff1\034\ufff1\035\060\036\053\037\062\040\061\041\057" +
    "\001\002\000\026\006\056\020\052\021\063\025\054\034" +
    "\ufff6\035\060\036\053\037\062\040\061\041\057\001\002" +
    "\000\016\004\030\005\025\022\036\023\026\025\027\036" +
    "\024\001\002\000\026\006\056\020\052\021\063\025\054" +
    "\034\ufff7\035\060\036\053\037\062\040\061\041\057\001" +
    "\002\000\036\002\ufffe\004\ufffe\005\ufffe\011\ufffe\012\ufffe" +
    "\013\ufffe\014\ufffe\015\ufffe\016\ufffe\022\ufffe\023\ufffe\025" +
    "\ufffe\033\ufffe\036\ufffe\001\002\000\020\004\030\005\025" +
    "\022\036\023\026\024\uffe2\025\027\036\024\001\002\000" +
    "\004\024\127\001\002\000\006\024\uffe3\026\uffe3\001\002" +
    "\000\032\006\056\020\052\021\063\024\uffe0\025\054\026" +
    "\uffe0\027\125\035\060\036\053\037\062\040\061\041\057" +
    "\001\002\000\016\004\030\005\025\022\036\023\026\025" +
    "\027\036\024\001\002\000\006\024\uffe1\026\uffe1\001\002" +
    "\000\036\006\uffe8\020\uffe8\021\uffe8\024\uffe8\025\uffe8\026" +
    "\uffe8\027\uffe8\031\uffe8\034\uffe8\035\uffe8\036\uffe8\037\uffe8" +
    "\040\uffe8\041\uffe8\001\002\000\004\026\131\001\002\000" +
    "\036\006\uffe7\020\uffe7\021\uffe7\024\uffe7\025\uffe7\026\uffe7" +
    "\027\uffe7\031\uffe7\034\uffe7\035\uffe7\036\uffe7\037\uffe7\040" +
    "\uffe7\041\uffe7\001\002\000\026\006\056\020\052\021\063" +
    "\024\133\025\054\035\060\036\053\037\062\040\061\041" +
    "\057\001\002\000\036\006\uffe6\020\uffe6\021\uffe6\024\uffe6" +
    "\025\uffe6\026\uffe6\027\uffe6\031\uffe6\034\uffe6\035\uffe6\036" +
    "\uffe6\037\uffe6\040\uffe6\041\uffe6\001\002\000\036\006\ufff2" +
    "\020\ufff2\021\ufff2\024\ufff2\025\054\026\ufff2\027\ufff2\031" +
    "\ufff2\034\ufff2\035\ufff2\036\ufff2\037\ufff2\040\ufff2\041\ufff2" +
    "\001\002\000\004\002\000\001\002\000\004\002\001\001" +
    "\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\134\000\006\002\003\004\004\001\001\000\002\001" +
    "\001\000\006\003\010\005\006\001\001\000\002\001\001" +
    "\000\014\007\134\012\045\013\042\015\034\016\032\001" +
    "\001\000\002\001\001\000\006\003\010\005\011\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\010\015\011" +
    "\014\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\011\020\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\012\031\014\030\015\034\016\032" +
    "\001\001\000\006\015\133\016\047\001\001\000\002\001" +
    "\001\000\006\015\131\016\047\001\001\000\012\015\123" +
    "\016\047\017\122\020\127\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\015\114\016\047\001\001\000\002\001\001\000\006\015" +
    "\113\016\047\001\001\000\006\015\112\016\047\001\001" +
    "\000\002\001\001\000\014\007\043\012\045\013\042\015" +
    "\034\016\032\001\001\000\002\001\001\000\014\006\103" +
    "\012\045\013\102\015\034\016\032\001\001\000\002\001" +
    "\001\000\006\015\050\016\047\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\015\100\016\047\001\001\000\006\015\077\016\047" +
    "\001\001\000\006\015\075\016\047\001\001\000\012\012" +
    "\031\014\071\015\034\016\032\001\001\000\006\015\070" +
    "\016\047\001\001\000\006\015\067\016\047\001\001\000" +
    "\006\015\066\016\047\001\001\000\006\015\065\016\047" +
    "\001\001\000\006\015\064\016\047\001\001\000\006\015" +
    "\063\016\047\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\012\031\014\074\015\034\016\032\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\006\104\012" +
    "\045\013\102\015\034\016\032\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\015\107\016" +
    "\047\001\001\000\002\001\001\000\012\012\031\014\111" +
    "\015\034\016\032\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\015\116" +
    "\016\047\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\015\123\016\047\017\122\020\121\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\015" +
    "\123\016\047\017\125\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // opt_newline ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opt_newline",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // opt_newline ::= NEWLINE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opt_newline",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // list_stmt ::= 
            {
              LinkedList<Stmt> RESULT =null;
		 RESULT = new LinkedList<Stmt>(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("list_stmt",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // list_stmt ::= stmt list_stmt 
            {
              LinkedList<Stmt> RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Stmt s = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LinkedList<Stmt> l = (LinkedList<Stmt>)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 l.addFirst(s); RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("list_stmt",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // nonempty_list_stmt ::= stmt list_stmt 
            {
              LinkedList<Stmt> RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Stmt s = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LinkedList<Stmt> l = (LinkedList<Stmt>)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 l.addFirst(s); RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("nonempty_list_stmt",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // list_def ::= 
            {
              LinkedList<Def> RESULT =null;
		 RESULT = new LinkedList<Def>(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("list_def",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // list_def ::= def list_def 
            {
              LinkedList<Def> RESULT =null;
		int dleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int dright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Def d = (Def)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LinkedList<Def> l = (LinkedList<Def>)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 l.addFirst(d); RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("list_def",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // nonempty_list_comma_ident ::= IDENT 
            {
              LinkedList<String> RESULT =null;
		int xleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int xright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String x = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 LinkedList<String> l = new LinkedList<String>();
      l.add(x); RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("nonempty_list_comma_ident",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // nonempty_list_comma_ident ::= IDENT COMMA nonempty_list_comma_ident 
            {
              LinkedList<String> RESULT =null;
		int xleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String x = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LinkedList<String> l = (LinkedList<String>)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 l.addFirst(x); RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("nonempty_list_comma_ident",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // list_comma_ident ::= 
            {
              LinkedList<String> RESULT =null;
		 RESULT = new LinkedList<String>(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("list_comma_ident",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // list_comma_ident ::= nonempty_list_comma_ident 
            {
              LinkedList<String> RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LinkedList<String> l = (LinkedList<String>)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("list_comma_ident",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // nonempty_list_comma_expr ::= expr 
            {
              LinkedList<Expr> RESULT =null;
		int xleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int xright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr x = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 LinkedList<Expr> l = new LinkedList<Expr>();
      l.add(x); RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("nonempty_list_comma_expr",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // nonempty_list_comma_expr ::= expr COMMA nonempty_list_comma_expr 
            {
              LinkedList<Expr> RESULT =null;
		int xleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr x = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LinkedList<Expr> l = (LinkedList<Expr>)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 l.addFirst(x); RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("nonempty_list_comma_expr",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // list_comma_expr ::= 
            {
              LinkedList<Expr> RESULT =null;
		 RESULT = new LinkedList<Expr>(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("list_comma_expr",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // list_comma_expr ::= nonempty_list_comma_expr 
            {
              LinkedList<Expr> RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LinkedList<Expr> l = (LinkedList<Expr>)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("list_comma_expr",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // left_value ::= expr LSQ expr RSQ 
            {
              LeftValue RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = new Lnth(e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("left_value",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // left_value ::= IDENT 
            {
              LeftValue RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Lident(id); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("left_value",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // expr ::= LP expr RP 
            {
              Expr RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = e; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // expr ::= LSQ list_comma_expr RSQ 
            {
              Expr RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		LinkedList<Expr> l = (LinkedList<Expr>)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = new Elist(l); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // expr ::= IDENT LP list_comma_expr RP 
            {
              Expr RESULT =null;
		int fleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int fright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String f = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		LinkedList<Expr> l = (LinkedList<Expr>)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = new Ecall (f, l); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // expr ::= expr OR expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Bor, e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // expr ::= expr AND expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Band, e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // expr ::= expr CMP expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Binop c = (Binop)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ebinop(c, e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // expr ::= expr MOD expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Bmod, e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // expr ::= expr DIV expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Bdiv, e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // expr ::= expr TIMES expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Bmul, e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // expr ::= expr MINUS expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Bsub, e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // expr ::= expr PLUS expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Badd, e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // expr ::= NOT expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Eunop(Unop.Unot, e1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // expr ::= MINUS expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Eunop(Unop.Uneg, e1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // expr ::= left_value 
            {
              Expr RESULT =null;
		int lvleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int lvright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LeftValue lv = (LeftValue)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Eleft(lv); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // expr ::= CST 
            {
              Expr RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Constant c = (Constant)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ecst(c); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // simple_stmt ::= expr 
            {
              Stmt RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT =  new Seval(e); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("simple_stmt",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // simple_stmt ::= PRINT expr 
            {
              Stmt RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT =  new Sprint(e); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("simple_stmt",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // simple_stmt ::= left_value EQUAL expr 
            {
              Stmt RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		LeftValue l = (LeftValue)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT =  new Sassign(l, e); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("simple_stmt",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // simple_stmt ::= RETURN expr 
            {
              Stmt RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT =  new Sreturn(e); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("simple_stmt",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // stmt ::= FOR IDENT IN expr COLON suite 
            {
              Stmt RESULT =null;
		int xleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String x = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Stmt s = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT =  new Sfor(x, e, s); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // stmt ::= IF expr COLON suite ELSE COLON suite 
            {
              Stmt RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Expr c = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int s1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int s1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Stmt s1 = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int s2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int s2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Stmt s2 = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT =  new Sif(c, s1, s2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // stmt ::= IF expr COLON suite 
            {
              Stmt RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr c = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Stmt s = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT =  new Sif(c, s, new Sblock()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // stmt ::= simple_stmt NEWLINE 
            {
              Stmt RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Stmt s = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT =  s; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // suite ::= NEWLINE BEGIN nonempty_list_stmt END 
            {
              Stmt RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		LinkedList<Stmt> l = (LinkedList<Stmt>)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = new Sblock(l); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("suite",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // suite ::= simple_stmt NEWLINE 
            {
              Stmt RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Stmt s = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = s; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("suite",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // def ::= DEF IDENT LP list_comma_ident RP COLON suite 
            {
              Def RESULT =null;
		int fleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int fright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String f = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int xleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		LinkedList<String> x = (LinkedList<String>)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Stmt s = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Def(f, x, s); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("def",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // file ::= opt_newline list_def nonempty_list_stmt 
            {
              File RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		LinkedList<Def> l = (LinkedList<Def>)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LinkedList<Stmt> b = (LinkedList<Stmt>)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new File(l, new Sblock(b)); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("file",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= file EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		File start_val = (File)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.resources/.history/4f/30858bd7e0d700161a15a32011681f65">
package mini_python;
import java.util.LinkedList;

/* Syntaxe abstraite de Mini-Python */

/* opérateurs unaires et binaires */

enum Unop { Uneg, Unot }

enum Binop {
  Badd , Bsub , Bmul , Bdiv , Bmod,
  Beq , Bneq , Blt , Ble , Bgt , Bge, // comparaison structurelle
  Band , Bor // paresseux
}

/* constantes litérales */

abstract class Constant {
	static final Cnone None = new Cnone();
	abstract Value interp(); // la valeur d'une constante
}	

class Cnone extends Constant {
	@Override
	Value interp() { return new Vnone(); }
}
class Cbool extends Constant {
	final boolean b;
	Cbool(boolean b) {
		this.b = b;
	}
	@Override
	Value interp() { return new Vbool(this.b); }
}
class Cstring extends Constant {
	final String s;
	Cstring(String s) {
		this.s = s;
	}
	@Override
	Value interp() { return new Vstring(this.s); }
}
class Cint extends Constant {
	final int i; /* en Python les entiers sont en réalité de précision
                   arbitraire ; on simplifie ici */
	Cint(int i) {
		this.i = i;
	}
	@Override
	Value interp() { return new Vint(this.i); }
}

/* expressions */

abstract class Expr {
	abstract Value accept(Interpreter v);
}
class Ecst extends Expr {
	final Constant c;
	Ecst(Constant c) {
		this.c = c;
	}
	@Override
	Value accept(Interpreter v) { return v.interp(this); }
}
class Ebinop extends Expr {
	final Binop op;
	final Expr e1, e2;
	Ebinop(Binop op, Expr e1, Expr e2) {
		super();
		this.op = op;
		this.e1 = e1;
		this.e2 = e2;
	}
	@Override
	Value accept(Interpreter v) { return v.interp(this); }
}
class Eunop extends Expr {
	final Unop op;
	final Expr e;
	Eunop(Unop op, Expr e) {
		super();
		this.op = op;
		this.e = e;
	}
	@Override
	Value accept(Interpreter v) { return v.interp(this); }
}
class Ecall extends Expr {
	final String f;
	final LinkedList<Expr> l;
	Ecall(String f, LinkedList<Expr> l) {
		super();
		this.f = f;
		this.l = l;
	}
	@Override
	Value accept(Interpreter v) { return v.interp(this); }
}
class Elist extends Expr {
	final LinkedList<Expr> l;

	Elist(LinkedList<Expr> l) {
		super();
		this.l = l;
	}
	@Override
	Value accept(Interpreter v) { return v.interp(this); }
}
class Eleft extends Expr {
	final LeftValue lv;

	Eleft(LeftValue lv) {
		super();
		this.lv = lv;
	}
	@Override
	Value accept(Interpreter v) { return v.interp(this); }
}

/* valeur gauche */

abstract class LeftValue {
	abstract Value accept(Interpreter v); // as a right value
	abstract void assign(Interpreter v, Expr e);
}
class Lident extends LeftValue {
	final String s;

	Lident(String s) {
		super();
		this.s = s;
	}

	@Override
	Value accept(Interpreter v) { return v.interp(this); }
	@Override
	void assign(Interpreter v, Expr e) { v.assign(this, e); }
}
class Lnth extends LeftValue {
	final Expr e1, e2;
	Lnth(Expr e1, Expr e2) {
		super();
		this.e1 = e1;
		this.e2 = e2;
	}
	@Override
	Value accept(Interpreter v) { return v.interp(this); }
	@Override
	void assign(Interpreter v, Expr e) { v.assign(this, e); }
}

/* instruction */

abstract class Stmt {
	abstract void accept(Interpreter v) throws Return;
}
class Sif extends Stmt {
	final Expr e;
	final Stmt s1, s2;
	Sif(Expr e, Stmt s1, Stmt s2) {
		super();
		this.e = e;
		this.s1 = s1;
		this.s2 = s2;
	}
	@Override
	void accept(Interpreter v) throws Return { v.interp(this); }
}
class Sreturn extends Stmt {
	final Expr e;

	Sreturn(Expr e) {
		super();
		this.e = e;
	}
	@Override
	void accept(Interpreter v) throws Return { v.interp(this); }
}
class Sassign extends Stmt {
	final LeftValue lv;
	final Expr e;
	Sassign(LeftValue lv, Expr e) {
		super();
		this.lv = lv;
		this.e = e;
	}
	@Override
	void accept(Interpreter v) throws Return { v.interp(this); }
}
class Sprint extends Stmt {
	final Expr e;

	Sprint(Expr e) {
		super();
		this.e = e;
	}
	@Override
	void accept(Interpreter v) throws Return { v.interp(this); }
}
class Sblock extends Stmt {
	final LinkedList<Stmt> l;
	Sblock() {
		this.l = new LinkedList<Stmt>();
	}
	Sblock(LinkedList<Stmt> l) {
		super();
		this.l = l;
	}
	@Override
	void accept(Interpreter v) throws Return { v.interp(this); }
}
class Sfor extends Stmt {
	final String x;
	final Expr e;
	final Stmt s;
	Sfor(String x, Expr e, Stmt s) {
		super();
		this.x = x;
		this.e = e;
		this.s = s;
	}
	@Override
	void accept(Interpreter v) throws Return { v.interp(this); }
}
class Seval extends Stmt {
	final Expr e;

	Seval(Expr e) {
		super();
		this.e = e;
	}
	@Override
	void accept(Interpreter v) throws Return { v.interp(this); }
}

/* définition de fonction */

class Def {
	final String f;
	final LinkedList<String> l; // arguments formels
	final Stmt s;
	Def(String f, LinkedList<String> l, Stmt s) {
		super();
		this.f = f;
		this.l = l;
		this.s = s;
	}
}

class File {
	final LinkedList<Def> l;
	final Stmt s;
	File(LinkedList<Def> l, Stmt s) {
		super();
		this.l = l;
		this.s = s;
	}
}

/* un interprète (voir Interp.java) aura l'interface suivante */

interface Interpreter {
	// l'interprétation d'une expression est une valeur
	Value interp(Ecst e);
	Value interp(Ebinop e);
	Value interp(Eunop e);
	Value interp(Ecall e);
	Value interp(Elist e);
	Value interp(Eleft e);
	Value interp(Lident lv);
	Value interp(Lnth lv);
	// affectation
	void assign(Lident lv, Expr e);
	void assign(Lnth lv, Expr e);
	// l'interprétation d'une instruction ne renvoie rien
	// mais peut faire des effets de bord (affectations)
	// et lever l'exception Return
	void interp(Sif s) throws Return;
	void interp(Sreturn s) throws Return;
	void interp(Sassign s) throws Return;
	void interp(Sprint s) throws Return;
	void interp(Sblock s) throws Return;
	void interp(Sfor s) throws Return;
	void interp(Seval s) throws Return;
}
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.resources/.history/61/90757eeee0d700161a15a32011681f65">
package mini_python;

import java.io.IOException;
import java.io.Reader;
import java.util.LinkedList;
import java.util.Queue;

import java_cup.runtime.Symbol;

public class MyLexer extends Lexer {

	MyLexer(Reader in) {
		super(in);
	}
	
	Queue<Symbol> tokens = new LinkedList<Symbol>();
	
	@Override
	public Symbol next_token() throws IOException, Exception {
		if (tokens.isEmpty()) {
			Symbol token = super.next_token();
			// System.out.println("next_token => " + token);
			if (token.sym == sym.INCINDENT) {
				// System.out.println("INC");
				tokens.add(new Symbol(sym.NEWLINE));
				tokens.add(new Symbol(sym.BEGIN));
			} else if (token.sym == sym.DECINDENT) {
				tokens.add(new Symbol(sym.NEWLINE));
				// System.out.println("DEC " + (Integer)token.value);
				for (int i = 0; i < (Integer)token.value; i++)
					tokens.add(new Symbol(sym.END));
			} else
				tokens.add(token);
		}
		return tokens.poll();
	}
	
}
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.resources/.history/6b/30908b00f3d7001618fe84a016a1c128">
package mini_python;

import java.util.HashMap;
import java.util.Iterator;

/* Les valeurs de mini-Python

   - une différence notable avec Python : on
     utilise ici le type int alors que les entiers de Python sont de
     précision arbitraire ; on pourrait utiliser les grands entiers de Java
     mais on choisit la facilité
   - ce que Python appelle une liste est en réalité un tableau
     redimensionnable ; dans le fragment considéré ici, il n'y a pas
     de possibilité d'en modifier la longueur, donc un simple tableau
     convient */

abstract class Value implements Comparable<Value> {
	abstract boolean isFalse();

	boolean isTrue() {
		return !this.isFalse();
	}

	int asInt() {
		if (!(this instanceof Vint))
			throw new Error("integer expected");
		return ((Vint) this).i;
	}

	Vlist asList() {
		if (!(this instanceof Vlist))
			throw new Error("list expected");
		return (Vlist) this;
	}
}

class Vnone extends Value {
	@Override
	boolean isFalse() {
		return true; 
	}

	@Override
	public String toString() {
		return "None";
	}

	@Override
	public int compareTo(Value o) {
		return o instanceof Vnone ? 0 : -1;
	}
}

class Vbool extends Value {
	final boolean b;

	Vbool(boolean b) {
		this.b = b;
	}

	@Override
	boolean isFalse() {
		
	}

	@Override
	public String toString() {
		return this.b ? "True" : "False";
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone)
			return 1;
		if (o instanceof Vbool) {
			boolean ob = ((Vbool) o).b;
			return b ? (ob ? 0 : 1) : (ob ? -1 : 0);
		}
		return -1;
	}
}

class Vint extends Value {
	final int i;

	Vint(int i) {
		this.i = i;
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return "" + this.i;
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone || o instanceof Vbool)
			return 1;
		if (o instanceof Vint)
			return this.i - o.asInt();
		return -1;
	}
}

class Vstring extends Value {
	final String s;

	Vstring(String s) {
		this.s = s;
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return this.s;
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone || o instanceof Vbool || o instanceof Vint)
			return 1;
		if (o instanceof Vstring)
			return this.s.compareTo(((Vstring) o).s);
		return -1;
	}
}

class Vlist extends Value {
	final Value[] l;

	Vlist(int n) {
		this.l = new Value[n];
	}

	Vlist(Value[] l1, Value[] l2) {
		this.l = new Value[l1.length + l2.length];
		System.arraycopy(l1, 0, l, 0, l1.length);
		System.arraycopy(l2, 0, l, l1.length, l2.length);
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		StringBuffer b = new StringBuffer();
		b.append("[");
		for (int i = 0; i < this.l.length; i++) {
			if (i != 0)
				b.append(", ");
			b.append(this.l[i]);
		}
		b.append("]");
		return b.toString();
	}

	@Override
	public int compareTo(Value o) {
		if (!(o instanceof Vlist))
			return -1;
		Value[] ol = ((Vlist) o).l;
		int n1 = this.l.length, n2 = ol.length;
		int i1 = 0, i2 = 0;
		for (; i1 < n1 && i2 < n2; i1++, i2++) {
			Value v1 = this.l[i1];
			Value v2 = ol[i2];
			int c = v1.compareTo(v2);
			if (c != 0)
				return c;
		}
		if (i1 < n1)
			return 1;
		if (i2 < n2)
			return -1;
		return 0;
	}
}

/* on utilise l'exception ci-dessous pour interpréter la construction return
 * de mini-Python */

class Return extends Exception {
	private static final long serialVersionUID = 1L;
	
	final Value v;

	Return(Value v) {
		this.v = v;
	}
}

class Todo extends Error {
	private static final long serialVersionUID = 1L;
}

/* l'interprète */

class Interp implements Interpreter {

	// variables de mini-Python (globales, locales, arguments)
	HashMap<String, Value> vars;

	Interp() {
		this.vars = new HashMap<String, Value>();
	}

	// les définitions de fonctions
	static HashMap<String, Def> functions = new HashMap<String, Def>();

	// interprétation d'une opération binaire sur deux valeurs
	static Value binop(Binop op, Value v1, Value v2) {
		switch (op) {
		case Bsub:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() - v2.asInt());
			}
			break;
		case Bmul:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() * v2.asInt());
			}
			break;
		case Bdiv:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() / v2.asInt());
			}
			break;
		case Bmod:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() % v2.asInt());
			}
			break;
		case Badd:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() + v2.asInt());
			}
			if (v1 instanceof Vstring && v2 instanceof Vstring)
				throw new Todo(); // à compléter (question 3)
			if (v1 instanceof Vlist && v2 instanceof Vlist)
				throw new Todo(); // à compléter (question 5)
			break;
		case Beq:
			throw new Todo(); // à compléter (question 2)
		case Bneq:
			throw new Todo(); // à compléter (question 2)
		case Blt:
			throw new Todo(); // à compléter (question 2)
		case Ble:
			throw new Todo(); // à compléter (question 2)
		case Bgt:
			throw new Todo(); // à compléter (question 2)
		case Bge:
			throw new Todo(); // à compléter (question 2)
		default:
		}
		throw new Error("unsupported operand types");
	}

	// interprétation des différentes constructions de mini-Python

	@Override
	public Value interp(Ecst e) {
		return e.c.interp();
	}

	@Override
	public Value interp(Ebinop e) {
		Value v1 = e.e1.accept(this);
		switch (e.op) {
		case Band:
			throw new Todo(); // à compléter (question 2)
		case Bor:
			throw new Todo(); // à compléter (question 2)
		default:
			return binop(e.op, v1, e.e2.accept(this));
		}
	}

	@Override
	public Value interp(Eunop e) {
		switch (e.op) {
		case Unot:
			throw new Todo(); // à compléter (question 2)
		case Uneg:
			return new Vint(-e.e.accept(this).asInt());
		}
		throw new Error("unreachable");
	}

	@Override
	public Value interp(Ecall e) {
		switch (e.f) {
		case "len":
			throw new Todo(); // à compléter (question 5)
		case "range":
			throw new Todo(); // à compléter (question 5)
		default:
			throw new Todo(); // à compléter (question 4)
		}
	}

	@Override
	public Value interp(Elist e) {
		throw new Todo(); // à compléter (question 5)
	}

	@Override
	public Value interp(Eleft e) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public Value interp(Lident lv) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public Value interp(Lnth lv) {
		throw new Todo(); // à compléter (question 5)
	}

	@Override
	public void assign(Lident lv, Expr e) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public void assign(Lnth lv, Expr e) {
		throw new Todo(); // à compléter (question 5)
	}

	/* instructions */
	
	@Override
	public void interp(Seval s) throws Return {
		s.e.accept(this);
	}

	@Override
	public void interp(Sprint s) throws Return {
		System.out.println(s.e.accept(this).toString());
	}

	@Override
	public void interp(Sblock s) throws Return {
		for (Stmt st: s.l)
			st.accept(this);
	}

	@Override
	public void interp(Sif s) throws Return {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public void interp(Sassign s) throws Return {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public void interp(Sreturn s) throws Return {
		throw new Todo(); // à compléter (question 4)
	}

	@Override
	public void interp(Sfor s) throws Return {
		throw new Todo(); // à compléter (question 5)
	}

}
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.resources/.history/88/30630eade6d700161a15a32011681f65">
package mini_python;

import java.util.HashMap;
import java.util.Iterator;

/* Les valeurs de mini-Python

   - une différence notable avec Python : on
     utilise ici le type int alors que les entiers de Python sont de
     précision arbitraire ; on pourrait utiliser les grands entiers de Java
     mais on choisit la facilité
   - ce que Python appelle une liste est en réalité un tableau
     redimensionnable ; dans le fragment considéré ici, il n'y a pas
     de possibilité d'en modifier la longueur, donc un simple tableau
     convient */

abstract class Value implements Comparable<Value> {
	abstract boolean isFalse();

	boolean isTrue() {
		throw new Todo(); // à compléter (question 2)
	}

	int asInt() {
		if (!(this instanceof Vint))
			throw new Error("integer expected");
		return ((Vint) this).i;
	}

	Vlist asList() {
		if (!(this instanceof Vlist))
			throw new Error("list expected");
		return (Vlist) this;
	}
}

class Vnone extends Value {
	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return "None";
	}

	@Override
	public int compareTo(Value o) {
		return o instanceof Vnone ? 0 : -1;
	}
}

class Vbool extends Value {
	final boolean b;

	Vbool(boolean b) {
		this.b = b;
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return this.b ? "True" : "False";
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone)
			return 1;
		if (o instanceof Vbool) {
			boolean ob = ((Vbool) o).b;
			return b ? (ob ? 0 : 1) : (ob ? -1 : 0);
		}
		return -1;
	}
}

class Vint extends Value {
	final int i;

	Vint(int i) {
		this.i = i;
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return "" + this.i;
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone || o instanceof Vbool)
			return 1;
		if (o instanceof Vint)
			return this.i - o.asInt();
		return -1;
	}
}

class Vstring extends Value {
	final String s;

	Vstring(String s) {
		this.s = s;
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return this.s;
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone || o instanceof Vbool || o instanceof Vint)
			return 1;
		if (o instanceof Vstring)
			return this.s.compareTo(((Vstring) o).s);
		return -1;
	}
}

class Vlist extends Value {
	final Value[] l;

	Vlist(int n) {
		this.l = new Value[n];
	}

	Vlist(Value[] l1, Value[] l2) {
		this.l = new Value[l1.length + l2.length];
		System.arraycopy(l1, 0, l, 0, l1.length);
		System.arraycopy(l2, 0, l, l1.length, l2.length);
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		StringBuffer b = new StringBuffer();
		b.append("[");
		for (int i = 0; i < this.l.length; i++) {
			if (i != 0)
				b.append(", ");
			b.append(this.l[i]);
		}
		b.append("]");
		return b.toString();
	}

	@Override
	public int compareTo(Value o) {
		if (!(o instanceof Vlist))
			return -1;
		Value[] ol = ((Vlist) o).l;
		int n1 = this.l.length, n2 = ol.length;
		int i1 = 0, i2 = 0;
		for (; i1 < n1 && i2 < n2; i1++, i2++) {
			Value v1 = this.l[i1];
			Value v2 = ol[i2];
			int c = v1.compareTo(v2);
			if (c != 0)
				return c;
		}
		if (i1 < n1)
			return 1;
		if (i2 < n2)
			return -1;
		return 0;
	}
}

/* on utilise l'exception ci-dessous pour interpréter la construction return
 * de mini-Python */

class Return extends Exception {
	private static final long serialVersionUID = 1L;
	
	final Value v;

	Return(Value v) {
		this.v = v;
	}
}

class Todo extends Error {
	private static final long serialVersionUID = 1L;
}

/* l'interprète */

class Interp implements Interpreter {

	// variables de mini-Python (globales, locales, arguments)
	HashMap<String, Value> vars;

	Interp() {
		this.vars = new HashMap<String, Value>();
	}

	// les définitions de fonctions
	static HashMap<String, Def> functions = new HashMap<String, Def>();

	// interprétation d'une opération binaire sur deux valeurs
	static Value binop(Binop op, Value v1, Value v2) {
		switch (op) {
		case Bsub:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() - v2.asInt());
			}
			break;
		case Bmul:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() * v2.asInt());
			}
			break;
		case Bdiv:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() / v2.asInt());
			}
			break;
		case Bmod:
			throw new Todo(); // à compléter (question 1)
		case Badd:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() + v2.asInt());
			}
			if (v1 instanceof Vstring && v2 instanceof Vstring)
				throw new Todo(); // à compléter (question 3)
			if (v1 instanceof Vlist && v2 instanceof Vlist)
				throw new Todo(); // à compléter (question 5)
			break;
		case Beq:
			throw new Todo(); // à compléter (question 2)
		case Bneq:
			throw new Todo(); // à compléter (question 2)
		case Blt:
			throw new Todo(); // à compléter (question 2)
		case Ble:
			throw new Todo(); // à compléter (question 2)
		case Bgt:
			throw new Todo(); // à compléter (question 2)
		case Bge:
			throw new Todo(); // à compléter (question 2)
		default:
		}
		throw new Error("unsupported operand types");
	}

	// interprétation des différentes constructions de mini-Python

	@Override
	public Value interp(Ecst e) {
		return e.c.interp();
	}

	@Override
	public Value interp(Ebinop e) {
		Value v1 = e.e1.accept(this);
		switch (e.op) {
		case Band:
			throw new Todo(); // à compléter (question 2)
		case Bor:
			throw new Todo(); // à compléter (question 2)
		default:
			return binop(e.op, v1, e.e2.accept(this));
		}
	}

	@Override
	public Value interp(Eunop e) {
		switch (e.op) {
		case Unot:
			throw new Todo(); // à compléter (question 2)
		case Uneg:
			throw new Todo(); // à compléter (question 1)	
		}
		throw new Error("unreachable");
	}

	@Override
	public Value interp(Ecall e) {
		switch (e.f) {
		case "len":
			throw new Todo(); // à compléter (question 5)
		case "range":
			throw new Todo(); // à compléter (question 5)
		default:
			throw new Todo(); // à compléter (question 4)
		}
	}

	@Override
	public Value interp(Elist e) {
		throw new Todo(); // à compléter (question 5)
	}

	@Override
	public Value interp(Eleft e) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public Value interp(Lident lv) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public Value interp(Lnth lv) {
		throw new Todo(); // à compléter (question 5)
	}

	@Override
	public void assign(Lident lv, Expr e) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public void assign(Lnth lv, Expr e) {
		throw new Todo(); // à compléter (question 5)
	}

	/* instructions */
	
	@Override
	public void interp(Seval s) throws Return {
		s.e.accept(this);
	}

	@Override
	public void interp(Sprint s) throws Return {
		System.out.println(s.e.accept(this).toString());
	}

	@Override
	public void interp(Sblock s) throws Return {
		for (Stmt st: s.l)
			st.accept(this);
	}

	@Override
	public void interp(Sif s) throws Return {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public void interp(Sassign s) throws Return {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public void interp(Sreturn s) throws Return {
		throw new Todo(); // à compléter (question 4)
	}

	@Override
	public void interp(Sfor s) throws Return {
		throw new Todo(); // à compléter (question 5)
	}

}
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.resources/.history/94/80ec37b0e0d700161a15a32011681f65">
package mini_python;

import java.util.HashMap;
import java.util.Iterator;

/* Les valeurs de mini-Python

   - une différence notable avec Python : on
     utilise ici le type int alors que les entiers de Python sont de
     précision arbitraire ; on pourrait utiliser les grands entiers de Java
     mais on choisit la facilité
   - ce que Python appelle une liste est en réalité un tableau
     redimensionnable ; dans le fragment considéré ici, il n'y a pas
     de possibilité d'en modifier la longueur, donc un simple tableau
     convient */

abstract class Value implements Comparable<Value> {
	abstract boolean isFalse();

	boolean isTrue() {
		throw new Todo(); // à compléter (question 2)
	}

	int asInt() {
		if (!(this instanceof Vint))
			throw new Error("integer expected");
		return ((Vint) this).i;
	}

	Vlist asList() {
		if (!(this instanceof Vlist))
			throw new Error("list expected");
		return (Vlist) this;
	}
}

class Vnone extends Value {
	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return "None";
	}

	@Override
	public int compareTo(Value o) {
		return o instanceof Vnone ? 0 : -1;
	}
}

class Vbool extends Value {
	final boolean b;

	Vbool(boolean b) {
		this.b = b;
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return this.b ? "True" : "False";
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone)
			return 1;
		if (o instanceof Vbool) {
			boolean ob = ((Vbool) o).b;
			return b ? (ob ? 0 : 1) : (ob ? -1 : 0);
		}
		return -1;
	}
}

class Vint extends Value {
	final int i;

	Vint(int i) {
		this.i = i;
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return "" + this.i;
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone || o instanceof Vbool)
			return 1;
		if (o instanceof Vint)
			return this.i - o.asInt();
		return -1;
	}
}

class Vstring extends Value {
	final String s;

	Vstring(String s) {
		this.s = s;
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return this.s;
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone || o instanceof Vbool || o instanceof Vint)
			return 1;
		if (o instanceof Vstring)
			return this.s.compareTo(((Vstring) o).s);
		return -1;
	}
}

class Vlist extends Value {
	final Value[] l;

	Vlist(int n) {
		this.l = new Value[n];
	}

	Vlist(Value[] l1, Value[] l2) {
		this.l = new Value[l1.length + l2.length];
		System.arraycopy(l1, 0, l, 0, l1.length);
		System.arraycopy(l2, 0, l, l1.length, l2.length);
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		StringBuffer b = new StringBuffer();
		b.append("[");
		for (int i = 0; i < this.l.length; i++) {
			if (i != 0)
				b.append(", ");
			b.append(this.l[i]);
		}
		b.append("]");
		return b.toString();
	}

	@Override
	public int compareTo(Value o) {
		if (!(o instanceof Vlist))
			return -1;
		Value[] ol = ((Vlist) o).l;
		int n1 = this.l.length, n2 = ol.length;
		int i1 = 0, i2 = 0;
		for (; i1 < n1 && i2 < n2; i1++, i2++) {
			Value v1 = this.l[i1];
			Value v2 = ol[i2];
			int c = v1.compareTo(v2);
			if (c != 0)
				return c;
		}
		if (i1 < n1)
			return 1;
		if (i2 < n2)
			return -1;
		return 0;
	}
}

/* on utilise l'exception ci-dessous pour interpréter la construction return
 * de mini-Python */

class Return extends Exception {
	private static final long serialVersionUID = 1L;
	
	final Value v;

	Return(Value v) {
		this.v = v;
	}
}

class Todo extends Error {
	private static final long serialVersionUID = 1L;
}

/* l'interprète */

class Interp implements Interpreter {

	// variables de mini-Python (globales, locales, arguments)
	HashMap<String, Value> vars;

	Interp() {
		this.vars = new HashMap<String, Value>();
	}

	// les définitions de fonctions
	static HashMap<String, Def> functions = new HashMap<String, Def>();

	// interprétation d'une opération binaire sur deux valeurs
	static Value binop(Binop op, Value v1, Value v2) {
		switch (op) {
		case Bsub:
		case Bmul:
		case Bdiv:
		case Bmod:
			throw new Todo(); // à compléter (question 1)
		case Badd:
			if (v1 instanceof Vint && v2 instanceof Vint)
				throw new Todo(); // à compléter (question 1)
			if (v1 instanceof Vstring && v2 instanceof Vstring)
				throw new Todo(); // à compléter (question 3)
			if (v1 instanceof Vlist && v2 instanceof Vlist)
				throw new Todo(); // à compléter (question 5)
			break;
		case Beq:
			throw new Todo(); // à compléter (question 2)
		case Bneq:
			throw new Todo(); // à compléter (question 2)
		case Blt:
			throw new Todo(); // à compléter (question 2)
		case Ble:
			throw new Todo(); // à compléter (question 2)
		case Bgt:
			throw new Todo(); // à compléter (question 2)
		case Bge:
			throw new Todo(); // à compléter (question 2)
		default:
		}
		throw new Error("unsupported operand types");
	}

	// interprétation des différentes constructions de mini-Python

	@Override
	public Value interp(Ecst e) {
		return e.c.interp();
	}

	@Override
	public Value interp(Ebinop e) {
		Value v1 = e.e1.accept(this);
		switch (e.op) {
		case Band:
			throw new Todo(); // à compléter (question 2)
		case Bor:
			throw new Todo(); // à compléter (question 2)
		default:
			return binop(e.op, v1, e.e2.accept(this));
		}
	}

	@Override
	public Value interp(Eunop e) {
		switch (e.op) {
		case Unot:
			throw new Todo(); // à compléter (question 2)
		case Uneg:
			throw new Todo(); // à compléter (question 1)
		}
		throw new Error("unreachable");
	}

	@Override
	public Value interp(Ecall e) {
		switch (e.f) {
		case "len":
			throw new Todo(); // à compléter (question 5)
		case "range":
			throw new Todo(); // à compléter (question 5)
		default:
			throw new Todo(); // à compléter (question 4)
		}
	}

	@Override
	public Value interp(Elist e) {
		throw new Todo(); // à compléter (question 5)
	}

	@Override
	public Value interp(Eleft e) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public Value interp(Lident lv) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public Value interp(Lnth lv) {
		throw new Todo(); // à compléter (question 5)
	}

	@Override
	public void assign(Lident lv, Expr e) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public void assign(Lnth lv, Expr e) {
		throw new Todo(); // à compléter (question 5)
	}

	/* instructions */
	
	@Override
	public void interp(Seval s) throws Return {
		s.e.accept(this);
	}

	@Override
	public void interp(Sprint s) throws Return {
		System.out.println(s.e.accept(this).toString());
	}

	@Override
	public void interp(Sblock s) throws Return {
		for (Stmt st: s.l)
			st.accept(this);
	}

	@Override
	public void interp(Sif s) throws Return {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public void interp(Sassign s) throws Return {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public void interp(Sreturn s) throws Return {
		throw new Todo(); // à compléter (question 4)
	}

	@Override
	public void interp(Sfor s) throws Return {
		throw new Todo(); // à compléter (question 5)
	}

}
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.resources/.history/95/202aa6eaf0d7001618fe84a016a1c128">
package mini_python;

import java.util.HashMap;
import java.util.Iterator;

/* Les valeurs de mini-Python

   - une différence notable avec Python : on
     utilise ici le type int alors que les entiers de Python sont de
     précision arbitraire ; on pourrait utiliser les grands entiers de Java
     mais on choisit la facilité
   - ce que Python appelle une liste est en réalité un tableau
     redimensionnable ; dans le fragment considéré ici, il n'y a pas
     de possibilité d'en modifier la longueur, donc un simple tableau
     convient */

abstract class Value implements Comparable<Value> {
	abstract boolean isFalse();

	boolean isTrue() {
		throw new Todo(); // à compléter (question 2)
	}

	int asInt() {
		if (!(this instanceof Vint))
			throw new Error("integer expected");
		return ((Vint) this).i;
	}

	Vlist asList() {
		if (!(this instanceof Vlist))
			throw new Error("list expected");
		return (Vlist) this;
	}
}

class Vnone extends Value {
	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return "None";
	}

	@Override
	public int compareTo(Value o) {
		return o instanceof Vnone ? 0 : -1;
	}
}

class Vbool extends Value {
	final boolean b;

	Vbool(boolean b) {
		this.b = b;
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return this.b ? "True" : "False";
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone)
			return 1;
		if (o instanceof Vbool) {
			boolean ob = ((Vbool) o).b;
			return b ? (ob ? 0 : 1) : (ob ? -1 : 0);
		}
		return -1;
	}
}

class Vint extends Value {
	final int i;

	Vint(int i) {
		this.i = i;
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return "" + this.i;
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone || o instanceof Vbool)
			return 1;
		if (o instanceof Vint)
			return this.i - o.asInt();
		return -1;
	}
}

class Vstring extends Value {
	final String s;

	Vstring(String s) {
		this.s = s;
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return this.s;
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone || o instanceof Vbool || o instanceof Vint)
			return 1;
		if (o instanceof Vstring)
			return this.s.compareTo(((Vstring) o).s);
		return -1;
	}
}

class Vlist extends Value {
	final Value[] l;

	Vlist(int n) {
		this.l = new Value[n];
	}

	Vlist(Value[] l1, Value[] l2) {
		this.l = new Value[l1.length + l2.length];
		System.arraycopy(l1, 0, l, 0, l1.length);
		System.arraycopy(l2, 0, l, l1.length, l2.length);
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		StringBuffer b = new StringBuffer();
		b.append("[");
		for (int i = 0; i < this.l.length; i++) {
			if (i != 0)
				b.append(", ");
			b.append(this.l[i]);
		}
		b.append("]");
		return b.toString();
	}

	@Override
	public int compareTo(Value o) {
		if (!(o instanceof Vlist))
			return -1;
		Value[] ol = ((Vlist) o).l;
		int n1 = this.l.length, n2 = ol.length;
		int i1 = 0, i2 = 0;
		for (; i1 < n1 && i2 < n2; i1++, i2++) {
			Value v1 = this.l[i1];
			Value v2 = ol[i2];
			int c = v1.compareTo(v2);
			if (c != 0)
				return c;
		}
		if (i1 < n1)
			return 1;
		if (i2 < n2)
			return -1;
		return 0;
	}
}

/* on utilise l'exception ci-dessous pour interpréter la construction return
 * de mini-Python */

class Return extends Exception {
	private static final long serialVersionUID = 1L;
	
	final Value v;

	Return(Value v) {
		this.v = v;
	}
}

class Todo extends Error {
	private static final long serialVersionUID = 1L;
}

/* l'interprète */

class Interp implements Interpreter {

	// variables de mini-Python (globales, locales, arguments)
	HashMap<String, Value> vars;

	Interp() {
		this.vars = new HashMap<String, Value>();
	}

	// les définitions de fonctions
	static HashMap<String, Def> functions = new HashMap<String, Def>();

	// interprétation d'une opération binaire sur deux valeurs
	static Value binop(Binop op, Value v1, Value v2) {
		switch (op) {
		case Bsub:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() - v2.asInt());
			}
			break;
		case Bmul:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() * v2.asInt());
			}
			break;
		case Bdiv:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() / v2.asInt());
			}
			break;
		case Bmod:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() % v2.asInt());
			}
			break;
		case Badd:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() + v2.asInt());
			}
			if (v1 instanceof Vstring && v2 instanceof Vstring)
				throw new Todo(); // à compléter (question 3)
			if (v1 instanceof Vlist && v2 instanceof Vlist)
				throw new Todo(); // à compléter (question 5)
			break;
		case Beq:
			throw new Todo(); // à compléter (question 2)
		case Bneq:
			throw new Todo(); // à compléter (question 2)
		case Blt:
			throw new Todo(); // à compléter (question 2)
		case Ble:
			throw new Todo(); // à compléter (question 2)
		case Bgt:
			throw new Todo(); // à compléter (question 2)
		case Bge:
			throw new Todo(); // à compléter (question 2)
		default:
		}
		throw new Error("unsupported operand types");
	}

	// interprétation des différentes constructions de mini-Python

	@Override
	public Value interp(Ecst e) {
		return e.c.interp();
	}

	@Override
	public Value interp(Ebinop e) {
		Value v1 = e.e1.accept(this);
		switch (e.op) {
		case Band:
			throw new Todo(); // à compléter (question 2)
		case Bor:
			throw new Todo(); // à compléter (question 2)
		default:
			return binop(e.op, v1, e.e2.accept(this));
		}
	}

	@Override
	public Value interp(Eunop e) {
		switch (e.op) {
		case Unot:
			throw new Todo(); // à compléter (question 2)
		case Uneg:
			return new Vint(-e.e.accept(this).asInt());
		}
		throw new Error("unreachable");
	}

	@Override
	public Value interp(Ecall e) {
		switch (e.f) {
		case "len":
			throw new Todo(); // à compléter (question 5)
		case "range":
			throw new Todo(); // à compléter (question 5)
		default:
			throw new Todo(); // à compléter (question 4)
		}
	}

	@Override
	public Value interp(Elist e) {
		throw new Todo(); // à compléter (question 5)
	}

	@Override
	public Value interp(Eleft e) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public Value interp(Lident lv) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public Value interp(Lnth lv) {
		throw new Todo(); // à compléter (question 5)
	}

	@Override
	public void assign(Lident lv, Expr e) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public void assign(Lnth lv, Expr e) {
		throw new Todo(); // à compléter (question 5)
	}

	/* instructions */
	
	@Override
	public void interp(Seval s) throws Return {
		s.e.accept(this);
	}

	@Override
	public void interp(Sprint s) throws Return {
		System.out.println(s.e.accept(this).toString());
	}

	@Override
	public void interp(Sblock s) throws Return {
		for (Stmt st: s.l)
			st.accept(this);
	}

	@Override
	public void interp(Sif s) throws Return {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public void interp(Sassign s) throws Return {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public void interp(Sreturn s) throws Return {
		throw new Todo(); // à compléter (question 4)
	}

	@Override
	public void interp(Sfor s) throws Return {
		throw new Todo(); // à compléter (question 5)
	}

}
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.resources/.history/a4/70e906cce0d700161a15a32011681f65">
/* The following code was generated by JFlex 1.4.3 on 1/5/17 10:16 AM */


package mini_python;

import java_cup.runtime.*;
import java.util.*;
import static mini_python.sym.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 1/5/17 10:16 AM from the specification file
 * <tt>src/mini_python/Lexer.flex</tt>
 */
class Lexer implements java_cup.runtime.Scanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\7\1\3\1\2\1\0\1\3\1\1\16\7\4\0\1\3\1\27"+
    "\1\4\1\5\1\6\1\24\2\0\1\14\1\15\1\22\1\20\1\13"+
    "\1\21\1\0\1\23\12\10\1\12\1\0\1\25\1\11\1\26\2\0"+
    "\5\6\1\47\7\6\1\45\5\6\1\46\6\6\1\16\1\0\1\17"+
    "\1\0\1\6\1\0\1\30\2\6\1\32\1\36\1\37\2\6\1\40"+
    "\2\6\1\41\1\6\1\31\1\33\1\44\1\6\1\34\1\42\1\35"+
    "\1\43\5\6\4\0\41\7\2\0\4\6\4\0\1\6\2\0\1\7"+
    "\7\0\1\6\4\0\1\6\5\0\27\6\1\0\37\6\1\0\u01ca\6"+
    "\4\0\14\6\16\0\5\6\7\0\1\6\1\0\1\6\21\0\160\7"+
    "\5\6\1\0\2\6\2\0\4\6\10\0\1\6\1\0\3\6\1\0"+
    "\1\6\1\0\24\6\1\0\123\6\1\0\213\6\1\0\5\7\2\0"+
    "\236\6\11\0\46\6\2\0\1\6\7\0\47\6\7\0\1\6\1\0"+
    "\55\7\1\0\1\7\1\0\2\7\1\0\2\7\1\0\1\7\10\0"+
    "\33\6\5\0\3\6\15\0\5\7\6\0\1\6\4\0\13\7\5\0"+
    "\53\6\25\7\12\10\4\0\2\6\1\7\143\6\1\0\1\6\10\7"+
    "\1\0\6\7\2\6\2\7\1\0\4\7\2\6\12\10\3\6\2\0"+
    "\1\6\17\0\1\7\1\6\1\7\36\6\33\7\2\0\131\6\13\7"+
    "\1\6\16\0\12\10\41\6\11\7\2\6\4\0\1\6\5\0\26\6"+
    "\4\7\1\6\11\7\1\6\3\7\1\6\5\7\22\0\31\6\3\7"+
    "\104\0\1\6\1\0\13\6\67\0\33\7\1\0\4\7\66\6\3\7"+
    "\1\6\22\7\1\6\7\7\12\6\2\7\2\0\12\10\1\0\7\6"+
    "\1\0\7\6\1\0\3\7\1\0\10\6\2\0\2\6\2\0\26\6"+
    "\1\0\7\6\1\0\1\6\3\0\4\6\2\0\1\7\1\6\7\7"+
    "\2\0\2\7\2\0\3\7\1\6\10\0\1\7\4\0\2\6\1\0"+
    "\3\6\2\7\2\0\12\10\4\6\7\0\1\6\5\0\3\7\1\0"+
    "\6\6\4\0\2\6\2\0\26\6\1\0\7\6\1\0\2\6\1\0"+
    "\2\6\1\0\2\6\2\0\1\7\1\0\5\7\4\0\2\7\2\0"+
    "\3\7\3\0\1\7\7\0\4\6\1\0\1\6\7\0\12\10\2\7"+
    "\3\6\1\7\13\0\3\7\1\0\11\6\1\0\3\6\1\0\26\6"+
    "\1\0\7\6\1\0\2\6\1\0\5\6\2\0\1\7\1\6\10\7"+
    "\1\0\3\7\1\0\3\7\2\0\1\6\17\0\2\6\2\7\2\0"+
    "\12\10\1\0\1\6\17\0\3\7\1\0\10\6\2\0\2\6\2\0"+
    "\26\6\1\0\7\6\1\0\2\6\1\0\5\6\2\0\1\7\1\6"+
    "\7\7\2\0\2\7\2\0\3\7\10\0\2\7\4\0\2\6\1\0"+
    "\3\6\2\7\2\0\12\10\1\0\1\6\20\0\1\7\1\6\1\0"+
    "\6\6\3\0\3\6\1\0\4\6\3\0\2\6\1\0\1\6\1\0"+
    "\2\6\3\0\2\6\3\0\3\6\3\0\14\6\4\0\5\7\3\0"+
    "\3\7\1\0\4\7\2\0\1\6\6\0\1\7\16\0\12\10\11\0"+
    "\1\6\7\0\3\7\1\0\10\6\1\0\3\6\1\0\27\6\1\0"+
    "\12\6\1\0\5\6\3\0\1\6\7\7\1\0\3\7\1\0\4\7"+
    "\7\0\2\7\1\0\2\6\6\0\2\6\2\7\2\0\12\10\22\0"+
    "\2\7\1\0\10\6\1\0\3\6\1\0\27\6\1\0\12\6\1\0"+
    "\5\6\2\0\1\7\1\6\7\7\1\0\3\7\1\0\4\7\7\0"+
    "\2\7\7\0\1\6\1\0\2\6\2\7\2\0\12\10\1\0\2\6"+
    "\17\0\2\7\1\0\10\6\1\0\3\6\1\0\51\6\2\0\1\6"+
    "\7\7\1\0\3\7\1\0\4\7\1\6\10\0\1\7\10\0\2\6"+
    "\2\7\2\0\12\10\12\0\6\6\2\0\2\7\1\0\22\6\3\0"+
    "\30\6\1\0\11\6\1\0\1\6\2\0\7\6\3\0\1\7\4\0"+
    "\6\7\1\0\1\7\1\0\10\7\22\0\2\7\15\0\60\6\1\7"+
    "\2\6\7\7\4\0\10\6\10\7\1\0\12\10\47\0\2\6\1\0"+
    "\1\6\2\0\2\6\1\0\1\6\2\0\1\6\6\0\4\6\1\0"+
    "\7\6\1\0\3\6\1\0\1\6\1\0\1\6\2\0\2\6\1\0"+
    "\4\6\1\7\2\6\6\7\1\0\2\7\1\6\2\0\5\6\1\0"+
    "\1\6\1\0\6\7\2\0\12\10\2\0\4\6\40\0\1\6\27\0"+
    "\2\7\6\0\12\10\13\0\1\7\1\0\1\7\1\0\1\7\4\0"+
    "\2\7\10\6\1\0\44\6\4\0\24\7\1\0\2\7\5\6\13\7"+
    "\1\0\44\7\11\0\1\7\71\0\53\6\24\7\1\6\12\10\6\0"+
    "\6\6\4\7\4\6\3\7\1\6\3\7\2\6\7\7\3\6\4\7"+
    "\15\6\14\7\1\6\1\7\12\10\4\7\2\0\46\6\1\0\1\6"+
    "\5\0\1\6\2\0\53\6\1\0\u014d\6\1\0\4\6\2\0\7\6"+
    "\1\0\1\6\1\0\4\6\2\0\51\6\1\0\4\6\2\0\41\6"+
    "\1\0\4\6\2\0\7\6\1\0\1\6\1\0\4\6\2\0\17\6"+
    "\1\0\71\6\1\0\4\6\2\0\103\6\2\0\3\7\40\0\20\6"+
    "\20\0\125\6\14\0\u026c\6\2\0\21\6\1\0\32\6\5\0\113\6"+
    "\3\0\3\6\17\0\15\6\1\0\4\6\3\7\13\0\22\6\3\7"+
    "\13\0\22\6\2\7\14\0\15\6\1\0\3\6\1\0\2\7\14\0"+
    "\64\6\40\7\3\0\1\6\3\0\2\6\1\7\2\0\12\10\41\0"+
    "\3\7\2\0\12\10\6\0\130\6\10\0\51\6\1\7\1\6\5\0"+
    "\106\6\12\0\35\6\3\0\14\7\4\0\14\7\12\0\12\10\36\6"+
    "\2\0\5\6\13\0\54\6\4\0\21\7\7\6\2\7\6\0\12\10"+
    "\46\0\27\6\5\7\4\0\65\6\12\7\1\0\35\7\2\0\1\7"+
    "\12\10\6\0\12\10\15\0\1\6\130\0\5\7\57\6\21\7\7\6"+
    "\4\0\12\10\21\0\11\7\14\0\3\7\36\6\15\7\2\6\12\10"+
    "\54\6\16\7\14\0\44\6\24\7\10\0\12\10\3\0\3\6\12\10"+
    "\44\6\122\0\3\7\1\0\25\7\4\6\1\7\4\6\3\7\2\6"+
    "\11\0\300\6\47\7\25\0\4\7\u0116\6\2\0\6\6\2\0\46\6"+
    "\2\0\6\6\2\0\10\6\1\0\1\6\1\0\1\6\1\0\1\6"+
    "\1\0\37\6\2\0\65\6\1\0\7\6\1\0\1\6\3\0\3\6"+
    "\1\0\7\6\3\0\4\6\2\0\6\6\4\0\15\6\5\0\3\6"+
    "\1\0\7\6\16\0\5\7\32\0\5\7\20\0\2\6\23\0\1\6"+
    "\13\0\5\7\5\0\6\7\1\0\1\6\15\0\1\6\20\0\15\6"+
    "\3\0\33\6\25\0\15\7\4\0\1\7\3\0\14\7\21\0\1\6"+
    "\4\0\1\6\2\0\12\6\1\0\1\6\3\0\5\6\6\0\1\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\13\6\2\0\4\6"+
    "\5\0\5\6\4\0\1\6\21\0\51\6\u0a77\0\57\6\1\0\57\6"+
    "\1\0\205\6\6\0\4\6\3\7\2\6\14\0\46\6\1\0\1\6"+
    "\5\0\1\6\2\0\70\6\7\0\1\6\17\0\1\7\27\6\11\0"+
    "\7\6\1\0\7\6\1\0\7\6\1\0\7\6\1\0\7\6\1\0"+
    "\7\6\1\0\7\6\1\0\7\6\1\0\40\7\57\0\1\6\u01d5\0"+
    "\3\6\31\0\11\6\6\7\1\0\5\6\2\0\5\6\4\0\126\6"+
    "\2\0\2\7\2\0\3\6\1\0\132\6\1\0\4\6\5\0\51\6"+
    "\3\0\136\6\21\0\33\6\65\0\20\6\u0200\0\u19b6\6\112\0\u51cd\6"+
    "\63\0\u048d\6\103\0\56\6\2\0\u010d\6\3\0\20\6\12\10\2\6"+
    "\24\0\57\6\1\7\4\0\12\7\1\0\31\6\7\0\1\7\120\6"+
    "\2\7\45\0\11\6\2\0\147\6\2\0\4\6\1\0\4\6\14\0"+
    "\13\6\115\0\12\6\1\7\3\6\1\7\4\6\1\7\27\6\5\7"+
    "\20\0\1\6\7\0\64\6\14\0\2\7\62\6\21\7\13\0\12\10"+
    "\6\0\22\7\6\6\3\0\1\6\4\0\12\10\34\6\10\7\2\0"+
    "\27\6\15\7\14\0\35\6\3\0\4\7\57\6\16\7\16\0\1\6"+
    "\12\10\46\0\51\6\16\7\11\0\3\6\1\7\10\6\2\7\2\0"+
    "\12\10\6\0\27\6\3\0\1\6\1\7\4\0\60\6\1\7\1\6"+
    "\3\7\2\6\2\7\5\6\2\7\1\6\1\7\1\6\30\0\3\6"+
    "\2\0\13\6\5\7\2\0\3\6\2\7\12\0\6\6\2\0\6\6"+
    "\2\0\6\6\11\0\7\6\1\0\7\6\221\0\43\6\10\7\1\0"+
    "\2\7\2\0\12\10\6\0\u2ba4\6\14\0\27\6\4\0\61\6\u2104\0"+
    "\u016e\6\2\0\152\6\46\0\7\6\14\0\5\6\5\0\1\6\1\7"+
    "\12\6\1\0\15\6\1\0\5\6\1\0\1\6\1\0\2\6\1\0"+
    "\2\6\1\0\154\6\41\0\u016b\6\22\0\100\6\2\0\66\6\50\0"+
    "\15\6\3\0\20\7\20\0\7\7\14\0\2\6\30\0\3\6\31\0"+
    "\1\6\6\0\5\6\1\0\207\6\2\0\1\7\4\0\1\6\13\0"+
    "\12\10\7\0\32\6\4\0\1\6\1\0\32\6\13\0\131\6\3\0"+
    "\6\6\2\0\6\6\2\0\6\6\2\0\3\6\3\0\2\6\3\0"+
    "\2\6\22\0\3\7\4\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\2\1\1\4\1\5\1\6"+
    "\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16"+
    "\1\17\1\20\1\21\1\22\1\23\1\1\14\4\2\0"+
    "\1\24\1\0\1\3\1\25\1\26\1\27\1\30\3\4"+
    "\1\31\3\4\1\32\1\33\4\4\1\0\1\34\1\35"+
    "\1\36\2\4\1\37\5\4\1\40\1\4\1\41\1\42"+
    "\2\4\1\43\1\44\1\45";

  private static int [] zzUnpackAction() {
    int [] result = new int[78];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\50\0\120\0\50\0\170\0\240\0\310\0\360"+
    "\0\u0118\0\50\0\50\0\50\0\50\0\50\0\50\0\50"+
    "\0\50\0\50\0\50\0\50\0\u0140\0\u0168\0\u0190\0\u01b8"+
    "\0\u01e0\0\u0208\0\u0230\0\u0258\0\u0280\0\u02a8\0\u02d0\0\u02f8"+
    "\0\u0320\0\u0348\0\u0370\0\u0398\0\170\0\50\0\240\0\u03c0"+
    "\0\50\0\50\0\50\0\50\0\u03e8\0\u0410\0\u0438\0\310"+
    "\0\u0460\0\u0488\0\u04b0\0\310\0\310\0\u04d8\0\u0500\0\u0528"+
    "\0\u0550\0\u0578\0\310\0\310\0\310\0\u05a0\0\u05c8\0\310"+
    "\0\u05f0\0\u0618\0\u0640\0\u0668\0\u0690\0\310\0\u06b8\0\310"+
    "\0\310\0\u06e0\0\u0708\0\310\0\310\0\310";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[78];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\2\3\1\4\1\5\1\6\1\7\1\2\1\10"+
    "\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20"+
    "\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30"+
    "\1\31\1\32\1\33\1\34\1\7\1\35\1\36\1\37"+
    "\3\7\1\40\1\41\1\42\1\43\51\0\3\3\1\0"+
    "\1\44\42\0\4\45\1\46\43\45\1\47\1\50\1\4"+
    "\45\47\6\0\3\7\17\0\20\7\10\0\1\10\50\0"+
    "\1\51\47\0\1\52\47\0\1\53\47\0\1\54\44\0"+
    "\3\7\17\0\1\7\1\55\16\7\6\0\3\7\17\0"+
    "\3\7\1\56\14\7\6\0\3\7\17\0\6\7\1\57"+
    "\11\7\6\0\3\7\17\0\4\7\1\60\13\7\6\0"+
    "\3\7\17\0\6\7\1\61\11\7\6\0\3\7\17\0"+
    "\11\7\1\62\6\7\6\0\3\7\17\0\3\7\1\63"+
    "\14\7\6\0\3\7\17\0\1\7\1\64\5\7\1\65"+
    "\10\7\6\0\3\7\17\0\4\7\1\66\13\7\6\0"+
    "\3\7\17\0\3\7\1\67\14\7\6\0\3\7\17\0"+
    "\4\7\1\70\13\7\6\0\3\7\17\0\1\71\17\7"+
    "\1\44\2\72\45\44\2\0\1\4\53\0\3\7\17\0"+
    "\2\7\1\73\15\7\6\0\3\7\17\0\5\7\1\74"+
    "\12\7\6\0\3\7\17\0\7\7\1\75\10\7\6\0"+
    "\3\7\17\0\5\7\1\76\12\7\6\0\3\7\17\0"+
    "\12\7\1\77\5\7\6\0\3\7\17\0\4\7\1\100"+
    "\13\7\6\0\3\7\17\0\10\7\1\101\7\7\6\0"+
    "\3\7\17\0\1\7\1\102\16\7\6\0\3\7\17\0"+
    "\13\7\1\103\4\7\6\0\3\7\17\0\11\7\1\104"+
    "\6\7\1\0\2\3\1\72\1\0\1\44\50\0\3\7"+
    "\17\0\13\7\1\105\4\7\6\0\3\7\17\0\6\7"+
    "\1\106\11\7\6\0\3\7\17\0\1\7\1\107\16\7"+
    "\6\0\3\7\17\0\6\7\1\110\11\7\6\0\3\7"+
    "\17\0\6\7\1\111\11\7\6\0\3\7\17\0\12\7"+
    "\1\112\5\7\6\0\3\7\17\0\4\7\1\113\13\7"+
    "\6\0\3\7\17\0\5\7\1\114\12\7\6\0\3\7"+
    "\17\0\6\7\1\115\11\7\6\0\3\7\17\0\1\7"+
    "\1\116\16\7";

  private static int [] zzUnpackTrans() {
    int [] result = new int[1840];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\1\1\1\11\5\1\13\11\17\1\2\0"+
    "\1\11\1\0\1\1\4\11\15\1\1\0\24\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[78];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */

    private Symbol symbol(int id)
    {
	return new Symbol(id, yyline, yycolumn);
    }

    private Symbol symbol(int id, Object value)
    {
	return new Symbol(id, yyline, yycolumn, value);
    }

    static Stack<Integer> indent = new Stack<Integer>();
    { indent.push(0); }



  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  Lexer(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 2248) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
      yyclose();
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public java_cup.runtime.Symbol next_token() throws java.io.IOException, Exception {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      for (zzCurrentPosL = zzStartRead; zzCurrentPosL < zzMarkedPosL;
                                                             zzCurrentPosL++) {
        switch (zzBufferL[zzCurrentPosL]) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn++;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 3: 
          { /* ignore */
          }
        case 38: break;
        case 10: 
          { return symbol(RP);
          }
        case 39: break;
        case 37: 
          { return symbol(RETURN);
          }
        case 40: break;
        case 14: 
          { return symbol(MINUS);
          }
        case 41: break;
        case 35: 
          { return symbol(PRINT);
          }
        case 42: break;
        case 13: 
          { return symbol(PLUS);
          }
        case 43: break;
        case 8: 
          { return symbol(COMMA);
          }
        case 44: break;
        case 32: 
          { return symbol(ELSE);
          }
        case 45: break;
        case 12: 
          { return symbol(RSQ);
          }
        case 46: break;
        case 21: 
          { return symbol(CMP, Binop.Beq);
          }
        case 47: break;
        case 29: 
          { return symbol(NOT);
          }
        case 48: break;
        case 28: 
          { return symbol(AND);
          }
        case 49: break;
        case 24: 
          { return symbol(CMP, Binop.Bneq);
          }
        case 50: break;
        case 16: 
          { return symbol(DIV);
          }
        case 51: break;
        case 2: 
          { String s = yytext();
      int n = s.length() - 1 - s.lastIndexOf('\n');
      // System.out.println("n = " + n);
      if (indent.peek() < n) {
        indent.push(n);
        return symbol(INCINDENT);
      } else {
        int k = 0;
        while (indent.peek() > n) { indent.pop(); k++; }
        return symbol(DECINDENT, k);
      }
          }
        case 52: break;
        case 27: 
          { return symbol(IF);
          }
        case 53: break;
        case 17: 
          { return symbol(MOD);
          }
        case 54: break;
        case 34: 
          { return symbol(CST, new Cbool(true));
          }
        case 55: break;
        case 25: 
          { return symbol(OR);
          }
        case 56: break;
        case 26: 
          { return symbol(IN);
          }
        case 57: break;
        case 9: 
          { return symbol(LP);
          }
        case 58: break;
        case 23: 
          { return symbol(CMP, Binop.Bge);
          }
        case 59: break;
        case 5: 
          { return symbol(CST, new Cint(Integer.parseInt(yytext())));
          }
        case 60: break;
        case 22: 
          { return symbol(CMP, Binop.Ble);
          }
        case 61: break;
        case 30: 
          { return symbol(DEF);
          }
        case 62: break;
        case 1: 
          { throw new Exception (String.format (
        "Line %d, column %d: illegal character: '%s'\n", yyline, yycolumn, yytext()
      ));
          }
        case 63: break;
        case 36: 
          { return symbol(CST, new Cbool(false));
          }
        case 64: break;
        case 4: 
          { return symbol(IDENT, yytext().intern());
          }
        case 65: break;
        case 15: 
          { return symbol(TIMES);
          }
        case 66: break;
        case 7: 
          { return symbol(COLON);
          }
        case 67: break;
        case 31: 
          { return symbol(FOR);
          }
        case 68: break;
        case 20: 
          { String s = yytext();
      return symbol(CST, new Cstring(s.substring(1, s.length() - 1)));
          }
        case 69: break;
        case 19: 
          { return symbol(CMP, Binop.Bgt);
          }
        case 70: break;
        case 6: 
          { return symbol(EQUAL);
          }
        case 71: break;
        case 33: 
          { return symbol(CST, Constant.None);
          }
        case 72: break;
        case 18: 
          { return symbol(CMP, Binop.Blt);
          }
        case 73: break;
        case 11: 
          { return symbol(LSQ);
          }
        case 74: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            zzDoEOF();
              { return new java_cup.runtime.Symbol(sym.EOF); }
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }

  /**
   * Converts an int token code into the name of the
   * token by reflection on the cup symbol class/interface sym
   *
   * This code was contributed by Karl Meissner <meissnersd@yahoo.com>
   */
  private String getTokenName(int token) {
    try {
      java.lang.reflect.Field [] classFields = sym.class.getFields();
      for (int i = 0; i < classFields.length; i++) {
        if (classFields[i].getInt(null) == token) {
          return classFields[i].getName();
        }
      }
    } catch (Exception e) {
      e.printStackTrace(System.err);
    }

    return "UNKNOWN TOKEN";
  }

  /**
   * Same as next_token but also prints the token to standard out
   * for debugging.
   *
   * This code was contributed by Karl Meissner <meissnersd@yahoo.com>
   */
  public java_cup.runtime.Symbol debug_next_token() throws java.io.IOException, Exception {
    java_cup.runtime.Symbol s = next_token();
    System.out.println( "line:" + (yyline+1) + " col:" + (yycolumn+1) + " --"+ yytext() + "--" + getTokenName(s.sym) + "--");
    return s;
  }

  /**
   * Runs the scanner on input files.
   *
   * This main method is the debugging routine for the scanner.
   * It prints debugging information about each returned token to
   * System.out until the end of file is reached, or an error occured.
   *
   * @param argv   the command line, contains the filenames to run
   *               the scanner on.
   */
  public static void main(String argv[]) {
    if (argv.length == 0) {
      System.out.println("Usage : java Lexer <inputfile>");
    }
    else {
      for (int i = 0; i < argv.length; i++) {
        Lexer scanner = null;
        try {
          scanner = new Lexer( new java.io.FileReader(argv[i]) );
          while ( !scanner.zzAtEOF ) scanner.debug_next_token();
        }
        catch (java.io.FileNotFoundException e) {
          System.out.println("File not found : \""+argv[i]+"\"");
        }
        catch (java.io.IOException e) {
          System.out.println("IO error scanning file \""+argv[i]+"\"");
          System.out.println(e);
        }
        catch (Exception e) {
          System.out.println("Unexpected exception:");
          e.printStackTrace();
        }
      }
    }
  }


}
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.resources/.history/aa/502f23dfe0d700161a15a32011681f65">
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Mon Jan 09 21:31:35 CET 2017
//----------------------------------------------------

package mini_python;

import java_cup.runtime.*;
import java.util.*;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Mon Jan 09 21:31:35 CET 2017
  */
public class parser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\055\000\002\002\004\000\002\002\005\000\002\003" +
    "\011\000\002\014\004\000\002\014\006\000\002\013\004" +
    "\000\002\013\006\000\002\013\011\000\002\013\010\000" +
    "\002\012\004\000\002\012\005\000\002\012\004\000\002" +
    "\012\003\000\002\015\003\000\002\015\003\000\002\015" +
    "\004\000\002\015\004\000\002\015\005\000\002\015\005" +
    "\000\002\015\005\000\002\015\005\000\002\015\005\000" +
    "\002\015\005\000\002\015\005\000\002\015\005\000\002" +
    "\015\006\000\002\015\005\000\002\015\005\000\002\016" +
    "\003\000\002\016\006\000\002\020\003\000\002\020\002" +
    "\000\002\017\005\000\002\017\003\000\002\010\003\000" +
    "\002\010\002\000\002\011\005\000\002\011\003\000\002" +
    "\005\004\000\002\005\002\000\002\007\004\000\002\006" +
    "\004\000\002\006\002\000\002\004\003\000\002\004\002" +
    "" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\134\000\032\004\uffd5\005\uffd5\011\uffd5\012\uffd5\014" +
    "\uffd5\015\uffd5\016\uffd5\022\uffd5\023\uffd5\025\uffd5\034\006" +
    "\036\uffd5\001\002\000\004\002\136\001\002\000\030\004" +
    "\uffda\005\uffda\011\010\012\uffda\014\uffda\015\uffda\016\uffda" +
    "\022\uffda\023\uffda\025\uffda\036\uffda\001\002\000\030\004" +
    "\uffd6\005\uffd6\011\uffd6\012\uffd6\014\uffd6\015\uffd6\016\uffd6" +
    "\022\uffd6\023\uffd6\025\uffd6\036\uffd6\001\002\000\026\004" +
    "\030\005\025\012\045\014\037\015\034\016\042\022\036" +
    "\023\026\025\027\036\024\001\002\000\004\004\013\001" +
    "\002\000\030\004\uffda\005\uffda\011\010\012\uffda\014\uffda" +
    "\015\uffda\016\uffda\022\uffda\023\uffda\025\uffda\036\uffda\001" +
    "\002\000\026\004\uffdb\005\uffdb\012\uffdb\014\uffdb\015\uffdb" +
    "\016\uffdb\022\uffdb\023\uffdb\025\uffdb\036\uffdb\001\002\000" +
    "\004\023\014\001\002\000\006\004\017\024\uffde\001\002" +
    "\000\004\024\uffdf\001\002\000\004\024\022\001\002\000" +
    "\006\024\uffdc\027\020\001\002\000\004\004\017\001\002" +
    "\000\004\024\uffdd\001\002\000\004\031\023\001\002\000" +
    "\024\004\030\005\025\014\037\015\034\022\036\023\026" +
    "\025\027\034\040\036\024\001\002\000\016\004\030\005" +
    "\025\022\036\023\026\025\027\036\024\001\002\000\036" +
    "\006\ufff4\020\ufff4\021\ufff4\024\ufff4\025\ufff4\026\ufff4\027" +
    "\ufff4\031\ufff4\034\ufff4\035\ufff4\036\ufff4\037\ufff4\040\ufff4" +
    "\041\ufff4\001\002\000\016\004\030\005\025\022\036\023" +
    "\026\025\027\036\024\001\002\000\020\004\030\005\025" +
    "\022\036\023\026\025\027\026\uffe2\036\024\001\002\000" +
    "\042\006\uffe5\020\uffe5\021\uffe5\023\121\024\uffe5\025\uffe5" +
    "\026\uffe5\027\uffe5\030\uffe5\031\uffe5\034\uffe5\035\uffe5\036" +
    "\uffe5\037\uffe5\040\uffe5\041\uffe5\001\002\000\030\004\uffff" +
    "\005\uffff\011\uffff\012\uffff\014\uffff\015\uffff\016\uffff\022" +
    "\uffff\023\uffff\025\uffff\036\uffff\001\002\000\004\034\120" +
    "\001\002\000\030\006\ufff3\020\ufff3\021\ufff3\025\ufff3\030" +
    "\116\034\ufff3\035\ufff3\036\ufff3\037\ufff3\040\ufff3\041\ufff3" +
    "\001\002\000\016\004\030\005\025\022\036\023\026\025" +
    "\027\036\024\001\002\000\026\006\056\020\052\021\063" +
    "\025\054\034\ufff5\035\060\036\053\037\062\040\061\041" +
    "\057\001\002\000\016\004\030\005\025\022\036\023\026" +
    "\025\027\036\024\001\002\000\016\004\030\005\025\022" +
    "\036\023\026\025\027\036\024\001\002\000\004\032\041" +
    "\001\002\000\026\004\030\005\025\012\045\014\037\015" +
    "\034\016\042\022\036\023\026\025\027\036\024\001\002" +
    "\000\004\004\106\001\002\000\032\002\uffd7\004\030\005" +
    "\025\012\045\014\037\015\034\016\042\022\036\023\026" +
    "\025\027\033\uffd7\036\024\001\002\000\004\033\102\001" +
    "\002\000\016\004\030\005\025\022\036\023\026\025\027" +
    "\036\024\001\002\000\004\034\047\001\002\000\032\002" +
    "\ufffc\004\ufffc\005\ufffc\012\ufffc\014\ufffc\015\ufffc\016\ufffc" +
    "\022\ufffc\023\ufffc\025\ufffc\033\ufffc\036\ufffc\001\002\000" +
    "\036\006\ufff3\020\ufff3\021\ufff3\024\ufff3\025\ufff3\026\ufff3" +
    "\027\ufff3\031\ufff3\034\ufff3\035\ufff3\036\ufff3\037\ufff3\040" +
    "\ufff3\041\ufff3\001\002\000\026\006\056\020\052\021\063" +
    "\025\054\031\055\035\060\036\053\037\062\040\061\041" +
    "\057\001\002\000\016\004\030\005\025\022\036\023\026" +
    "\025\027\036\024\001\002\000\016\004\030\005\025\022" +
    "\036\023\026\025\027\036\024\001\002\000\016\004\030" +
    "\005\025\022\036\023\026\025\027\036\024\001\002\000" +
    "\024\004\030\005\025\014\037\015\034\022\036\023\026" +
    "\025\027\034\040\036\024\001\002\000\016\004\030\005" +
    "\025\022\036\023\026\025\027\036\024\001\002\000\016" +
    "\004\030\005\025\022\036\023\026\025\027\036\024\001" +
    "\002\000\016\004\030\005\025\022\036\023\026\025\027" +
    "\036\024\001\002\000\016\004\030\005\025\022\036\023" +
    "\026\025\027\036\024\001\002\000\016\004\030\005\025" +
    "\022\036\023\026\025\027\036\024\001\002\000\016\004" +
    "\030\005\025\022\036\023\026\025\027\036\024\001\002" +
    "\000\036\006\056\020\052\021\uffe9\024\uffe9\025\054\026" +
    "\uffe9\027\uffe9\031\uffe9\034\uffe9\035\060\036\053\037\062" +
    "\040\061\041\057\001\002\000\036\006\uffee\020\uffee\021" +
    "\uffee\024\uffee\025\054\026\uffee\027\uffee\031\uffee\034\uffee" +
    "\035\uffee\036\uffee\037\uffee\040\uffee\041\uffee\001\002\000" +
    "\036\006\uffed\020\uffed\021\uffed\024\uffed\025\054\026\uffed" +
    "\027\uffed\031\uffed\034\uffed\035\uffed\036\uffed\037\uffed\040" +
    "\uffed\041\uffed\001\002\000\036\006\ufff0\020\ufff0\021\ufff0" +
    "\024\ufff0\025\054\026\ufff0\027\ufff0\031\ufff0\034\ufff0\035" +
    "\ufff0\036\ufff0\037\062\040\061\041\057\001\002\000\036" +
    "\006\uffec\020\uffec\021\uffec\024\uffec\025\054\026\uffec\027" +
    "\uffec\031\uffec\034\uffec\035\uffec\036\uffec\037\uffec\040\uffec" +
    "\041\uffec\001\002\000\034\020\uffeb\021\uffeb\024\uffeb\025" +
    "\054\026\uffeb\027\uffeb\031\uffeb\034\uffeb\035\060\036\053" +
    "\037\062\040\061\041\057\001\002\000\034\002\ufffb\004" +
    "\ufffb\005\ufffb\012\ufffb\013\073\014\ufffb\015\ufffb\016\ufffb" +
    "\022\ufffb\023\ufffb\025\ufffb\033\ufffb\036\ufffb\001\002\000" +
    "\004\031\074\001\002\000\024\004\030\005\025\014\037" +
    "\015\034\022\036\023\026\025\027\034\040\036\024\001" +
    "\002\000\032\002\ufffa\004\ufffa\005\ufffa\012\ufffa\014\ufffa" +
    "\015\ufffa\016\ufffa\022\ufffa\023\ufffa\025\ufffa\033\ufffa\036" +
    "\ufffa\001\002\000\026\006\056\020\052\021\063\025\054" +
    "\026\077\035\060\036\053\037\062\040\061\041\057\001" +
    "\002\000\040\006\uffe4\020\uffe4\021\uffe4\024\uffe4\025\uffe4" +
    "\026\uffe4\027\uffe4\030\uffe4\031\uffe4\034\uffe4\035\uffe4\036" +
    "\uffe4\037\uffe4\040\uffe4\041\uffe4\001\002\000\036\006\uffef" +
    "\020\uffef\021\uffef\024\uffef\025\054\026\uffef\027\uffef\031" +
    "\uffef\034\uffef\035\uffef\036\uffef\037\062\040\061\041\057" +
    "\001\002\000\036\006\056\020\uffea\021\uffea\024\uffea\025" +
    "\054\026\uffea\027\uffea\031\uffea\034\uffea\035\060\036\053" +
    "\037\062\040\061\041\057\001\002\000\036\002\ufffd\004" +
    "\ufffd\005\ufffd\011\ufffd\012\ufffd\013\ufffd\014\ufffd\015\ufffd" +
    "\016\ufffd\022\ufffd\023\ufffd\025\ufffd\033\ufffd\036\ufffd\001" +
    "\002\000\032\002\uffd7\004\030\005\025\012\045\014\037" +
    "\015\034\016\042\022\036\023\026\025\027\033\uffd7\036" +
    "\024\001\002\000\006\002\uffd9\033\uffd9\001\002\000\006" +
    "\002\uffd8\033\uffd8\001\002\000\004\017\107\001\002\000" +
    "\016\004\030\005\025\022\036\023\026\025\027\036\024" +
    "\001\002\000\026\006\056\020\052\021\063\025\054\031" +
    "\111\035\060\036\053\037\062\040\061\041\057\001\002" +
    "\000\024\004\030\005\025\014\037\015\034\022\036\023" +
    "\026\025\027\034\040\036\024\001\002\000\032\002\ufff9" +
    "\004\ufff9\005\ufff9\012\ufff9\014\ufff9\015\ufff9\016\ufff9\022" +
    "\ufff9\023\ufff9\025\ufff9\033\ufff9\036\ufff9\001\002\000\026" +
    "\006\056\020\052\021\063\025\054\034\ufff8\035\060\036" +
    "\053\037\062\040\061\041\057\001\002\000\036\006\056" +
    "\020\ufff1\021\ufff1\024\ufff1\025\054\026\ufff1\027\ufff1\031" +
    "\ufff1\034\ufff1\035\060\036\053\037\062\040\061\041\057" +
    "\001\002\000\026\006\056\020\052\021\063\025\054\034" +
    "\ufff6\035\060\036\053\037\062\040\061\041\057\001\002" +
    "\000\016\004\030\005\025\022\036\023\026\025\027\036" +
    "\024\001\002\000\026\006\056\020\052\021\063\025\054" +
    "\034\ufff7\035\060\036\053\037\062\040\061\041\057\001" +
    "\002\000\036\002\ufffe\004\ufffe\005\ufffe\011\ufffe\012\ufffe" +
    "\013\ufffe\014\ufffe\015\ufffe\016\ufffe\022\ufffe\023\ufffe\025" +
    "\ufffe\033\ufffe\036\ufffe\001\002\000\020\004\030\005\025" +
    "\022\036\023\026\024\uffe2\025\027\036\024\001\002\000" +
    "\004\024\127\001\002\000\006\024\uffe3\026\uffe3\001\002" +
    "\000\032\006\056\020\052\021\063\024\uffe0\025\054\026" +
    "\uffe0\027\125\035\060\036\053\037\062\040\061\041\057" +
    "\001\002\000\016\004\030\005\025\022\036\023\026\025" +
    "\027\036\024\001\002\000\006\024\uffe1\026\uffe1\001\002" +
    "\000\036\006\uffe8\020\uffe8\021\uffe8\024\uffe8\025\uffe8\026" +
    "\uffe8\027\uffe8\031\uffe8\034\uffe8\035\uffe8\036\uffe8\037\uffe8" +
    "\040\uffe8\041\uffe8\001\002\000\004\026\131\001\002\000" +
    "\036\006\uffe7\020\uffe7\021\uffe7\024\uffe7\025\uffe7\026\uffe7" +
    "\027\uffe7\031\uffe7\034\uffe7\035\uffe7\036\uffe7\037\uffe7\040" +
    "\uffe7\041\uffe7\001\002\000\026\006\056\020\052\021\063" +
    "\024\133\025\054\035\060\036\053\037\062\040\061\041" +
    "\057\001\002\000\036\006\uffe6\020\uffe6\021\uffe6\024\uffe6" +
    "\025\uffe6\026\uffe6\027\uffe6\031\uffe6\034\uffe6\035\uffe6\036" +
    "\uffe6\037\uffe6\040\uffe6\041\uffe6\001\002\000\036\006\ufff2" +
    "\020\ufff2\021\ufff2\024\ufff2\025\054\026\ufff2\027\ufff2\031" +
    "\ufff2\034\ufff2\035\ufff2\036\ufff2\037\ufff2\040\ufff2\041\ufff2" +
    "\001\002\000\004\002\000\001\002\000\004\002\001\001" +
    "\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\134\000\006\002\003\004\004\001\001\000\002\001" +
    "\001\000\006\003\010\005\006\001\001\000\002\001\001" +
    "\000\014\007\134\012\045\013\042\015\034\016\032\001" +
    "\001\000\002\001\001\000\006\003\010\005\011\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\010\015\011" +
    "\014\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\011\020\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\012\031\014\030\015\034\016\032" +
    "\001\001\000\006\015\133\016\047\001\001\000\002\001" +
    "\001\000\006\015\131\016\047\001\001\000\012\015\123" +
    "\016\047\017\122\020\127\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\015\114\016\047\001\001\000\002\001\001\000\006\015" +
    "\113\016\047\001\001\000\006\015\112\016\047\001\001" +
    "\000\002\001\001\000\014\007\043\012\045\013\042\015" +
    "\034\016\032\001\001\000\002\001\001\000\014\006\103" +
    "\012\045\013\102\015\034\016\032\001\001\000\002\001" +
    "\001\000\006\015\050\016\047\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\015\100\016\047\001\001\000\006\015\077\016\047" +
    "\001\001\000\006\015\075\016\047\001\001\000\012\012" +
    "\031\014\071\015\034\016\032\001\001\000\006\015\070" +
    "\016\047\001\001\000\006\015\067\016\047\001\001\000" +
    "\006\015\066\016\047\001\001\000\006\015\065\016\047" +
    "\001\001\000\006\015\064\016\047\001\001\000\006\015" +
    "\063\016\047\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\012\031\014\074\015\034\016\032\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\006\104\012" +
    "\045\013\102\015\034\016\032\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\015\107\016" +
    "\047\001\001\000\002\001\001\000\012\012\031\014\111" +
    "\015\034\016\032\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\015\116" +
    "\016\047\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\015\123\016\047\017\122\020\121\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\015" +
    "\123\016\047\017\125\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // opt_newline ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opt_newline",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // opt_newline ::= NEWLINE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opt_newline",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // list_stmt ::= 
            {
              LinkedList<Stmt> RESULT =null;
		 RESULT = new LinkedList<Stmt>(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("list_stmt",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // list_stmt ::= stmt list_stmt 
            {
              LinkedList<Stmt> RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Stmt s = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LinkedList<Stmt> l = (LinkedList<Stmt>)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 l.addFirst(s); RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("list_stmt",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // nonempty_list_stmt ::= stmt list_stmt 
            {
              LinkedList<Stmt> RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Stmt s = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LinkedList<Stmt> l = (LinkedList<Stmt>)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 l.addFirst(s); RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("nonempty_list_stmt",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // list_def ::= 
            {
              LinkedList<Def> RESULT =null;
		 RESULT = new LinkedList<Def>(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("list_def",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // list_def ::= def list_def 
            {
              LinkedList<Def> RESULT =null;
		int dleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int dright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Def d = (Def)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LinkedList<Def> l = (LinkedList<Def>)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 l.addFirst(d); RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("list_def",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // nonempty_list_comma_ident ::= IDENT 
            {
              LinkedList<String> RESULT =null;
		int xleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int xright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String x = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 LinkedList<String> l = new LinkedList<String>();
      l.add(x); RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("nonempty_list_comma_ident",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // nonempty_list_comma_ident ::= IDENT COMMA nonempty_list_comma_ident 
            {
              LinkedList<String> RESULT =null;
		int xleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String x = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LinkedList<String> l = (LinkedList<String>)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 l.addFirst(x); RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("nonempty_list_comma_ident",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // list_comma_ident ::= 
            {
              LinkedList<String> RESULT =null;
		 RESULT = new LinkedList<String>(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("list_comma_ident",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // list_comma_ident ::= nonempty_list_comma_ident 
            {
              LinkedList<String> RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LinkedList<String> l = (LinkedList<String>)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("list_comma_ident",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // nonempty_list_comma_expr ::= expr 
            {
              LinkedList<Expr> RESULT =null;
		int xleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int xright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr x = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 LinkedList<Expr> l = new LinkedList<Expr>();
      l.add(x); RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("nonempty_list_comma_expr",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // nonempty_list_comma_expr ::= expr COMMA nonempty_list_comma_expr 
            {
              LinkedList<Expr> RESULT =null;
		int xleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr x = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LinkedList<Expr> l = (LinkedList<Expr>)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 l.addFirst(x); RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("nonempty_list_comma_expr",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // list_comma_expr ::= 
            {
              LinkedList<Expr> RESULT =null;
		 RESULT = new LinkedList<Expr>(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("list_comma_expr",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // list_comma_expr ::= nonempty_list_comma_expr 
            {
              LinkedList<Expr> RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LinkedList<Expr> l = (LinkedList<Expr>)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("list_comma_expr",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // left_value ::= expr LSQ expr RSQ 
            {
              LeftValue RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = new Lnth(e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("left_value",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // left_value ::= IDENT 
            {
              LeftValue RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Lident(id); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("left_value",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // expr ::= LP expr RP 
            {
              Expr RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = e; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // expr ::= LSQ list_comma_expr RSQ 
            {
              Expr RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		LinkedList<Expr> l = (LinkedList<Expr>)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = new Elist(l); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // expr ::= IDENT LP list_comma_expr RP 
            {
              Expr RESULT =null;
		int fleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int fright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String f = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		LinkedList<Expr> l = (LinkedList<Expr>)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = new Ecall (f, l); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // expr ::= expr OR expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Bor, e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // expr ::= expr AND expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Band, e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // expr ::= expr CMP expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Binop c = (Binop)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ebinop(c, e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // expr ::= expr MOD expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Bmod, e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // expr ::= expr DIV expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Bdiv, e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // expr ::= expr TIMES expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Bmul, e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // expr ::= expr MINUS expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Bsub, e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // expr ::= expr PLUS expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Badd, e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // expr ::= NOT expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Eunop(Unop.Unot, e1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // expr ::= MINUS expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Eunop(Unop.Uneg, e1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // expr ::= left_value 
            {
              Expr RESULT =null;
		int lvleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int lvright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LeftValue lv = (LeftValue)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Eleft(lv); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // expr ::= CST 
            {
              Expr RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Constant c = (Constant)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ecst(c); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // simple_stmt ::= expr 
            {
              Stmt RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT =  new Seval(e); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("simple_stmt",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // simple_stmt ::= PRINT expr 
            {
              Stmt RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT =  new Sprint(e); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("simple_stmt",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // simple_stmt ::= left_value EQUAL expr 
            {
              Stmt RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		LeftValue l = (LeftValue)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT =  new Sassign(l, e); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("simple_stmt",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // simple_stmt ::= RETURN expr 
            {
              Stmt RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT =  new Sreturn(e); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("simple_stmt",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // stmt ::= FOR IDENT IN expr COLON suite 
            {
              Stmt RESULT =null;
		int xleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String x = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Stmt s = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT =  new Sfor(x, e, s); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // stmt ::= IF expr COLON suite ELSE COLON suite 
            {
              Stmt RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Expr c = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int s1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int s1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Stmt s1 = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int s2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int s2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Stmt s2 = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT =  new Sif(c, s1, s2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // stmt ::= IF expr COLON suite 
            {
              Stmt RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr c = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Stmt s = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT =  new Sif(c, s, new Sblock()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // stmt ::= simple_stmt NEWLINE 
            {
              Stmt RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Stmt s = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT =  s; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // suite ::= NEWLINE BEGIN nonempty_list_stmt END 
            {
              Stmt RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		LinkedList<Stmt> l = (LinkedList<Stmt>)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = new Sblock(l); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("suite",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // suite ::= simple_stmt NEWLINE 
            {
              Stmt RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Stmt s = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = s; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("suite",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // def ::= DEF IDENT LP list_comma_ident RP COLON suite 
            {
              Def RESULT =null;
		int fleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int fright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String f = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int xleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		LinkedList<String> x = (LinkedList<String>)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Stmt s = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Def(f, x, s); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("def",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // file ::= opt_newline list_def nonempty_list_stmt 
            {
              File RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		LinkedList<Def> l = (LinkedList<Def>)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LinkedList<Stmt> b = (LinkedList<Stmt>)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new File(l, new Sblock(b)); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("file",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= file EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		File start_val = (File)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.resources/.history/b5/20212391e5d700161a15a32011681f65">
package mini_python;

import java.util.HashMap;
import java.util.Iterator;

/* Les valeurs de mini-Python

   - une différence notable avec Python : on
     utilise ici le type int alors que les entiers de Python sont de
     précision arbitraire ; on pourrait utiliser les grands entiers de Java
     mais on choisit la facilité
   - ce que Python appelle une liste est en réalité un tableau
     redimensionnable ; dans le fragment considéré ici, il n'y a pas
     de possibilité d'en modifier la longueur, donc un simple tableau
     convient */

abstract class Value implements Comparable<Value> {
	abstract boolean isFalse();

	boolean isTrue() {
		throw new Todo(); // à compléter (question 2)
	}

	int asInt() {
		if (!(this instanceof Vint))
			throw new Error("integer expected");
		return ((Vint) this).i;
	}

	Vlist asList() {
		if (!(this instanceof Vlist))
			throw new Error("list expected");
		return (Vlist) this;
	}
}

class Vnone extends Value {
	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return "None";
	}

	@Override
	public int compareTo(Value o) {
		return o instanceof Vnone ? 0 : -1;
	}
}

class Vbool extends Value {
	final boolean b;

	Vbool(boolean b) {
		this.b = b;
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return this.b ? "True" : "False";
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone)
			return 1;
		if (o instanceof Vbool) {
			boolean ob = ((Vbool) o).b;
			return b ? (ob ? 0 : 1) : (ob ? -1 : 0);
		}
		return -1;
	}
}

class Vint extends Value {
	final int i;

	Vint(int i) {
		this.i = i;
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return "" + this.i;
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone || o instanceof Vbool)
			return 1;
		if (o instanceof Vint)
			return this.i - o.asInt();
		return -1;
	}
}

class Vstring extends Value {
	final String s;

	Vstring(String s) {
		this.s = s;
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return this.s;
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone || o instanceof Vbool || o instanceof Vint)
			return 1;
		if (o instanceof Vstring)
			return this.s.compareTo(((Vstring) o).s);
		return -1;
	}
}

class Vlist extends Value {
	final Value[] l;

	Vlist(int n) {
		this.l = new Value[n];
	}

	Vlist(Value[] l1, Value[] l2) {
		this.l = new Value[l1.length + l2.length];
		System.arraycopy(l1, 0, l, 0, l1.length);
		System.arraycopy(l2, 0, l, l1.length, l2.length);
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		StringBuffer b = new StringBuffer();
		b.append("[");
		for (int i = 0; i < this.l.length; i++) {
			if (i != 0)
				b.append(", ");
			b.append(this.l[i]);
		}
		b.append("]");
		return b.toString();
	}

	@Override
	public int compareTo(Value o) {
		if (!(o instanceof Vlist))
			return -1;
		Value[] ol = ((Vlist) o).l;
		int n1 = this.l.length, n2 = ol.length;
		int i1 = 0, i2 = 0;
		for (; i1 < n1 && i2 < n2; i1++, i2++) {
			Value v1 = this.l[i1];
			Value v2 = ol[i2];
			int c = v1.compareTo(v2);
			if (c != 0)
				return c;
		}
		if (i1 < n1)
			return 1;
		if (i2 < n2)
			return -1;
		return 0;
	}
}

/* on utilise l'exception ci-dessous pour interpréter la construction return
 * de mini-Python */

class Return extends Exception {
	private static final long serialVersionUID = 1L;
	
	final Value v;

	Return(Value v) {
		this.v = v;
	}
}

class Todo extends Error {
	private static final long serialVersionUID = 1L;
}

/* l'interprète */

class Interp implements Interpreter {

	// variables de mini-Python (globales, locales, arguments)
	HashMap<String, Value> vars;

	Interp() {
		this.vars = new HashMap<String, Value>();
	}

	// les définitions de fonctions
	static HashMap<String, Def> functions = new HashMap<String, Def>();

	// interprétation d'une opération binaire sur deux valeurs
	static Value binop(Binop op, Value v1, Value v2) {
		switch (op) {
		case Bsub:
		case Bmul:
		case Bdiv:
		case Bmod:
			throw new Todo(); // à compléter (question 1)
		case Badd:
			if (v1 instanceof Vint && v2 instanceof Vint)
				throw new Todo(); // à compléter (question 1)
			if (v1 instanceof Vstring && v2 instanceof Vstring)
				throw new Todo(); // à compléter (question 3)
			if (v1 instanceof Vlist && v2 instanceof Vlist)
				throw new Todo(); // à compléter (question 5)
			break;
		case Beq:
			throw new Todo(); // à compléter (question 2)
		case Bneq:
			throw new Todo(); // à compléter (question 2)
		case Blt:
			throw new Todo(); // à compléter (question 2)
		case Ble:
			throw new Todo(); // à compléter (question 2)
		case Bgt:
			throw new Todo(); // à compléter (question 2)
		case Bge:
			throw new Todo(); // à compléter (question 2)
		default:
		}
		throw new Error("unsupported operand types");
	}

	// interprétation des différentes constructions de mini-Python

	@Override
	public Value interp(Ecst e) {
		return e.c.interp();
	}

	@Override
	public Value interp(Ebinop e) {
		Value v1 = e.e1.accept(this);
		switch (e.op) {
		case Band:
			throw new Todo(); // à compléter (question 2)
		case Bor:
			throw new Todo(); // à compléter (question 2)
		default:
			return binop(e.op, v1, e.e2.accept(this));
		}
	}

	@Override
	public Value interp(Eunop e) {
		switch (e.op) {
		case Unot:
			throw new Todo(); // à compléter (question 2)
		case Uneg:
			throw new Todo(); // à compléter (question 1)
		}
		throw new Error("unreachable");
	}

	@Override
	public Value interp(Ecall e) {
		switch (e.f) {
		case "len":
			throw new Todo(); // à compléter (question 5)
		case "range":
			throw new Todo(); // à compléter (question 5)
		default:
			throw new Todo(); // à compléter (question 4)
		}
	}

	@Override
	public Value interp(Elist e) {
		throw new Todo(); // à compléter (question 5)
	}

	@Override
	public Value interp(Eleft e) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public Value interp(Lident lv) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public Value interp(Lnth lv) {
		throw new Todo(); // à compléter (question 5)
	}

	@Override
	public void assign(Lident lv, Expr e) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public void assign(Lnth lv, Expr e) {
		throw new Todo(); // à compléter (question 5)
	}

	/* instructions */
	
	@Override
	public void interp(Seval s) throws Return {
		s.e.accept(this);
	}

	@Override
	public void interp(Sprint s) throws Return {
		System.out.println(s.e.accept(this).toString());
	}

	@Override
	public void interp(Sblock s) throws Return {
		for (Stmt st: s.l)
			st.accept(this);
	}

	@Override
	public void interp(Sif s) throws Return {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public void interp(Sassign s) throws Return {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public void interp(Sreturn s) throws Return {
		throw new Todo(); // à compléter (question 4)
	}

	@Override
	public void interp(Sfor s) throws Return {
		throw new Todo(); // à compléter (question 5)
	}

}
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.resources/.history/b5/b0bda461f3d7001618fe84a016a1c128">
package mini_python;

import java.util.HashMap;
import java.util.Iterator;

/* Les valeurs de mini-Python

   - une différence notable avec Python : on
     utilise ici le type int alors que les entiers de Python sont de
     précision arbitraire ; on pourrait utiliser les grands entiers de Java
     mais on choisit la facilité
   - ce que Python appelle une liste est en réalité un tableau
     redimensionnable ; dans le fragment considéré ici, il n'y a pas
     de possibilité d'en modifier la longueur, donc un simple tableau
     convient */

abstract class Value implements Comparable<Value> {
	abstract boolean isFalse();

	boolean isTrue() {
		return !this.isFalse();
	}

	int asInt() {
		if (!(this instanceof Vint))
			throw new Error("integer expected");
		return ((Vint) this).i;
	}

	Vlist asList() {
		if (!(this instanceof Vlist))
			throw new Error("list expected");
		return (Vlist) this;
	}
}

class Vnone extends Value {
	@Override
	boolean isFalse() {
		return true; 
	}

	@Override
	public String toString() {
		return "None";
	}

	@Override
	public int compareTo(Value o) {
		return o instanceof Vnone ? 0 : -1;
	}
}

class Vbool extends Value {
	final boolean b;

	Vbool(boolean b) {
		this.b = b;
	}

	@Override
	boolean isFalse() {
		return !this.b;
	}

	@Override
	public String toString() {
		return this.b ? "True" : "False";
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone)
			return 1;
		if (o instanceof Vbool) {
			boolean ob = ((Vbool) o).b;
			return b ? (ob ? 0 : 1) : (ob ? -1 : 0);
		}
		return -1;
	}
}

class Vint extends Value {
	final int i;

	Vint(int i) {
		this.i = i;
	}

	@Override
	boolean isFalse() {
		return this.i == 0 ? true : false;
	}

	@Override
	public String toString() {
		return "" + this.i;
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone || o instanceof Vbool)
			return 1;
		if (o instanceof Vint)
			return this.i - o.asInt();
		return -1;
	}
}

class Vstring extends Value {
	final String s;

	Vstring(String s) {
		this.s = s;
	}

	@Override
	boolean isFalse() {
		return this.s == "" ? true : false;
	}

	@Override
	public String toString() {
		return this.s;
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone || o instanceof Vbool || o instanceof Vint)
			return 1;
		if (o instanceof Vstring)
			return this.s.compareTo(((Vstring) o).s);
		return -1;
	}
}

class Vlist extends Value {
	final Value[] l;

	Vlist(int n) {
		this.l = new Value[n];
	}

	Vlist(Value[] l1, Value[] l2) {
		this.l = new Value[l1.length + l2.length];
		System.arraycopy(l1, 0, l, 0, l1.length);
		System.arraycopy(l2, 0, l, l1.length, l2.length);
	}

	@Override
	boolean isFalse() {
		return l.length == 0 ? true : false;
	}

	@Override
	public String toString() {
		StringBuffer b = new StringBuffer();
		b.append("[");
		for (int i = 0; i < this.l.length; i++) {
			if (i != 0)
				b.append(", ");
			b.append(this.l[i]);
		}
		b.append("]");
		return b.toString();
	}

	@Override
	public int compareTo(Value o) {
		if (!(o instanceof Vlist))
			return -1;
		Value[] ol = ((Vlist) o).l;
		int n1 = this.l.length, n2 = ol.length;
		int i1 = 0, i2 = 0;
		for (; i1 < n1 && i2 < n2; i1++, i2++) {
			Value v1 = this.l[i1];
			Value v2 = ol[i2];
			int c = v1.compareTo(v2);
			if (c != 0)
				return c;
		}
		if (i1 < n1)
			return 1;
		if (i2 < n2)
			return -1;
		return 0;
	}
}

/* on utilise l'exception ci-dessous pour interpréter la construction return
 * de mini-Python */

class Return extends Exception {
	private static final long serialVersionUID = 1L;
	
	final Value v;

	Return(Value v) {
		this.v = v;
	}
}

class Todo extends Error {
	private static final long serialVersionUID = 1L;
}

/* l'interprète */

class Interp implements Interpreter {

	// variables de mini-Python (globales, locales, arguments)
	HashMap<String, Value> vars;

	Interp() {
		this.vars = new HashMap<String, Value>();
	}

	// les définitions de fonctions
	static HashMap<String, Def> functions = new HashMap<String, Def>();

	// interprétation d'une opération binaire sur deux valeurs
	static Value binop(Binop op, Value v1, Value v2) {
		switch (op) {
		case Bsub:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() - v2.asInt());
			}
			break;
		case Bmul:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() * v2.asInt());
			}
			break;
		case Bdiv:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() / v2.asInt());
			}
			break;
		case Bmod:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() % v2.asInt());
			}
			break;
		case Badd:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() + v2.asInt());
			}
			if (v1 instanceof Vstring && v2 instanceof Vstring)
				throw new Todo(); // à compléter (question 3)
			if (v1 instanceof Vlist && v2 instanceof Vlist)
				throw new Todo(); // à compléter (question 5)
			break;
		case Beq:
			return new Vbool(v1.compareTo(v2) == 0);
		case Bneq:
			throw new Todo(); // à compléter (question 2)
		case Blt:
			throw new Todo(); // à compléter (question 2)
		case Ble:
			throw new Todo(); // à compléter (question 2)
		case Bgt:
			throw new Todo(); // à compléter (question 2)
		case Bge:
			throw new Todo(); // à compléter (question 2)
		default:
		}
		throw new Error("unsupported operand types");
	}

	// interprétation des différentes constructions de mini-Python

	@Override
	public Value interp(Ecst e) {
		return e.c.interp();
	}

	@Override
	public Value interp(Ebinop e) {
		Value v1 = e.e1.accept(this);
		switch (e.op) {
		case Band:
			throw new Todo(); // à compléter (question 2)
		case Bor:
			throw new Todo(); // à compléter (question 2)
		default:
			return binop(e.op, v1, e.e2.accept(this));
		}
	}

	@Override
	public Value interp(Eunop e) {
		switch (e.op) {
		case Unot:
			throw new Todo(); // à compléter (question 2)
		case Uneg:
			return new Vint(-e.e.accept(this).asInt());
		}
		throw new Error("unreachable");
	}

	@Override
	public Value interp(Ecall e) {
		switch (e.f) {
		case "len":
			throw new Todo(); // à compléter (question 5)
		case "range":
			throw new Todo(); // à compléter (question 5)
		default:
			throw new Todo(); // à compléter (question 4)
		}
	}

	@Override
	public Value interp(Elist e) {
		throw new Todo(); // à compléter (question 5)
	}

	@Override
	public Value interp(Eleft e) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public Value interp(Lident lv) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public Value interp(Lnth lv) {
		throw new Todo(); // à compléter (question 5)
	}

	@Override
	public void assign(Lident lv, Expr e) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public void assign(Lnth lv, Expr e) {
		throw new Todo(); // à compléter (question 5)
	}

	/* instructions */
	
	@Override
	public void interp(Seval s) throws Return {
		s.e.accept(this);
	}

	@Override
	public void interp(Sprint s) throws Return {
		System.out.println(s.e.accept(this).toString());
	}

	@Override
	public void interp(Sblock s) throws Return {
		for (Stmt st: s.l)
			st.accept(this);
	}

	@Override
	public void interp(Sif s) throws Return {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public void interp(Sassign s) throws Return {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public void interp(Sreturn s) throws Return {
		throw new Todo(); // à compléter (question 4)
	}

	@Override
	public void interp(Sfor s) throws Return {
		throw new Todo(); // à compléter (question 5)
	}

}
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.resources/.history/c4/9046ea6befd7001618fe84a016a1c128">
package mini_python;

import java.util.HashMap;
import java.util.Iterator;

/* Les valeurs de mini-Python

   - une différence notable avec Python : on
     utilise ici le type int alors que les entiers de Python sont de
     précision arbitraire ; on pourrait utiliser les grands entiers de Java
     mais on choisit la facilité
   - ce que Python appelle une liste est en réalité un tableau
     redimensionnable ; dans le fragment considéré ici, il n'y a pas
     de possibilité d'en modifier la longueur, donc un simple tableau
     convient */

abstract class Value implements Comparable<Value> {
	abstract boolean isFalse();

	boolean isTrue() {
		throw new Todo(); // à compléter (question 2)
	}

	int asInt() {
		if (!(this instanceof Vint))
			throw new Error("integer expected");
		return ((Vint) this).i;
	}

	Vlist asList() {
		if (!(this instanceof Vlist))
			throw new Error("list expected");
		return (Vlist) this;
	}
}

class Vnone extends Value {
	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return "None";
	}

	@Override
	public int compareTo(Value o) {
		return o instanceof Vnone ? 0 : -1;
	}
}

class Vbool extends Value {
	final boolean b;

	Vbool(boolean b) {
		this.b = b;
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return this.b ? "True" : "False";
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone)
			return 1;
		if (o instanceof Vbool) {
			boolean ob = ((Vbool) o).b;
			return b ? (ob ? 0 : 1) : (ob ? -1 : 0);
		}
		return -1;
	}
}

class Vint extends Value {
	final int i;

	Vint(int i) {
		this.i = i;
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return "" + this.i;
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone || o instanceof Vbool)
			return 1;
		if (o instanceof Vint)
			return this.i - o.asInt();
		return -1;
	}
}

class Vstring extends Value {
	final String s;

	Vstring(String s) {
		this.s = s;
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		return this.s;
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone || o instanceof Vbool || o instanceof Vint)
			return 1;
		if (o instanceof Vstring)
			return this.s.compareTo(((Vstring) o).s);
		return -1;
	}
}

class Vlist extends Value {
	final Value[] l;

	Vlist(int n) {
		this.l = new Value[n];
	}

	Vlist(Value[] l1, Value[] l2) {
		this.l = new Value[l1.length + l2.length];
		System.arraycopy(l1, 0, l, 0, l1.length);
		System.arraycopy(l2, 0, l, l1.length, l2.length);
	}

	@Override
	boolean isFalse() {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public String toString() {
		StringBuffer b = new StringBuffer();
		b.append("[");
		for (int i = 0; i < this.l.length; i++) {
			if (i != 0)
				b.append(", ");
			b.append(this.l[i]);
		}
		b.append("]");
		return b.toString();
	}

	@Override
	public int compareTo(Value o) {
		if (!(o instanceof Vlist))
			return -1;
		Value[] ol = ((Vlist) o).l;
		int n1 = this.l.length, n2 = ol.length;
		int i1 = 0, i2 = 0;
		for (; i1 < n1 && i2 < n2; i1++, i2++) {
			Value v1 = this.l[i1];
			Value v2 = ol[i2];
			int c = v1.compareTo(v2);
			if (c != 0)
				return c;
		}
		if (i1 < n1)
			return 1;
		if (i2 < n2)
			return -1;
		return 0;
	}
}

/* on utilise l'exception ci-dessous pour interpréter la construction return
 * de mini-Python */

class Return extends Exception {
	private static final long serialVersionUID = 1L;
	
	final Value v;

	Return(Value v) {
		this.v = v;
	}
}

class Todo extends Error {
	private static final long serialVersionUID = 1L;
}

/* l'interprète */

class Interp implements Interpreter {

	// variables de mini-Python (globales, locales, arguments)
	HashMap<String, Value> vars;

	Interp() {
		this.vars = new HashMap<String, Value>();
	}

	// les définitions de fonctions
	static HashMap<String, Def> functions = new HashMap<String, Def>();

	// interprétation d'une opération binaire sur deux valeurs
	static Value binop(Binop op, Value v1, Value v2) {
		switch (op) {
		case Bsub:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() - v2.asInt());
			}
			break;
		case Bmul:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() * v2.asInt());
			}
			break;
		case Bdiv:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() / v2.asInt());
			}
			break;
		case Bmod:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() % v2.asInt());
			}
			break;
		case Badd:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() + v2.asInt());
			}
			if (v1 instanceof Vstring && v2 instanceof Vstring)
				throw new Todo(); // à compléter (question 3)
			if (v1 instanceof Vlist && v2 instanceof Vlist)
				throw new Todo(); // à compléter (question 5)
			break;
		case Beq:
			throw new Todo(); // à compléter (question 2)
		case Bneq:
			throw new Todo(); // à compléter (question 2)
		case Blt:
			throw new Todo(); // à compléter (question 2)
		case Ble:
			throw new Todo(); // à compléter (question 2)
		case Bgt:
			throw new Todo(); // à compléter (question 2)
		case Bge:
			throw new Todo(); // à compléter (question 2)
		default:
		}
		throw new Error("unsupported operand types");
	}

	// interprétation des différentes constructions de mini-Python

	@Override
	public Value interp(Ecst e) {
		return e.c.interp();
	}

	@Override
	public Value interp(Ebinop e) {
		Value v1 = e.e1.accept(this);
		switch (e.op) {
		case Band:
			throw new Todo(); // à compléter (question 2)
		case Bor:
			throw new Todo(); // à compléter (question 2)
		default:
			return binop(e.op, v1, e.e2.accept(this));
		}
	}

	@Override
	public Value interp(Eunop e) {
		switch (e.op) {
		case Unot:
			throw new Todo(); // à compléter (question 2)
		case Uneg:
			throw new Todo(); // à compléter (question 1)	
		}
		throw new Error("unreachable");
	}

	@Override
	public Value interp(Ecall e) {
		switch (e.f) {
		case "len":
			throw new Todo(); // à compléter (question 5)
		case "range":
			throw new Todo(); // à compléter (question 5)
		default:
			throw new Todo(); // à compléter (question 4)
		}
	}

	@Override
	public Value interp(Elist e) {
		throw new Todo(); // à compléter (question 5)
	}

	@Override
	public Value interp(Eleft e) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public Value interp(Lident lv) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public Value interp(Lnth lv) {
		throw new Todo(); // à compléter (question 5)
	}

	@Override
	public void assign(Lident lv, Expr e) {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public void assign(Lnth lv, Expr e) {
		throw new Todo(); // à compléter (question 5)
	}

	/* instructions */
	
	@Override
	public void interp(Seval s) throws Return {
		s.e.accept(this);
	}

	@Override
	public void interp(Sprint s) throws Return {
		System.out.println(s.e.accept(this).toString());
	}

	@Override
	public void interp(Sblock s) throws Return {
		for (Stmt st: s.l)
			st.accept(this);
	}

	@Override
	public void interp(Sif s) throws Return {
		throw new Todo(); // à compléter (question 2)
	}

	@Override
	public void interp(Sassign s) throws Return {
		throw new Todo(); // à compléter (question 3)
	}

	@Override
	public void interp(Sreturn s) throws Return {
		throw new Todo(); // à compléter (question 4)
	}

	@Override
	public void interp(Sfor s) throws Return {
		throw new Todo(); // à compléter (question 5)
	}

}
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.resources/.history/cf/60f329ebe0d700161a15a32011681f65">
package mini_python;

public class Main {

	public static void main(String[] args) throws Exception {
		String file = args.length > 0 ? args[0] : "test.py";
		java.io.Reader reader = new java.io.FileReader(file);
		Lexer lexer = new MyLexer(reader);
		MyParser parser = new MyParser(lexer);
		File f = (File) parser.parse().value;
		for (Def d: f.l)
			Interp.functions.put(d.f, d);
		try {
			f.s.accept(new Interp());
		} catch (Error e) {
			System.out.println("error: " + e.toString());
			System.exit(1);
		}
	}

}
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.resources/.history/e/90565de3e0d700161a15a32011681f65">
package mini_python;

import java_cup.runtime.*;

public class MyParser extends parser {

	MyParser(Scanner scanner) {
		super(scanner);
	}

	public void report_error(String message, Object info) {
		// Override this method to be silent.
	}

	public void report_fatal_error(String message, Object info)
			throws Exception {
		// Override this method to be silent and throw an exception that
		// contains the error message.
		message = "Syntax error"; // discard message produced by CUP
		if (info instanceof Symbol) {
			Symbol symbol = (Symbol) info;
			message += String.format(" at line %d, column %d (%s)\n",
					symbol.left, symbol.right, showSymbol(symbol.sym));
		}
		throw new Exception(message);
	}

	String showSymbol(int token) {
		try {
			java.lang.reflect.Field[] classFields = sym.class.getFields();
			for (int i = 0; i < classFields.length; i++) {
				if (classFields[i].getInt(null) == token) {
					return classFields[i].getName();
				}
			}
		} catch (java.lang.IllegalAccessException e) {
		}
		throw new AssertionError(); // hopefully unreachable statement
	}

}
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.resources/.history/f/50e3b2d7e0d700161a15a32011681f65">
package mini_python;
import java.util.LinkedList;

/* Syntaxe abstraite de Mini-Python */

/* opérateurs unaires et binaires */

enum Unop { Uneg, Unot }

enum Binop {
  Badd , Bsub , Bmul , Bdiv , Bmod,
  Beq , Bneq , Blt , Ble , Bgt , Bge, // comparaison structurelle
  Band , Bor // paresseux
}

/* constantes litérales */

abstract class Constant {
	static final Cnone None = new Cnone();
	abstract Value interp(); // la valeur d'une constante
}	

class Cnone extends Constant {
	@Override
	Value interp() { return new Vnone(); }
}
class Cbool extends Constant {
	final boolean b;
	Cbool(boolean b) {
		this.b = b;
	}
	@Override
	Value interp() { return new Vbool(this.b); }
}
class Cstring extends Constant {
	final String s;
	Cstring(String s) {
		this.s = s;
	}
	@Override
	Value interp() { return new Vstring(this.s); }
}
class Cint extends Constant {
	final int i; /* en Python les entiers sont en réalité de précision
                   arbitraire ; on simplifie ici */
	Cint(int i) {
		this.i = i;
	}
	@Override
	Value interp() { return new Vint(this.i); }
}

/* expressions */

abstract class Expr {
	abstract Value accept(Interpreter v);
}
class Ecst extends Expr {
	final Constant c;
	Ecst(Constant c) {
		this.c = c;
	}
	@Override
	Value accept(Interpreter v) { return v.interp(this); }
}
class Ebinop extends Expr {
	final Binop op;
	final Expr e1, e2;
	Ebinop(Binop op, Expr e1, Expr e2) {
		super();
		this.op = op;
		this.e1 = e1;
		this.e2 = e2;
	}
	@Override
	Value accept(Interpreter v) { return v.interp(this); }
}
class Eunop extends Expr {
	final Unop op;
	final Expr e;
	Eunop(Unop op, Expr e) {
		super();
		this.op = op;
		this.e = e;
	}
	@Override
	Value accept(Interpreter v) { return v.interp(this); }
}
class Ecall extends Expr {
	final String f;
	final LinkedList<Expr> l;
	Ecall(String f, LinkedList<Expr> l) {
		super();
		this.f = f;
		this.l = l;
	}
	@Override
	Value accept(Interpreter v) { return v.interp(this); }
}
class Elist extends Expr {
	final LinkedList<Expr> l;

	Elist(LinkedList<Expr> l) {
		super();
		this.l = l;
	}
	@Override
	Value accept(Interpreter v) { return v.interp(this); }
}
class Eleft extends Expr {
	final LeftValue lv;

	Eleft(LeftValue lv) {
		super();
		this.lv = lv;
	}
	@Override
	Value accept(Interpreter v) { return v.interp(this); }
}

/* valeur gauche */

abstract class LeftValue {
	abstract Value accept(Interpreter v); // as a right value
	abstract void assign(Interpreter v, Expr e);
}
class Lident extends LeftValue {
	final String s;

	Lident(String s) {
		super();
		this.s = s;
	}

	@Override
	Value accept(Interpreter v) { return v.interp(this); }
	@Override
	void assign(Interpreter v, Expr e) { v.assign(this, e); }
}
class Lnth extends LeftValue {
	final Expr e1, e2;
	Lnth(Expr e1, Expr e2) {
		super();
		this.e1 = e1;
		this.e2 = e2;
	}
	@Override
	Value accept(Interpreter v) { return v.interp(this); }
	@Override
	void assign(Interpreter v, Expr e) { v.assign(this, e); }
}

/* instruction */

abstract class Stmt {
	abstract void accept(Interpreter v) throws Return;
}
class Sif extends Stmt {
	final Expr e;
	final Stmt s1, s2;
	Sif(Expr e, Stmt s1, Stmt s2) {
		super();
		this.e = e;
		this.s1 = s1;
		this.s2 = s2;
	}
	@Override
	void accept(Interpreter v) throws Return { v.interp(this); }
}
class Sreturn extends Stmt {
	final Expr e;

	Sreturn(Expr e) {
		super();
		this.e = e;
	}
	@Override
	void accept(Interpreter v) throws Return { v.interp(this); }
}
class Sassign extends Stmt {
	final LeftValue lv;
	final Expr e;
	Sassign(LeftValue lv, Expr e) {
		super();
		this.lv = lv;
		this.e = e;
	}
	@Override
	void accept(Interpreter v) throws Return { v.interp(this); }
}
class Sprint extends Stmt {
	final Expr e;

	Sprint(Expr e) {
		super();
		this.e = e;
	}
	@Override
	void accept(Interpreter v) throws Return { v.interp(this); }
}
class Sblock extends Stmt {
	final LinkedList<Stmt> l;
	Sblock() {
		this.l = new LinkedList<Stmt>();
	}
	Sblock(LinkedList<Stmt> l) {
		super();
		this.l = l;
	}
	@Override
	void accept(Interpreter v) throws Return { v.interp(this); }
}
class Sfor extends Stmt {
	final String x;
	final Expr e;
	final Stmt s;
	Sfor(String x, Expr e, Stmt s) {
		super();
		this.x = x;
		this.e = e;
		this.s = s;
	}
	@Override
	void accept(Interpreter v) throws Return { v.interp(this); }
}
class Seval extends Stmt {
	final Expr e;

	Seval(Expr e) {
		super();
		this.e = e;
	}
	@Override
	void accept(Interpreter v) throws Return { v.interp(this); }
}

/* définition de fonction */

class Def {
	final String f;
	final LinkedList<String> l; // arguments formels
	final Stmt s;
	Def(String f, LinkedList<String> l, Stmt s) {
		super();
		this.f = f;
		this.l = l;
		this.s = s;
	}
}

class File {
	final LinkedList<Def> l;
	final Stmt s;
	File(LinkedList<Def> l, Stmt s) {
		super();
		this.l = l;
		this.s = s;
	}
}

/* un interprète (voir Interp.java) aura l'interface suivante */

interface Interpreter {
	// l'interprétation d'une expression est une valeur
	Value interp(Ecst e);
	Value interp(Ebinop e);
	Value interp(Eunop e);
	Value interp(Ecall e);
	Value interp(Elist e);
	Value interp(Eleft e);
	Value interp(Lident lv);
	Value interp(Lnth lv);
	// affectation
	void assign(Lident lv, Expr e);
	void assign(Lnth lv, Expr e);
	// l'interprétation d'une instruction ne renvoie rien
	// mais peut faire des effets de bord (affectations)
	// et lever l'exception Return
	void interp(Sif s) throws Return;
	void interp(Sreturn s) throws Return;
	void interp(Sassign s) throws Return;
	void interp(Sprint s) throws Return;
	void interp(Sblock s) throws Return;
	void interp(Sfor s) throws Return;
	void interp(Seval s) throws Return;
}
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.resources/.history/fb/606033e3e0d700161a15a32011681f65">
package mini_python;

import java_cup.runtime.*;

public class MyParser extends parser {

	MyParser(Scanner scanner) {
		super(scanner);
	}

	public void report_error(String message, Object info) {
		// Override this method to be silent.
	}

	public void report_fatal_error(String message, Object info)
			throws Exception {
		// Override this method to be silent and throw an exception that
		// contains the error message.
		message = "Syntax error"; // discard message produced by CUP
		if (info instanceof Symbol) {
			Symbol symbol = (Symbol) info;
			message += String.format(" at line %d, column %d (%s)\n",
					symbol.left, symbol.right, showSymbol(symbol.sym));
		}
		throw new Exception(message);
	}

	String showSymbol(int token) {
		try {
			java.lang.reflect.Field[] classFields = sym.class.getFields();
			for (int i = 0; i < classFields.length; i++) {
				if (classFields[i].getInt(null) == token) {
					return classFields[i].getName();
				}
			}
		} catch (java.lang.IllegalAccessException e) {
		}
		throw new AssertionError(); // hopefully unreachable statement
	}

}
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.core.resources.prefs">
eclipse.preferences.version=1
version=1
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.debug.ui.prefs">
eclipse.preferences.version=1
org.eclipse.debug.ui.PREF_LAUNCH_PERSPECTIVES=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?>\n<launchPerspectives/>\n
preferredTargets=default\:default|
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.epp.logging.aeri.ide.prefs">
eclipse.preferences.version=1
resetSendMode=KEEP
resetSendModeOn=0
sendMode=NOTIFY
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.core.prefs">
eclipse.preferences.version=1
org.eclipse.jdt.core.codeComplete.visibilityCheck=enabled
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.launching.prefs">
eclipse.preferences.version=1
org.eclipse.jdt.launching.PREF_VM_XML=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?>\n<vmSettings defaultVM\="57,org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType13,1484126085548" defaultVMConnector\="">\n<vmType id\="org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType">\n<vm id\="1484126085548" name\="java-1.8.0-openjdk-1.8.0.111-2.b15.el7_3.x86_64" path\="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.111-2.b15.el7_3.x86_64"/>\n</vmType>\n</vmSettings>\n
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.ui.prefs">
content_assist_disabled_computers=org.eclipse.jdt.ui.textProposalCategory\u0000org.eclipse.recommenders.calls.rcp.proposalCategory.templates\u0000org.eclipse.mylyn.java.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaTypeProposalCategory\u0000org.eclipse.jdt.ui.javaNoTypeProposalCategory\u0000org.eclipse.recommenders.chain.rcp.proposalCategory.chain\u0000
content_assist_lru_history=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><history maxLHS\="100" maxRHS\="10"/>
content_assist_number_of_computers=19
content_assist_proposals_background=255,255,255
content_assist_proposals_foreground=0,0,0
eclipse.preferences.version=1
fontPropagated=true
org.eclipse.jdt.ui.editor.tab.width=
org.eclipse.jdt.ui.formatterprofiles.version=12
org.eclipse.jdt.ui.javadoclocations.migrated=true
org.eclipse.jdt.ui.text.code_templates_migrated=true
org.eclipse.jdt.ui.text.custom_code_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates/>
org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates/>
org.eclipse.jdt.ui.text.templates_migrated=true
org.eclipse.jface.textfont=1|Monospace|10.0|0|GTK|1|;
proposalOrderMigrated=true
spelling_locale_initialized=true
tabWidthPropagated=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.m2e.discovery.prefs">
eclipse.preferences.version=1
org.eclipse.m2e.discovery.pref.projects=
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.mylyn.context.core.prefs">
eclipse.preferences.version=1
mylyn.attention.migrated=true
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.mylyn.java.ui.prefs">
eclipse.preferences.version=1
org.eclipse.mylyn.java.ui.run.count.3_10_0=1
org.eclipse.mylyn.java.ui.run.count.3_1_0=1
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.mylyn.monitor.ui.prefs">
eclipse.preferences.version=1
org.eclipse.mylyn.monitor.activity.tracking.enabled.checked=true
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.mylyn.tasks.ui.prefs">
eclipse.preferences.version=1
migrated.task.repositories.secure.store=true
org.eclipse.mylyn.tasks.ui.filters.nonmatching=true
org.eclipse.mylyn.tasks.ui.filters.nonmatching.encouraged=true
org.eclipse.mylyn.tasks.ui.welcome.message=true
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.recommenders.completion.rcp.prefs">
completion_tips_seen=org.eclipse.recommenders.completion.rcp.tips.discovery\:org.eclipse.recommenders.completion.rcp.tips.types
eclipse.preferences.version=1
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.search.prefs">
eclipse.preferences.version=1
org.eclipse.search.defaultPerspective=org.eclipse.search.defaultPerspective.none
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.team.ui.prefs">
eclipse.preferences.version=1
org.eclipse.team.ui.first_time=false
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.editors.prefs">
eclipse.preferences.version=1
overviewRuler_migration=migrated_3.1
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.ide.prefs">
EXIT_PROMPT_ON_CLOSE_LAST_WINDOW=false
PROBLEMS_FILTERS_MIGRATE=true
eclipse.preferences.version=1
platformState=1459787361667
quickStart=false
tipsAndTricks=true
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.prefs">
eclipse.preferences.version=1
showIntro=false
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.workbench.prefs">
//org.eclipse.ui.commands/state/org.eclipse.ui.navigator.resources.nested.changeProjectPresentation/org.eclipse.ui.commands.radioState=false
PLUGINS_NOT_ACTIVATED_ON_STARTUP=org.eclipse.m2e.discovery;
eclipse.preferences.version=1
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.debug.core/.launches/Main.launch">
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<launchConfiguration type="org.eclipse.jdt.launching.localJavaApplication">
<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
<listEntry value="/mini-python-java/src/mini_python/Main.java"/>
</listAttribute>
<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
<listEntry value="1"/>
</listAttribute>
<stringAttribute key="org.eclipse.jdt.launching.MAIN_TYPE" value="mini_python.Main"/>
<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="mini-python-java"/>
</launchConfiguration>
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.debug.ui/launchConfigurationHistory.xml">
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<launchHistory>
<launchGroup id="org.eclipse.debug.ui.launchGroup.debug">
<mruHistory>
<launch memento="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;launchConfiguration local=&quot;true&quot; path=&quot;Main&quot;/&gt;&#10;"/>
</mruHistory>
<favorites/>
</launchGroup>
<launchGroup id="org.eclipse.debug.ui.launchGroup.profile">
<mruHistory/>
<favorites/>
</launchGroup>
<launchGroup id="org.eclipse.ui.externaltools.launchGroup">
<mruHistory/>
<favorites/>
</launchGroup>
<launchGroup id="org.eclipse.debug.ui.launchGroup.run">
<mruHistory>
<launch memento="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;launchConfiguration local=&quot;true&quot; path=&quot;Main&quot;/&gt;&#10;"/>
</mruHistory>
<favorites/>
</launchGroup>
</launchHistory>
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi">
<?xml version="1.0" encoding="ASCII"?>
<application:Application xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:advanced="http://www.eclipse.org/ui/2010/UIModel/application/ui/advanced" xmlns:application="http://www.eclipse.org/ui/2010/UIModel/application" xmlns:basic="http://www.eclipse.org/ui/2010/UIModel/application/ui/basic" xmlns:menu="http://www.eclipse.org/ui/2010/UIModel/application/ui/menu" xmi:id="_PacTUdfeEea-cp7hnRSzuA" elementId="org.eclipse.e4.legacy.ide.application" contributorURI="platform:/plugin/org.eclipse.platform" selectedElement="_PkxCENfgEeau2o86lGA3Tw" bindingContexts="_PacTVNfeEea-cp7hnRSzuA">
  <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;workbench>&#xA;&lt;mruList>&#xA;&lt;file factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot; name=&quot;Interp.java&quot; tooltip=&quot;mini-python-java/src/mini_python/Interp.java&quot;>&#xA;&lt;persistable path=&quot;/mini-python-java/src/mini_python/Interp.java&quot;/>&#xA;&lt;/file>&#xA;&lt;file factoryID=&quot;org.eclipse.jdt.ui.ClassFileEditorInputFactory&quot; id=&quot;org.eclipse.jdt.ui.ClassFileEditorNoSource&quot; name=&quot;Comparable.class&quot; tooltip=&quot;java.lang.Comparable&quot;>&#xA;&lt;persistable org.eclipse.jdt.ui.ClassFileIdentifier=&quot;=mini-python-java/\/usr\/lib\/jvm\/java-1.8.0-openjdk-1.8.0.111-2.b15.el7_3.x86_64\/jre\/lib\/rt.jar&amp;lt;java.lang(Comparable.class&quot;/>&#xA;&lt;/file>&#xA;&lt;file factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot; name=&quot;Syntax.java&quot; tooltip=&quot;mini-python-java/src/mini_python/Syntax.java&quot;>&#xA;&lt;persistable path=&quot;/mini-python-java/src/mini_python/Syntax.java&quot;/>&#xA;&lt;/file>&#xA;&lt;file factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot; name=&quot;Main.java&quot; tooltip=&quot;mini-python-java/src/mini_python/Main.java&quot;>&#xA;&lt;persistable path=&quot;/mini-python-java/src/mini_python/Main.java&quot;/>&#xA;&lt;/file>&#xA;&lt;file factoryID=&quot;org.eclipse.jdt.ui.ClassFileEditorInputFactory&quot; id=&quot;org.eclipse.jdt.ui.ClassFileEditorNoSource&quot; name=&quot;Object.class&quot; tooltip=&quot;java.lang.Object&quot;>&#xA;&lt;persistable org.eclipse.jdt.ui.ClassFileIdentifier=&quot;=mini-python-java/\/usr\/lib\/jvm\/java-1.8.0-openjdk-1.8.0.111-2.b15.el7_3.x86_64\/jre\/lib\/rt.jar&amp;lt;java.lang(Object.class&quot;/>&#xA;&lt;/file>&#xA;&lt;/mruList>&#xA;&lt;/workbench>"/>
  <tags>activeSchemeId:org.eclipse.ui.defaultAcceleratorConfiguration</tags>
  <tags>ModelMigrationProcessor.001</tags>
  <children xsi:type="basic:TrimmedWindow" xmi:id="_PkxCENfgEeau2o86lGA3Tw" selectedElement="_PnRjgtfgEeau2o86lGA3Tw" x="960" y="28" width="961" height="1019">
    <persistedState key="coolBarVisible" value="true"/>
    <persistedState key="perspectiveBarVisible" value="true"/>
    <persistedState key="isRestored" value="true"/>
    <persistedState key="show_in_time" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;show_in_time/>"/>
    <persistedState key="workingSets" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;workingSets/>"/>
    <persistedState key="aggregateWorkingSetId" value="Aggregate for window 1484126026112"/>
    <tags>topLevel</tags>
    <tags>shellMaximized</tags>
    <children xsi:type="basic:PartSashContainer" xmi:id="_PnRjgtfgEeau2o86lGA3Tw" selectedElement="_PnRjg9fgEeau2o86lGA3Tw" horizontal="true">
      <children xsi:type="advanced:PerspectiveStack" xmi:id="_PnRjg9fgEeau2o86lGA3Tw" elementId="org.eclipse.ui.ide.perspectivestack" containerData="7500" selectedElement="_Po57MNfgEeau2o86lGA3Tw">
        <children xsi:type="advanced:Perspective" xmi:id="_Po57MNfgEeau2o86lGA3Tw" elementId="org.eclipse.jdt.ui.JavaPerspective" selectedElement="_Po57MdfgEeau2o86lGA3Tw" label="Java" iconURI="platform:/plugin/org.eclipse.jdt.ui/$nl$/icons/full/eview16/jperspective.png">
          <persistedState key="persp.hiddenItems" value="persp.hideToolbarSC:org.eclipse.debug.ui.commands.RunToLine,persp.hideToolbarSC:org.eclipse.jdt.ui.actions.OpenProjectWizard,persp.hideToolbarSC:print,persp.hideToolbarSC:org.eclipse.ui.edit.text.toggleShowSelectedElementOnly,"/>
          <tags>persp.actionSet:org.eclipse.search.searchActionSet</tags>
          <tags>persp.actionSet:org.eclipse.ui.edit.text.actionSet.annotationNavigation</tags>
          <tags>persp.actionSet:org.eclipse.ui.edit.text.actionSet.navigation</tags>
          <tags>persp.actionSet:org.eclipse.ui.edit.text.actionSet.convertLineDelimitersTo</tags>
          <tags>persp.actionSet:org.eclipse.ui.externaltools.ExternalToolsSet</tags>
          <tags>persp.actionSet:org.eclipse.ui.actionSet.keyBindings</tags>
          <tags>persp.actionSet:org.eclipse.ui.actionSet.openFiles</tags>
          <tags>persp.actionSet:org.eclipse.wb.core.ui.actionset</tags>
          <tags>persp.actionSet:org.eclipse.mylyn.doc.actionSet</tags>
          <tags>persp.actionSet:org.eclipse.mylyn.tasks.ui.navigation</tags>
          <tags>persp.actionSet:org.eclipse.ui.cheatsheets.actionSet</tags>
          <tags>persp.actionSet:org.eclipse.debug.ui.launchActionSet</tags>
          <tags>persp.actionSet:org.eclipse.jdt.ui.JavaActionSet</tags>
          <tags>persp.actionSet:org.eclipse.jdt.ui.JavaElementCreationActionSet</tags>
          <tags>persp.actionSet:org.eclipse.ui.NavigateActionSet</tags>
          <tags>persp.viewSC:org.eclipse.jdt.ui.PackageExplorer</tags>
          <tags>persp.viewSC:org.eclipse.jdt.ui.TypeHierarchy</tags>
          <tags>persp.viewSC:org.eclipse.jdt.ui.SourceView</tags>
          <tags>persp.viewSC:org.eclipse.jdt.ui.JavadocView</tags>
          <tags>persp.viewSC:org.eclipse.search.ui.views.SearchView</tags>
          <tags>persp.viewSC:org.eclipse.ui.console.ConsoleView</tags>
          <tags>persp.viewSC:org.eclipse.ui.views.ContentOutline</tags>
          <tags>persp.viewSC:org.eclipse.ui.views.ProblemView</tags>
          <tags>persp.viewSC:org.eclipse.ui.views.ResourceNavigator</tags>
          <tags>persp.viewSC:org.eclipse.ui.views.TaskList</tags>
          <tags>persp.viewSC:org.eclipse.ui.views.ProgressView</tags>
          <tags>persp.viewSC:org.eclipse.ui.navigator.ProjectExplorer</tags>
          <tags>persp.viewSC:org.eclipse.ui.texteditor.TemplatesView</tags>
          <tags>persp.viewSC:org.eclipse.pde.runtime.LogView</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.JavaProjectWizard</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewPackageCreationWizard</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewClassCreationWizard</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewInterfaceCreationWizard</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewEnumCreationWizard</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewAnnotationCreationWizard</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewSourceFolderCreationWizard</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewSnippetFileCreationWizard</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewJavaWorkingSetWizard</tags>
          <tags>persp.newWizSC:org.eclipse.ui.wizards.new.folder</tags>
          <tags>persp.newWizSC:org.eclipse.ui.wizards.new.file</tags>
          <tags>persp.newWizSC:org.eclipse.ui.editors.wizards.UntitledTextFileWizard</tags>
          <tags>persp.perspSC:org.eclipse.jdt.ui.JavaBrowsingPerspective</tags>
          <tags>persp.perspSC:org.eclipse.debug.ui.DebugPerspective</tags>
          <tags>persp.viewSC:org.eclipse.ant.ui.views.AntView</tags>
          <tags>persp.showIn:org.eclipse.egit.ui.RepositoriesView</tags>
          <tags>persp.actionSet:org.eclipse.debug.ui.breakpointActionSet</tags>
          <tags>persp.actionSet:org.eclipse.jdt.debug.ui.JDTDebugActionSet</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.junit.wizards.NewTestCaseCreationWizard</tags>
          <tags>persp.actionSet:org.eclipse.jdt.junit.JUnitActionSet</tags>
          <tags>persp.showIn:org.eclipse.jdt.ui.PackageExplorer</tags>
          <tags>persp.showIn:org.eclipse.team.ui.GenericHistoryView</tags>
          <tags>persp.showIn:org.eclipse.ui.views.ResourceNavigator</tags>
          <tags>persp.showIn:org.eclipse.ui.navigator.ProjectExplorer</tags>
          <tags>persp.viewSC:org.eclipse.mylyn.tasks.ui.views.tasks</tags>
          <tags>persp.newWizSC:org.eclipse.mylyn.tasks.ui.wizards.new.repository.task</tags>
          <tags>persp.viewSC:org.eclipse.wb.core.StructureView</tags>
          <tags>persp.viewSC:org.eclipse.wb.core.PaletteView</tags>
          <children xsi:type="basic:PartSashContainer" xmi:id="_Po57MdfgEeau2o86lGA3Tw" selectedElement="_Po57PdfgEeau2o86lGA3Tw" horizontal="true">
            <children xsi:type="basic:PartSashContainer" xmi:id="_Po57MtfgEeau2o86lGA3Tw" containerData="2500" selectedElement="_Po57M9fgEeau2o86lGA3Tw">
              <children xsi:type="basic:PartStack" xmi:id="_Po57M9fgEeau2o86lGA3Tw" elementId="left" containerData="6000" selectedElement="_Po57NNfgEeau2o86lGA3Tw">
                <tags>org.eclipse.e4.primaryNavigationStack</tags>
                <children xsi:type="advanced:Placeholder" xmi:id="_Po57NNfgEeau2o86lGA3Tw" elementId="org.eclipse.jdt.ui.PackageExplorer" ref="_Po1pwNfgEeau2o86lGA3Tw"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_Po57NdfgEeau2o86lGA3Tw" elementId="org.eclipse.jdt.ui.TypeHierarchy" toBeRendered="false" ref="_Po1pwdfgEeau2o86lGA3Tw"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_Po57NtfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.views.ResourceNavigator" toBeRendered="false" ref="_Po1pwtfgEeau2o86lGA3Tw"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_Po57N9fgEeau2o86lGA3Tw" elementId="org.eclipse.ui.navigator.ProjectExplorer" toBeRendered="false" ref="_Po1pw9fgEeau2o86lGA3Tw"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_Po57ONfgEeau2o86lGA3Tw" elementId="org.eclipse.jdt.junit.ResultView" toBeRendered="false" ref="_Po4tENfgEeau2o86lGA3Tw"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_Po57OdfgEeau2o86lGA3Tw" elementId="org.eclipse.wb.core.StructureView" toBeRendered="false" ref="_Po5UINfgEeau2o86lGA3Tw"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_Po57OtfgEeau2o86lGA3Tw" elementId="org.eclipse.wb.core.PaletteView" toBeRendered="false" ref="_Po5UIdfgEeau2o86lGA3Tw"/>
              </children>
              <children xsi:type="basic:PartStack" xmi:id="_Po57O9fgEeau2o86lGA3Tw" elementId="org.eclipse.egit.ui.RepositoriesViewMStack" toBeRendered="false" containerData="4000">
                <children xsi:type="advanced:Placeholder" xmi:id="_Po57PNfgEeau2o86lGA3Tw" elementId="org.eclipse.egit.ui.RepositoriesView" toBeRendered="false" ref="_Po4GAdfgEeau2o86lGA3Tw"/>
              </children>
            </children>
            <children xsi:type="basic:PartSashContainer" xmi:id="_Po57PdfgEeau2o86lGA3Tw" containerData="7500" selectedElement="_Po57PtfgEeau2o86lGA3Tw">
              <children xsi:type="basic:PartSashContainer" xmi:id="_Po57PtfgEeau2o86lGA3Tw" containerData="7500" selectedElement="_Po57P9fgEeau2o86lGA3Tw" horizontal="true">
                <children xsi:type="advanced:Placeholder" xmi:id="_Po57P9fgEeau2o86lGA3Tw" elementId="org.eclipse.ui.editorss" containerData="7500" ref="_Po0boNfgEeau2o86lGA3Tw"/>
                <children xsi:type="basic:PartSashContainer" xmi:id="_Po57QNfgEeau2o86lGA3Tw" containerData="2500">
                  <children xsi:type="basic:PartStack" xmi:id="_Po57QdfgEeau2o86lGA3Tw" elementId="org.eclipse.mylyn.tasks.ui.views.tasksMStack" containerData="5000" selectedElement="_Po57QtfgEeau2o86lGA3Tw">
                    <children xsi:type="advanced:Placeholder" xmi:id="_Po57QtfgEeau2o86lGA3Tw" elementId="org.eclipse.mylyn.tasks.ui.views.tasks" ref="_Po4tEdfgEeau2o86lGA3Tw"/>
                  </children>
                  <children xsi:type="basic:PartStack" xmi:id="_Po57Q9fgEeau2o86lGA3Tw" elementId="right" containerData="5000" selectedElement="_Po57RNfgEeau2o86lGA3Tw">
                    <tags>org.eclipse.e4.secondaryNavigationStack</tags>
                    <children xsi:type="advanced:Placeholder" xmi:id="_Po57RNfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.views.ContentOutline" ref="_Po235NfgEeau2o86lGA3Tw"/>
                    <children xsi:type="advanced:Placeholder" xmi:id="_Po57RdfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.texteditor.TemplatesView" toBeRendered="false" ref="_Po3e8NfgEeau2o86lGA3Tw"/>
                    <children xsi:type="advanced:Placeholder" xmi:id="_Po57RtfgEeau2o86lGA3Tw" elementId="org.eclipse.ant.ui.views.AntView" toBeRendered="false" ref="_Po4GANfgEeau2o86lGA3Tw"/>
                  </children>
                </children>
              </children>
              <children xsi:type="basic:PartStack" xmi:id="_Po57R9fgEeau2o86lGA3Tw" elementId="bottom" containerData="2500" selectedElement="_Po57TNfgEeau2o86lGA3Tw">
                <tags>org.eclipse.e4.secondaryDataStack</tags>
                <children xsi:type="advanced:Placeholder" xmi:id="_Po57SNfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.views.ProblemView" ref="_Po1pxNfgEeau2o86lGA3Tw"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_Po57SdfgEeau2o86lGA3Tw" elementId="org.eclipse.jdt.ui.JavadocView" ref="_Po2Q0NfgEeau2o86lGA3Tw"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_Po57StfgEeau2o86lGA3Tw" elementId="org.eclipse.jdt.ui.SourceView" ref="_Po2Q0dfgEeau2o86lGA3Tw"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_Po57S9fgEeau2o86lGA3Tw" elementId="org.eclipse.search.ui.views.SearchView" ref="_Po234NfgEeau2o86lGA3Tw"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_Po57TNfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.console.ConsoleView" ref="_Po234dfgEeau2o86lGA3Tw"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_Po57TdfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.views.BookmarkView" toBeRendered="false" ref="_Po234tfgEeau2o86lGA3Tw"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_Po57TtfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.views.ProgressView" toBeRendered="false" ref="_Po2349fgEeau2o86lGA3Tw"/>
              </children>
            </children>
          </children>
        </children>
      </children>
      <children xsi:type="basic:PartStack" xmi:id="_PnRjhNfgEeau2o86lGA3Tw" elementId="stickyFolderRight" toBeRendered="false" containerData="2500">
        <children xsi:type="advanced:Placeholder" xmi:id="_PnRjhdfgEeau2o86lGA3Tw" elementId="org.eclipse.help.ui.HelpView" toBeRendered="false" ref="_PnQ8cNfgEeau2o86lGA3Tw"/>
        <children xsi:type="advanced:Placeholder" xmi:id="_PnRjhtfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.internal.introview" toBeRendered="false" ref="_PnRjgNfgEeau2o86lGA3Tw"/>
        <children xsi:type="advanced:Placeholder" xmi:id="_PnRjh9fgEeau2o86lGA3Tw" elementId="org.eclipse.ui.cheatsheets.views.CheatSheetView" toBeRendered="false" ref="_PnRjgdfgEeau2o86lGA3Tw"/>
      </children>
    </children>
    <sharedElements xsi:type="basic:Part" xmi:id="_PnQ8cNfgEeau2o86lGA3Tw" elementId="org.eclipse.help.ui.HelpView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Help" iconURI="platform:/plugin/org.eclipse.help.ui/icons/view16/help_view.gif" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:Help</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_PnRjgNfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.internal.introview" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Welcome" iconURI="platform:/plugin/org.eclipse.ui/icons/full/eview16/defaultview_misc.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:General</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_PnRjgdfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.cheatsheets.views.CheatSheetView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Cheat Sheets" iconURI="platform:/plugin/org.eclipse.ui.cheatsheets/icons/view16/cheatsheet_view.gif" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:Help</tags>
    </sharedElements>
    <sharedElements xsi:type="advanced:Area" xmi:id="_Po0boNfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.editorss" selectedElement="_Po0bodfgEeau2o86lGA3Tw">
      <children xsi:type="basic:PartStack" xmi:id="_Po0bodfgEeau2o86lGA3Tw" elementId="org.eclipse.e4.primaryDataStack" selectedElement="_ldJOINfhEeau2o86lGA3Tw">
        <tags>org.eclipse.e4.primaryDataStack</tags>
        <tags>EditorStack</tags>
        <tags>active</tags>
        <children xsi:type="basic:Part" xmi:id="_ldJOINfhEeau2o86lGA3Tw" elementId="org.eclipse.e4.ui.compatibility.editor" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityEditor" label="Interp.java" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/obj16/jcu_obj.png" closeable="true">
          <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;editor id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot; name=&quot;Interp.java&quot; partName=&quot;Interp.java&quot; title=&quot;Interp.java&quot; tooltip=&quot;mini-python-java/src/mini_python/Interp.java&quot;>&#xA;&lt;input factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; path=&quot;/mini-python-java/src/mini_python/Interp.java&quot;/>&#xA;&lt;editorState selectionHorizontalPixel=&quot;0&quot; selectionLength=&quot;45&quot; selectionOffset=&quot;5120&quot; selectionTopPixel=&quot;2214&quot;/>&#xA;&lt;/editor>"/>
          <tags>Editor</tags>
          <tags>org.eclipse.jdt.ui.CompilationUnitEditor</tags>
          <tags>removeOnHide</tags>
          <tags>active</tags>
          <tags>activeOnClose</tags>
        </children>
        <children xsi:type="basic:Part" xmi:id="__xCmcNfmEeau2o86lGA3Tw" elementId="org.eclipse.e4.ui.compatibility.editor" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityEditor" label="Syntax.java" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/obj16/jcu_obj.png" closeable="true">
          <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;editor id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot; name=&quot;Syntax.java&quot; partName=&quot;Syntax.java&quot; title=&quot;Syntax.java&quot; tooltip=&quot;mini-python-java/src/mini_python/Syntax.java&quot;>&#xA;&lt;input factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; path=&quot;/mini-python-java/src/mini_python/Syntax.java&quot;/>&#xA;&lt;editorState selectionHorizontalPixel=&quot;0&quot; selectionLength=&quot;21&quot; selectionOffset=&quot;4908&quot; selectionTopPixel=&quot;958&quot;/>&#xA;&lt;/editor>"/>
          <tags>Editor</tags>
          <tags>org.eclipse.jdt.ui.CompilationUnitEditor</tags>
          <tags>removeOnHide</tags>
        </children>
      </children>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_Po1pwNfgEeau2o86lGA3Tw" elementId="org.eclipse.jdt.ui.PackageExplorer" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Package Explorer" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/package.png" tooltip="" closeable="true">
      <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;view group_libraries=&quot;1&quot; layout=&quot;2&quot; linkWithEditor=&quot;0&quot; rootMode=&quot;1&quot; workingSetName=&quot;Aggregate for window 1484126026112&quot;>&#xA;&lt;customFilters userDefinedPatternsEnabled=&quot;false&quot;>&#xA;&lt;xmlDefinedFilters>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.StaticsFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.mylyn.java.ui.MembersFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonJavaProjectsFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer_patternFilterId_.*&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonSharedProjectsFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.SyntheticMembersFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ContainedLibraryFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.m2e.MavenModuleFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.HideInnerClassFilesFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.EmptyInnerPackageFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ClosedProjectsFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.EmptyLibraryContainerFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.PackageDeclarationFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ImportDeclarationFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonJavaElementFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.LibraryFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.CuAndClassFileFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.EmptyPackageFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonPublicFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.LocalTypesFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.FieldsFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;/xmlDefinedFilters>&#xA;&lt;/customFilters>&#xA;&lt;/view>"/>
      <tags>View</tags>
      <tags>categoryTag:Java</tags>
      <menus xmi:id="_PpETQNfgEeau2o86lGA3Tw" elementId="org.eclipse.jdt.ui.PackageExplorer">
        <tags>ViewMenu</tags>
        <tags>menuContribution:menu</tags>
      </menus>
      <toolbar xmi:id="_PpETQdfgEeau2o86lGA3Tw" elementId="org.eclipse.jdt.ui.PackageExplorer"/>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_Po1pwdfgEeau2o86lGA3Tw" elementId="org.eclipse.jdt.ui.TypeHierarchy" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Type Hierarchy" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/class_hi.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:Java</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_Po1pwtfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.views.ResourceNavigator" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Navigator" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/filenav_nav.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:General</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_Po1pw9fgEeau2o86lGA3Tw" elementId="org.eclipse.ui.navigator.ProjectExplorer" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Project Explorer" iconURI="platform:/plugin/org.eclipse.ui.navigator.resources/icons/full/eview16/resource_persp.gif" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:General</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_Po1pxNfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.views.ProblemView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Problems" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/problems_view.png" tooltip="" closeable="true">
      <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;view PRIMARY_SORT_FIELD=&quot;org.eclipse.ui.ide.severityAndDescriptionField&quot; categoryGroup=&quot;org.eclipse.ui.ide.severity&quot; markerContentGenerator=&quot;org.eclipse.ui.ide.problemsGenerator&quot; partName=&quot;Problems&quot;>&#xA;&lt;expanded>&#xA;&lt;category IMemento.internal.id=&quot;Warnings (100 of 103 items)&quot;/>&#xA;&lt;/expanded>&#xA;&lt;columnWidths org.eclipse.ui.ide.locationField=&quot;105&quot; org.eclipse.ui.ide.markerType=&quot;105&quot; org.eclipse.ui.ide.pathField=&quot;140&quot; org.eclipse.ui.ide.resourceField=&quot;105&quot; org.eclipse.ui.ide.severityAndDescriptionField=&quot;350&quot;/>&#xA;&lt;visible IMemento.internal.id=&quot;org.eclipse.ui.ide.severityAndDescriptionField&quot;/>&#xA;&lt;visible IMemento.internal.id=&quot;org.eclipse.ui.ide.resourceField&quot;/>&#xA;&lt;visible IMemento.internal.id=&quot;org.eclipse.ui.ide.pathField&quot;/>&#xA;&lt;visible IMemento.internal.id=&quot;org.eclipse.ui.ide.locationField&quot;/>&#xA;&lt;visible IMemento.internal.id=&quot;org.eclipse.ui.ide.markerType&quot;/>&#xA;&lt;/view>"/>
      <tags>View</tags>
      <tags>categoryTag:General</tags>
      <menus xmi:id="_PqqOsNfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.views.ProblemView">
        <tags>ViewMenu</tags>
        <tags>menuContribution:menu</tags>
      </menus>
      <toolbar xmi:id="_PqqOsdfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.views.ProblemView" visible="false"/>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_Po2Q0NfgEeau2o86lGA3Tw" elementId="org.eclipse.jdt.ui.JavadocView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Javadoc" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/javadoc.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:Java</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_Po2Q0dfgEeau2o86lGA3Tw" elementId="org.eclipse.jdt.ui.SourceView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Declaration" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/source.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:Java</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_Po234NfgEeau2o86lGA3Tw" elementId="org.eclipse.search.ui.views.SearchView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Search" iconURI="platform:/plugin/org.eclipse.search/icons/full/eview16/searchres.gif" tooltip="" closeable="true">
      <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;view isPinned=&quot;false&quot;>&#xA;&lt;view IMemento.internal.id=&quot;&quot; org.eclipse.search.lastActivation=&quot;0&quot;/>&#xA;&lt;view IMemento.internal.id=&quot;org.eclipse.jdt.ui.JavaSearchResultPage&quot; org.eclipse.jdt.search.resultpage.grouping=&quot;3&quot; org.eclipse.jdt.search.resultpage.limit=&quot;1000&quot; org.eclipse.jdt.search.resultpage.limit_enabled=&quot;TRUE&quot; org.eclipse.jdt.search.resultpage.sorting=&quot;1&quot; org.eclipse.search.lastActivation=&quot;1&quot; org.eclipse.search.resultpage.layout=&quot;2&quot;/>&#xA;&lt;/view>"/>
      <tags>View</tags>
      <tags>categoryTag:General</tags>
      <menus xmi:id="_MVVC4NfmEeau2o86lGA3Tw" elementId="org.eclipse.search.ui.views.SearchView">
        <tags>ViewMenu</tags>
        <tags>menuContribution:menu</tags>
      </menus>
      <toolbar xmi:id="_MVVC4dfmEeau2o86lGA3Tw" elementId="org.eclipse.search.ui.views.SearchView" visible="false"/>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_Po234dfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.console.ConsoleView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Console" iconURI="platform:/plugin/org.eclipse.ui.console/icons/full/cview16/console_view.png" tooltip="" closeable="true">
      <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;view/>"/>
      <tags>View</tags>
      <tags>categoryTag:General</tags>
      <menus xmi:id="_rjBKwNfiEeau2o86lGA3Tw" elementId="org.eclipse.ui.console.ConsoleView">
        <tags>ViewMenu</tags>
        <tags>menuContribution:menu</tags>
      </menus>
      <toolbar xmi:id="_rjBKwdfiEeau2o86lGA3Tw" elementId="org.eclipse.ui.console.ConsoleView"/>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_Po234tfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.views.BookmarkView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Bookmarks" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/bkmrk_nav.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:General</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_Po2349fgEeau2o86lGA3Tw" elementId="org.eclipse.ui.views.ProgressView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Progress" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/pview.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:General</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_Po235NfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.views.ContentOutline" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Outline" iconURI="platform:/plugin/org.eclipse.ui.views/icons/full/eview16/outline_co.png" tooltip="" closeable="true">
      <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;view/>"/>
      <tags>View</tags>
      <tags>categoryTag:General</tags>
      <menus xmi:id="_PqWFoNfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.views.ContentOutline">
        <tags>ViewMenu</tags>
        <tags>menuContribution:menu</tags>
      </menus>
      <toolbar xmi:id="_PqWFodfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.views.ContentOutline"/>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_Po3e8NfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.texteditor.TemplatesView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Templates" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/templates.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:General</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_Po4GANfgEeau2o86lGA3Tw" elementId="org.eclipse.ant.ui.views.AntView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Ant" iconURI="platform:/plugin/org.eclipse.ant.ui/icons/full/eview16/ant_view.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:Ant</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_Po4GAdfgEeau2o86lGA3Tw" elementId="org.eclipse.egit.ui.RepositoriesView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Git Repositories" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/repo_rep.gif" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:Git</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_Po4tENfgEeau2o86lGA3Tw" elementId="org.eclipse.jdt.junit.ResultView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="JUnit" iconURI="platform:/plugin/org.eclipse.jdt.junit/icons/full/eview16/junit.gif" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:Java</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_Po4tEdfgEeau2o86lGA3Tw" elementId="org.eclipse.mylyn.tasks.ui.views.tasks" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Task List" iconURI="platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.gif" tooltip="" closeable="true">
      <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;view linkWithEditor=&quot;true&quot; presentation=&quot;org.eclipse.mylyn.tasks.ui.categorized&quot;>&#xA;&lt;sorter groupBy=&quot;CATEGORY_QUERY&quot;>&#xA;&lt;sorter>&#xA;&lt;sort0 sortDirection=&quot;1&quot; sortKey=&quot;PRIORITY&quot;/>&#xA;&lt;sort1 sortDirection=&quot;1&quot; sortKey=&quot;RANK&quot;/>&#xA;&lt;sort2 sortDirection=&quot;1&quot; sortKey=&quot;DATE_CREATED&quot;/>&#xA;&lt;sort3 sortDirection=&quot;1&quot; sortKey=&quot;NONE&quot;/>&#xA;&lt;sort4 sortDirection=&quot;1&quot; sortKey=&quot;NONE&quot;/>&#xA;&lt;sort5 sortDirection=&quot;1&quot; sortKey=&quot;NONE&quot;/>&#xA;&lt;sort6 sortDirection=&quot;1&quot; sortKey=&quot;NONE&quot;/>&#xA;&lt;sort7 sortDirection=&quot;1&quot; sortKey=&quot;NONE&quot;/>&#xA;&lt;/sorter>&#xA;&lt;/sorter>&#xA;&lt;filteredTreeFindHistory/>&#xA;&lt;/view>"/>
      <tags>View</tags>
      <tags>categoryTag:Mylyn</tags>
      <menus xmi:id="_PppiENfgEeau2o86lGA3Tw" elementId="org.eclipse.mylyn.tasks.ui.views.tasks">
        <tags>ViewMenu</tags>
        <tags>menuContribution:menu</tags>
      </menus>
      <toolbar xmi:id="_PppiEdfgEeau2o86lGA3Tw" elementId="org.eclipse.mylyn.tasks.ui.views.tasks"/>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_Po5UINfgEeau2o86lGA3Tw" elementId="org.eclipse.wb.core.StructureView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Structure" iconURI="platform:/plugin/org.eclipse.wb.core/icons/structure/properties_view.gif" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:WindowBuilder</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_Po5UIdfgEeau2o86lGA3Tw" elementId="org.eclipse.wb.core.PaletteView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Palette" iconURI="platform:/plugin/org.eclipse.wb.core/icons/structure/palette.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:WindowBuilder</tags>
    </sharedElements>
    <trimBars xmi:id="_PnTYsNfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.main.toolbar">
      <children xsi:type="menu:ToolBar" xmi:id="_PnYRMNfgEeau2o86lGA3Tw" elementId="group.file" toBeRendered="false">
        <tags>toolbarSeparator</tags>
        <children xsi:type="menu:ToolBarSeparator" xmi:id="_PnYRMdfgEeau2o86lGA3Tw" elementId="group.file" toBeRendered="false"/>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_PnYRMtfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.workbench.file">
        <tags>Draggable</tags>
        <children xsi:type="menu:HandledToolItem" xmi:id="_YSeU4NfnEeaoee1poroJ_A" elementId="print" visible="false" iconURI="platform:/plugin/org.eclipse.ui/icons/full/etool16/print_edit.png" tooltip="Print" command="_PbYHftfeEea-cp7hnRSzuA"/>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_PnYRM9fgEeau2o86lGA3Tw" elementId="additions" toBeRendered="false">
        <tags>toolbarSeparator</tags>
        <children xsi:type="menu:ToolBarSeparator" xmi:id="_PnYRNNfgEeau2o86lGA3Tw" elementId="additions" toBeRendered="false"/>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_PrIIwNfgEeau2o86lGA3Tw" elementId="org.eclipse.debug.ui.launchActionSet">
        <tags>Draggable</tags>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_PrUWANfgEeau2o86lGA3Tw" elementId="org.eclipse.jdt.ui.JavaElementCreationActionSet">
        <tags>Draggable</tags>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_PrMaMNfgEeau2o86lGA3Tw" elementId="org.eclipse.search.searchActionSet">
        <tags>Draggable</tags>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_UomIUNfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.edit.text.actionSet.presentation">
        <tags>Draggable</tags>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_PnY4QNfgEeau2o86lGA3Tw" elementId="group.nav" toBeRendered="false">
        <tags>toolbarSeparator</tags>
        <children xsi:type="menu:ToolBarSeparator" xmi:id="_PnY4QdfgEeau2o86lGA3Tw" elementId="group.nav" toBeRendered="false"/>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_PnY4QtfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.workbench.navigate">
        <tags>Draggable</tags>
        <children xsi:type="menu:HandledToolItem" xmi:id="_YShYMdfnEeaoee1poroJ_A" elementId="org.eclipse.ui.window.pinEditor" visible="false" iconURI="platform:/plugin/org.eclipse.ui/icons/full/etool16/pin_editor.png" tooltip="Pin Editor" type="Check" command="_PbWSa9feEea-cp7hnRSzuA"/>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_PnY4Q9fgEeau2o86lGA3Tw" elementId="group.editor" toBeRendered="false">
        <tags>toolbarSeparator</tags>
        <children xsi:type="menu:ToolBarSeparator" xmi:id="_PnY4RNfgEeau2o86lGA3Tw" elementId="group.editor" toBeRendered="false"/>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_PnY4RdfgEeau2o86lGA3Tw" elementId="group.help" toBeRendered="false">
        <tags>toolbarSeparator</tags>
        <children xsi:type="menu:ToolBarSeparator" xmi:id="_PnY4RtfgEeau2o86lGA3Tw" elementId="group.help" toBeRendered="false"/>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_PnY4R9fgEeau2o86lGA3Tw" elementId="org.eclipse.ui.workbench.help" visible="false">
        <tags>Draggable</tags>
      </children>
      <children xsi:type="menu:ToolControl" xmi:id="_PoBxcNfgEeau2o86lGA3Tw" elementId="PerspectiveSpacer" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.LayoutModifierToolControl">
        <tags>stretch</tags>
        <tags>SHOW_RESTORE_MENU</tags>
      </children>
      <children xsi:type="menu:ToolControl" xmi:id="_PoC_kNfgEeau2o86lGA3Tw" elementId="PerspectiveSwitcher" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.e4.ui.workbench.addons.perspectiveswitcher.PerspectiveSwitcher">
        <tags>Draggable</tags>
        <tags>HIDEABLE</tags>
        <tags>SHOW_RESTORE_MENU</tags>
      </children>
    </trimBars>
    <trimBars xmi:id="_PoGC4NfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.trim.status" side="Bottom">
      <children xsi:type="menu:ToolControl" xmi:id="_PoJGMNfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.StatusLine" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.StandardTrim">
        <tags>stretch</tags>
      </children>
      <children xsi:type="menu:ToolControl" xmi:id="_PoNXoNfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.HeapStatus" toBeRendered="false" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.StandardTrim">
        <tags>Draggable</tags>
      </children>
      <children xsi:type="menu:ToolControl" xmi:id="_PoS3MNfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.ProgressBar" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.StandardTrim">
        <tags>Draggable</tags>
      </children>
    </trimBars>
    <trimBars xmi:id="_PoXIoNfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.trim.vertical1" side="Left"/>
    <trimBars xmi:id="_PoXvsNfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.trim.vertical2" toBeRendered="false" side="Right">
      <children xsi:type="menu:ToolControl" xmi:id="_Wz7XcNfgEeau2o86lGA3Tw" elementId="org.eclipse.mylyn.tasks.ui.views.tasksMStack(org.eclipse.jdt.ui.JavaPerspective)" toBeRendered="false" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.minmax.TrimStack">
        <tags>TrimStack</tags>
      </children>
      <children xsi:type="menu:ToolControl" xmi:id="_W0FIcNfgEeau2o86lGA3Tw" elementId="right(org.eclipse.jdt.ui.JavaPerspective)" toBeRendered="false" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.minmax.TrimStack">
        <tags>TrimStack</tags>
      </children>
      <children xsi:type="menu:ToolControl" xmi:id="_W0NEQNfgEeau2o86lGA3Tw" elementId="bottom(org.eclipse.jdt.ui.JavaPerspective)" toBeRendered="false" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.minmax.TrimStack">
        <tags>TrimStack</tags>
      </children>
      <children xsi:type="menu:ToolControl" xmi:id="_W0VnINfgEeau2o86lGA3Tw" elementId="org.eclipse.ui.editorss(org.eclipse.jdt.ui.JavaPerspective)" toBeRendered="false" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.minmax.TrimStack">
        <tags>TrimStack</tags>
      </children>
    </trimBars>
  </children>
  <bindingTables xmi:id="_PacTU9feEea-cp7hnRSzuA" contributorURI="platform:/plugin/org.eclipse.platform" bindingContext="_PacTVNfeEea-cp7hnRSzuA">
    <bindings xmi:id="_PcHHQtfeEea-cp7hnRSzuA" keySequence="CTRL+A" command="_PbZVl9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcHuUNfeEea-cp7hnRSzuA" keySequence="CTRL+SPACE" command="_PbW5g9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcHuU9feEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+SPACE" command="_PbW5cdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcIVadfeEea-cp7hnRSzuA" keySequence="CTRL+F10" command="_PbT2I9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcI8dNfeEea-cp7hnRSzuA" keySequence="CTRL+C" command="_PbSn4dfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcI8edfeEea-cp7hnRSzuA" keySequence="ALT+PAGE_UP" command="_PbajtNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcKKl9feEea-cp7hnRSzuA" keySequence="SHIFT+INSERT" command="_PbTPB9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcKxqdfeEea-cp7hnRSzuA" keySequence="ALT+PAGE_DOWN" command="_PbVEUtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcLYsdfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+D" command="_PbZVnNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcLYt9feEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+V" command="_PbZVnNfeEea-cp7hnRSzuA">
      <tags>platform:gtk</tags>
    </bindings>
    <bindings xmi:id="_PcNN4tfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+Z" command="_PbZ8q9feEea-cp7hnRSzuA">
      <tags>platform:gtk</tags>
    </bindings>
    <bindings xmi:id="_PcOcBNfeEea-cp7hnRSzuA" keySequence="CTRL+1" command="_PbWSYNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcOcB9feEea-cp7hnRSzuA" keySequence="CTRL+V" command="_PbTPB9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPDF9feEea-cp7hnRSzuA" keySequence="CTRL+X" command="_PbXgjtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPqLtfeEea-cp7hnRSzuA" keySequence="CTRL+Z" command="_PbXggtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQRMNfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+F3" command="_PbYHjtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQRPtfeEea-cp7hnRSzuA" keySequence="CTRL+INSERT" command="_PbSn4dfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQ4QdfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+L" command="_PbYun9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQ4UdfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+I" command="_PbVrWNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcStc9feEea-cp7hnRSzuA" keySequence="SHIFT+DEL" command="_PbXgjtfeEea-cp7hnRSzuA"/>
  </bindingTables>
  <bindingTables xmi:id="_Pb5E0NfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.contexts.window" bindingContext="_PacTVdfeEea-cp7hnRSzuA">
    <bindings xmi:id="_PcErANfeEea-cp7hnRSzuA" keySequence="CTRL+B" command="_PbTPE9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcFSEtfeEea-cp7hnRSzuA" keySequence="ALT+ARROW_RIGHT" command="_PbYHjdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcF5KNfeEea-cp7hnRSzuA" keySequence="ALT+CTRL+SHIFT+ARROW_RIGHT" command="_PbT2EdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcHHQdfeEea-cp7hnRSzuA" keySequence="ALT+CTRL+SHIFT+ARROW_UP" command="_PbT2MNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcHHQ9feEea-cp7hnRSzuA" keySequence="ALT+ARROW_LEFT" command="_PbT2KtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcHHR9feEea-cp7hnRSzuA" keySequence="CTRL+&#xc0;" command="_PbZ8s9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcHuWdfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+D T" command="_PbSn6NfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcHuWtfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+D J" command="_PbWSXNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcIVYNfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+D A" command="_PbXge9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcIVYdfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+D Q" command="_PbZVvNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcI8cNfeEea-cp7hnRSzuA" keySequence="ALT+-" command="_PbSn_NfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcI8cdfeEea-cp7hnRSzuA" keySequence="ALT+CTRL+U" command="_PbVrNtfeEea-cp7hnRSzuA">
      <tags>platform:gtk</tags>
    </bindings>
    <bindings xmi:id="_PcI8ctfeEea-cp7hnRSzuA" keySequence="CTRL+S" command="_PbYupdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcI8c9feEea-cp7hnRSzuA" keySequence="CTRL+#" command="_PbT2JdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcI8e9feEea-cp7hnRSzuA" keySequence="CTRL+F" command="_PbUdN9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcJjgdfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+E" command="_PbVEUNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcJjgtfeEea-cp7hnRSzuA" keySequence="CTRL+E" command="_PbXgd9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcJjg9feEea-cp7hnRSzuA" keySequence="ALT+SHIFT+F" command="_PbYHntfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcKKkNfeEea-cp7hnRSzuA" keySequence="CTRL+H" command="_PbW5gtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcKKktfeEea-cp7hnRSzuA" keySequence="ALT+CTRL+H" command="_PbT2GNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcKKk9feEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+H" command="_PbSA29feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcKKlNfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+I" command="_PbT2JtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcKKm9feEea-cp7hnRSzuA" keySequence="ALT+CTRL+G" command="_PbVEJtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcKxodfeEea-cp7hnRSzuA" keySequence="CTRL+&#xc7;" command="_PbWSd9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcKxpdfeEea-cp7hnRSzuA" keySequence="CTRL+G" command="_PbSA5NfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcKxptfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+G" command="_PbZ8rdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcKxp9feEea-cp7hnRSzuA" keySequence="ALT+SHIFT+H" command="_PbXgZ9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcLYttfeEea-cp7hnRSzuA" keySequence="CTRL+F11" command="_PbYug9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcLYuNfeEea-cp7hnRSzuA" keySequence="CTRL+P" command="_PbYHftfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcL_wdfeEea-cp7hnRSzuA" keySequence="CTRL+M" command="_PbW5e9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcL_wtfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+P" command="_PbVELtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcL_xNfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+L" command="_PbWSWtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcL_xdfeEea-cp7hnRSzuA" keySequence="CTRL+F8" command="_PbWSYtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcL_xtfeEea-cp7hnRSzuA" keySequence="SHIFT+F5" command="_PbZVstfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcL_yNfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+V" command="_PbYuu9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcL_ydfeEea-cp7hnRSzuA" keySequence="CTRL+," command="_PbTPDdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcMm0NfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+F8" command="_PbW5dNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcMm1dfeEea-cp7hnRSzuA" keySequence="F4" command="_PbT2BtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcNN4NfeEea-cp7hnRSzuA" keySequence="CTRL+N" command="_PbZ8tdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcNN49feEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+F12" command="_PbSn_tfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcNN6NfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+F4" command="_PbXgjNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcNN6dfeEea-cp7hnRSzuA" keySequence="CTRL+&#xd9;" command="_PbUdIdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcN08dfeEea-cp7hnRSzuA" keySequence="SHIFT+F2" command="_PbUdE9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcN089feEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+F7" command="_PbZVktfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcN09dfeEea-cp7hnRSzuA" keySequence="CTRL+Q" command="_PbYHmdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcN09tfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+F7" command="_PbVrTNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcOcANfeEea-cp7hnRSzuA" keySequence="CTRL+{" command="_PbW5ddfeEea-cp7hnRSzuA">
      <parameters xmi:id="_PcOcAdfeEea-cp7hnRSzuA" elementId="Splitter.isHorizontal" name="Splitter.isHorizontal" value="false"/>
    </bindings>
    <bindings xmi:id="_PcOcCdfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+M" command="_PbZVo9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPDEtfeEea-cp7hnRSzuA" keySequence="ALT+F5" command="_PbYu0dfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPDE9feEea-cp7hnRSzuA" keySequence="CTRL+3" command="_PbWSb9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPDFNfeEea-cp7hnRSzuA" keySequence="CTRL+-" command="_PbYuptfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPDFdfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+W" command="_PbZVt9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPDFtfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+S" command="_PbUdJdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPDGdfeEea-cp7hnRSzuA" keySequence="CTRL+." command="_PbZVvdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPDGtfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+NUMPAD_DIVIDE" command="_PbW5d9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPDHNfeEea-cp7hnRSzuA" keySequence="CTRL+*" command="_PbW5a9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPqI9feEea-cp7hnRSzuA" keySequence="ALT+CTRL+P" command="_PbUdQtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPqJdfeEea-cp7hnRSzuA" keySequence="F12" command="_PbW5hdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPqJ9feEea-cp7hnRSzuA" keySequence="ALT+SHIFT+T" command="_PbTO9dfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPqKNfeEea-cp7hnRSzuA" keySequence="CTRL+W" command="_PbZ8vtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPqMNfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+W" command="_PbXgjNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPqMtfeEea-cp7hnRSzuA" keySequence="CTRL+U" command="_PbZ8odfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQRMdfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+S" command="_PbajzNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQRM9feEea-cp7hnRSzuA" keySequence="DEL" command="_PbVEI9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQRNNfeEea-cp7hnRSzuA" keySequence="CTRL+F4" command="_PbZ8vtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQRNdfeEea-cp7hnRSzuA" keySequence="ALT+CTRL+SHIFT+F12" command="_PbZVpdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQRNtfeEea-cp7hnRSzuA" keySequence="F5" command="_PbYHr9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQROtfeEea-cp7hnRSzuA" keySequence="CTRL+F6" command="_PbUdQ9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQRO9feEea-cp7hnRSzuA" keySequence="CTRL+F9" command="_PbVrM9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQRPNfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+F6" command="_PbUdNNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQRPdfeEea-cp7hnRSzuA" keySequence="CTRL+F7" command="_PbSn4tfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQRP9feEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+NUMPAD_MULTIPLY" command="_PbUdINfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQ4QtfeEea-cp7hnRSzuA" keySequence="ALT+F7" command="_PbTPCNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQ4R9feEea-cp7hnRSzuA" keySequence="F2" command="_PbTPENfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQ4StfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+T" command="_PbXgjdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQ4TNfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+N" command="_PbXgiNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQ4TtfeEea-cp7hnRSzuA" keySequence="CTRL+)" command="_PbZVmdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQ4UNfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+J" command="_PbXgb9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcRfVtfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+F9" command="_PbYuztfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcRfWNfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+R" command="_PbZ8stfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcRfYdfeEea-cp7hnRSzuA" keySequence="F3" command="_PbWSWNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcRfY9feEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+R" command="_Pbaj1NfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcSGYNfeEea-cp7hnRSzuA" keySequence="F11" command="_PbYu0NfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcSGYdfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+N" command="_PbSn_9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcSGYtfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+Z" command="_PbSA0tfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcSGZdfeEea-cp7hnRSzuA" keySequence="ALT+CR" command="_PbW5WtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcSGaNfeEea-cp7hnRSzuA" keySequence="CTRL+F2" command="_PbZ8rNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcSGatfeEea-cp7hnRSzuA" keySequence="CTRL+F12" command="_PbVEM9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcSGa9feEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+O" command="_PbZVltfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcSGcdfeEea-cp7hnRSzuA" keySequence="CTRL+_" command="_PbW5ddfeEea-cp7hnRSzuA">
      <parameters xmi:id="_PcSGctfeEea-cp7hnRSzuA" elementId="Splitter.isHorizontal" name="Splitter.isHorizontal" value="true"/>
    </bindings>
    <bindings xmi:id="_PcStcdfeEea-cp7hnRSzuA" keySequence="CTRL+=" command="_PbYHmNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcStctfeEea-cp7hnRSzuA" keySequence="CTRL+=" command="_PbW5U9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcStdNfeEea-cp7hnRSzuA" keySequence="ALT+CTRL+SHIFT+ARROW_DOWN" command="_PbZ8xNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcStdtfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+B" command="_PbVELNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcStedfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+C" command="_PbXgY9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcTUgNfeEea-cp7hnRSzuA" keySequence="ALT+CTRL+B" command="_PbVESNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcTUgdfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+X M" command="_PbZVpNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcTUgtfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+X T" command="_PbZVlNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcTUg9feEea-cp7hnRSzuA" keySequence="ALT+SHIFT+Q L" command="_PbVEPtfeEea-cp7hnRSzuA">
      <parameters xmi:id="_PcTUhNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.pde.runtime.LogView"/>
    </bindings>
    <bindings xmi:id="_PcTUhdfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+Q Q" command="_PbVEPtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcTUhtfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+Q B" command="_PbVEPtfeEea-cp7hnRSzuA">
      <parameters xmi:id="_PcTUh9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.debug.ui.BreakpointView"/>
    </bindings>
    <bindings xmi:id="_PcTUiNfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+X Q" command="_PbVrVtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcTUidfeEea-cp7hnRSzuA" keySequence="CTRL+W B" command="_PbYHj9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcTUitfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+Q T" command="_PbVEPtfeEea-cp7hnRSzuA">
      <parameters xmi:id="_PcTUi9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.jdt.ui.TypeHierarchy"/>
    </bindings>
    <bindings xmi:id="_PcTUjNfeEea-cp7hnRSzuA" keySequence="ALT+CTRL+X G" command="_PbYuyNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcTUjtfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+Q H" command="_PbVEPtfeEea-cp7hnRSzuA">
      <parameters xmi:id="_PcTUj9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.ui.cheatsheets.views.CheatSheetView"/>
    </bindings>
    <bindings xmi:id="_PcTUkNfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+Q P" command="_PbVEPtfeEea-cp7hnRSzuA">
      <parameters xmi:id="_PcTUkdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.jdt.ui.PackageExplorer"/>
    </bindings>
    <bindings xmi:id="_PcTUktfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+Q X" command="_PbVEPtfeEea-cp7hnRSzuA">
      <parameters xmi:id="_PcTUk9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.ui.views.ProblemView"/>
    </bindings>
    <bindings xmi:id="_PcT7kdfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+Q C" command="_PbVEPtfeEea-cp7hnRSzuA">
      <parameters xmi:id="_PcT7ktfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.ui.console.ConsoleView"/>
    </bindings>
    <bindings xmi:id="_PcT7k9feEea-cp7hnRSzuA" keySequence="ALT+SHIFT+Q Z" command="_PbVEPtfeEea-cp7hnRSzuA">
      <parameters xmi:id="_PcT7lNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.team.ui.GenericHistoryView"/>
    </bindings>
    <bindings xmi:id="_PcT7ldfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+Q D" command="_PbVEPtfeEea-cp7hnRSzuA">
      <parameters xmi:id="_PcT7ltfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.jdt.ui.SourceView"/>
    </bindings>
    <bindings xmi:id="_PcT7l9feEea-cp7hnRSzuA" keySequence="ALT+SHIFT+Q K" command="_PbVEPtfeEea-cp7hnRSzuA">
      <parameters xmi:id="_PcT7mNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.mylyn.tasks.ui.views.tasks"/>
    </bindings>
    <bindings xmi:id="_PcT7mdfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+Q S" command="_PbVEPtfeEea-cp7hnRSzuA">
      <parameters xmi:id="_PcT7mtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.search.ui.views.SearchView"/>
    </bindings>
    <bindings xmi:id="_PcT7m9feEea-cp7hnRSzuA" keySequence="ALT+SHIFT+Q Y" command="_PbVEPtfeEea-cp7hnRSzuA">
      <parameters xmi:id="_PcT7nNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.team.sync.views.SynchronizeView"/>
    </bindings>
    <bindings xmi:id="_PcT7ndfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+X J" command="_PbVrMtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcT7ntfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+Q O" command="_PbVEPtfeEea-cp7hnRSzuA">
      <parameters xmi:id="_PcT7n9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.ui.views.ContentOutline"/>
    </bindings>
    <bindings xmi:id="_PcT7oNfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+Q J" command="_PbVEPtfeEea-cp7hnRSzuA">
      <parameters xmi:id="_PcT7odfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.jdt.ui.JavadocView"/>
    </bindings>
    <bindings xmi:id="_PcT7otfeEea-cp7hnRSzuA" keySequence="CTRL+W R" command="_PbYuvtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcT7o9feEea-cp7hnRSzuA" keySequence="ALT+SHIFT+Q V" command="_PbVEPtfeEea-cp7hnRSzuA">
      <parameters xmi:id="_PcT7pNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.debug.ui.VariableView"/>
    </bindings>
    <bindings xmi:id="_PcUioNfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+X A" command="_PbTPC9feEea-cp7hnRSzuA"/>
  </bindingTables>
  <bindingTables xmi:id="_PcFSENfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.textEditorScope" bindingContext="_Pbc_8tfeEea-cp7hnRSzuA">
    <bindings xmi:id="_PcFSEdfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+ARROW_LEFT" command="_PbYuudfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcF5J9feEea-cp7hnRSzuA" keySequence="CTRL+ARROW_DOWN" command="_Pbajz9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcHHRNfeEea-cp7hnRSzuA" keySequence="CTRL+ARROW_UP" command="_PbVENdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcHHRdfeEea-cp7hnRSzuA" keySequence="ALT+CTRL+ARROW_UP" command="_PbZVuNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcHHSNfeEea-cp7hnRSzuA" keySequence="ALT+ARROW_DOWN" command="_PbVrQtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcHuUtfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+DEL" command="_PbXgYtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcHuVNfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+A" command="_PbTO8dfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcHuWNfeEea-cp7hnRSzuA" keySequence="ALT+CTRL+SPACE" command="_PbTPAdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcIVatfeEea-cp7hnRSzuA" keySequence="CTRL+F10" command="_PbYHhdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcI8etfeEea-cp7hnRSzuA" keySequence="CTRL+ARROW_LEFT" command="_PbSA49feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcJjgNfeEea-cp7hnRSzuA" keySequence="SHIFT+HOME" command="_PbYuiNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcKKkdfeEea-cp7hnRSzuA" keySequence="ALT+CTRL+J" command="_PbWSVdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcKKmdfeEea-cp7hnRSzuA" keySequence="CTRL+END" command="_PbVrSNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcKKmtfeEea-cp7hnRSzuA" keySequence="CTRL+BS" command="_PbSA4tfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcKxoNfeEea-cp7hnRSzuA" keySequence="CTRL+HOME" command="_PbTPBdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcKxotfeEea-cp7hnRSzuA" keySequence="SHIFT+END" command="_PbYustfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcKxqtfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+ARROW_RIGHT" command="_PbVrRdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcLYstfeEea-cp7hnRSzuA" keySequence="CTRL+ARROW_RIGHT" command="_PbVrYdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcLYs9feEea-cp7hnRSzuA" keySequence="CTRL+D" command="_PbUdG9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcL_w9feEea-cp7hnRSzuA" keySequence="HOME" command="_PbYuttfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcNN5NfeEea-cp7hnRSzuA" keySequence="CTRL+NUMPAD_SUBTRACT" command="_PbYHitfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcN08tfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+CR" command="_PbYHjNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPDENfeEea-cp7hnRSzuA" keySequence="CTRL+NUMPAD_ADD" command="_PbZVn9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPDEdfeEea-cp7hnRSzuA" keySequence="END" command="_PbYHrtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPDGNfeEea-cp7hnRSzuA" keySequence="CTRL+K" command="_PbVEStfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPDG9feEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+NUMPAD_DIVIDE" command="_PbT2FtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPqItfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+Q" command="_PbWSQtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPqJNfeEea-cp7hnRSzuA" keySequence="ALT+/" command="_PbYuvdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPqJtfeEea-cp7hnRSzuA" keySequence="F12" command="_PbSA19feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPqKtfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+X" command="_PbSn7tfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPqLdfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+K" command="_PbVEK9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPqL9feEea-cp7hnRSzuA" keySequence="CTRL+J" command="_PbT2LdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQ4QNfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+NUMPAD_MULTIPLY" command="_PbWSUtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQ4Q9feEea-cp7hnRSzuA" keySequence="CTRL+NUMPAD_MULTIPLY" command="_PbWSQNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQ4SNfeEea-cp7hnRSzuA" keySequence="F2" command="_PbWScNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQ4S9feEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+Y" command="_PbYuoNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQ4TdfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+J" command="_PbVrVNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQ4T9feEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+INSERT" command="_PbVrOtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcRfU9feEea-cp7hnRSzuA" keySequence="INSERT" command="_PbT2E9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcRfVdfeEea-cp7hnRSzuA" keySequence="CTRL+NUMPAD_DIVIDE" command="_PbVEOtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcRfXdfeEea-cp7hnRSzuA" keySequence="CTRL+L" command="_PbXgeNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcRfXtfeEea-cp7hnRSzuA" keySequence="SHIFT+CR" command="_PbYutdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcSGc9feEea-cp7hnRSzuA" keySequence="CTRL+DEL" command="_PbXgetfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcSGdNfeEea-cp7hnRSzuA" keySequence="ALT+ARROW_UP" command="_PbZ8ydfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcStftfeEea-cp7hnRSzuA" keySequence="ALT+CTRL+ARROW_DOWN" command="_PbZVq9feEea-cp7hnRSzuA"/>
  </bindingTables>
  <bindingTables xmi:id="_PcFSE9feEea-cp7hnRSzuA" elementId="Ocaml.editor.context" bindingContext="_Pbc_-dfeEea-cp7hnRSzuA">
    <bindings xmi:id="_PcF5INfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+C" command="_PbZ8pNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcHuUdfeEea-cp7hnRSzuA" keySequence="CTRL+SPACE" command="_PbWSStfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcIVYtfeEea-cp7hnRSzuA" keySequence="CTRL+O" command="_PbW5adfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcKxqNfeEea-cp7hnRSzuA" keySequence="SHIFT+TAB" command="_PbYHi9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcL_x9feEea-cp7hnRSzuA" keySequence="TAB" command="_PbYHf9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcMm0dfeEea-cp7hnRSzuA" keySequence="F6" command="_PbWSTtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcMm1NfeEea-cp7hnRSzuA" keySequence="F4" command="_PbVEL9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcOcA9feEea-cp7hnRSzuA" keySequence="SHIFT+F3" command="_PbT2BNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQ4SdfeEea-cp7hnRSzuA" keySequence="F2" command="_PbTO_9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcRfUtfeEea-cp7hnRSzuA" keySequence="ALT+CTRL+K" command="_PbWSZdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcRfW9feEea-cp7hnRSzuA" keySequence="F7" command="_PbSA09feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcRfX9feEea-cp7hnRSzuA" keySequence="F3" command="_PbVEVNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcStddfeEea-cp7hnRSzuA" keySequence="ALT+CTRL+SHIFT+C" command="_PbUdKtfeEea-cp7hnRSzuA"/>
  </bindingTables>
  <bindingTables xmi:id="_PcF5IdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.javaEditorScope" bindingContext="_PbdAANfeEea-cp7hnRSzuA">
    <bindings xmi:id="_PcF5ItfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+C" command="_PbSoAtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcF5KdfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+ARROW_RIGHT" command="_PbUdGNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcGgMNfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+ARROW_UP" command="_PbZ8x9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcGgMdfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+B" command="_Pbajs9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcGgNNfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+ARROW_DOWN" command="_PbVEN9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcHuVdfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+ARROW_UP" command="_PbZVu9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcIVY9feEea-cp7hnRSzuA" keySequence="CTRL+O" command="_PbZVm9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcJjhtfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+F" command="_PbYus9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcLYudfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+/" command="_PbZ8otfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcMm3NfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+O" command="_PbXgfdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcNN5tfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+P" command="_PbVrTdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPDHdfeEea-cp7hnRSzuA" keySequence="CTRL+/" command="_PbSoAtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPDH9feEea-cp7hnRSzuA" keySequence="CTRL+7" command="_PbSoAtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPDItfeEea-cp7hnRSzuA" keySequence="CTRL+T" command="_PbSoD9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPqIdfeEea-cp7hnRSzuA" keySequence="CTRL+F3" command="_PbZVutfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPqK9feEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+M" command="_PbWScdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQ4RNfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+U" command="_PbWSadfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcRfUNfeEea-cp7hnRSzuA" keySequence="CTRL+I" command="_PbYHhtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcSGbtfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+\" command="_PbUdJtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcSteNfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+ARROW_DOWN" command="_PbZVndfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcStfNfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+ARROW_LEFT" command="_PbYHo9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcTUjdfeEea-cp7hnRSzuA" keySequence="CTRL+2 F" command="_PbZVotfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcTUlNfeEea-cp7hnRSzuA" keySequence="CTRL+2 M" command="_PbYugdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcT7kNfeEea-cp7hnRSzuA" keySequence="CTRL+2 R" command="_PbW5X9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcUiodfeEea-cp7hnRSzuA" keySequence="CTRL+2 L" command="_PbT2MdfeEea-cp7hnRSzuA"/>
  </bindingTables>
  <bindingTables xmi:id="_PcF5I9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.propertiesEditorScope" bindingContext="_PbdAGNfeEea-cp7hnRSzuA">
    <bindings xmi:id="_PcF5JNfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+C" command="_PbSoAtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPDHtfeEea-cp7hnRSzuA" keySequence="CTRL+/" command="_PbSoAtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPDINfeEea-cp7hnRSzuA" keySequence="CTRL+7" command="_PbSoAtfeEea-cp7hnRSzuA"/>
  </bindingTables>
  <bindingTables xmi:id="_PcF5JdfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.sse.ui.structuredTextEditorScope" bindingContext="_PbdABtfeEea-cp7hnRSzuA">
    <bindings xmi:id="_PcF5JtfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+C" command="_PbYurdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcF5KtfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+ARROW_RIGHT" command="_PbUdFdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcF5K9feEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+ARROW_UP" command="_PbVrUtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcGgN9feEea-cp7hnRSzuA" keySequence="ALT+SHIFT+ARROW_DOWN" command="_PbVrX9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcHHQNfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+A" command="_Pbaj0NfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcHuV9feEea-cp7hnRSzuA" keySequence="ALT+SHIFT+ARROW_UP" command="_PbVrOdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcIVaNfeEea-cp7hnRSzuA" keySequence="CTRL+O" command="_PbTPEtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcJjh9feEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+F" command="_PbZ8rtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcL_wNfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+/" command="_PbSn-9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcNN59feEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+P" command="_PbTO8tfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcRfUdfeEea-cp7hnRSzuA" keySequence="CTRL+I" command="_PbYHhNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcRfYtfeEea-cp7hnRSzuA" keySequence="F3" command="_PbSoDdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcSGb9feEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+\" command="_PbVEKtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcSGcNfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+>" command="_PbXgfNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcStd9feEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+ARROW_DOWN" command="_PbZVwtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcStfdfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+ARROW_LEFT" command="_PbT2EtfeEea-cp7hnRSzuA"/>
  </bindingTables>
  <bindingTables xmi:id="_PcGgMtfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.breadcrumbEditorScope" bindingContext="_Pbc__9feEea-cp7hnRSzuA">
    <bindings xmi:id="_PcGgM9feEea-cp7hnRSzuA" keySequence="ALT+SHIFT+B" command="_Pbajs9feEea-cp7hnRSzuA"/>
  </bindingTables>
  <bindingTables xmi:id="_PcGgNdfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.views.tasks" bindingContext="_PbdAAtfeEea-cp7hnRSzuA">
    <bindings xmi:id="_PcGgNtfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+ARROW_DOWN" command="_PbYur9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcHHSdfeEea-cp7hnRSzuA" keySequence="ALT+ARROW_DOWN" command="_PbXgbtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcHuVtfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+ARROW_UP" command="_PbW5aNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcKKldfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+I" command="_PbYupNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcKKmNfeEea-cp7hnRSzuA" keySequence="SHIFT+INSERT" command="_PbVEIdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcMm1tfeEea-cp7hnRSzuA" keySequence="F4" command="_PbT2ItfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcMm2dfeEea-cp7hnRSzuA" keySequence="CTRL+CR" command="_PbXgZdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQ4RdfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+U" command="_PbVrW9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcRfVNfeEea-cp7hnRSzuA" keySequence="INSERT" command="_PbYumNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcRfWdfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+R" command="_PbYutNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcStcNfeEea-cp7hnRSzuA" keySequence="ALT+ARROW_UP" command="_PbVEOdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcStetfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+C" command="_Pbajy9feEea-cp7hnRSzuA"/>
  </bindingTables>
  <bindingTables xmi:id="_PcGgONfeEea-cp7hnRSzuA" elementId="org.eclipse.wb.core.java.editorScope" bindingContext="_Pbc_89feEea-cp7hnRSzuA">
    <bindings xmi:id="_PcGgOdfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+A" command="_PbZVttfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcHHRtfeEea-cp7hnRSzuA" keySequence="ALT+CTRL+A" command="_PbZVttfeEea-cp7hnRSzuA"/>
  </bindingTables>
  <bindingTables xmi:id="_PcIVZNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.editors.task" bindingContext="_PbdAA9feEea-cp7hnRSzuA">
    <bindings xmi:id="_PcIVZdfeEea-cp7hnRSzuA" keySequence="CTRL+O" command="_PbZVrdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcKKltfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+I" command="_PbYupNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPqLNfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+M" command="_PbSoCtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQRMtfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+S" command="_PbXgl9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQ4RtfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+U" command="_PbVrW9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcRfWtfeEea-cp7hnRSzuA" keySequence="ALT+SHIFT+R" command="_PbYutNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcSte9feEea-cp7hnRSzuA" keySequence="ALT+SHIFT+C" command="_Pbajy9feEea-cp7hnRSzuA"/>
  </bindingTables>
  <bindingTables xmi:id="_PcIVZtfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.wikitext.ui.editor.markupSourceContext" bindingContext="_PbdABdfeEea-cp7hnRSzuA">
    <bindings xmi:id="_PcIVZ9feEea-cp7hnRSzuA" keySequence="CTRL+O" command="_PbTO-9feEea-cp7hnRSzuA"/>
  </bindingTables>
  <bindingTables xmi:id="_PcI8ddfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesView" bindingContext="_PbdAGdfeEea-cp7hnRSzuA">
    <bindings xmi:id="_PcI8dtfeEea-cp7hnRSzuA" keySequence="CTRL+C" command="_PbW5VdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcOcCNfeEea-cp7hnRSzuA" keySequence="CTRL+V" command="_PbSn7NfeEea-cp7hnRSzuA"/>
  </bindingTables>
  <bindingTables xmi:id="_PcI8d9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.ReflogView" bindingContext="_Pbc__tfeEea-cp7hnRSzuA">
    <bindings xmi:id="_PcI8eNfeEea-cp7hnRSzuA" keySequence="CTRL+C" command="_PbVEINfeEea-cp7hnRSzuA"/>
  </bindingTables>
  <bindingTables xmi:id="_PcJjhNfeEea-cp7hnRSzuA" elementId="org.eclipse.ant.ui.AntEditorScope" bindingContext="_PbdAEtfeEea-cp7hnRSzuA">
    <bindings xmi:id="_PcJjhdfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+F" command="_PbYus9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcMm29feEea-cp7hnRSzuA" keySequence="ALT+SHIFT+O" command="_PbSn5dfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcN08NfeEea-cp7hnRSzuA" keySequence="SHIFT+F2" command="_PbTPFtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcRfV9feEea-cp7hnRSzuA" keySequence="ALT+SHIFT+R" command="_PbT2A9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcRfYNfeEea-cp7hnRSzuA" keySequence="F3" command="_PbSn69feEea-cp7hnRSzuA"/>
  </bindingTables>
  <bindingTables xmi:id="_PcKxo9feEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.memory.abstractasynctablerendering" bindingContext="_Pbc__dfeEea-cp7hnRSzuA">
    <bindings xmi:id="_PcKxpNfeEea-cp7hnRSzuA" keySequence="CTRL+G" command="_PbW5etfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPqINfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+." command="_PbW5edfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPqMdfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+," command="_PbYHndfeEea-cp7hnRSzuA"/>
  </bindingTables>
  <bindingTables xmi:id="_PcKxq9feEea-cp7hnRSzuA" elementId="org.eclipse.core.runtime.xml" bindingContext="_PbdACtfeEea-cp7hnRSzuA">
    <bindings xmi:id="_PcLYsNfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+D" command="_PbZ8oNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcNN5dfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+P" command="_PbW5h9feEea-cp7hnRSzuA"/>
  </bindingTables>
  <bindingTables xmi:id="_PcLYtNfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.console" bindingContext="_Pbc_9dfeEea-cp7hnRSzuA">
    <bindings xmi:id="_PcLYtdfeEea-cp7hnRSzuA" keySequence="CTRL+D" command="_PbZVtNfeEea-cp7hnRSzuA"/>
  </bindingTables>
  <bindingTables xmi:id="_PcMm0tfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.debugging" bindingContext="_Pbc__NfeEea-cp7hnRSzuA">
    <bindings xmi:id="_PcMm09feEea-cp7hnRSzuA" keySequence="F6" command="_PbYuwtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcN09NfeEea-cp7hnRSzuA" keySequence="CTRL+F5" command="_PbYuxtfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcOcAtfeEea-cp7hnRSzuA" keySequence="F8" command="_PbT2DNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQROdfeEea-cp7hnRSzuA" keySequence="F5" command="_PbT2D9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcQ4UtfeEea-cp7hnRSzuA" keySequence="CTRL+R" command="_PbSn59feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcRfXNfeEea-cp7hnRSzuA" keySequence="F7" command="_PbZVytfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcSGadfeEea-cp7hnRSzuA" keySequence="CTRL+F2" command="_PbXgadfeEea-cp7hnRSzuA"/>
  </bindingTables>
  <bindingTables xmi:id="_PcMm19feEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.memoryview" bindingContext="_Pbc_-tfeEea-cp7hnRSzuA">
    <bindings xmi:id="_PcMm2NfeEea-cp7hnRSzuA" keySequence="ALT+CTRL+N" command="_PbZVptfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcMm2tfeEea-cp7hnRSzuA" keySequence="ALT+CTRL+M" command="_PbZVk9feEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcNN4dfeEea-cp7hnRSzuA" keySequence="CTRL+N" command="_PbUdQdfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPDIdfeEea-cp7hnRSzuA" keySequence="CTRL+T" command="_PbWSeNfeEea-cp7hnRSzuA"/>
    <bindings xmi:id="_PcPqKdfeEea-cp7hnRSzuA" keySequence="CTRL+W" command="_PbT2INfeEea-cp7hnRSzuA"/>
  </bindingTables>
  <bindingTables xmi:id="_PcOcBdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.classFileEditorScope" bindingContext="_Pbc_-9feEea-cp7hnRSzuA">
    <bindings xmi:id="_PcOcBtfeEea-cp7hnRSzuA" keySequence="CTRL+1" command="_PbZ8pdfeEea-cp7hnRSzuA"/>
  </bindingTables>
  <bindingTables xmi:id="_PcQRN9feEea-cp7hnRSzuA" elementId="org.eclipse.buildship.ui.contexts.taskview" bindingContext="_PbdADtfeEea-cp7hnRSzuA">
    <bindings xmi:id="_PcQRONfeEea-cp7hnRSzuA" keySequence="F5" command="_PbYurNfeEea-cp7hnRSzuA"/>
  </bindingTables>
  <bindingTables xmi:id="_PcSGY9feEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.internal.wikitext.ui.editor.basicMarkupSourceContext" bindingContext="_PbdABNfeEea-cp7hnRSzuA">
    <bindings xmi:id="_PcSGZNfeEea-cp7hnRSzuA" keySequence="F1" command="_PbSn6dfeEea-cp7hnRSzuA"/>
  </bindingTables>
  <bindingTables xmi:id="_PcSGZtfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.BreakpointView" bindingContext="_Pbc_8dfeEea-cp7hnRSzuA">
    <bindings xmi:id="_PcSGZ9feEea-cp7hnRSzuA" keySequence="ALT+CR" command="_PbSA2dfeEea-cp7hnRSzuA"/>
  </bindingTables>
  <bindingTables xmi:id="_PcSGbNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.wikitext.tasks.ui.markupSourceContext" bindingContext="_PbdAE9feEea-cp7hnRSzuA">
    <bindings xmi:id="_PcSGbdfeEea-cp7hnRSzuA" keySequence="CTRL+SHIFT+O" command="_PbTO-9feEea-cp7hnRSzuA"/>
  </bindingTables>
  <bindingTables xmi:id="_QQXOsNfeEea-cp7hnRSzuA" bindingContext="_QQWnoNfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQXOstfeEea-cp7hnRSzuA" bindingContext="_QQXOsdfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQX1wdfeEea-cp7hnRSzuA" bindingContext="_QQX1wNfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQX1w9feEea-cp7hnRSzuA" bindingContext="_QQX1wtfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQX1xdfeEea-cp7hnRSzuA" bindingContext="_QQX1xNfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQYc0dfeEea-cp7hnRSzuA" bindingContext="_QQYc0NfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQYc09feEea-cp7hnRSzuA" bindingContext="_QQYc0tfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQYc1dfeEea-cp7hnRSzuA" bindingContext="_QQYc1NfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQZD4dfeEea-cp7hnRSzuA" bindingContext="_QQZD4NfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQZD49feEea-cp7hnRSzuA" bindingContext="_QQZD4tfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQZD5dfeEea-cp7hnRSzuA" bindingContext="_QQZD5NfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQZD59feEea-cp7hnRSzuA" bindingContext="_QQZD5tfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQZq8dfeEea-cp7hnRSzuA" bindingContext="_QQZq8NfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQZq89feEea-cp7hnRSzuA" bindingContext="_QQZq8tfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQaSAdfeEea-cp7hnRSzuA" bindingContext="_QQaSANfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQaSA9feEea-cp7hnRSzuA" bindingContext="_QQaSAtfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQaSBdfeEea-cp7hnRSzuA" bindingContext="_QQaSBNfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQaSB9feEea-cp7hnRSzuA" bindingContext="_QQaSBtfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQa5EdfeEea-cp7hnRSzuA" bindingContext="_QQa5ENfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQa5E9feEea-cp7hnRSzuA" bindingContext="_QQa5EtfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQa5FdfeEea-cp7hnRSzuA" bindingContext="_QQa5FNfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQbgINfeEea-cp7hnRSzuA" bindingContext="_QQa5FtfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQbgItfeEea-cp7hnRSzuA" bindingContext="_QQbgIdfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQbgJNfeEea-cp7hnRSzuA" bindingContext="_QQbgI9feEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQbgJtfeEea-cp7hnRSzuA" bindingContext="_QQbgJdfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQcHMdfeEea-cp7hnRSzuA" bindingContext="_QQcHMNfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQcHM9feEea-cp7hnRSzuA" bindingContext="_QQcHMtfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQcHNdfeEea-cp7hnRSzuA" bindingContext="_QQcHNNfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQcHN9feEea-cp7hnRSzuA" bindingContext="_QQcHNtfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQcuQdfeEea-cp7hnRSzuA" bindingContext="_QQcuQNfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQcuQ9feEea-cp7hnRSzuA" bindingContext="_QQcuQtfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQcuRdfeEea-cp7hnRSzuA" bindingContext="_QQcuRNfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQcuR9feEea-cp7hnRSzuA" bindingContext="_QQcuRtfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQdVUdfeEea-cp7hnRSzuA" bindingContext="_QQdVUNfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQdVU9feEea-cp7hnRSzuA" bindingContext="_QQdVUtfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQdVVdfeEea-cp7hnRSzuA" bindingContext="_QQdVVNfeEea-cp7hnRSzuA"/>
  <bindingTables xmi:id="_QQdVV9feEea-cp7hnRSzuA" bindingContext="_QQdVVtfeEea-cp7hnRSzuA"/>
  <rootContext xmi:id="_PacTVNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.contexts.dialogAndWindow" contributorURI="platform:/plugin/org.eclipse.platform" name="In Dialogs and Windows" description="Either a dialog or a window is open">
    <children xmi:id="_PacTVdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.contexts.window" contributorURI="platform:/plugin/org.eclipse.platform" name="In Windows" description="A window is open">
      <children xmi:id="_PacTVtfeEea-cp7hnRSzuA" elementId="org.eclipse.e4.ui.contexts.views" contributorURI="platform:/plugin/org.eclipse.platform" name="%bindingcontext.name.bindingView"/>
      <children xmi:id="_Pbc_8dfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.BreakpointView" name="In Breakpoints View" description="The breakpoints view context"/>
      <children xmi:id="_Pbc_8tfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.textEditorScope" name="Editing Text" description="Editing Text Context">
        <children xmi:id="_Pbc_89feEea-cp7hnRSzuA" elementId="org.eclipse.wb.core.java.editorScope" name="WindowBuilder Java scope"/>
        <children xmi:id="_Pbc_-dfeEea-cp7hnRSzuA" elementId="Ocaml.editor.context" name="Editing Ocaml Source" description="Context for editing Ocaml source"/>
        <children xmi:id="_Pbc_-9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.classFileEditorScope" name="Browsing attached Java Source" description="Browsing attached Java Source Context"/>
        <children xmi:id="_PbdAANfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.javaEditorScope" name="Editing Java Source" description="Editing Java Source Context"/>
        <children xmi:id="_PbdAAdfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.xsd.ui.text.editor.context" name="Editing XSD context"/>
        <children xmi:id="_PbdAA9feEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.editors.task" name="In Tasks Editor"/>
        <children xmi:id="_PbdABNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.internal.wikitext.ui.editor.basicMarkupSourceContext" name="WikiText Markup Source Context" description="WikiText markup editing context">
          <children xmi:id="_PbdABdfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.wikitext.ui.editor.markupSourceContext" name="WikiText Markup Source Context" description="WikiText markup editing context"/>
          <children xmi:id="_PbdAE9feEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.wikitext.tasks.ui.markupSourceContext" name="Task Markup Editor Source Context"/>
        </children>
        <children xmi:id="_PbdABtfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.sse.ui.structuredTextEditorScope" name="Editing in Structured Text Editors" description="Editing in Structured Text Editors">
          <children xmi:id="_PbdAB9feEea-cp7hnRSzuA" elementId="org.eclipse.wst.xml.navigation" name="XML Source Navigation" description="XML Source Navigation"/>
          <children xmi:id="_PbdACNfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.xml.cleanup" name="XML Source Cleanup" description="XML Source Cleanup"/>
          <children xmi:id="_PbdACdfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.sse.comments" name="Source Comments in Structured Text Editors" description="Source Comments in Structured Text Editors"/>
          <children xmi:id="_PbdACtfeEea-cp7hnRSzuA" elementId="org.eclipse.core.runtime.xml" name="Editing XML Source" description="Editing XML Source"/>
          <children xmi:id="_PbdAC9feEea-cp7hnRSzuA" elementId="org.eclipse.wst.xml.occurrences" name="XML Source Occurrences" description="XML Source Occurrences"/>
          <children xmi:id="_PbdADNfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.xml.grammar" name="XML Source Grammar" description="XML Source Grammar"/>
          <children xmi:id="_PbdADdfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.xml.comments" name="XML Source Comments" description="XML Source Comments"/>
          <children xmi:id="_PbdAENfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.xml.expand" name="XML Source Expand/Collapse" description="XML Source Expand/Collapse"/>
          <children xmi:id="_PbdAFNfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.sse.hideFormat" name="Editing in Structured Text Editors" description="Editing in Structured Text Editors"/>
          <children xmi:id="_PbdAFdfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.xml.selection" name="XML Source Selection" description="XML Source Selection"/>
          <children xmi:id="_PbdAFtfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.xml.dependencies" name="XML Source Dependencies" description="XML Source Dependencies"/>
        </children>
        <children xmi:id="_PbdAEtfeEea-cp7hnRSzuA" elementId="org.eclipse.ant.ui.AntEditorScope" name="Editing Ant Buildfiles" description="Editing Ant Buildfiles Context"/>
        <children xmi:id="_PbdAGNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.propertiesEditorScope" name="Editing Properties Files" description="Editing Properties Files Context"/>
      </children>
      <children xmi:id="_Pbc_9dfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.console" name="In I/O Console" description="In I/O console"/>
      <children xmi:id="_Pbc_9tfeEea-cp7hnRSzuA" elementId="org.eclipse.compare.compareEditorScope" name="Comparing in an Editor" description="Comparing in an Editor"/>
      <children xmi:id="_Pbc_-NfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.console.ConsoleView" name="In Console View" description="In Console View"/>
      <children xmi:id="_Pbc_-tfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.memoryview" name="In Memory View" description="In memory view"/>
      <children xmi:id="_Pbc__NfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.debugging" name="Debugging" description="Debugging programs">
        <children xmi:id="_Pbc__dfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.memory.abstractasynctablerendering" name="In Table Memory Rendering" description="In Table Memory Rendering"/>
        <children xmi:id="_PbdAF9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.debug.ui.debugging" name="Debugging Java" description="Debugging Java programs"/>
      </children>
      <children xmi:id="_Pbc__tfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.ReflogView" name="In Git Reflog View"/>
      <children xmi:id="_PbdAAtfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.views.tasks" name="In Tasks View"/>
      <children xmi:id="_PbdADtfeEea-cp7hnRSzuA" elementId="org.eclipse.buildship.ui.contexts.taskview" name="In Gradle Tasks View" description="This context is activated when the Gradle Tasks view is in focus"/>
      <children xmi:id="_PbdAEdfeEea-cp7hnRSzuA" elementId="org.eclipse.buildship.ui.contexts.gradlenature" name="Context for selected IProjects with Gradle nature" description="This context is activated when the selection contains an IProject with the Gradle nature"/>
      <children xmi:id="_PbdAGdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesView" name="In Git Repositories View"/>
    </children>
    <children xmi:id="_PacTV9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.contexts.dialog" contributorURI="platform:/plugin/org.eclipse.platform" name="In Dialogs" description="A dialog is open"/>
  </rootContext>
  <rootContext xmi:id="_Pbc_8NfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.xsd.ui.editor.designView" name="XSD Editor Design View" description="XSD Editor Design View"/>
  <rootContext xmi:id="_Pbc_9NfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.contexts.actionSet" name="Action Set" description="Parent context for action sets"/>
  <rootContext xmi:id="_Pbc_99feEea-cp7hnRSzuA" elementId="org.eclipse.ui.contexts.workbenchMenu" name="Workbench Menu" description="When no Workbench windows are active"/>
  <rootContext xmi:id="_Pbc__9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.breadcrumbEditorScope" name="Editor Breadcrumb Navigation" description="Editor Breadcrumb Navigation Context"/>
  <rootContext xmi:id="_PbdAD9feEea-cp7hnRSzuA" elementId="org.eclipse.wst.xsd.ui.editor.sourceView" name="XSD Editor Source View" description="XSD Editor Source View"/>
  <rootContext xmi:id="_QQWnoNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.junit.JUnitActionSet" name="Auto::org.eclipse.jdt.junit.JUnitActionSet"/>
  <rootContext xmi:id="_QQXOsdfeEea-cp7hnRSzuA" elementId="org.eclipse.search.searchActionSet" name="Auto::org.eclipse.search.searchActionSet"/>
  <rootContext xmi:id="_QQX1wNfeEea-cp7hnRSzuA" elementId="org.eclipse.team.ui.actionSet" name="Auto::org.eclipse.team.ui.actionSet"/>
  <rootContext xmi:id="_QQX1wtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.actionSet.annotationNavigation" name="Auto::org.eclipse.ui.edit.text.actionSet.annotationNavigation"/>
  <rootContext xmi:id="_QQX1xNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.actionSet.navigation" name="Auto::org.eclipse.ui.edit.text.actionSet.navigation"/>
  <rootContext xmi:id="_QQYc0NfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.actionSet.convertLineDelimitersTo" name="Auto::org.eclipse.ui.edit.text.actionSet.convertLineDelimitersTo"/>
  <rootContext xmi:id="_QQYc0tfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.externaltools.ExternalToolsSet" name="Auto::org.eclipse.ui.externaltools.ExternalToolsSet"/>
  <rootContext xmi:id="_QQYc1NfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.NavigateActionSet" name="Auto::org.eclipse.ui.NavigateActionSet"/>
  <rootContext xmi:id="_QQZD4NfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.actionSet.keyBindings" name="Auto::org.eclipse.ui.actionSet.keyBindings"/>
  <rootContext xmi:id="_QQZD4tfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.WorkingSetModificationActionSet" name="Auto::org.eclipse.ui.WorkingSetModificationActionSet"/>
  <rootContext xmi:id="_QQZD5NfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.WorkingSetActionSet" name="Auto::org.eclipse.ui.WorkingSetActionSet"/>
  <rootContext xmi:id="_QQZD5tfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.actionSet.openFiles" name="Auto::org.eclipse.ui.actionSet.openFiles"/>
  <rootContext xmi:id="_QQZq8NfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.actionSet.presentation" name="Auto::org.eclipse.ui.edit.text.actionSet.presentation"/>
  <rootContext xmi:id="_QQZq8tfeEea-cp7hnRSzuA" elementId="org.eclipse.wb.core.ui.actionset" name="Auto::org.eclipse.wb.core.ui.actionset"/>
  <rootContext xmi:id="_QQaSANfeEea-cp7hnRSzuA" elementId="Ocaml_debuggingActionSet" name="Auto::Ocaml_debuggingActionSet"/>
  <rootContext xmi:id="_QQaSAtfeEea-cp7hnRSzuA" elementId="Ocaml_sourceActionSet" name="Auto::Ocaml_sourceActionSet"/>
  <rootContext xmi:id="_QQaSBNfeEea-cp7hnRSzuA" elementId="org.eclipse.ant.ui.actionSet.presentation" name="Auto::org.eclipse.ant.ui.actionSet.presentation"/>
  <rootContext xmi:id="_QQaSBtfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.breakpointActionSet" name="Auto::org.eclipse.debug.ui.breakpointActionSet"/>
  <rootContext xmi:id="_QQa5ENfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.debugActionSet" name="Auto::org.eclipse.debug.ui.debugActionSet"/>
  <rootContext xmi:id="_QQa5EtfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.launchActionSet" name="Auto::org.eclipse.debug.ui.launchActionSet"/>
  <rootContext xmi:id="_QQa5FNfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.profileActionSet" name="Auto::org.eclipse.debug.ui.profileActionSet"/>
  <rootContext xmi:id="_QQa5FtfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.gitaction" name="Auto::org.eclipse.egit.ui.gitaction"/>
  <rootContext xmi:id="_QQbgIdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.navigation" name="Auto::org.eclipse.egit.ui.navigation"/>
  <rootContext xmi:id="_QQbgI9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.debug.ui.JDTDebugActionSet" name="Auto::org.eclipse.jdt.debug.ui.JDTDebugActionSet"/>
  <rootContext xmi:id="_QQbgJdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.text.java.actionSet.presentation" name="Auto::org.eclipse.jdt.ui.text.java.actionSet.presentation"/>
  <rootContext xmi:id="_QQcHMNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.JavaElementCreationActionSet" name="Auto::org.eclipse.jdt.ui.JavaElementCreationActionSet"/>
  <rootContext xmi:id="_QQcHMtfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.JavaActionSet" name="Auto::org.eclipse.jdt.ui.JavaActionSet"/>
  <rootContext xmi:id="_QQcHNNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.A_OpenActionSet" name="Auto::org.eclipse.jdt.ui.A_OpenActionSet"/>
  <rootContext xmi:id="_QQcHNtfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.CodingActionSet" name="Auto::org.eclipse.jdt.ui.CodingActionSet"/>
  <rootContext xmi:id="_QQcuQNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.SearchActionSet" name="Auto::org.eclipse.jdt.ui.SearchActionSet"/>
  <rootContext xmi:id="_QQcuQtfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.context.ui.actionSet" name="Auto::org.eclipse.mylyn.context.ui.actionSet"/>
  <rootContext xmi:id="_QQcuRNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.java.actionSet" name="Auto::org.eclipse.mylyn.java.actionSet"/>
  <rootContext xmi:id="_QQcuRtfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.java.actionSet.browsing" name="Auto::org.eclipse.mylyn.java.actionSet.browsing"/>
  <rootContext xmi:id="_QQdVUNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.doc.actionSet" name="Auto::org.eclipse.mylyn.doc.actionSet"/>
  <rootContext xmi:id="_QQdVUtfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.navigation" name="Auto::org.eclipse.mylyn.tasks.ui.navigation"/>
  <rootContext xmi:id="_QQdVVNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.navigation.additions" name="Auto::org.eclipse.mylyn.tasks.ui.navigation.additions"/>
  <rootContext xmi:id="_QQdVVtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.cheatsheets.actionSet" name="Auto::org.eclipse.ui.cheatsheets.actionSet"/>
  <descriptors xmi:id="_Pez18NfeEea-cp7hnRSzuA" elementId="org.eclipse.e4.ui.compatibility.editor" allowMultiple="true" category="org.eclipse.e4.primaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityEditor">
    <tags>Editor</tags>
  </descriptors>
  <descriptors xmi:id="_Pe1rINfeEea-cp7hnRSzuA" elementId="org.eclipse.gef.ui.palette_view" label="Palette" iconURI="platform:/plugin/org.eclipse.gef/icons/palette_view.gif" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_Pe7xwNfeEea-cp7hnRSzuA" elementId="org.eclipse.help.ui.HelpView" label="Help" iconURI="platform:/plugin/org.eclipse.help.ui/icons/view16/help_view.gif" tooltip="" category="Help" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Help</tags>
  </descriptors>
  <descriptors xmi:id="_Pe8Y0NfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.junit.ResultView" label="JUnit" iconURI="platform:/plugin/org.eclipse.jdt.junit/icons/full/eview16/junit.gif" tooltip="" category="Java" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java</tags>
  </descriptors>
  <descriptors xmi:id="_Pe9m8NfeEea-cp7hnRSzuA" elementId="org.eclipse.m2e.core.views.MavenRepositoryView" label="Maven Repositories" iconURI="platform:/plugin/org.eclipse.m2e.core.ui/icons/maven_indexes.gif" tooltip="" category="Maven" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Maven</tags>
  </descriptors>
  <descriptors xmi:id="_Pe-1ENfeEea-cp7hnRSzuA" elementId="org.eclipse.m2e.core.views.MavenBuild" label="Maven Workspace Build" iconURI="platform:/plugin/org.eclipse.ui/icons/full/eview16/defaultview_misc.png" tooltip="" category="Maven" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Maven</tags>
  </descriptors>
  <descriptors xmi:id="_Pe_cINfeEea-cp7hnRSzuA" elementId="org.eclipse.search.SearchResultView" label="Classic Search" iconURI="platform:/plugin/org.eclipse.search/icons/full/eview16/searchres.gif" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_PfADMNfeEea-cp7hnRSzuA" elementId="org.eclipse.search.ui.views.SearchView" label="Search" iconURI="platform:/plugin/org.eclipse.search/icons/full/eview16/searchres.gif" tooltip="" allowMultiple="true" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_PfAqQNfeEea-cp7hnRSzuA" elementId="org.eclipse.team.sync.views.SynchronizeView" label="Synchronize" iconURI="platform:/plugin/org.eclipse.team.ui/icons/full/eview16/synch_synch.gif" tooltip="" allowMultiple="true" category="Team" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Team</tags>
  </descriptors>
  <descriptors xmi:id="_PfB4YNfeEea-cp7hnRSzuA" elementId="org.eclipse.team.ui.GenericHistoryView" label="History" iconURI="platform:/plugin/org.eclipse.team.ui/icons/full/eview16/history_view.gif" tooltip="" allowMultiple="true" category="Team" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Team</tags>
  </descriptors>
  <descriptors xmi:id="_PfB4YdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.internal.introview" label="Welcome" iconURI="platform:/plugin/org.eclipse.ui/icons/full/eview16/defaultview_misc.png" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_PfCfcNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.browser.view" label="Internal Web Browser" iconURI="platform:/plugin/org.eclipse.ui.browser/icons/obj16/internal_browser.gif" tooltip="" allowMultiple="true" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_PfDGgNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.cheatsheets.views.CheatSheetView" label="Cheat Sheets" iconURI="platform:/plugin/org.eclipse.ui.cheatsheets/icons/view16/cheatsheet_view.gif" tooltip="" category="Help" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Help</tags>
  </descriptors>
  <descriptors xmi:id="_PfDtkNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.console.ConsoleView" label="Console" iconURI="platform:/plugin/org.eclipse.ui.console/icons/full/cview16/console_view.png" tooltip="" allowMultiple="true" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_PfEUoNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.ProgressView" label="Progress" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/pview.png" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_PfE7sNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.ResourceNavigator" label="Navigator" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/filenav_nav.png" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_PfFiwNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.BookmarkView" label="Bookmarks" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/bkmrk_nav.png" tooltip="" allowMultiple="true" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_PfFiwdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.TaskList" label="Tasks" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/tasks_tsk.png" tooltip="" allowMultiple="true" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_PfGJ0NfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.ProblemView" label="Problems" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/problems_view.png" tooltip="" allowMultiple="true" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_PfGw4NfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.AllMarkersView" label="Markers" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/problems_view.png" tooltip="" allowMultiple="true" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_PfHX8NfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.PropertySheet" label="Properties" iconURI="platform:/plugin/org.eclipse.ui.views/icons/full/eview16/prop_ps.png" tooltip="" allowMultiple="true" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_PfHX8dfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.ContentOutline" label="Outline" iconURI="platform:/plugin/org.eclipse.ui.views/icons/full/eview16/outline_co.png" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_PfH_ANfeEea-cp7hnRSzuA" elementId="org.eclipse.pde.runtime.LogView" label="Error Log" iconURI="platform:/plugin/org.eclipse.ui.views.log/icons/eview16/error_log.gif" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_PfImENfeEea-cp7hnRSzuA" elementId="org.eclipse.wb.core.StructureView" label="Structure" iconURI="platform:/plugin/org.eclipse.wb.core/icons/structure/properties_view.gif" tooltip="" category="WindowBuilder" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:WindowBuilder</tags>
  </descriptors>
  <descriptors xmi:id="_PfJNINfeEea-cp7hnRSzuA" elementId="org.eclipse.wb.core.PaletteView" label="Palette" iconURI="platform:/plugin/org.eclipse.wb.core/icons/structure/palette.png" tooltip="" category="WindowBuilder" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:WindowBuilder</tags>
  </descriptors>
  <descriptors xmi:id="_PfJ0MNfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.common.snippets.internal.ui.SnippetsView" label="Snippets" iconURI="platform:/plugin/org.eclipse.wst.common.snippets/icons/snippets_view.gif" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_PfJ0MdfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.xml.ui.views.annotations.XMLAnnotationsView" label="Documentation" iconURI="platform:/plugin/org.eclipse.wst.xml.ui/icons/full/obj16/comment_obj.gif" tooltip="" category="XML" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:XML</tags>
  </descriptors>
  <descriptors xmi:id="_PfKbQNfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.xml.ui.contentmodel.view" label="Content Model" iconURI="platform:/plugin/org.eclipse.wst.xml.ui/icons/full/view16/hierarchy.gif" tooltip="" category="XML" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:XML</tags>
  </descriptors>
  <descriptors xmi:id="_PfLCUNfeEea-cp7hnRSzuA" elementId="ocaml.ocamlCompilerOutput" label="OCaml Compiler Output" iconURI="platform:/plugin/Ocaml/icons/caml16x16.gif" tooltip="" category="OCaml" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:OCaml</tags>
  </descriptors>
  <descriptors xmi:id="_PfLpYNfeEea-cp7hnRSzuA" elementId="ocaml.ocamlBrowserView" label="OCaml Browser" iconURI="platform:/plugin/Ocaml/icons/camlPurple16x16.gif" tooltip="" category="OCaml" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:OCaml</tags>
  </descriptors>
  <descriptors xmi:id="_PfMQcNfeEea-cp7hnRSzuA" elementId="Ocaml.ocamlToplevelView" label="OCaml Toplevel" iconURI="platform:/plugin/Ocaml/icons/toplevelViewIcon.gif" tooltip="" allowMultiple="true" category="OCaml" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:OCaml</tags>
  </descriptors>
  <descriptors xmi:id="_PfMQcdfeEea-cp7hnRSzuA" elementId="Ocaml.ocamlCustomToplevelView" label="OCaml Custom Toplevel" iconURI="platform:/plugin/Ocaml/icons/toplevelViewIcon.gif" tooltip="" allowMultiple="true" category="OCaml" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:OCaml</tags>
  </descriptors>
  <descriptors xmi:id="_PfM3gNfeEea-cp7hnRSzuA" elementId="Ocaml.CallStackView" label="Ocaml Call Stack" iconURI="platform:/plugin/Ocaml/icons/stackframe.gif" tooltip="" category="Ocaml Debugging" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Ocaml Debugging</tags>
  </descriptors>
  <descriptors xmi:id="_PfNekNfeEea-cp7hnRSzuA" elementId="Ocaml.BreakpointsView" label="Ocaml Breakpoints" iconURI="platform:/plugin/Ocaml/icons/breakpoint_view.gif" tooltip="" category="Ocaml Debugging" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Ocaml Debugging</tags>
  </descriptors>
  <descriptors xmi:id="_PfNekdfeEea-cp7hnRSzuA" elementId="Ocaml.WatchView" label="Ocaml Variable Watch" iconURI="platform:/plugin/Ocaml/icons/watchlist.gif" tooltip="" category="Ocaml Debugging" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Ocaml Debugging</tags>
  </descriptors>
  <descriptors xmi:id="_PfOFoNfeEea-cp7hnRSzuA" elementId="Ocaml.ocamlASTView" label="AST" iconURI="platform:/plugin/Ocaml/icons/astview.gif" tooltip="" category="OCaml" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:OCaml</tags>
  </descriptors>
  <descriptors xmi:id="_PfOFodfeEea-cp7hnRSzuA" elementId="org.eclipse.ant.ui.views.AntView" label="Ant" iconURI="platform:/plugin/org.eclipse.ant.ui/icons/full/eview16/ant_view.png" tooltip="" category="Ant" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Ant</tags>
  </descriptors>
  <descriptors xmi:id="_PfOssNfeEea-cp7hnRSzuA" elementId="org.eclipse.buildship.ui.views.taskview" label="Gradle Tasks" iconURI="platform:/plugin/org.eclipse.buildship.ui/icons/full/eview16/tasks_view.png" tooltip="" category="Gradle" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Gradle</tags>
  </descriptors>
  <descriptors xmi:id="_PfPTwNfeEea-cp7hnRSzuA" elementId="org.eclipse.buildship.ui.views.executionview" label="Gradle Executions" iconURI="platform:/plugin/org.eclipse.buildship.ui/icons/full/eview16/executions_view.png" tooltip="" category="Gradle" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Gradle</tags>
  </descriptors>
  <descriptors xmi:id="_PfPTwdfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.DebugView" label="Debug" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/debug_view.png" tooltip="" category="Debug" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Debug</tags>
  </descriptors>
  <descriptors xmi:id="_PfP60NfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.BreakpointView" label="Breakpoints" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/breakpoint_view.png" tooltip="" allowMultiple="true" category="Debug" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Debug</tags>
  </descriptors>
  <descriptors xmi:id="_PfQh4NfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.VariableView" label="Variables" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/variable_view.png" tooltip="" allowMultiple="true" category="Debug" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Debug</tags>
  </descriptors>
  <descriptors xmi:id="_PfRI8NfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.ExpressionView" label="Expressions" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/watchlist_view.png" tooltip="" allowMultiple="true" category="Debug" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Debug</tags>
  </descriptors>
  <descriptors xmi:id="_PfRwANfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.RegisterView" label="Registers" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/register_view.png" tooltip="" allowMultiple="true" category="Debug" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Debug</tags>
  </descriptors>
  <descriptors xmi:id="_PfRwAdfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.ModuleView" label="Modules" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/module_view.png" tooltip="" allowMultiple="true" category="Debug" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Debug</tags>
  </descriptors>
  <descriptors xmi:id="_PfSXENfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.MemoryView" label="Memory" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/memory_view.png" tooltip="" allowMultiple="true" category="Debug" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Debug</tags>
  </descriptors>
  <descriptors xmi:id="_PfSXEdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesView" label="Git Repositories" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/repo_rep.gif" tooltip="" category="Git" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Git</tags>
  </descriptors>
  <descriptors xmi:id="_PfS-INfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.StagingView" label="Git Staging" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/staging.png" tooltip="" category="Git" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Git</tags>
  </descriptors>
  <descriptors xmi:id="_PfTlMNfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.InteractiveRebaseView" label="Git Interactive Rebase" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/rebase_interactive.gif" tooltip="" category="Git" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Git</tags>
  </descriptors>
  <descriptors xmi:id="_PfTlMdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.CompareTreeView" label="Git Tree Compare" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/obj16/gitrepository.gif" tooltip="" category="Git" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Git</tags>
  </descriptors>
  <descriptors xmi:id="_PfTlMtfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.ReflogView" label="Git Reflog" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/reflog.gif" tooltip="" category="Git" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Git</tags>
  </descriptors>
  <descriptors xmi:id="_PfUMQNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.debug.ui.DisplayView" label="Display" iconURI="platform:/plugin/org.eclipse.jdt.debug.ui/icons/full/etool16/disp_sbook.gif" tooltip="" category="Debug" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Debug</tags>
  </descriptors>
  <descriptors xmi:id="_PfUzUNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.PackageExplorer" label="Package Explorer" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/package.png" tooltip="" category="Java" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java</tags>
  </descriptors>
  <descriptors xmi:id="_PfVaYNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.TypeHierarchy" label="Type Hierarchy" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/class_hi.png" tooltip="" category="Java" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java</tags>
  </descriptors>
  <descriptors xmi:id="_PfWBcNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.ProjectsView" label="Projects" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/projects.png" tooltip="" category="Java Browsing" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java Browsing</tags>
  </descriptors>
  <descriptors xmi:id="_PfWBcdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.PackagesView" label="Packages" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/packages.png" tooltip="" category="Java Browsing" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java Browsing</tags>
  </descriptors>
  <descriptors xmi:id="_PfWogNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.TypesView" label="Types" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/types.png" tooltip="" category="Java Browsing" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java Browsing</tags>
  </descriptors>
  <descriptors xmi:id="_PfWogdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.MembersView" label="Members" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/members.png" tooltip="" category="Java Browsing" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java Browsing</tags>
  </descriptors>
  <descriptors xmi:id="_PfXPkNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.callhierarchy.view" label="Call Hierarchy" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/call_hierarchy.png" tooltip="" allowMultiple="true" category="Java" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java</tags>
  </descriptors>
  <descriptors xmi:id="_PfXPkdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.texteditor.TemplatesView" label="Templates" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/templates.png" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_PfX2oNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.SourceView" label="Declaration" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/source.png" tooltip="" category="Java" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java</tags>
  </descriptors>
  <descriptors xmi:id="_PfX2odfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.JavadocView" label="Javadoc" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/javadoc.png" tooltip="" category="Java" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java</tags>
  </descriptors>
  <descriptors xmi:id="_PfYdsNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.builds.navigator.builds" label="Builds" iconURI="platform:/plugin/org.eclipse.mylyn.builds.ui/icons/eview16/build-view.png" tooltip="" category="Mylyn" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Mylyn</tags>
  </descriptors>
  <descriptors xmi:id="_PfYdsdfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.commons.repositories.ui.navigator.Repositories" label="Team Repositories" iconURI="platform:/plugin/org.eclipse.mylyn.commons.repositories.ui/icons/eview16/repositories.gif" tooltip="" category="Mylyn" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Mylyn</tags>
  </descriptors>
  <descriptors xmi:id="_PfZEwNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.views.tasks" label="Task List" iconURI="platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.gif" tooltip="" allowMultiple="true" category="Mylyn" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Mylyn</tags>
  </descriptors>
  <descriptors xmi:id="_PfZr0NfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.views.repositories" label="Task Repositories" iconURI="platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/repositories.gif" tooltip="" category="Mylyn" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Mylyn</tags>
  </descriptors>
  <descriptors xmi:id="_PfZr0dfeEea-cp7hnRSzuA" elementId="org.eclipse.oomph.p2.ui.RepositoryExplorer" label="Repository Explorer" iconURI="platform:/plugin/org.eclipse.oomph.p2.ui/icons/obj16/repository.gif" tooltip="" category="Oomph" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Oomph</tags>
  </descriptors>
  <descriptors xmi:id="_PfaS4NfeEea-cp7hnRSzuA" elementId="org.eclipse.recommenders.apidocs.rcp.views.apidocs" label="API Docs" iconURI="platform:/plugin/org.eclipse.recommenders.apidocs.rcp/icons/view16/apidocs.png" tooltip="" category="Code Recommenders" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Code Recommenders</tags>
  </descriptors>
  <descriptors xmi:id="_PfaS4dfeEea-cp7hnRSzuA" elementId="org.eclipse.recommenders.models.rcp.views.projectCoordinates" label="Project Coordinates" iconURI="platform:/plugin/org.eclipse.recommenders.coordinates.rcp/icons/view16/depinsp.gif" tooltip="" category="Code Recommenders" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Code Recommenders</tags>
  </descriptors>
  <descriptors xmi:id="_Pfa58NfeEea-cp7hnRSzuA" elementId="org.eclipse.recommenders.models.rcp.views.modelRepositories" label="Model Repositories" iconURI="platform:/plugin/org.eclipse.recommenders.models.rcp/icons/view16/depinsp.gif" tooltip="" category="Code Recommenders" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Code Recommenders</tags>
  </descriptors>
  <descriptors xmi:id="_Pfa58dfeEea-cp7hnRSzuA" elementId="org.eclipse.recommenders.models.rcp.views.dependencyOverview" label="Dependency Overview" iconURI="platform:/plugin/org.eclipse.recommenders.models.rcp/icons/view16/depinsp.gif" tooltip="" category="Code Recommenders" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Code Recommenders</tags>
  </descriptors>
  <descriptors xmi:id="_PfbhANfeEea-cp7hnRSzuA" elementId="org.eclipse.recommenders.snipmatch.rcp.views.snippets" label="Snippets" iconURI="platform:/plugin/org.eclipse.recommenders.snipmatch.rcp/icons/view16/snippets.png" tooltip="" category="Code Recommenders" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Code Recommenders</tags>
  </descriptors>
  <descriptors xmi:id="_PfbhAdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigator.ProjectExplorer" label="Project Explorer" iconURI="platform:/plugin/org.eclipse.ui.navigator.resources/icons/full/eview16/resource_persp.gif" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <trimContributions xmi:id="_2r10UF9tEeO-yojH_y4TJA" elementId="org.eclipse.ui.ide.application.trimcontribution.QuickAccess" contributorURI="platform:/plugin/org.eclipse.ui.ide.application" toBeRendered="false" parentId="org.eclipse.ui.main.toolbar" positionInParent="last">
    <children xsi:type="menu:ToolControl" xmi:id="_76uUAF9tEeO-yojH_y4TJA" elementId="Spacer Glue" contributorURI="platform:/plugin/org.eclipse.ui.ide.application" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.LayoutModifierToolControl">
      <tags>glue</tags>
      <tags>move_after:PerspectiveSpacer</tags>
      <tags>SHOW_RESTORE_MENU</tags>
    </children>
    <children xsi:type="menu:ToolControl" xmi:id="_8tJPcF9tEeO-yojH_y4TJA" elementId="SearchField" contributorURI="platform:/plugin/org.eclipse.ui.ide.application" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.quickaccess.SearchField">
      <tags>move_after:Spacer Glue</tags>
      <tags>HIDEABLE</tags>
      <tags>SHOW_RESTORE_MENU</tags>
    </children>
    <children xsi:type="menu:ToolControl" xmi:id="_9LgmcF9tEeO-yojH_y4TJA" elementId="Search-PS Glue" contributorURI="platform:/plugin/org.eclipse.ui.ide.application" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.LayoutModifierToolControl">
      <tags>glue</tags>
      <tags>move_after:SearchField</tags>
      <tags>SHOW_RESTORE_MENU</tags>
    </children>
  </trimContributions>
  <commands xmi:id="_PbRZwNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.correction.inlineLocal.assist" commandName="Quick Assist - Inline local variable" description="Invokes quick assist and selects 'Inline local variable'" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbRZwdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.select.pageUp" commandName="Select Page Up" description="Select to the top of the page" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSA0NfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.ResetQuickdiffBaseline" commandName="Reset quickdiff baseline" category="_PbQyytfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbSA0dfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.ResetQuickdiffBaselineTarget" name="Reset target (HEAD, HEAD^1)" optional="false"/>
  </commands>
  <commands xmi:id="_PbSA0tfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.surround.with.quickMenu" commandName="Surround With Quick Menu" description="Shows the Surround With quick menu" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSA09feEea-cp7hnRSzuA" elementId="Ocaml.openIntfImplCommand" commandName="Open interface/implementation" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSA1NfeEea-cp7hnRSzuA" elementId="org.eclipse.search.ui.openFileSearchPage" commandName="File Search" description="Open the Search dialog's file search page" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSA1dfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.correction.convertLocalToField.assist" commandName="Quick Assist - Convert local variable to field" description="Invokes quick assist and selects 'Convert local variable to field'" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSA1tfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.search.implementors.in.workspace" commandName="Implementors in Workspace" description="Search for implementors of the selected interface" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSA19feEea-cp7hnRSzuA" elementId="org.eclipse.wb.core.commands.switch" commandName="Switch Source/Design Views" description="Switch between the Source and Design views." category="_PbQLo9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSA2NfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesViewAddRepository" commandName="Add a Git Repository" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSA2dfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.debug.ui.breakpoint.properties" commandName="Java Breakpoint Properties" description="View and edit the properties for a given Java breakpoint" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSA2tfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.correction.addThrowsDecl" commandName="Quick Fix - Add throws declaration" description="Invokes quick assist and selects 'Add throws declaration'" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSA29feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.navigate.open.type.in.hierarchy" commandName="Open Type in Hierarchy" description="Open a type in the type hierarchy view" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSA3NfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.task.clearActiveTime" commandName="Clear Active Time" category="_PbQyttfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSA3dfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.ide.copyBuildIdCommand" commandName="Copy Build Id To Clipboard" description="Copies the build id to the clipboard." category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSA3tfeEea-cp7hnRSzuA" elementId="Ocaml.spacesToTabsCommand" commandName="Convert Spaces to Tabs" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSA39feEea-cp7hnRSzuA" elementId="org.eclipse.buildship.ui.commands.refreshproject" commandName="Refresh Gradle Project" description="Refreshes the selected Gradle project" category="_PbQLp9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSA4NfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.select.textEnd" commandName="Select Text End" description="Select to the end of the text" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSA4dfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.context.ui.commands.task.attachContext" commandName="Attach Context" category="_PbQytNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSA4tfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.deletePreviousWord" commandName="Delete Previous Word" description="Delete the previous word" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSA49feEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.goto.wordPrevious" commandName="Previous Word" description="Go to the previous word" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSA5NfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.search.declarations.in.workspace" commandName="Declaration in Workspace" description="Search for declarations of the selected element in the workspace" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSA5dfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.preferences" commandName="Preferences" description="Open the preferences dialog" category="_PbQyu9feEea-cp7hnRSzuA">
    <parameters xmi:id="_PbSA5tfeEea-cp7hnRSzuA" elementId="preferencePageId" name="Preference Page"/>
  </commands>
  <commands xmi:id="_PbSA59feEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.delimiter.unix" commandName="Convert Line Delimiters to Unix (LF, \n, 0A, &#xb6;)" description="Converts the line delimiters to Unix (LF, \n, 0A, &#xb6;)" category="_PbQyudfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSA6NfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.search.read.access.in.working.set" commandName="Read Access in Working Set" description="Search for read references to the selected element in a working set" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSA6dfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.commit.Squash" commandName="Squash Commits" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSA6tfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.Edit" commandName="Edit Commit" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn4NfeEea-cp7hnRSzuA" elementId="org.eclipse.epp.mpc.ui.command.showMarketplaceWizard" commandName="Eclipse Marketplace" description="Show the Eclipse Marketplace wizard" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn4dfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.copy" commandName="Copy" description="Copy the selection to the clipboard" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn4tfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.nextView" commandName="Next View" description="Switch to the next view" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn49feEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.revertToSaved" commandName="Revert to Saved" description="Revert to the last saved state" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn5NfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.properties.NewPropertySheetCommand" commandName="Properties" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn5dfeEea-cp7hnRSzuA" elementId="org.eclipse.ant.ui.toggleMarkOccurrences" commandName="Toggle Ant Mark Occurrences" description="Toggles mark occurrences in Ant editors" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn5tfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigate.addToWorkingSet" commandName="Add to Working Set" description="Adds the selected object to a working set." category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn59feEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.RunToLine" commandName="Run to Line" description="Resume and break when execution reaches the current line" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn6NfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.junit.junitShortcut.debug" commandName="Debug JUnit Test" description="Debug JUnit Test" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn6dfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.wikitext.ui.editor.showCheatSheetCommand" commandName="Show Markup Cheat Sheet" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn6tfeEea-cp7hnRSzuA" elementId="org.eclipse.team.ui.TeamSynchronizingPerspective" commandName="Team Synchronizing" description="Open the Team Synchronizing Perspective" category="_PbQyxNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn69feEea-cp7hnRSzuA" elementId="org.eclipse.ant.ui.open.declaration.command" commandName="Open Declaration" description="Opens the Ant editor on the referenced element" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn7NfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesViewPaste" commandName="Paste Repository Path or URI" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn7dfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.showChangeRulerInformation" commandName="Show Quick Diff Ruler Tooltip" description="Displays quick diff or revision information for the caret line in a focused hover" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn7tfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.upperCase" commandName="To Upper Case" description="Changes the selection to upper case" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn79feEea-cp7hnRSzuA" elementId="org.eclipse.recommenders.utils.rcp.commands.openBrowserDialog" commandName="Open a Web browser" category="_PbQyytfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbSn8NfeEea-cp7hnRSzuA" elementId="org.eclipse.recommenders.utils.rcp.linkContribution.href" name="URI" optional="false"/>
  </commands>
  <commands xmi:id="_PbSn8dfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigate.goInto" commandName="Go Into" description="Navigate into the selected item" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn8tfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.ConfigureFetch" commandName="Configure Upstream Fetch" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn89feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.ConfigureUpstreamPush" commandName="Configure Upstream Push" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn9NfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.OpenRunConfigurations" commandName="Run..." description="Open run launch configuration dialog" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn9dfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.create.delegate.methods" commandName="Generate Delegate Methods" description="Add delegate methods for a type's fields" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn9tfeEea-cp7hnRSzuA" elementId="org.eclipse.gef.ui.palette_view" commandName="Palette" category="_PbQLodfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn99feEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.select.windowEnd" commandName="Select Window End" description="Select to the end of the window" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn-NfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.minimizePart" commandName="Minimize Active View or Editor" description="Minimizes the active view or editor" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn-dfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.context.ui.commands.task.clearContext" commandName="Clear Context" category="_PbQytNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn-tfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.Untrack" commandName="Untrack" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn-9feEea-cp7hnRSzuA" elementId="org.eclipse.wst.sse.ui.add.block.comment" commandName="Add Block Comment" description="Add Block Comment" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn_NfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.showSystemMenu" commandName="Show System Menu" description="Show the system menu" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn_dfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.ToggleLineBreakpoint" commandName="Toggle Line Breakpoint" description="Creates or removes a line breakpoint" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn_tfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.searchForTask" commandName="Search Repository for Task" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSn_9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.debug.ui.commands.AllInstances" commandName="All Instances" description="View all instances of the selected type loaded in the target VM" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSoANfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.OpenInCommitViewerCommand" commandName="Open in Commit Viewer" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSoAdfeEea-cp7hnRSzuA" elementId="org.eclipse.m2e.actions.LifeCycleTest.run" commandName="Run Maven Test" description="Run Maven Test" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSoAtfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.toggle.comment" commandName="Toggle Comment" description="Toggle comment the selected lines" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSoA9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.correction.addImport" commandName="Quick Fix - Add import" description="Invokes quick assist and selects 'Add import'" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSoBNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.savePerspective" commandName="Save Perspective As" description="Save the current perspective" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSoBdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.internal.reflog.CheckoutCommand" commandName="Checkout" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSoBtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.move" commandName="Move..." description="Move the selected item" category="_PbQyudfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSoB9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.refactor.migrate.jar" commandName="Migrate JAR File" description="Migrate a JAR File to a new version" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSoCNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.correction.assignParamToField.assist" commandName="Quick Assist - Assign parameter to field" description="Invokes quick assist and selects 'Assign parameter to field'" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSoCdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.command.configureTrace" commandName="Configure Git Debug Trace" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSoCtfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.maximizePart" commandName="Maximize Part" description="Maximize Part" category="_PbQLpdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSoC9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.move.inner.to.top.level" commandName="Move Type to New File" description="Move Type to New File" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSoDNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigate.linkWithEditor" commandName="Toggle Link with Editor " description="Toggles linking of a view's selection with the active editor's selection" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSoDdfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.sse.ui.open.file.from.source" commandName="Open Selection" description="Open an editor on the selected link" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSoDtfeEea-cp7hnRSzuA" elementId="org.eclipse.compare.ignoreWhiteSpace" commandName="Ignore White Space" description="Ignore white space where applicable" category="_PbQyutfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSoD9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.open.hierarchy" commandName="Quick Hierarchy" description="Show the quick hierarchy of the selected element" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSoENfeEea-cp7hnRSzuA" elementId="org.eclipse.oomph.setup.editor.importProjects" commandName="Import Projects" category="_PbQystfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbSoEdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.generate.constructor.using.fields" commandName="Generate Constructor using Fields" description="Choose fields to initialize and constructor from superclass to call " category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTO8NfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.builds.ui.command.ShowTestResults" commandName="Show Test Results" category="_PbQysNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTO8dfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.toggleBlockSelectionMode" commandName="Toggle Block Selection" description="Toggle block / column selection in the current text editor" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTO8tfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.sse.ui.goto.matching.bracket" commandName="Matching Character" description="Go to Matching Character" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTO89feEea-cp7hnRSzuA" elementId="org.eclipse.wst.xml.ui.disable.grammar.constraints" commandName="Turn off Grammar Constraints" description="Turn off grammar Constraints" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTO9NfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesViewRefresh" commandName="Refresh" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTO9dfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.refactor.quickMenu" commandName="Show Refactor Quick Menu" description="Shows the refactor quick menu" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTO9tfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.commands.showElementInTypeHierarchyView" commandName="Show Java Element Type Hierarchy" description="Show a Java element in the Type Hierarchy view" category="_PbQytdfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbTO99feEea-cp7hnRSzuA" elementId="elementRef" name="Java element reference" typeId="org.eclipse.jdt.ui.commands.javaElementReference" optional="false"/>
  </commands>
  <commands xmi:id="_PbTO-NfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigate.goToResource" commandName="Go to" description="Go to a particular resource in the active view" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTO-dfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.resetPerspective" commandName="Reset Perspective" description="Reset the current perspective to its default state" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTO-tfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.open.super.implementation" commandName="Open Super Implementation" description="Open the Implementation in the Super Type" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTO-9feEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.wikitext.ui.quickOutlineCommand" commandName="Quick Outline" description="Open a popup dialog with a quick outline of the current document" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTO_NfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.project.buildLast" commandName="Repeat Working Set Build" description="Repeat the last working set build" category="_PbQyvtfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTO_dfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.project.buildProject" commandName="Build Project" description="Build the selected project" category="_PbQyvtfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTO_tfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.CompareIndexWithHead" commandName="Compare File in Index with HEAD Revision" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTO_9feEea-cp7hnRSzuA" elementId="Ocaml.contextInformationCommand" commandName="Show Tooltip Description" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTPANfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.override.methods" commandName="Override/Implement Methods" description="Override or implement methods from super types" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTPAdfeEea-cp7hnRSzuA" elementId="org.eclipse.recommenders.snipmatch.rcp.commands.completion" commandName="Snipmatch Snippet Completion" description="Open a dialog to search for and insert code snippets" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTPAtfeEea-cp7hnRSzuA" elementId="org.eclipse.recommenders.utils.rcp.commands.openBrowser" commandName="Open a Web browser" category="_PbQyytfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbTPA9feEea-cp7hnRSzuA" elementId="org.eclipse.recommenders.utils.rcp.linkContribution.href" name="URI" optional="false"/>
  </commands>
  <commands xmi:id="_PbTPBNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.discoveryWizardCommand" commandName="Discovery Wizard" description="shows the connector discovery wizard" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTPBdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.goto.textStart" commandName="Text Start" description="Go to the beginning of the text" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTPBtfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.wikitext.ui.convertToDocbookCommand" commandName="Generate Docbook" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTPB9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.paste" commandName="Paste" description="Paste from the clipboard" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTPCNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.part.nextPage" commandName="Next Page" description="Switch to the next page" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTPCdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.change.type" commandName="Generalize Declared Type" description="Change the declaration of a selected variable to a more general type consistent with usage" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTPCtfeEea-cp7hnRSzuA" elementId="org.eclipse.oomph.setup.editor.refreshCache" commandName="Refresh Remote Cache" category="_PbQystfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTPC9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.debug.ui.javaAppletShortcut.run" commandName="Run Java Applet" description="Run Java Applet" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTPDNfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.CreateBranch" commandName="Create Branch" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTPDdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigate.previous" commandName="Previous" description="Navigate to the previous item" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTPDtfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.clean" commandName="Clean..." category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTPD9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesViewClone" commandName="Clone a Git Repository" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTPENfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.rename" commandName="Rename" description="Rename the selected item" category="_PbQyudfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTPEdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.clear.mark" commandName="Clear Mark" description="Clear the mark" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTPEtfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.sse.ui.quick_outline" commandName="Quick Outline" description="Show the quick outline for the editor input" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTPE9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.project.buildAll" commandName="Build All" description="Build all projects" category="_PbQyvtfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTPFNfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.OpenInTextEditorCommand" commandName="Open in Text Editor" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTPFdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesViewRemove" commandName="Remove Repository" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTPFtfeEea-cp7hnRSzuA" elementId="org.eclipse.ant.ui.openExternalDoc" commandName="Open External Documentation" description="Open the External documentation for the current task in the Ant editor" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTPF9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.cut.line.to.beginning" commandName="Cut to Beginning of Line" description="Cut to the beginning of a line of text" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTPGNfeEea-cp7hnRSzuA" elementId="org.eclipse.buildship.ui.commands.runtasks" commandName="Run Gradle Tasks" description="Runs all the selected Gradle tasks" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTPGdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.toggleBreadcrumb" commandName="Toggle Java Editor Breadcrumb" description="Toggle the Java editor breadcrumb" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbTPGtfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesViewCreateRepository" commandName="Create a Repository" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2ANfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.search.write.access.in.hierarchy" commandName="Write Access in Hierarchy" description="Search for write references of the selected element in its hierarchy" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2AdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.editors.revisions.rendering.cycle" commandName="Cycle Revision Coloring Mode" description="Cycles through the available coloring modes for revisions" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2AtfeEea-cp7hnRSzuA" elementId="org.eclipse.recommenders.snipmatch.rcp.commands.createSnippet" commandName="Create Snippet..." description="Creates a new Snipmatch code snippet from the current editor&#x2019;s text selection" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2A9feEea-cp7hnRSzuA" elementId="org.eclipse.ant.ui.renameInFile" commandName="Rename In File" description="Renames all references within the same buildfile" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2BNfeEea-cp7hnRSzuA" elementId="Ocaml.camlp4formatterCommand" commandName="Format with camlp4" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2BdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.PushTags" commandName="Push Tags..." category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2BtfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.open.type.hierarchy" commandName="Open Type Hierarchy" description="Open a type hierarchy on the selected element" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2B9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.ContinueRebase" commandName="Continue Rebase" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2CNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.extract.interface" commandName="Extract Interface" description="Extract a set of members into a new interface and try to use the new interface" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2CdfeEea-cp7hnRSzuA" elementId="org.eclipse.help.ui.closeTray" commandName="Close User Assistance Tray" description="Close the user assistance tray containing context help information and cheat sheets." category="_PbQyvdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2CtfeEea-cp7hnRSzuA" elementId="org.eclipse.ltk.ui.refactoring.commands.moveResources" commandName="Move Resources" description="Move the selected resources and notify LTK participants." category="_PbQyxdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2C9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.CreatePatch" commandName="Create Patch" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2DNfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.Resume" commandName="Resume" description="Resume" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2DdfeEea-cp7hnRSzuA" elementId="org.eclipse.m2e.actions.LifeCycleGenerateSources.run" commandName="Run Maven Generate Sources" description="Run Maven Generate Sources" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2DtfeEea-cp7hnRSzuA" elementId="Ocaml.restartCommand" commandName="Restart" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2D9feEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.StepInto" commandName="Step Into" description="Step into" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2ENfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.file.restartWorkbench" commandName="Restart" description="Restart the workbench" category="_PbQyudfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2EdfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.context.ui.commands.open.context.dialog" commandName="Show Context Quick View" description="Show Context Quick View" category="_PbQytNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2EtfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.sse.ui.structure.select.previous" commandName="Select Previous Element" description="Expand selection to include previous sibling" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2E9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.toggleOverwrite" commandName="Toggle Overwrite" description="Toggle overwrite mode" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2FNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.context.ui.commands.attachment.retrieveContext" commandName="Retrieve Context Attachment" category="_PbQytNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2FdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.pull.up" commandName="Pull Up" description="Move members to a superclass" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2FtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.folding.collapse_all" commandName="Collapse All" description="Collapses all folded regions" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2F9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.debug.ui.commands.AddExceptionBreakpoint" commandName="Add Java Exception Breakpoint" description="Add a Java exception breakpoint" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2GNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.open.call.hierarchy" commandName="Open Call Hierarchy" description="Open a call hierarchy on the selected element" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2GdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesViewClearCredentials" commandName="Clear Credentials" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2GtfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.wikitext.ui.convertToMarkupCommand" commandName="Generate Markup" category="_PbQyytfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbT2G9feEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.wikitext.ui.targetLanguage" name="TargetLanguage" optional="false"/>
  </commands>
  <commands xmi:id="_PbT2HNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.RefreshRepositoryTasks" commandName="Synchronize Changed" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2HdfeEea-cp7hnRSzuA" elementId="org.eclipse.equinox.p2.ui.discovery.commands.ShowRepositoryCatalog" commandName="Show Repository Catalog" category="_PbQyytfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbT2HtfeEea-cp7hnRSzuA" elementId="org.eclipse.equinox.p2.ui.discovery.commands.RepositoryParameter" name="P2 Repository URI"/>
  </commands>
  <commands xmi:id="_PbT2H9feEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.ToggleWatchpoint" commandName="Toggle Watchpoint" description="Creates or removes a watchpoint" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2INfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.closeRendering" commandName="Close Rendering" description="Close the selected rendering." category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2IdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesViewOpenInEditor" commandName="Open in Editor" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2ItfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.showToolTip" commandName="Show Tooltip Description" category="_PbQyttfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2I9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.showViewMenu" commandName="Show View Menu" description="Show the view menu" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2JNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.context.ui.commands.task.copyContext" commandName="Copy Context" category="_PbQytNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2JdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.Commit" commandName="Commit..." category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2JtfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.inline" commandName="Inline" description="Inline a constant, local variable or method" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2J9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.submodule.update" commandName="Update Submodule" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2KNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.shiftRight" commandName="Shift Right" description="Shift a block of text to the right" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2KdfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.ProfileLast" commandName="Profile" description="Launch in profile mode" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2KtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigate.backwardHistory" commandName="Backward History" description="Move backward in the editor navigation history" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2K9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.Pull" commandName="Pull" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2LNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.removeTrailingWhitespace" commandName="Remove Trailing Whitespace" description="Removes the trailing whitespace of each line" category="_PbQyudfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2LdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.findIncremental" commandName="Incremental Find" description="Incremental find" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2LtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.swap.mark" commandName="Swap Mark" description="Swap the mark with the cursor position" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2L9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.correction.addCast" commandName="Quick Fix - Add cast" description="Invokes quick assist and selects 'Add cast'" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2MNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.context.ui.commands.interest.increment" commandName="Make Landmark" description="Make Landmark" category="_PbQytNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2MdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.correction.assignToLocal.assist" commandName="Quick Assist - Assign to local variable" description="Invokes quick assist and selects 'Assign to local variable'" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbT2MtfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.ImportChangedProjectsCommandId" commandName="Import Changed Projects" description="Import or create in local Git repository" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdENfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.search.return.continue.targets" commandName="Search break/continue Target Occurrences in File" description="Search for break/continue target occurrences of a selected target name" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdEdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesViewConfigureFetch" commandName="Configure Fetch..." category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdEtfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.create.getter.setter" commandName="Generate Getters and Setters" description="Generate Getter and Setter methods for type's fields" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdE9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.open.external.javadoc" commandName="Open Attached Javadoc" description="Open the attached Javadoc of the selected element in a browser" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdFNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.shiftLeft" commandName="Shift Left" description="Shift a block of text to the left" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdFdfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.sse.ui.structure.select.next" commandName="Select Next Element" description="Expand selection to include next sibling" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdFtfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.Push" commandName="Push..." category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdF9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.debug.ui.commands.AddClassPrepareBreakpoint" commandName="Add Class Load Breakpoint" description="Add a class load breakpoint" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdGNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.select.next" commandName="Select Next Element" description="Expand selection to include next sibling" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdGdfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.builds.ui.command.ShowBuildOutput" commandName="Show Build Output" category="_PbQysNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdGtfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesViewNewRemote" commandName="Create Remote..." category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdG9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.delete.line" commandName="Delete Line" description="Delete a line of text" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdHNfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.Restart" commandName="Restart" description="Restart a process or debug target without terminating and re-launching" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdHdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.stash.drop" commandName="Delete Stashed Commit..." category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdHtfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.DebugPerspective" commandName="Debug" description="Open the debug perspective" category="_PbQyxNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdH9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.RenameBranch" commandName="Rename Branch..." category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdINfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigate.expandAll" commandName="Expand All" description="Expand the current tree" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdIdfeEea-cp7hnRSzuA" elementId="Ocaml.backstepCommand" commandName="Backstep" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdItfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.specific_content_assist.command" commandName="Content Assist" description="A parameterizable command that invokes content assist with a single completion proposal category" category="_PbQLotfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbUdI9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.specific_content_assist.category_id" name="type" optional="false"/>
  </commands>
  <commands xmi:id="_PbUdJNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.search.references.in.hierarchy" commandName="References in Hierarchy" description="Search for references of the selected element in its hierarchy" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdJdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.file.saveAll" commandName="Save All" description="Save all current contents" category="_PbQyudfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdJtfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.remove.block.comment" commandName="Remove Block Comment" description="Remove the block comment enclosing the selection" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdJ9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.search.method.exits" commandName="Search Method Exit Occurrences in File" description="Search for method exit occurrences of a selected return type" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdKNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.open.implementation" commandName="Open Implementation" description="Opens the Implementations of a method in its hierarchy" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdKdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.junit.gotoTest" commandName="Referring Tests" description="Referring Tests" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdKtfeEea-cp7hnRSzuA" elementId="Ocaml.commentSelectionProtectedCommand" commandName="Comment/Uncomment Selection (Protected)" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdK9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.folding.collapseMembers" commandName="Collapse Members" description="Collapse all members" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdLNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.find.broken.nls.keys" commandName="Find Broken Externalized Strings" description="Finds undefined, duplicate and unused externalized string keys in property files" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdLdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.file.closeOthers" commandName="Close Others" description="Close all editors except the one that is active" category="_PbQyudfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdLtfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.commands.showElementInPackageView" commandName="Show Java Element in Package Explorer" description="Select Java element in the Package Explorer view" category="_PbQytdfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbUdL9feEea-cp7hnRSzuA" elementId="elementRef" name="Java element reference" typeId="org.eclipse.jdt.ui.commands.javaElementReference" optional="false"/>
  </commands>
  <commands xmi:id="_PbUdMNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.editors.quickdiff.revertLine" commandName="Revert Line" description="Revert the current line" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdMdfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.OpenDebugConfigurations" commandName="Debug..." description="Open debug launch configuration dialog" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdMtfeEea-cp7hnRSzuA" elementId="org.eclipse.oomph.setup.editor.performDropdown" commandName="Perform Dropdown" category="_PbQystfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdM9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.SimpleFetch" commandName="Fetch from Upstream" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdNNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.previousEditor" commandName="Previous Editor" description="Switch to the previous editor" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdNdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.debug.ui.commands.InstanceCount" commandName="Instance Count" description="View the instance count of the selected type loaded in the target VM" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdNtfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.copy.qualified.name" commandName="Copy Qualified Name" description="Copy a fully qualified name to the system clipboard" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdN9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.findReplace" commandName="Find and Replace" description="Find and replace text" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdONfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.promote.local.variable" commandName="Convert Local Variable to Field" description="Convert a local variable to a field" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdOdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.MergeTool" commandName="Merge Tool" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdOtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.ide.OpenMarkersView" commandName="Open Another" description="Open another view" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdO9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.command.shareProject" commandName="Share with Git" description="Share the project using Git" category="_PbQyytfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbUdPNfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.command.projectNameParameter" name="Project" optional="false"/>
  </commands>
  <commands xmi:id="_PbUdPdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.convert.anonymous.to.nested" commandName="Convert Anonymous Class to Nested" description="Convert an anonymous class to a nested class" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdPtfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.correction.changeToStatic" commandName="Quick Fix - Change to static access" description="Invokes quick assist and selects 'Change to static access'" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdP9feEea-cp7hnRSzuA" elementId="org.eclipse.equinox.p2.ui.sdk.installationDetails" commandName="Installation Details" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdQNfeEea-cp7hnRSzuA" elementId="org.eclipse.team.ui.synchronizeAll" commandName="Synchronize..." description="Synchronize resources in the workspace with another location" category="_PbQLoNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdQdfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.newRendering" commandName="New Rendering" description="Add a new rendering." category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdQtfeEea-cp7hnRSzuA" elementId="org.eclipse.m2e.profiles.ui.commands.selectMavenProfileCommand" commandName="Select Maven Profiles" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdQ9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.nextEditor" commandName="Next Editor" description="Switch to the next editor" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdRNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.project.closeUnrelatedProjects" commandName="Close Unrelated Projects" description="Close unrelated projects" category="_PbQyvtfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbUdRdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.self.encapsulate.field" commandName="Encapsulate Field" description="Create getting and setting methods for the field and use only those to access the field" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEINfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.internal.reflog.CopyCommand" commandName="Copy SHA-1" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEIdfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.new.subtask" commandName="New Subtask" category="_PbQyttfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEItfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.help.helpContents" commandName="Help Contents" description="Open the help contents" category="_PbQyvdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEI9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.delete" commandName="Delete" description="Delete the selection" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEJNfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.Reset" commandName="Reset..." category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEJdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.delete.line.to.beginning" commandName="Delete to Beginning of Line" description="Delete to the beginning of a line of text" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEJtfeEea-cp7hnRSzuA" elementId="org.eclipse.search.ui.performTextSearchWorkspace" commandName="Find Text in Workspace" description="Searches the files in the workspace for specific text." category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEJ9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.RenameBranch" commandName="Rename Branch" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEKNfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.Synchronize" commandName="Synchronize" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEKdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.search.declarations.in.working.set" commandName="Declaration in Working Set" description="Search for declarations of the selected element in a working set" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEKtfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.sse.ui.remove.block.comment" commandName="Remove Block Comment" description="Remove Block Comment" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEK9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.findPrevious" commandName="Find Previous" description="Find previous item" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVELNfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.ToggleBreakpoint" commandName="Toggle Breakpoint" description="Creates or removes a breakpoint" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVELdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.navigate.gototype" commandName="Go to Type" description="Go to Type" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVELtfeEea-cp7hnRSzuA" elementId="org.eclipse.m2e.core.ui.command.openPom" commandName="Open Maven POM" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEL9feEea-cp7hnRSzuA" elementId="Ocaml.gotoMatchingDelimiterCommand" commandName="Goto Matching Delimiter" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEMNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.addBookmark" commandName="Add Bookmark" description="Add a bookmark" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEMdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.commit.Revert" commandName="Revert Commit" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEMtfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.commit.StashDrop" commandName="Delete Stashed Commit..." category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEM9feEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.openTask" commandName="Open Task" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVENNfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.xsd.ui.refactor.rename.element" commandName="&amp;Rename XSD element" description="Rename XSD element" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVENdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.scroll.lineUp" commandName="Scroll Line Up" description="Scroll up one line of text" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVENtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.set.mark" commandName="Set Mark" description="Set the mark" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEN9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.select.last" commandName="Restore Last Selection" description="Restore last selection" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEONfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.java.ui.editor.folding.auto" commandName="Toggle Active Folding" description="Toggle Active Folding" category="_PbQyt9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEOdfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.goToPreviousUnread" commandName="Go To Previous Unread Task" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEOtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.folding.toggle" commandName="Toggle Folding" description="Toggles folding in the current editor" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEO9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.toggleShowWhitespaceCharacters" commandName="Show Whitespace Characters" description="Shows whitespace characters in current text editor" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEPNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.correction.splitJoinVariableDeclaration.assist" commandName="Quick Assist - Split/Join variable declaration" description="Invokes quick assist and selects 'Split/Join variable declaration'" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEPdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.file.revert" commandName="Revert" description="Revert to the last saved state" category="_PbQyudfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEPtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.showView" commandName="Show View" description="Shows a particular view" category="_PbQLodfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbVEP9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.showView.viewId" name="View"/>
    <parameters xmi:id="_PbVEQNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.showView.secondaryId" name="Secondary Id"/>
    <parameters xmi:id="_PbVEQdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.views.showView.makeFast" name="As FastView"/>
  </commands>
  <commands xmi:id="_PbVEQtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigate.showResourceByPath" commandName="Show Resource in Navigator" description="Show a resource in the Navigator given its path" category="_PbQytdfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbVEQ9feEea-cp7hnRSzuA" elementId="resourcePath" name="Resource Path" typeId="org.eclipse.ui.ide.resourcePath" optional="false"/>
  </commands>
  <commands xmi:id="_PbVERNfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.Ignore" commandName="Ignore" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVERdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.commit.Edit" commandName="Edit Commit" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVERtfeEea-cp7hnRSzuA" elementId="org.eclipse.oomph.ui.ToggleOfflineMode" commandName="Toggle Offline Mode" category="_PbQyydfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVER9feEea-cp7hnRSzuA" elementId="org.eclipse.oomph.setup.editor.openLog" commandName="Open Setup Log" category="_PbQystfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVESNfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.SkipAllBreakpoints" commandName="Skip All Breakpoints" description="Sets whether or not any breakpoint should suspend execution" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVESdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.delimiter.windows" commandName="Convert Line Delimiters to Windows (CRLF, \r\n, 0D0A, &#xa4;&#xb6;)" description="Converts the line delimiters to Windows (CRLF, \r\n, 0D0A, &#xa4;&#xb6;)" category="_PbQyudfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEStfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.findNext" commandName="Find Next" description="Find next item" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVES9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.project.buildAutomatically" commandName="Build Automatically" description="Toggle the workspace build automatically function" category="_PbQyvtfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVETNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.file.import" commandName="Import" description="Import" category="_PbQyudfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbVETdfeEea-cp7hnRSzuA" elementId="importWizardId" name="Import Wizard"/>
  </commands>
  <commands xmi:id="_PbVETtfeEea-cp7hnRSzuA" elementId="Ocaml.camlp4convertCommand" commandName="Convert from revised syntax to standard syntax with camlp4" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVET9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.Merge" commandName="Merge" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEUNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.switchToEditor" commandName="Switch to Editor" description="Switch to an editor" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEUdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.help.dynamicHelp" commandName="Dynamic Help" description="Open the dynamic help" category="_PbQyvdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEUtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigate.nextSubTab" commandName="Next Sub-Tab" description="Switch to the next sub-tab" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEU9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.comment" commandName="Comment" description="Turn the selected lines into Java comments" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEVNfeEea-cp7hnRSzuA" elementId="Ocaml.formatterCommand" commandName="Format" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEVdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.introduce.parameter" commandName="Introduce Parameter" description="Introduce a new method parameter based on the selected expression" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVEVtfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.addTaskRepository" commandName="Add Task Repository..." category="_PbQyttfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbVrMNfeEea-cp7hnRSzuA" elementId="connectorKind" name="Repository Type"/>
  </commands>
  <commands xmi:id="_PbVrMdfeEea-cp7hnRSzuA" elementId="Ocaml.reverseCommand" commandName="Reverse" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrMtfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.debug.ui.localJavaShortcut.run" commandName="Run Java Application" description="Run Java Application" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrM9feEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.activateTask" commandName="Activate Task" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrNNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.addTask" commandName="Add Task..." description="Add a task" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrNdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.CreateTag" commandName="Create Tag..." category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrNtfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.search.occurrences.in.file.quickMenu" commandName="Show Occurrences in File Quick Menu" description="Shows the Occurrences in File quick menu" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrN9feEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.builds.ui.commands.OpenBuildElementWithBrowser" commandName="Open Build with Browser" category="_PbQysNfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbVrONfeEea-cp7hnRSzuA" elementId="element" name="Element"/>
  </commands>
  <commands xmi:id="_PbVrOdfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.sse.ui.structure.select.enclosing" commandName="Select Enclosing Element" description="Expand selection to include enclosing element" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrOtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.toggleInsertMode" commandName="Toggle Insert Mode" description="Toggle insert mode" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrO9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.cheatsheets.openCheatSheet" commandName="Open Cheat Sheet" description="Open a Cheat Sheet." category="_PbQyvdfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbVrPNfeEea-cp7hnRSzuA" elementId="cheatSheetId" name="Identifier"/>
  </commands>
  <commands xmi:id="_PbVrPdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.file.closePart" commandName="Close Part" description="Close the active workbench part" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrPtfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesViewDelete" commandName="Delete Repository" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrP9feEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.viewSource.command" commandName="View Unformatted Text" category="_PbQyttfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrQNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.editors.revisions.id.toggle" commandName="Toggle Revision Id Display" description="Toggles the display of the revision id" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrQdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.project.cleanAction" commandName="Build Clean" description="Discard old built state" category="_PbQyvtfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrQtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.moveLineDown" commandName="Move Lines Down" description="Moves the selected lines down" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrQ9feEea-cp7hnRSzuA" elementId="Ocaml.runCommand" commandName="Run" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrRNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigate.back" commandName="Back" description="Navigate back" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrRdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.select.wordNext" commandName="Select Next Word" description="Select the next word" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrRtfeEea-cp7hnRSzuA" elementId="org.eclipse.equinox.p2.ui.sdk.update" commandName="Check for Updates" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrR9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.goto.pageDown" commandName="Page Down" description="Go down one page" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrSNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.goto.textEnd" commandName="Text End" description="Go to the end of the text" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrSdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.JavaBrowsingPerspective" commandName="Java Browsing" description="Show the Java Browsing perspective" category="_PbQyxNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrStfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.builds.ui.commands.OpenBuildElement" commandName="Open Build Element" category="_PbQysNfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbVrS9feEea-cp7hnRSzuA" elementId="element" name="Element"/>
  </commands>
  <commands xmi:id="_PbVrTNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.part.previousPage" commandName="Previous Page" description="Switch to the previous page" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrTdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.goto.matching.bracket" commandName="Go to Matching Bracket" description="Moves the cursor to the matching bracket" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrTtfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.GarbageCollect" commandName="Collect Garbage" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrT9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.CompareWithWorkingTree" commandName="Compare with Working Tree" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrUNfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.Branch" commandName="Branch" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrUdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.project.closeProject" commandName="Close Project" description="Close the selected project" category="_PbQyvtfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrUtfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.xml.ui.previousSibling" commandName="Previous Sibling" description="Go to Previous Sibling" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrU9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesViewConfigurePush" commandName="Configure Push..." category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrVNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.findIncrementalReverse" commandName="Incremental Find Reverse" description="Incremental find reverse" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrVdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.introduce.factory" commandName="Introduce Factory" description="Introduce a factory method to encapsulate invocation of the selected constructor" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrVtfeEea-cp7hnRSzuA" elementId="org.eclipse.ant.ui.antShortcut.run" commandName="Run Ant Build" description="Run Ant Build" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrV9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.stash.apply" commandName="Apply Stashed Changes" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrWNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.debug.ui.commands.Inspect" commandName="Inspect" description="Inspect result of evaluating selected text" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrWdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.commit.CherryPick" commandName="Cherry Pick" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrWtfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.use.supertype" commandName="Use Supertype Where Possible" description="Change occurrences of a type to use a supertype instead" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrW9feEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.markTaskUnread" commandName="Mark Task Unread" category="_PbQyttfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrXNfeEea-cp7hnRSzuA" elementId="org.eclipse.search.ui.performTextSearchFile" commandName="Find Text in File" description="Searches the files in the file for specific text." category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrXdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.goto.columnNext" commandName="Next Column" description="Go to the next column" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrXtfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.Squash" commandName="Squash Commits" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrX9feEea-cp7hnRSzuA" elementId="org.eclipse.wst.sse.ui.structure.select.last" commandName="Restore Last Selection" description="Restore last selection" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrYNfeEea-cp7hnRSzuA" elementId="org.eclipse.search.ui.performTextSearchWorkingSet" commandName="Find Text in Working Set" description="Searches the files in the working set for specific text." category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrYdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.goto.wordNext" commandName="Next Word" description="Go to the next word" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrYtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.cut.line" commandName="Cut Line" description="Cut a line of text" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbVrY9feEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.builds.ui.command.NewTaskFromBuild" commandName="New Task From Build" category="_PbQysNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSQNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.folding.expand_all" commandName="Expand All" description="Expands all folded regions" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSQdfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.xsd.ui.refactor.makeElementGlobal" commandName="Make Local Element &amp;Global" description="Promotes local element to global level and replaces its references" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSQtfeEea-cp7hnRSzuA" elementId="org.eclipse.quickdiff.toggle" commandName="Quick Diff Toggle" description="Toggles quick diff information display on the line number ruler" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSQ9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.deleteNext" commandName="Delete Next" description="Delete the next character" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSRNfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.FetchGerritChange" commandName="Fetch From Gerrit" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSRdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.correction.encapsulateField.assist" commandName="Quick Assist - Create getter/setter for field" description="Invokes quick assist and selects 'Create getter/setter for field'" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSRtfeEea-cp7hnRSzuA" elementId="org.eclipse.oomph.setup.editor.openEditorDropdown" commandName="Open Setup Editor" category="_PbQystfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSR9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.help.quickStartAction" commandName="Welcome" description="Show help for beginning users" category="_PbQyvdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSSNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.SynchronizeAll" commandName="Synchronize Changed" category="_PbQyttfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSSdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.debug.ui.commands.Watch" commandName="Watch" description="Create new watch expression" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSStfeEea-cp7hnRSzuA" elementId="Ocaml.contentAssistCommand" commandName="Content Assist" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSS9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.Reword" commandName="Reword Commit" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSTNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.hideShowEditors" commandName="Toggle Shared Area Visibility" description="Toggles the visibility of the shared area" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSTdfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.wikitext.context.ui.editor.folding.auto" commandName="Toggle Active Folding" description="Toggle Active Folding" category="_PbQyuNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSTtfeEea-cp7hnRSzuA" elementId="Ocaml.toplevelQuickEvalCommand" commandName="Eval In Toplevel" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWST9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.OpenCommit" commandName="Open Git Commit" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSUNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.help.displayHelp" commandName="Display Help" description="Display a Help topic" category="_PbQyvdfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbWSUdfeEea-cp7hnRSzuA" elementId="href" name="Help topic href"/>
  </commands>
  <commands xmi:id="_PbWSUtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.folding.restore" commandName="Reset Structure" description="Resets the folding structure" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSU9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.select.pageDown" commandName="Select Page Down" description="Select to the bottom of the page" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSVNfeEea-cp7hnRSzuA" elementId="org.eclipse.ltk.ui.refactor.create.refactoring.script" commandName="Create Script" description="Create a refactoring script from refactorings on the local workspace" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSVdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.join.lines" commandName="Join Lines" description="Join lines of text" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSVtfeEea-cp7hnRSzuA" elementId="org.eclipse.help.ui.indexcommand" commandName="Index" description="Show Keyword Index" category="_PbQyvdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSV9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.showContextMenu" commandName="Show Context Menu" description="Show the context menu" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSWNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.open.editor" commandName="Open Declaration" description="Open an editor on the selected element" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSWdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.clean.up" commandName="Clean Up" description="Solve problems and improve code style on selected resources" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSWtfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.extract.local.variable" commandName="Extract Local Variable" description="Extracts an expression into a new local variable and uses the new local variable" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSW9feEea-cp7hnRSzuA" elementId="org.eclipse.oomph.p2.ui.ExploreRepository" commandName="Explore Repository" category="_PbQywtfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSXNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.debug.ui.localJavaShortcut.debug" commandName="Debug Java Application" description="Debug Java Application" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSXdfeEea-cp7hnRSzuA" elementId="org.eclipse.ltk.ui.refactor.show.refactoring.history" commandName="Open Refactoring History " description="Opens the refactoring history" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSXtfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.search.read.access.in.hierarchy" commandName="Read Access in Hierarchy" description="Search for read references of the selected element in its hierarchy" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSX9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigate.forward" commandName="Forward" description="Navigate forward" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSYNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.correction.assist.proposals" commandName="Quick Fix" description="Suggest possible fixes for a problem" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSYdfeEea-cp7hnRSzuA" elementId="org.eclipse.buildship.ui.commands.openbuildscript" commandName="Open Gradle Build Script" description="Opens the Gradle build script for the selected Gradle project" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSYtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.nextPerspective" commandName="Next Perspective" description="Switch to the next perspective" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSY9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.push.down" commandName="Push Down" description="Move members to subclasses" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSZNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.UpdateRepositoryConfiguration" commandName="Update Repository Configuration" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSZdfeEea-cp7hnRSzuA" elementId="Ocaml.markOccurrencesCommand" commandName="Mark Occurrences" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSZtfeEea-cp7hnRSzuA" elementId="org.eclipse.buildship.ui.commands.openrunconfiguration" commandName="Open Gradle Run Configuration" description="Opens the Run Configuration for the selected Gradle tasks" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSZ9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.commit.StashApply" commandName="Apply Stashed Changes" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSaNfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.DeleteTag" commandName="&amp;Delete Tag" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSadfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.remove.occurrence.annotations" commandName="Remove Occurrence Annotations" description="Removes the occurrence annotations from the current editor" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSatfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.search.write.access.in.working.set" commandName="Write Access in Working Set" description="Search for write references to the selected element in a working set" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSa9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.pinEditor" commandName="Pin Editor" description="Pin the current editor" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSbNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigate.nextTab" commandName="Next Tab" description="Switch to the next tab" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSbdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.ShowVersions" commandName="Open" category="_PbQyytfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbWSbtfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.CompareMode" name="Compare mode"/>
  </commands>
  <commands xmi:id="_PbWSb9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.quickAccess" commandName="Quick Access" description="Quickly access UI elements" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWScNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.showInformation" commandName="Show Tooltip Description" description="Displays information for the current caret location in a focused hover" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWScdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.add.import" commandName="Add Import" description="Create import statement on selection" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSctfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.attachment.open" commandName="Open Attachment" category="_PbQLpdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSc9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.goto.pageUp" commandName="Page Up" description="Go up one page" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSdNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.goto.columnPrevious" commandName="Previous Column" description="Go to the previous column" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSddfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.submodule.sync" commandName="Sync Submodule" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSdtfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.DeleteBranch" commandName="Delete Branch" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSd9feEea-cp7hnRSzuA" elementId="Ocaml.backstepReturnCommand" commandName="Backstep Return" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSeNfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.toggleMemoryMonitorsPane" commandName="Toggle Memory Monitors Pane" description="Toggle visibility of the Memory Monitors Pane" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbWSedfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.ConfigureUpstreamFetch" commandName="Configure Upstream Fetch" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5UNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.search.implementors.in.working.set" commandName="Implementors in Working Set" description="Search for implementors of the selected interface in a working set" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5UdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.Discard" commandName="Replace with File in Index" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5UtfeEea-cp7hnRSzuA" elementId="org.eclipse.compare.selectNextChange" commandName="Select Next Change" description="Select Next Change" category="_PbQyutfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5U9feEea-cp7hnRSzuA" elementId="Ocaml.stepOverCommand" commandName="Step Over" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5VNfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesViewCreateBranch" commandName="Create Branch..." category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5VdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesViewCopyPath" commandName="Copy Path to Clipboard" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5VtfeEea-cp7hnRSzuA" elementId="org.eclipse.ltk.ui.refactoring.commands.renameResource" commandName="Rename Resource" description="Rename the selected resource and notify LTK participants." category="_PbQyxdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5V9feEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.builds.ui.command.NewTaskFromTest" commandName="New Task From Test" category="_PbQysNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5WNfeEea-cp7hnRSzuA" elementId="org.eclipse.oomph.setup.editor.perform.startup" commandName="Perform Setup Tasks (Startup)" category="_PbQystfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5WdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.Rebase" commandName="Rebase on" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5WtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.file.properties" commandName="Properties" description="Display the properties of the selected item" category="_PbQyudfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5W9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.commit.ShowInHistory" commandName="Show in History" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5XNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.previousTask" commandName="Previous Task Command" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5XdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.showRulerAnnotationInformation" commandName="Show Ruler Annotation Tooltip" description="Displays annotation information for the caret line in a focused hover" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5XtfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.ReplaceWithHead" commandName="Replace with HEAD revision" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5X9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.correction.renameInFile.assist" commandName="Quick Assist - Rename in file" description="Invokes quick assist and selects 'Rename in file'" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5YNfeEea-cp7hnRSzuA" elementId="org.eclipse.recommenders.utils.rcp.commands.openPreferences" commandName="Open the preferences dialog" category="_PbQyytfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbW5YdfeEea-cp7hnRSzuA" elementId="org.eclipse.recommenders.utils.rcp.linkContribution.href" name="URI" optional="false"/>
  </commands>
  <commands xmi:id="_PbW5YtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.browser.openBrowser" commandName="Open Browser" description="Opens the default web browser." category="_PbQyu9feEea-cp7hnRSzuA">
    <parameters xmi:id="_PbW5Y9feEea-cp7hnRSzuA" elementId="url" name="URL"/>
    <parameters xmi:id="_PbW5ZNfeEea-cp7hnRSzuA" elementId="browserId" name="Browser Id"/>
    <parameters xmi:id="_PbW5ZdfeEea-cp7hnRSzuA" elementId="name" name="Browser Name"/>
    <parameters xmi:id="_PbW5ZtfeEea-cp7hnRSzuA" elementId="tooltip" name="Browser Tooltip"/>
  </commands>
  <commands xmi:id="_PbW5Z9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.activeContextInfo" commandName="Show activeContext Info" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5aNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.markTaskReadGoToPreviousUnread" commandName="Mark Task Read and Go To Previous Unread Task" category="_PbQyttfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5adfeEea-cp7hnRSzuA" elementId="Ocaml.openQuickOutlineCommand" commandName="Quick Outline" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5atfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.search.implement.occurrences" commandName="Search Implement Occurrences in File" description="Search for implement occurrences of a selected type" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5a9feEea-cp7hnRSzuA" elementId="Ocaml.stepCommand" commandName="Step" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5bNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.select.textStart" commandName="Select Text Start" description="Select to the beginning of the text" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5bdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.extract.constant" commandName="Extract Constant" description="Extracts a constant into a new static field and uses the new static field" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5btfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.sse.ui.cleanup.document" commandName="Cleanup Document..." description="Cleanup document" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5b9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.DeleteBranch" commandName="Delete Branch..." category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5cNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.builds.ui.command.ShowBuildOutput.url" commandName="Show Build Output" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5cdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.contentAssist.contextInformation" commandName="Context Information" description="Show Context Information" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5ctfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.file.saveAs" commandName="Save As" description="Save the current contents to another location" category="_PbQyudfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5c9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.ConfigurePush" commandName="Configure Upstream Push" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5dNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.previousPerspective" commandName="Previous Perspective" description="Switch to the previous perspective" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5ddfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.splitEditor" commandName="Toggle Split Editor" description="Split or join the currently active editor." category="_PbQyu9feEea-cp7hnRSzuA">
    <parameters xmi:id="_PbW5dtfeEea-cp7hnRSzuA" elementId="Splitter.isHorizontal" name="Orientation" optional="false"/>
  </commands>
  <commands xmi:id="_PbW5d9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigate.collapseAll" commandName="Collapse All" description="Collapse the current tree" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5eNfeEea-cp7hnRSzuA" elementId="org.eclipse.compare.copyAllRightToLeft" commandName="Copy All from Right to Left" description="Copy All Changes from Right to Left" category="_PbQyutfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5edfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.command.nextpage" commandName="Next Page of Memory" description="Load next page of memory" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5etfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.command.gotoaddress" commandName="Go to Address" description="Go to Address" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5e9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.maximizePart" commandName="Maximize Active View or Editor" description="Toggles maximize/restore state of active view or editor" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5fNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.deactivateSelectedTask" commandName="Deactivate Selected Task" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5fdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.lockToolBar" commandName="Lock the Toolbars" description="Lock the Toolbars" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5ftfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.newEditor" commandName="New Editor" description="Open another editor on the active editor's input" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5f9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.correction.qualifyField" commandName="Quick Fix - Qualify field access" description="Invokes quick assist and selects 'Qualify field access'" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5gNfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.Disconnect" commandName="Disconnect" description="Disconnect" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5gdfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.sse.ui.format" commandName="Format" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5gtfeEea-cp7hnRSzuA" elementId="org.eclipse.search.ui.openSearchDialog" commandName="Open Search Dialog" description="Open the Search dialog" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5g9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.contentAssist.proposals" commandName="Content Assist" description="Content Assist" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5hNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigate.up" commandName="Up" description="Navigate up one level" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5hdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.activateEditor" commandName="Activate Editor" description="Activate the editor" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5htfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.search.write.access.in.workspace" commandName="Write Access in Workspace" description="Search for write references to the selected element in the workspace" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbW5h9feEea-cp7hnRSzuA" elementId="org.eclipse.m2e.core.ui.command.addPlugin" commandName="Add Maven Plugin" description="Add Maven Plugin" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgYNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigate.removeFromWorkingSet" commandName="Remove From Working Set" description="Removes the selected object from a working set." category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgYdfeEea-cp7hnRSzuA" elementId="sed.tabletree.expandAll" commandName="Expand All" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgYtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.delete.line.to.end" commandName="Delete to End of Line" description="Delete to the end of a line of text" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgY9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.modify.method.parameters" commandName="Change Method Signature" description="Change method signature includes parameter names and parameter order" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgZNfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.commit.CreateBranch" commandName="Create Branch..." category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgZdfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.openSelectedTask" commandName="Open Selected Task" category="_PbQyttfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgZtfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesLinkWithSelection" commandName="Link with Selection" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgZ9feEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.context.ui.commands.toggle.focus.active.view" commandName="Focus on Active Task" description="Toggle the focus on active task for the active view" category="_PbQytNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgaNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.correction.extractLocal.assist" commandName="Quick Assist - Extract local variable (replace all occurrences)" description="Invokes quick assist and selects 'Extract local variable (replace all occurrences)'" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgadfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.Terminate" commandName="Terminate" description="Terminate" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgatfeEea-cp7hnRSzuA" elementId="org.eclipse.help.ui.ignoreMissingPlaceholders" commandName="Do not warn of missing documentation" description="Sets the help preferences to no longer report a warning about the current set of missing documents." category="_PbQyvdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXga9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.ShowRepositoriesView" commandName="Show Git Repositories View" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgbNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.ide.deleteCompleted" commandName="Delete Completed Tasks" description="Delete the tasks marked as completed" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgbdfeEea-cp7hnRSzuA" elementId="org.eclipse.compare.compareWithOther" commandName="Compare With Other Resource" description="Compare resources, clipboard contents or editors" category="_PbQyutfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgbtfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.goToNextUnread" commandName="Go To Next Unread Task" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgb9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.add.javadoc.comment" commandName="Add Javadoc Comment" description="Add a Javadoc comment stub to the member element" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgcNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.editors.revisions.author.toggle" commandName="Toggle Revision Author Display" description="Toggles the display of the revision author" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgcdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.goto.windowEnd" commandName="Window End" description="Go to the end of the window" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgctfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.CreatePatch" commandName="Create Patch" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgc9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.perspectives.showPerspective" commandName="Show Perspective" description="Show a particular perspective" category="_PbQyxNfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbXgdNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.perspectives.showPerspective.perspectiveId" name="Parameter"/>
    <parameters xmi:id="_PbXgddfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.perspectives.showPerspective.newWindow" name="In New Window"/>
  </commands>
  <commands xmi:id="_PbXgdtfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RebaseInteractiveCurrent" commandName="%RebaseInteractiveCurrentHandler.name" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgd9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.openEditorDropDown" commandName="Quick Switch Editor" description="Open the editor drop down list" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgeNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.goto.line" commandName="Go to Line" description="Go to a specified line of text" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgedfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.editors.quickdiff.revert" commandName="Revert Lines" description="Revert the current selection, block or deleted lines" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgetfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.deleteNextWord" commandName="Delete Next Word" description="Delete the next word" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXge9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.debug.ui.javaAppletShortcut.debug" commandName="Debug Java Applet" description="Debug Java Applet" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgfNfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.xml.ui.gotoMatchingTag" commandName="Matching Tag" description="Go to Matching Tag" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgfdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.toggleMarkOccurrences" commandName="Toggle Mark Occurrences" description="Toggles mark occurrences in Java editors" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgftfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.select.lineUp" commandName="Select Line Up" description="Extend the selection to the previous line of text" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgf9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.SkipRebase" commandName="Skip commit and continue" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXggNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.replace.invocations" commandName="Replace Invocations" description="Replace invocations of the selected method" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXggdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.search.declarations.in.hierarchy" commandName="Declaration in Hierarchy" description="Search for declarations of the selected element in its hierarchy" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXggtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.undo" commandName="Undo" description="Undo the last operation" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgg9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.SetQuickdiffBaseline" commandName="Set quickdiff baseline" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXghNfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.submodule.add" commandName="Add Submodule" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXghdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.cut.line.to.end" commandName="Cut to End of Line" description="Cut to the end of a line of text" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXghtfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.correction.convertAnonymousToLocal.assist" commandName="Quick Assist - Convert anonymous to local class" description="Invokes quick assist and selects 'Convert anonymous to local class'" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgh9feEea-cp7hnRSzuA" elementId="org.eclipse.compare.copyLeftToRight" commandName="Copy from Left to Right" description="Copy Current Change from Left to Right" category="_PbQyutfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgiNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.file.newQuickMenu" commandName="New menu" description="Open the New menu" category="_PbQyudfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgidfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.project.openProject" commandName="Open Project" description="Open a project" category="_PbQyvtfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgitfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.file.openWorkspace" commandName="Switch Workspace" description="Open the workspace selection dialog" category="_PbQyudfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgi9feEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.actions.WatchCommand" commandName="Watch" description="Create a watch expression from the current selection and add it to the Expressions view" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgjNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.file.closeAll" commandName="Close All" description="Close all editors" category="_PbQyudfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgjdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.navigate.open.type" commandName="Open Type" description="Open a type in a Java editor" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgjtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.cut" commandName="Cut" description="Cut the selection to the clipboard" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgj9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.ShowBlame" commandName="Show Annotations" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgkNfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.org.eclipse.egit.ui.AbortRebase" commandName="Abort Rebase" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgkdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.introduce.indirection" commandName="Introduce Indirection" description="Introduce an indirection to encapsulate invocations of a selected method" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgktfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.correction.addSuppressWarnings" commandName="Quick Fix - Add @SuppressWarnings" description="Invokes quick fix and selects 'Add @SuppressWarnings' " category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgk9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.Merge" commandName="Merge" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXglNfeEea-cp7hnRSzuA" elementId="org.eclipse.ltk.ui.refactor.apply.refactoring.script" commandName="Apply Script" description="Perform refactorings from a refactoring script on the local workspace" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgldfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.ReplaceWithRef" commandName="Replace with branch, tag, or reference" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgltfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.search.write.access.in.project" commandName="Write Access in Project" description="Search for write references to the selected element in the enclosing project" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgl9feEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.submitTask" commandName="Submit Task" description="Submits the currently open task" category="_PbQLpdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbXgmNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.project.properties" commandName="Properties" description="Display the properties of the selected item's project " category="_PbQyvtfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHcNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.extract.superclass" commandName="Extract Superclass" description="Extract a set of members into a new superclass and try to use the new superclass" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHcdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.CompareVersionsInTree" commandName="Compare in Tree" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHctfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.xml.ui.reload.dependencies" commandName="Reload Dependencies" description="Reload Dependencies" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHc9feEea-cp7hnRSzuA" elementId="org.eclipse.wst.sse.ui.generate.xml" commandName="&amp;XML File..." category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHdNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.select.columnPrevious" commandName="Select Previous Column" description="Select the previous column" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHddfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.toggleShowSelectedElementOnly" commandName="Show Selected Element Only" description="Show Selected Element Only" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHdtfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.junit.junitShortcut.rerunFailedFirst" commandName="Rerun JUnit Test - Failures First" description="Rerun JUnit Test - Failures First" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHd9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.file.export" commandName="Export" description="Export" category="_PbQyudfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbYHeNfeEea-cp7hnRSzuA" elementId="exportWizardId" name="Export Wizard"/>
  </commands>
  <commands xmi:id="_PbYHedfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.correction.extractLocalNotReplaceOccurrences.assist" commandName="Quick Assist - Extract local variable" description="Invokes quick assist and selects 'Extract local variable'" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHetfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.xsd.ui.refactor.makeTypeGlobal" commandName="Make &amp;Anonymous Type Global" description="Promotes anonymous type to global level and replaces its references" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHe9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesToggleBranchHierarchy" commandName="Toggle Branch Representation" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHfNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.search.implementors.in.project" commandName="Implementors in Project" description="Search for implementors of the selected interface in the enclosing project" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHfdfeEea-cp7hnRSzuA" elementId="org.eclipse.ltk.ui.refactoring.commands.deleteResources" commandName="Delete Resources" description="Delete the selected resources and notify LTK participants." category="_PbQyxdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHftfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.file.print" commandName="Print" description="Print" category="_PbQyudfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHf9feEea-cp7hnRSzuA" elementId="Ocaml.shiftRightCommand" commandName="Shift Right" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHgNfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.ApplyPatch" commandName="Apply Patch" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHgdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.junit.junitShortcut.rerunLast" commandName="Rerun JUnit Test" description="Rerun JUnit Test" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHgtfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.debug.ui.commands.AllReferences" commandName="All References" description="Inspect all references to the selected object" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHg9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.JavaPerspective" commandName="Java" description="Show the Java perspective" category="_PbQyxNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHhNfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.sse.ui.format.active.elements" commandName="Format Active Elements" description="Format active elements" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHhdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.showRulerContextMenu" commandName="Show Ruler Context Menu" description="Show the context menu for the ruler" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHhtfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.indent" commandName="Correct Indentation" description="Corrects the indentation of the selected lines" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHh9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.ide.copyConfigCommand" commandName="Copy Configuration Data To Clipboard" description="Copies the configuration data (system properties, installed bundles, etc) to the clipboard." category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHiNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.search.references.in.working.set" commandName="References in Working Set" description="Search for references to the selected element in a working set" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHidfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.task.clearOutgoing" commandName="Clear Outgoing Changes" category="_PbQyttfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHitfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.folding.collapse" commandName="Collapse" description="Collapses the folded region at the current selection" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHi9feEea-cp7hnRSzuA" elementId="Ocaml.shiftLeftCommand" commandName="Shift Left" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHjNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.smartEnterInverse" commandName="Insert Line Above Current Line" description="Adds a new line above the current line" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHjdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigate.forwardHistory" commandName="Forward History" description="Move forward in the editor navigation history" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHjtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.spy" commandName="Show Contributing Plug-in" description="Shows contribution information for the currently selected element" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHj9feEea-cp7hnRSzuA" elementId="Ocaml.putBreakpointCommand" commandName="Put Breakpoint" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHkNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.help.helpSearch" commandName="Help Search" description="Open the help search" category="_PbQyvdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHkdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.infer.type.arguments" commandName="Infer Generic Type Arguments" description="Infer type arguments for references to generic classes and remove unnecessary casts" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHktfeEea-cp7hnRSzuA" elementId="org.eclipse.search.ui.performTextSearchProject" commandName="Find Text in Project" description="Searches the files in the project for specific text." category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHk9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.goto.lineDown" commandName="Line Down" description="Go down one line of text" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHlNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.builds.ui.command.ShowTestResults.url" commandName="Show Test Results" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHldfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.project.rebuildAll" commandName="Rebuild All" description="Rebuild all projects" category="_PbQyvtfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHltfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.commit.Checkout" commandName="Checkout" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHl9feEea-cp7hnRSzuA" elementId="org.eclipse.m2e.actions.LifeCycleClean.run" commandName="Run Maven Clean" description="Run Maven Clean" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHmNfeEea-cp7hnRSzuA" elementId="org.eclipse.gef.zoom_in" commandName="Zoom In" description="Zoom In" category="_PbQyxtfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHmdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.gotoLastEditPosition" commandName="Last Edit Location" description="Last edit location" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHmtfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.quick.format" commandName="Format Element" description="Format enclosing text element" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHm9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.open.hyperlink" commandName="Open Hyperlink" description="Opens the hyperlink at the caret location or opens a chooser if more than one hyperlink is available" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHnNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.wikitext.ui.convertToEclipseHelpCommand" commandName="Generate Eclipse Help (*.html and *-toc.xml)" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHndfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.command.prevpage" commandName="Previous Page of Memory" description="Load previous page of memory" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHntfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.debug.ui.commands.ForceReturn" commandName="Force Return" description="Forces return from method with value of selected expression " category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHn9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.openLocalFile" commandName="Open File..." description="Open a file" category="_PbQyudfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHoNfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.Disconnect" commandName="Disconnect" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHodfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.ide.configureFilters" commandName="Configure Contents..." description="Configure the filters to apply to the markers view" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHotfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigate.previousTab" commandName="Previous Tab" description="Switch to the previous tab" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHo9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.select.previous" commandName="Select Previous Element" description="Expand selection to include previous sibling" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHpNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.dialogs.openMessageDialog" commandName="Open Message Dialog" description="Open a Message Dialog" category="_PbQywdfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbYHpdfeEea-cp7hnRSzuA" elementId="title" name="Title"/>
    <parameters xmi:id="_PbYHptfeEea-cp7hnRSzuA" elementId="message" name="Message"/>
    <parameters xmi:id="_PbYHp9feEea-cp7hnRSzuA" elementId="imageType" name="Image Type Constant" typeId="org.eclipse.ui.dialogs.Integer"/>
    <parameters xmi:id="_PbYHqNfeEea-cp7hnRSzuA" elementId="defaultIndex" name="Default Button Index" typeId="org.eclipse.ui.dialogs.Integer"/>
    <parameters xmi:id="_PbYHqdfeEea-cp7hnRSzuA" elementId="buttonLabel0" name="First Button Label"/>
    <parameters xmi:id="_PbYHqtfeEea-cp7hnRSzuA" elementId="buttonLabel1" name="Second Button Label"/>
    <parameters xmi:id="_PbYHq9feEea-cp7hnRSzuA" elementId="buttonLabel2" name="Third Button Label"/>
    <parameters xmi:id="_PbYHrNfeEea-cp7hnRSzuA" elementId="buttonLabel3" name="Fourth Button Label"/>
    <parameters xmi:id="_PbYHrdfeEea-cp7hnRSzuA" elementId="cancelReturns" name="Return Value on Cancel"/>
  </commands>
  <commands xmi:id="_PbYHrtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.goto.lineEnd" commandName="Line End" description="Go to the end of the line of text" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHr9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.file.refresh" commandName="Refresh" description="Refresh the selected items" category="_PbQyudfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHsNfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.commit.CreateTag" commandName="Create Tag..." category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYHsdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesViewChangeCredentials" commandName="Change Credentials" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYugNfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.xml.ui.referencedFileErrors" commandName="Show Details..." description="Show Details..." category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYugdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.correction.extractMethodInplace.assist" commandName="Quick Assist - Extract method" description="Invokes quick assist and selects 'Extract to method'" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYugtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.closeAllPerspectives" commandName="Close All Perspectives" description="Close all open perspectives" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYug9feEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.RunLast" commandName="Run" description="Launch in run mode" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuhNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.externalTools.commands.OpenExternalToolsConfigurations" commandName="External Tools..." description="Open external tools launch configuration dialog" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuhdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.debug.ui.command.OpenFromClipboard" commandName="Open from Clipboard" description="Opens a Java element or a Java stack trace from clipboard" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuhtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.deletePrevious" commandName="Delete Previous" description="Delete the previous character" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuh9feEea-cp7hnRSzuA" elementId="Ocaml.tabsToSpacesCommand" commandName="Convert Tabs to Spaces" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuiNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.select.lineStart" commandName="Select Line Start" description="Select to the beginning of the line of text" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuidfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.disconnected" commandName="Disconnected" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuitfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.commit.Reword" commandName="Reword Commit" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYui9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.editors.lineNumberToggle" commandName="Show Line Numbers" description="Toggle display of line numbers" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYujNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.select.columnNext" commandName="Select Next Column" description="Select the next column" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYujdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.CompareWithPrevious" commandName="Compare with Previous Revision" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYujtfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.search.read.access.in.workspace" commandName="Read Access in Workspace" description="Search for read references to the selected element in the workspace" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuj9feEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.index.ui.command.ResetIndex" commandName="Refresh Search Index" category="_PbQyttfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYukNfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.TerminateAndRelaunch" commandName="Terminate and Relaunch" description="Terminate and Relaunch" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYukdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.JavaHierarchyPerspective" commandName="Java Type Hierarchy" description="Show the Java Type Hierarchy perspective" category="_PbQyxNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuktfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesToggleBranchCommit" commandName="Toggle Latest Branch Commit" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuk9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.PushCommit" commandName="Push Commit..." category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYulNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.surround.with.try.multicatch" commandName="Surround with try/multi-catch Block" description="Surround the selected text with a try/multi-catch block" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuldfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.Tag" commandName="Tag" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYultfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.NoAssumeUnchanged" commandName="No Assume Unchanged" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYul9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.ide.showInSystemExplorer" commandName="Show In (System Explorer)" description="Show in system's explorer (file manager)" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYumNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.new.local.task" commandName="New Local Task" category="_PbQyttfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYumdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.select.lineDown" commandName="Select Line Down" description="Extend the selection to the next line of text" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYumtfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.RemoveAllBreakpoints" commandName="Remove All Breakpoints" description="Removes all breakpoints" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYum9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.sort.members" commandName="Sort Members" description="Sort all members using the member order preference" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYunNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigator.resources.nested.changeProjectPresentation" commandName="P&amp;rojects Presentation" category="_PbQyytfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbYundfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigator.resources.nested.enabled" name="&amp;Hierarchical"/>
    <parameters xmi:id="_PbYuntfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.commands.radioStateParameter" name="Nested Project view - Radio State" optional="false"/>
  </commands>
  <commands xmi:id="_PbYun9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.showKeyAssist" commandName="Show Key Assist" description="Show the key assist dialog" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuoNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.lowerCase" commandName="To Lower Case" description="Changes the selection to lower case" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuodfeEea-cp7hnRSzuA" elementId="org.eclipse.m2e.discovery.ui" commandName="m2e Marketplace" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuotfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.CompareWithIndex" commandName="Compare with Index" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuo9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.introduce.parameter.object" commandName="Introduce Parameter Object" description="Introduce a parameter object to a selected method" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYupNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.markTaskIncomplete" commandName="Mark Task Incomplete" category="_PbQyttfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYupdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.file.save" commandName="Save" description="Save the current contents" category="_PbQyudfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuptfeEea-cp7hnRSzuA" elementId="org.eclipse.gef.zoom_out" commandName="Zoom Out" description="Zoom Out" category="_PbQyxtfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYup9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.commands.openElementInEditor" commandName="Open Java Element" description="Open a Java element in its editor" category="_PbQytdfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbYuqNfeEea-cp7hnRSzuA" elementId="elementRef" name="Java element reference" typeId="org.eclipse.jdt.ui.commands.javaElementReference" optional="false"/>
  </commands>
  <commands xmi:id="_PbYuqdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.search.references.in.project" commandName="References in Project" description="Search for references to the selected element in the enclosing project" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuqtfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.AddToIndex" commandName="Add to Index" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuq9feEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.discovery.ui.discoveryWizardCommand" commandName="Discovery Wizard" description="shows the connector discovery wizard" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYurNfeEea-cp7hnRSzuA" elementId="org.eclipse.buildship.ui.commands.refreshtaskview" commandName="Refresh View (Gradle Tasks)" description="Refreshes the Gradle Tasks view" category="_PbQLodfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYurdfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.sse.ui.toggle.comment" commandName="Toggle Comment" description="Toggle Comment" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYurtfeEea-cp7hnRSzuA" elementId="org.eclipse.team.ui.applyPatch" commandName="Apply Patch..." description="Apply a patch to one or more workspace projects." category="_PbQLoNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYur9feEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.markTaskReadGoToNextUnread" commandName="Mark Task Read and Go To Next Unread Task" category="_PbQyttfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYusNfeEea-cp7hnRSzuA" elementId="org.eclipse.buildship.ui.commands.rundefaulttasks" commandName="Run Gradle Default Tasks" description="Runs the default tasks of the selected Gradle project" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYusdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.help.tipsAndTricksAction" commandName="Tips and Tricks" description="Open the tips and tricks help page" category="_PbQyvdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYustfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.select.lineEnd" commandName="Select Line End" description="Select to the end of the line of text" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYus9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.format" commandName="Format" description="Format the selected text" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYutNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.markTaskRead" commandName="Mark Task Read" category="_PbQyttfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYutdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.smartEnter" commandName="Insert Line Below Current Line" description="Adds a new line below the current line" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuttfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.goto.lineStart" commandName="Line Start" description="Go to the start of the line of text" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYut9feEea-cp7hnRSzuA" elementId="org.eclipse.wst.xml.ui.cmnd.contentmodel.sych" commandName="Synch" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuuNfeEea-cp7hnRSzuA" elementId="org.eclipse.oomph.setup.editor.synchronizePreferences" commandName="Synchronize Preferences" category="_PbQystfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuudfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.select.wordPrevious" commandName="Select Previous Word" description="Select the previous word" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuutfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesViewConfigureBranch" commandName="Configure Branch" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuu9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.move.element" commandName="Move - Refactoring " description="Move the selected element to a new location" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuvNfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.Suspend" commandName="Suspend" description="Suspend" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuvdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.hippieCompletion" commandName="Word Completion" description="Context insensitive completion" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuvtfeEea-cp7hnRSzuA" elementId="Ocaml.removeBreakpointsCommand" commandName="Remove Breakpoints" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuv9feEea-cp7hnRSzuA" elementId="org.eclipse.wst.xsd.ui.refactor.renameTargetNamespace" commandName="Rename Target Namespace" description="Changes the target namespace of the schema" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuwNfeEea-cp7hnRSzuA" elementId="org.eclipse.team.ui.synchronizeLast" commandName="Repeat last synchronization" description="Repeat the last synchronization" category="_PbQLoNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuwdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.folding.collapseComments" commandName="Collapse Comments" description="Collapse all comments" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuwtfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.StepOver" commandName="Step Over" description="Step over" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuw9feEea-cp7hnRSzuA" elementId="org.eclipse.compare.selectPreviousChange" commandName="Select Previous Change" description="Select Previous Change" category="_PbQyutfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuxNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.generate.javadoc" commandName="Generate Javadoc" description="Generates Javadoc for a selectable set of Java resources" category="_PbQyvtfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuxdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesViewConfigureGerritRemote" commandName="Gerrit Configuration..." category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuxtfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.debug.ui.commands.StepIntoSelection" commandName="Step Into Selection" description="Step into the current selected statement" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYux9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.ide.configureColumns" commandName="Configure Columns..." description="Configure the columns in the markers view" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuyNfeEea-cp7hnRSzuA" elementId="org.eclipse.buildship.ui.shortcut.test.run" commandName="Run Gradle Test" description="Run Gradle test based on the current selection" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuydfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.ReplaceWithCommit" commandName="Replace with commit" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuytfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.file.exit" commandName="Exit" description="Exit the application" category="_PbQyudfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbYuy9feEea-cp7hnRSzuA" elementId="mayPrompt" name="may prompt"/>
  </commands>
  <commands xmi:id="_PbYuzNfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.CompareWithHead" commandName="Compare with HEAD Revision" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuzdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesViewOpen" commandName="Open" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuztfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.deactivateAllTasks" commandName="Deactivate Task" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYuz9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.ShowHistory" commandName="Show in History" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYu0NfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.DebugLast" commandName="Debug" description="Launch in debug mode" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbYu0dfeEea-cp7hnRSzuA" elementId="org.eclipse.m2e.core.ui.command.updateProject" commandName="Update Project" description="Update Maven Project configuration and dependencies" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVkNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.wikitext.ui.convertToHtmlCommand" commandName="Generate HTML" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVkdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.SimplePush" commandName="Push to Upstream" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVktfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.previousView" commandName="Previous View" description="Switch to the previous view" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVk9feEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.addMemoryMonitor" commandName="Add Memory Block" description="Add memory block" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVlNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.junit.junitShortcut.run" commandName="Run JUnit Test" description="Run JUnit Test" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVldfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.generate.tostring" commandName="Generate toString()" description="Generates the toString() method for the type" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVltfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.organize.imports" commandName="Organize Imports" description="Evaluate all required imports and replace the current imports" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVl9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.selectAll" commandName="Select All" description="Select all" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVmNfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.PushHeadToGerrit" commandName="Push Current Head to Gerrit" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVmdfeEea-cp7hnRSzuA" elementId="Ocaml.backstepOverCommand" commandName="Backstep Over" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVmtfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.DropToFrame" commandName="Drop to Frame" description="Drop to Frame" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVm9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.show.outline" commandName="Quick Outline" description="Show the quick outline for the editor input" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVnNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.debug.ui.commands.Display" commandName="Display" description="Display result of evaluating selected text" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVndfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.goto.next.member" commandName="Go to Next Member" description="Move the caret to the next member of the compilation unit" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVntfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.search.exception.occurrences" commandName="Search Exception Occurrences in File" description="Search for exception occurrences of a selected exception type" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVn9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.folding.expand" commandName="Expand" description="Expands the folded region at the current selection" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVoNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.project.rebuildProject" commandName="Rebuild Project" description="Rebuild the selected projects" category="_PbQyvtfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVodfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.ShowBlame" commandName="Show Annotations" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVotfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.correction.assignToField.assist" commandName="Quick Assist - Assign to field" description="Invokes quick assist and selects 'Assign to field'" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVo9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.extract.method" commandName="Extract Method" description="Extract a set of statements or an expression into a new method and use the new method" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVpNfeEea-cp7hnRSzuA" elementId="org.eclipse.m2e.core.pomFileAction.run" commandName="Run Maven Build" description="Run Maven Build" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVpdfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.openRemoteTask" commandName="Open Remote Task" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVptfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.nextMemoryBlock" commandName="Next Memory Monitor" description="Show renderings from next memory monitor." category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVp9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.internal.reflog.OpenInCommitViewerCommand" commandName="Open in Commit Viewer" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVqNfeEea-cp7hnRSzuA" elementId="org.eclipse.m2e.actions.LifeCycleInstall.run" commandName="Run Maven Install" description="Run Maven Install" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVqdfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.context.ui.commands.task.retrieveContext" commandName="Retrieve Context" category="_PbQytNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVqtfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.Fetch" commandName="Fetch" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVq9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.copyLineDown" commandName="Copy Lines" description="Duplicates the selected lines and moves the selection to the copy" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVrNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.navigate.gotopackage" commandName="Go to Package" description="Go to Package" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVrdfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.task.ui.editor.QuickOutline" commandName="Quick Outline" description="Show the quick outline for the editor input" category="_PbQyttfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVrtfeEea-cp7hnRSzuA" elementId="org.eclipse.oomph.setup.editor.perform" commandName="Perform Setup Tasks" category="_PbQystfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVr9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.help.installationDialog" commandName="Installation Information" description="Open the installation dialog" category="_PbQyvdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVsNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.goto.lineUp" commandName="Line Up" description="Go up one line of text" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVsdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.goto.windowStart" commandName="Window Start" description="Go to the start of the window" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVstfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.ToggleStepFilters" commandName="Use Step Filters" description="Toggles enablement of debug step filters" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVs9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.correction.addBlock.assist" commandName="Quick Assist - Replace statement with block" description="Invokes quick assist and selects 'Replace statement with block'" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVtNfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.eof" commandName="EOF" description="Send end of file" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVtdfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.commons.ui.command.AddRepository" commandName="Add Repository" category="_PbQyyNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVttfeEea-cp7hnRSzuA" elementId="org.eclipse.wb.core.commands.empty" commandName="Empty command" description="Command which does nothing" category="_PbQLo9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVt9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigate.showInQuickMenu" commandName="Show In..." description="Open the Show In menu" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVuNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.copyLineUp" commandName="Duplicate Lines" description="Duplicates the selected lines and leaves the selection unchanged" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVudfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.ToggleMethodBreakpoint" commandName="Toggle Method Breakpoint" description="Creates or removes a method breakpoint" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVutfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.navigate.java.open.structure" commandName="Open Structure" description="Show the structure of the selected element" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVu9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.select.enclosing" commandName="Select Enclosing Element" description="Expand selection to include enclosing element" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVvNfeEea-cp7hnRSzuA" elementId="org.eclipse.ant.ui.antShortcut.debug" commandName="Debug Ant Build" description="Debug Ant Build" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVvdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigate.next" commandName="Next" description="Navigate to the next item" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVvtfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesViewRenameBranch" commandName="Rename Branch..." category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVv9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.closePerspective" commandName="Close Perspective" description="Close the current perspective" category="_PbQyu9feEea-cp7hnRSzuA">
    <parameters xmi:id="_PbZVwNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.closePerspective.perspectiveId" name="Perspective Id"/>
  </commands>
  <commands xmi:id="_PbZVwdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.AssumeUnchanged" commandName="Assume Unchanged" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVwtfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.xml.ui.nextSibling" commandName="Next Sibling" description="Go to Next Sibling" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVw9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.cheatsheets.openCheatSheetURL" commandName="Open Cheat Sheet from URL" description="Open a Cheat Sheet from file at a specified URL." category="_PbQyvdfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbZVxNfeEea-cp7hnRSzuA" elementId="cheatSheetId" name="Identifier" optional="false"/>
    <parameters xmi:id="_PbZVxdfeEea-cp7hnRSzuA" elementId="name" name="Name" optional="false"/>
    <parameters xmi:id="_PbZVxtfeEea-cp7hnRSzuA" elementId="url" name="URL" optional="false"/>
  </commands>
  <commands xmi:id="_PbZVx9feEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.bugs.commands.newTaskFromMarker" commandName="New Task from Marker..." description="Report as Bug from Marker" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVyNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.context.ui.commands.focus.view" commandName="Focus View" category="_PbQyytfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbZVydfeEea-cp7hnRSzuA" elementId="viewId" name="View ID to Focus" optional="false"/>
  </commands>
  <commands xmi:id="_PbZVytfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.StepReturn" commandName="Step Return" description="Step return" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZVy9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.browser.openBundleResource" commandName="Open Resource in Browser" description="Opens a bundle resource in the default web browser." category="_PbQyu9feEea-cp7hnRSzuA">
    <parameters xmi:id="_PbZVzNfeEea-cp7hnRSzuA" elementId="plugin" name="Plugin"/>
    <parameters xmi:id="_PbZVzdfeEea-cp7hnRSzuA" elementId="path" name="Path"/>
  </commands>
  <commands xmi:id="_PbZVztfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.PushBranch" commandName="Push Branch..." category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8oNfeEea-cp7hnRSzuA" elementId="org.eclipse.m2e.core.ui.command.addDependency" commandName="Add Maven Dependency" description="Add Maven Dependency" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8odfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.debug.ui.commands.Execute" commandName="Execute" description="Evaluate selected text" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8otfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.add.block.comment" commandName="Add Block Comment" description="Enclose the selection with a block comment" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8o9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.help.aboutAction" commandName="About" description="Open the about dialog" category="_PbQyvdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8pNfeEea-cp7hnRSzuA" elementId="Ocaml.commentSelectionCommand" commandName="Comment/Uncomment Selection" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8pdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.annotate.classFile" commandName="Annotate Class File" description="Externally add Annotations to a Class File." category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8ptfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.stash.create" commandName="Stash Changes..." category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8p9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.file.closeAllSaved" commandName="Close All Saved" description="Close all saved editors" category="_PbQyudfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8qNfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.CheckoutCommand" commandName="Checkout" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8qdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.search.read.access.in.project" commandName="Read Access in Project" description="Search for read references to the selected element in the enclosing project" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8qtfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.activateSelectedTask" commandName="Activate Selected Task" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8q9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.redo" commandName="Redo" description="Redo the last operation" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8rNfeEea-cp7hnRSzuA" elementId="Ocaml.terminateCommand" commandName="Terminate" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8rdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.search.references.in.workspace" commandName="References in Workspace" description="Search for references to the selected element in the workspace" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8rtfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.sse.ui.format.document" commandName="Format" description="Format selection" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8r9feEea-cp7hnRSzuA" elementId="org.eclipse.m2e.editor.RenameArtifactAction" commandName="Rename Maven Artifact..." category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8sNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.correction.addNonNLS" commandName="Quick Fix - Add non-NLS tag" description="Invokes quick assist and selects 'Add non-NLS tag'" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8sdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigate.selectWorkingSets" commandName="Select Working Sets" description="Select the working sets that are applicable for this window." category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8stfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.rename.element" commandName="Rename - Refactoring " description="Rename the selected element" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8s9feEea-cp7hnRSzuA" elementId="Ocaml.stepReturnCommand" commandName="Step Return" category="_PbQys9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8tNfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.RemoveFromIndex" commandName="Remove from Index" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8tdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.newWizard" commandName="New" description="Open the New item wizard" category="_PbQyudfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbZ8ttfeEea-cp7hnRSzuA" elementId="newWizardId" name="New Wizard"/>
  </commands>
  <commands xmi:id="_PbZ8t9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.externalize.strings" commandName="Externalize Strings" description="Finds all strings that are not externalized and moves them into a separate property file" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8uNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.newWindow" commandName="New Window" description="Open another window" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8udfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.uncomment" commandName="Uncomment" description="Uncomment the selected Java comment lines" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8utfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.CherryPick" commandName="Cherry Pick" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8u9feEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.builds.ui.commands.CopyDetails" commandName="Copy Details" category="_PbQysNfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbZ8vNfeEea-cp7hnRSzuA" elementId="kind" name="Kind"/>
    <parameters xmi:id="_PbZ8vdfeEea-cp7hnRSzuA" elementId="element" name="Element"/>
  </commands>
  <commands xmi:id="_PbZ8vtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.file.close" commandName="Close" description="Close the active editor" category="_PbQyudfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8v9feEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.builds.ui.command.RunBuild" commandName="Run Build" category="_PbQysNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8wNfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.CompareVersions" commandName="Compare with each other" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8wdfeEea-cp7hnRSzuA" elementId="org.eclipse.equinox.p2.ui.sdk.install" commandName="Install New Software..." category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8wtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.window.customizePerspective" commandName="Customize Perspective" description="Customize the current perspective" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8w9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.surround.with.try.catch" commandName="Surround with try/catch Block" description="Surround the selected text with a try/catch block" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8xNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.context.ui.commands.interest.decrement" commandName="Make Less Interesting" description="Make Less Interesting" category="_PbQytNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8xdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.externaltools.ExternalToolMenuDelegateToolbar" commandName="Run Last Launched External Tool" description="Runs the last launched external Tool" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8xtfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.CheckoutCommand" commandName="Checkout" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8x9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.goto.previous.member" commandName="Go to Previous Member" description="Move the caret to the previous member of the compilation unit" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8yNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.search.occurrences.in.file" commandName="Search All Occurrences in File" description="Search for all occurrences of the selected element in its declaring file" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8ydfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.moveLineUp" commandName="Move Lines Up" description="Moves the selected lines up" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbZ8ytfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.Reset" commandName="Reset..." category="_PbQyytfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbZ8y9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.ResetMode" name="Reset mode" optional="false"/>
  </commands>
  <commands xmi:id="_PbajsNfeEea-cp7hnRSzuA" elementId="org.eclipse.equinox.p2.ui.discovery.commands.ShowBundleCatalog" commandName="Show Bundle Catalog" category="_PbQyytfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbajsdfeEea-cp7hnRSzuA" elementId="org.eclipse.equinox.p2.ui.discovery.commands.DirectoryParameter" name="Directory URL"/>
    <parameters xmi:id="_PbajstfeEea-cp7hnRSzuA" elementId="org.eclipse.equinox.p2.ui.discovery.commands.TagsParameter" name="Tags"/>
  </commands>
  <commands xmi:id="_Pbajs9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.gotoBreadcrumb" commandName="Show In Breadcrumb" description="Shows the Java editor breadcrumb and sets the keyboard focus into it" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbajtNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigate.previousSubTab" commandName="Previous Sub-Tab" description="Switch to the previous sub-tab" category="_PbQytdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbajtdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.generate.hashcode.equals" commandName="Generate hashCode() and equals()" description="Generates hashCode() and equals() methods for the type" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbajttfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigate.showIn" commandName="Show In" category="_PbQytdfeEea-cp7hnRSzuA">
    <parameters xmi:id="_Pbajt9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigate.showIn.targetId" name="Show In Target Id" optional="false"/>
  </commands>
  <commands xmi:id="_PbajuNfeEea-cp7hnRSzuA" elementId="sed.tabletree.collapseAll" commandName="Collapse All" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbajudfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.dialogs.openInputDialog" commandName="Open Input Dialog" description="Open an Input Dialog" category="_PbQywdfeEea-cp7hnRSzuA">
    <parameters xmi:id="_PbajutfeEea-cp7hnRSzuA" elementId="title" name="Title"/>
    <parameters xmi:id="_Pbaju9feEea-cp7hnRSzuA" elementId="message" name="Message"/>
    <parameters xmi:id="_PbajvNfeEea-cp7hnRSzuA" elementId="initialValue" name="Initial Value"/>
    <parameters xmi:id="_PbajvdfeEea-cp7hnRSzuA" elementId="cancelReturns" name="Return Value on Cancel"/>
  </commands>
  <commands xmi:id="_PbajvtfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesViewRemoveRemote" commandName="Delete Remote" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pbajv9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RebaseCurrent" commandName="Rebase" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbajwNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.extract.class" commandName="Extract Class..." description="Extracts fields into a new class" category="_PbQyvNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbajwdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.correction.extractConstant.assist" commandName="Quick Assist - Extract constant" description="Invokes quick assist and selects 'Extract constant'" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbajwtfeEea-cp7hnRSzuA" elementId="org.eclipse.recommenders.rcp.commands.extensionDiscovery" commandName="Discover New Extensions" category="_PbQyytfeEea-cp7hnRSzuA">
    <parameters xmi:id="_Pbajw9feEea-cp7hnRSzuA" elementId="org.eclipse.recommenders.utils.rcp.linkContribution.href" name="URI" optional="false"/>
  </commands>
  <commands xmi:id="_PbajxNfeEea-cp7hnRSzuA" elementId="org.eclipse.compare.copyRightToLeft" commandName="Copy from Right to Left" description="Copy Current Change from Right to Left" category="_PbQyutfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbajxdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.ide.markCompleted" commandName="Mark Completed" description="Mark the selected tasks as completed" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbajxtfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.commands.OpenProfileConfigurations" commandName="Profile..." description="Open profile launch configuration dialog" category="_PbQywNfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pbajx9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.recenter" commandName="Recenter" description="Scroll cursor line to center, top and bottom" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbajyNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.add.unimplemented.constructors" commandName="Generate Constructors from Superclass" description="Evaluate and add constructors from superclass" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbajydfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.builds.ui.commands.OpenBuildElementWithBrowser.url" commandName="Open Build with Browser" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbajytfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.select.windowStart" commandName="Select Window Start" description="Select to the start of the window" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pbajy9feEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.command.markTaskComplete" commandName="Mark Task Complete" category="_PbQyttfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbajzNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.source.quickMenu" commandName="Show Source Quick Menu" description="Shows the source quick menu" category="_PbQyx9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbajzdfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.edit.text.java.search.declarations.in.project" commandName="Declaration in Project" description="Search for declarations of the selected element in the enclosing project" category="_PbQyv9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_PbajztfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.history.Revert" commandName="Revert Commit" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pbajz9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.edit.text.scroll.lineDown" commandName="Scroll Line Down" description="Scroll down one line of text" category="_PbQysdfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pbaj0NfeEea-cp7hnRSzuA" elementId="org.eclipse.wst.sse.ui.search.find.occurrences" commandName="Occurrences in File" description="Find occurrences of the selection in the file" category="_PbQLotfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pbaj0dfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.ToggleCoolbarAction" commandName="Toggle Toolbar Visibility" description="Toggles the visibility of the window toolbar" category="_PbQyu9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pbaj0tfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.RepositoriesViewImportProjects" commandName="Import Projects..." description="Import or create in local Git repository" category="_PbQyw9feEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pbaj09feEea-cp7hnRSzuA" elementId="org.eclipse.wst.sse.ui.outline.customFilter" commandName="&amp;Filters" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pbaj1NfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.navigate.openResource" commandName="Open Resource" description="Open an editor on a particular resource" category="_PbQytdfeEea-cp7hnRSzuA">
    <parameters xmi:id="_Pbaj1dfeEea-cp7hnRSzuA" elementId="filePath" name="File Path" typeId="org.eclipse.ui.ide.resourcePath"/>
  </commands>
  <commands xmi:id="_Pbaj1tfeEea-cp7hnRSzuA" elementId="org.eclipse.compare.copyAllLeftToRight" commandName="Copy All from Left to Right" description="Copy All Changes from Left to Right" category="_PbQyutfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PgOyQNfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.CompareWithCommit" commandName="org.eclipse.egit.ui.team.CompareWithCommit"/>
  <commands xmi:id="_PgQAYNfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.CompareWithRevision" commandName="org.eclipse.egit.ui.team.CompareWithRevision"/>
  <commands xmi:id="_PgQAYdfeEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.team.ReplaceWithPrevious" commandName="org.eclipse.egit.ui.team.ReplaceWithPrevious"/>
  <commands xmi:id="_PuqP0NfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.search.searchActionSet/org.eclipse.search.OpenSearchDialogPage" commandName="Search..." description="Search" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PuqP0dfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.team.ui.actionSet/org.eclipse.team.ui.synchronizeAll" commandName="Synchronize..." description="Synchronize..." category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Puq24NfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.team.ui.actionSet/org.eclipse.team.ui.ConfigureProject" commandName="Share Project..." description="Share the project with others using a version and configuration management system." category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Purd8NfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.ui.externaltools.ExternalToolsSet/org.eclipse.ui.externaltools.ExternalToolMenuDelegateMenu" commandName="External Tools" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu1O8NfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.wb.core.ui.actionset/org.eclipse.wb.core.wizards.actions.NewDesignerTypeDropDownAction" commandName="New Visual Class" description="Create new visual classes" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu12ANfeEea-cp7hnRSzuA" elementId="Ocaml.cleanCommand" commandName="Clean" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu2dENfeEea-cp7hnRSzuA" elementId="Ocaml.switchSpellCheckerCommand" commandName="Switch Spell Checker" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu2dEdfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.ant.ui.actionSet.presentation/org.eclipse.ant.ui.toggleAutoReconcile" commandName="Toggle Ant Editor Auto Reconcile" description="Toggle Ant Editor Auto Reconcile" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu3rMNfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.launchActionSet/org.eclipse.debug.internal.ui.actions.RunWithConfigurationAction" commandName="Run As" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu4SQNfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.launchActionSet/org.eclipse.debug.internal.ui.actions.RunHistoryMenuAction" commandName="Run History" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu4SQdfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.launchActionSet/org.eclipse.debug.internal.ui.actions.RunDropDownAction" commandName="Run" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu4SQtfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.launchActionSet/org.eclipse.debug.internal.ui.actions.DebugWithConfigurationAction" commandName="Debug As" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu45UNfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.launchActionSet/org.eclipse.debug.internal.ui.actions.DebugHistoryMenuAction" commandName="Debug History" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu45UdfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.launchActionSet/org.eclipse.debug.internal.ui.actions.DebugDropDownAction" commandName="Debug" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu45UtfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.profileActionSet/org.eclipse.debug.internal.ui.actions.ProfileDropDownAction" commandName="Profile" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu45U9feEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.profileActionSet/org.eclipse.debug.internal.ui.actions.ProfileWithConfigurationAction" commandName="Profile As" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu5gYNfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.profileActionSet/org.eclipse.debug.internal.ui.actions.ProfileHistoryMenuAction" commandName="Profile History" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu6ugNfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.ui.JavaElementCreationActionSet/org.eclipse.jdt.ui.actions.NewTypeDropDown" commandName="Class..." description="New Java Class" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu6ugdfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.ui.JavaElementCreationActionSet/org.eclipse.jdt.ui.actions.OpenPackageWizard" commandName="Package..." description="New Java Package" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu7VkNfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.ui.JavaElementCreationActionSet/org.eclipse.jdt.ui.actions.OpenProjectWizard" commandName="Java Project..." description="New Java Project" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu78oNfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.ui.SearchActionSet/org.eclipse.jdt.ui.actions.OpenJavaSearchPage" commandName="Java..." category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu8jsNfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.mylyn.java.actionSet.browsing/org.eclipse.mylyn.java.ui.actions.ApplyMylynToBrowsingPerspectiveAction" commandName="Focus Browsing Perspective" description="Focus Java Browsing Views on Active Task" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu8jsdfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.mylyn.doc.actionSet/org.eclipse.mylyn.tasks.ui.bug.report" commandName="Report Bug or Enhancement..." description="Report Bug or Enhancement" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu8jstfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.mylyn.tasks.ui.navigation.additions/org.eclipse.mylyn.tasks.ui.navigate.task.history" commandName="Activate Previous Task" description="Activate Previous Task" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu9KwNfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.ui.cheatsheets.actionSet/org.eclipse.ui.cheatsheets.actions.CheatSheetHelpMenuAction" commandName="Cheat Sheets..." category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu9KwdfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.m2e.jdt.ui.downloadSourcesContribution/org.eclipse.m2e.jdt.ui.downloadSourcesAction" commandName="label" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu9KwtfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.m2e.jdt.ui.downloadSourcesContribution_38/org.eclipse.m2e.jdt.ui.downloadSourcesAction_38" commandName="label" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu9x0NfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.ui.texteditor.ruler.actions/org.eclipse.ui.texteditor.BookmarkRulerAction" commandName="Text Editor Bookmark Ruler Action" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu9x0dfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.ui.texteditor.ruler.actions/org.eclipse.ui.texteditor.SelectRulerAction" commandName="Text Editor Ruler Single-Click" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu9x0tfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" commandName="%AddBreakpoint.label" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu-Y4NfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.ui.texteditor.ruler.actions/org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction" commandName="label" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu-Y4dfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.wst.dtd.core.dtdsource.ruler.actions/org.eclipse.ui.texteditor.BookmarkRulerAction" commandName="Add Bookmark..." category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu-Y4tfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.wst.dtd.core.dtdsource.ruler.actions/org.eclipse.ui.texteditor.SelectRulerAction" commandName="Select Ruler" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu-_8NfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.core.runtime.xml.source.ruler.actions/org.eclipse.ui.texteditor.BookmarkRulerAction" commandName="Add Bookmark..." category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu-_8dfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.core.runtime.xml.source.ruler.actions/org.eclipse.ui.texteditor.SelectRulerAction" commandName="Select Ruler" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu-_8tfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.ant.ui.BreakpointRulerActions/org.eclipse.ant.ui.actions.ManageBreakpointRulerAction" commandName="Toggle Breakpoint" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu-_89feEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.ClassFileEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" commandName="Toggle Breakpoint" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu_nANfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.JavaSnippetToolbarActions/org.eclipse.jdt.debug.ui.SnippetExecute" commandName="Execute" description="Execute the Selected Text" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu_nAdfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.JavaSnippetToolbarActions/org.eclipse.jdt.debug.ui.SnippetDisplay" commandName="Display" description="Display Result of Evaluating Selected Text" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_Pu_nAtfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.JavaSnippetToolbarActions/org.eclipse.jdt.debug.ui.SnippetInspect" commandName="Inspect" description="Inspect Result of Evaluating Selected Text" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvAOENfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.internal.ui.CompilationUnitEditor.ruler.actions/org.eclipse.jdt.internal.ui.javaeditor.BookmarkRulerAction" commandName="Java Editor Bookmark Ruler Action" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvAOEdfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.internal.ui.CompilationUnitEditor.ruler.actions/org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction" commandName="Java Editor Ruler Single-Click" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvAOEtfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.internal.ui.ClassFileEditor.ruler.actions/org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction" commandName="Java Editor Ruler Single-Click" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvA1INfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.internal.ui.PropertiesFileEditor.ruler.actions/org.eclipse.jdt.internal.ui.propertiesfileeditor.BookmarkRulerAction" commandName="Java Editor Bookmark Ruler Action" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvA1IdfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.internal.ui.PropertiesFileEditor.ruler.actions/org.eclipse.jdt.internal.ui.propertiesfileeditor.SelectRulerAction" commandName="Java Editor Ruler Single-Click" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvA1ItfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.wst.xsd.core.xsdsource.ruler.actions/org.eclipse.ui.texteditor.BookmarkRulerAction" commandName="Add Bookmark..." category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvA1I9feEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.wst.xsd.core.xsdsource.ruler.actions/org.eclipse.ui.texteditor.SelectRulerAction" commandName="Select Ruler" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvBcMNfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.PulldownActions/org.eclipse.debug.ui.debugview.pulldown.ViewManagementAction" commandName="View Management..." category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvBcMdfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.debugview.toolbar/org.eclipse.debug.ui.debugview.toolbar.removeAllTerminated" commandName="Remove All Terminated" description="Remove All Terminated Launches" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvBcMtfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.breakpointsview.toolbar/org.eclipse.debug.ui.breakpointsView.toolbar.removeAll" commandName="Remove All" description="Remove All Breakpoints" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvCDQNfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.breakpointsview.toolbar/org.eclipse.debug.ui.breakpointsView.toolbar.linkWithDebugView" commandName="Link with Debug View" description="Link with Debug View" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvCDQdfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.breakpointsview.toolbar/org.eclipse.debug.ui.breakpointsView.toolbar.workingSets" commandName="Working Sets..." description="Manage Working Sets" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvCDQtfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.breakpointsview.toolbar/org.eclipse.debug.ui.breakpointsView.toolbar.clearDefaultBreakpointGroup" commandName="Deselect Default Working Set" description="Deselect Default Working Set" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvCqUNfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.breakpointsview.toolbar/org.eclipse.debug.ui.breakpointsView.toolbar.setDefaultBreakpointGroup" commandName="Select Default Working Set..." description="Select Default Working Set" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvCqUdfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.breakpointsview.toolbar/org.eclipse.debug.ui.breakpointsView.toolbar.groupByAction" commandName="Group By" description="Show" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvCqUtfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.expressionsView.toolbar/org.eclipse.debug.ui.expresssionsView.toolbar.removeAll" commandName="Remove All" description="Remove All Expressions" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvCqU9feEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.expressionsView.toolbar/org.eclipse.debug.ui.expresssionsView.toolbar.AddWatchExpression" commandName="Add Watch Expression..." description="Create a new watch expression" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvDRYNfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.memoryView.toolbar/org.eclipse.debug.ui.PinMemoryBlockAction" commandName="Pin Memory Monitor" description="Pin Memory Monitor" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvDRYdfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.memoryView.toolbar/org.eclipse.debug.ui.NewMemoryViewAction" commandName="New Memory View" description="New Memory View" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvDRYtfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.memoryView.toolbar/org.eclipse.debug.ui.togglemonitors" commandName="Toggle Memory Monitors Pane" description="Toggle Memory Monitors Pane" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvD4cNfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.memoryView.toolbar/org.eclipse.debug.ui.linkrenderingpanes" commandName="Link Memory Rendering Panes" description="Link Memory Rendering Panes" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvD4cdfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.memoryView.toolbar/org.eclipse.debug.ui.tablerendering.preferencesaction" commandName="Table Renderings Preferences..." description="&amp;Table Renderings Preferences..." category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvD4ctfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.memoryView.toolbar/org.eclipse.debug.ui.togglesplitpane" commandName="Toggle Split Pane" description="Toggle Split Pane" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvD4c9feEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.memoryView.toolbar/org.eclipse.debug.ui.switchMemoryBlock" commandName="Switch Memory Monitor" description="Switch Memory Monitor" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvEfgNfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.debug.ui.memoryView.toolbar/org.eclipse.debug.ui.memoryViewPreferencesAction" commandName="Preferences..." description="&amp;Preferences..." category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvEfgdfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.VariableViewActions/org.eclipse.jdt.debug.ui.variableViewActions.Preferences" commandName="Java Preferences..." description="Opens preferences for Java variables" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvEfgtfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.VariableViewActions/org.eclipse.jdt.debug.ui.variablesViewActions.AllReferencesInView" commandName="Show References" description="Shows references to each object in the variables view as an array of objects." category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvEfg9feEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.VariableViewActions/org.eclipse.jdt.debug.ui.variableViewActions.ShowNullEntries" commandName="Show Null Array Entries" description="Show Null Array Entries" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvFGkNfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.VariableViewActions/org.eclipse.jdt.debug.ui.variableViewActions.ShowQualified" commandName="Show Qualified Names" description="Show Qualified Names" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvFGkdfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.VariableViewActions/org.eclipse.jdt.debug.ui.variableViewActions.ShowStatic" commandName="Show Static Variables" description="Show Static Variables" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvFGktfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.VariableViewActions/org.eclipse.jdt.debug.ui.variableViewActions.ShowConstants" commandName="Show Constants" description="Show Constants" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvFGk9feEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.ExpressionViewActions/org.eclipse.jdt.debug.ui.variableViewActions.Preferences" commandName="Java Preferences..." description="Opens preferences for Java variables" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvFtoNfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.ExpressionViewActions/org.eclipse.jdt.debug.ui.expressionViewActions.AllReferencesInView" commandName="Show References" description="Show &amp;References" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvFtodfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.ExpressionViewActions/org.eclipse.jdt.debug.ui.variableViewActions.ShowNullEntries" commandName="Show Null Array Entries" description="Show Null Array Entries" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvFtotfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.ExpressionViewActions/org.eclipse.jdt.debug.ui.expressionViewActions.ShowQualified" commandName="Show Qualified Names" description="Show Qualified Names" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvFto9feEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.ExpressionViewActions/org.eclipse.jdt.debug.ui.expressionViewActions.ShowStatic" commandName="Show Static Variables" description="Show Static Variables" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvGUsNfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.ExpressionViewActions/org.eclipse.jdt.debug.ui.expressionViewActions.ShowConstants" commandName="Show Constants" description="Show Constants" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvGUsdfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.BreakpointViewActions/org.eclipse.jdt.debug.ui.actions.AddException" commandName="Add Java Exception Breakpoint" description="Add Java Exception Breakpoint" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvGUstfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.BreakpointViewActions/org.eclipse.jdt.debug.ui.breakpointViewActions.ShowQualified" commandName="Show Qualified Names" description="Show Qualified Names" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvGUs9feEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.LaunchViewActions/org.eclipse.jdt.debug.ui.launchViewActions.ShowThreadGroups" commandName="Show Thread Groups" description="Show Thread Groups" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvG7wNfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.LaunchViewActions/org.eclipse.jdt.debug.ui.launchViewActions.ShowQualified" commandName="Show Qualified Names" description="Show Qualified Names" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvG7wdfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.LaunchViewActions/org.eclipse.jdt.debug.ui.launchViewActions.ShowSystemThreads" commandName="Show System Threads" description="Show System Threads" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvG7wtfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.LaunchViewActions/org.eclipse.jdt.debug.ui.launchViewActions.ShowMonitorThreadInfo" commandName="Show Monitors" description="Show the Thread &amp; Monitor Information" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvHi0NfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.DisplayViewActions/org.eclipse.jdt.debug.ui.displayViewToolbar.Watch" commandName="Watch" description="Create a Watch Expression from the Selected Text" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvHi0dfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.DisplayViewActions/org.eclipse.jdt.debug.ui.displayViewToolbar.Execute" commandName="Execute" description="Execute the Selected Text" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvHi0tfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.DisplayViewActions/org.eclipse.jdt.debug.ui.displayViewToolbar.Display" commandName="Display" description="Display Result of Evaluating Selected Text" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvHi09feEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.DisplayViewActions/org.eclipse.jdt.debug.ui.displayViewToolbar.Inspect" commandName="Inspect" description="Inspect Result of Evaluating Selected Text" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvIJ4NfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.mylyn.context.ui.outline.contribution/org.eclipse.mylyn.context.ui.contentOutline.focus" commandName="Focus on Active Task" description="Focus on Active Task (Alt+click to reveal filtered elements)" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvIJ4dfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.mylyn.java.ui.markers.breakpoints.contribution/org.eclipse.mylyn.java.ui.actions.focus.markers.breakpoints" commandName="Focus on Active Task" description="Focus on Active Task" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvIJ4tfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.mylyn.ui.debug.view.contribution/org.eclipse.mylyn.ui.actions.FilterResourceNavigatorAction" commandName="Focus on Active Task (Experimental)" description="Focus on Active Task (Experimental)" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvIJ49feEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.mylyn.ui.projectexplorer.filter/org.eclipse.mylyn.ide.ui.actions.focus.projectExplorer" commandName="Focus on Active Task" description="Focus on Active Task (Alt+click to reveal filtered elements)" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvIw8NfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.mylyn.ui.resource.navigator.filter/org.eclipse.mylyn.ide.ui.actions.focus.resourceNavigator" commandName="Focus on Active Task" description="Focus on Active Task (Alt+click to reveal filtered elements)" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvIw8dfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.mylyn.problems.contribution/org.eclipse.mylyn.ide.ui.actions.focus.markers.problems" commandName="Focus on Active Task" description="Focus on Active Task" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvIw8tfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.mylyn.markers.all.contribution/org.eclipse.mylyn.ide.ui.actions.focus.markers.all" commandName="Focus on Active Task" description="Focus on Active Task" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvIw89feEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.mylyn.markers.tasks.contribution/org.eclipse.mylyn.ide.ui.actions.focus.markers.tasks" commandName="Focus on Active Task" description="Focus on Active Task" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvJYANfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.mylyn.markers.bookmarks.contribution/org.eclipse.mylyn.ide.ui.actions.focus.markers.bookmarks" commandName="Focus on Active Task" description="Focus on Active Task" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvJYAdfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.mylyn.java.explorer.contribution/org.eclipse.mylyn.java.actions.focus.packageExplorer" commandName="Focus on Active Task" description="Focus on Active Task (Alt+click to reveal filtered elements)" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvJYAtfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.mylyn.tasks.ui.actions.view/org.eclipse.mylyn.tasks.ui.search.open" commandName="Search Repository..." category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvJYA9feEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.mylyn.tasks.ui.actions.view/org.eclipse.mylyn.tasks.ui.synchronize.changed" commandName="Synchronize Changed" description="Synchronize Changed" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvJ_ENfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.mylyn.tasks.ui.actions.view/org.eclipse.mylyn.tasks.ui.tasks.restore" commandName="Restore Tasks from History..." category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvJ_EdfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.mylyn.tasks.ui.actions.view/org.eclipse.mylyn.tasks.ui.open.repositories.view" commandName="Show Task Repositories View" description="Show Task Repositories View" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvJ_EtfeEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.mylyn.tasks.ui.actions.view/org.eclipse.mylyn.doc.legend.show.action" commandName="Show UI Legend" description="Show Tasks UI Legend" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <commands xmi:id="_PvJ_E9feEea-cp7hnRSzuA" elementId="AUTOGEN:::org.eclipse.mylyn.tasks.ui.actions.view/org.eclipse.mylyn.context.ui.actions.tasklist.focus" commandName="Focus on Workweek" description="Focus on Workweek" category="_PbQyytfeEea-cp7hnRSzuA"/>
  <addons xmi:id="_PacTWNfeEea-cp7hnRSzuA" elementId="org.eclipse.e4.core.commands.service" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.core.commands/org.eclipse.e4.core.commands.CommandServiceAddon"/>
  <addons xmi:id="_PacTWdfeEea-cp7hnRSzuA" elementId="org.eclipse.e4.ui.contexts.service" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.services/org.eclipse.e4.ui.services.ContextServiceAddon"/>
  <addons xmi:id="_PacTWtfeEea-cp7hnRSzuA" elementId="org.eclipse.e4.ui.bindings.service" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.bindings/org.eclipse.e4.ui.bindings.BindingServiceAddon"/>
  <addons xmi:id="_PacTW9feEea-cp7hnRSzuA" elementId="org.eclipse.e4.ui.workbench.commands.model" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.addons.CommandProcessingAddon"/>
  <addons xmi:id="_PacTXNfeEea-cp7hnRSzuA" elementId="org.eclipse.e4.ui.workbench.contexts.model" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.addons.ContextProcessingAddon"/>
  <addons xmi:id="_PacTXdfeEea-cp7hnRSzuA" elementId="org.eclipse.e4.ui.workbench.bindings.model" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.swt/org.eclipse.e4.ui.workbench.swt.util.BindingProcessingAddon"/>
  <addons xmi:id="_PacTXtfeEea-cp7hnRSzuA" elementId="Cleanup Addon" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.cleanupaddon.CleanupAddon"/>
  <addons xmi:id="_PacTX9feEea-cp7hnRSzuA" elementId="DnD Addon" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.dndaddon.DnDAddon"/>
  <addons xmi:id="_PacTYNfeEea-cp7hnRSzuA" elementId="MinMax Addon" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.minmax.MinMaxAddon"/>
  <addons xmi:id="_PacTYdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.workbench.addon.0" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.addons.HandlerProcessingAddon"/>
  <addons xmi:id="_PamEUNfeEea-cp7hnRSzuA" elementId="SplitterAddon" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.splitteraddon.SplitterAddon"/>
  <addons xmi:id="_dz0JgGOlEeSMMaPQU2nlzw" elementId="org.eclipse.ui.ide.application.addon.0" contributorURI="platform:/plugin/org.eclipse.ui.ide.application" contributionURI="bundleclass://org.eclipse.ui.ide.application/org.eclipse.ui.internal.ide.application.addons.ModelCleanupAddon"/>
  <categories xmi:id="_PbQLoNfeEea-cp7hnRSzuA" elementId="org.eclipse.team.ui.category.team" name="Team" description="Actions that apply when working with a Team"/>
  <categories xmi:id="_PbQLodfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.category.views" name="Views" description="Commands for opening views"/>
  <categories xmi:id="_PbQLotfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.category.edit" name="Edit"/>
  <categories xmi:id="_PbQLo9feEea-cp7hnRSzuA" elementId="org.eclipse.wb.core.actions.category" name="WindowBuilder Pro" description="WindowBuilder Pro actions"/>
  <categories xmi:id="_PbQLpNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.wikitext.ui.editor.category" name="WikiText Markup Editing Commands" description="commands for editing lightweight markup"/>
  <categories xmi:id="_PbQLpdfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.category.editor" name="Task Editor"/>
  <categories xmi:id="_PbQLptfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.ide.markerContents" name="Contents" description="The category for menu contents"/>
  <categories xmi:id="_PbQLp9feEea-cp7hnRSzuA" elementId="org.eclipse.buildship.ui.project" name="Buildship" description="Contains the Buildship specific commands"/>
  <categories xmi:id="_PbQysNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.builds.ui.category.Commands" name="Builds"/>
  <categories xmi:id="_PbQysdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.category.textEditor" name="Text Editing" description="Text Editing Commands"/>
  <categories xmi:id="_PbQystfeEea-cp7hnRSzuA" elementId="org.eclipse.oomph.setup.category" name="Oomph Setup"/>
  <categories xmi:id="_PbQys9feEea-cp7hnRSzuA" elementId="Ocaml.commandscategory" name="Ocaml Commands"/>
  <categories xmi:id="_PbQytNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.context.ui.commands" name="Focused UI" description="Task-Focused Interface"/>
  <categories xmi:id="_PbQytdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.category.navigate" name="Navigate"/>
  <categories xmi:id="_PbQyttfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.tasks.ui.commands" name="Task Repositories"/>
  <categories xmi:id="_PbQyt9feEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.java.ui.commands" name="Java Context" description="Java Task-Focused Interface Commands"/>
  <categories xmi:id="_PbQyuNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.wikitext.context.ui.commands" name="%commands.category.name" description="%commands.category.description"/>
  <categories xmi:id="_PbQyudfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.category.file" name="File"/>
  <categories xmi:id="_PbQyutfeEea-cp7hnRSzuA" elementId="org.eclipse.compare.ui.category.compare" name="Compare" description="Compare command category"/>
  <categories xmi:id="_PbQyu9feEea-cp7hnRSzuA" elementId="org.eclipse.ui.category.window" name="Window"/>
  <categories xmi:id="_PbQyvNfeEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.category.refactoring" name="Refactor - Java" description="Java Refactoring Actions"/>
  <categories xmi:id="_PbQyvdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.category.help" name="Help"/>
  <categories xmi:id="_PbQyvtfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.category.project" name="Project"/>
  <categories xmi:id="_PbQyv9feEea-cp7hnRSzuA" elementId="org.eclipse.search.ui.category.search" name="Search" description="Search command category"/>
  <categories xmi:id="_PbQywNfeEea-cp7hnRSzuA" elementId="org.eclipse.debug.ui.category.run" name="Run/Debug" description="Run/Debug command category"/>
  <categories xmi:id="_PbQywdfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.category.dialogs" name="Dialogs" description="Commands for opening dialogs"/>
  <categories xmi:id="_PbQywtfeEea-cp7hnRSzuA" elementId="org.eclipse.oomph" name="Oomph"/>
  <categories xmi:id="_PbQyw9feEea-cp7hnRSzuA" elementId="org.eclipse.egit.ui.commandCategory" name="Git"/>
  <categories xmi:id="_PbQyxNfeEea-cp7hnRSzuA" elementId="org.eclipse.ui.category.perspectives" name="Perspectives" description="Commands for opening perspectives"/>
  <categories xmi:id="_PbQyxdfeEea-cp7hnRSzuA" elementId="org.eclipse.ltk.ui.category.refactoring" name="Refactoring"/>
  <categories xmi:id="_PbQyxtfeEea-cp7hnRSzuA" elementId="org.eclipse.gef.category.view" name="View" description="View"/>
  <categories xmi:id="_PbQyx9feEea-cp7hnRSzuA" elementId="org.eclipse.jdt.ui.category.source" name="Source" description="Java Source Actions"/>
  <categories xmi:id="_PbQyyNfeEea-cp7hnRSzuA" elementId="org.eclipse.mylyn.commons.repositories.ui.category.Team" name="Team"/>
  <categories xmi:id="_PbQyydfeEea-cp7hnRSzuA" elementId="org.eclipse.oomph.commands" name="Oomph"/>
  <categories xmi:id="_PbQyytfeEea-cp7hnRSzuA" elementId="org.eclipse.core.commands.categories.autogenerated" name="Uncategorized" description="Commands that were either auto-generated or have no category"/>
</application:Application>
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.epp.logging.aeri.ide/org.eclipse.epp.logging.aeri.ide.server/server-config.json">
{
  "version": "v1",
  "title": "Eclipse Automated Error Reporting",
  "timestamp": 1484126705128,
  "ttl": 10080,
  "helpUrl": "https://dev.eclipse.org/recommenders/community/aeri/v2/help/",
  "feedbackUrl": "http://ctrlflow.com/automated-error-reporting",
  "aboutUrl": "https://wiki.eclipse.org/EPP/Logging",
  "submitUrl": "https://dev.eclipse.org/recommenders/community/confess/0.6/reports/",
  "maxReportSize": 262144,
  "problemsUrl": "https://www.eclipse.org/downloads/download.php?r\u003d1\u0026file\u003d/technology/epp/logging/problems.zip",
  "problemsTtl": 20160,
  "connectTimeout": 10,
  "socketTimeout": 10,
  "acceptedProducts": [
    "org.eclipse.*",
    "org.fordiac.*"
  ],
  "acceptedPlugins": [
    "org.apache.log4j.*",
    "org.eclipse.*",
    "org.fordiac.*"
  ],
  "acceptedPackages": [
    "ch.qos.*",
    "com.cforcoding.*",
    "com.google.*",
    "com.gradleware.tooling.*",
    "com.mountainminds.eclemma.*",
    "com.naef.*",
    "com.sun.*",
    "java.*",
    "javafx.*",
    "javax.*",
    "org.apache.*",
    "org.eclipse.*",
    "org.fordiac.*",
    "org.gradle.*",
    "org.jacoco.*",
    "org.osgi.*",
    "org.slf4j.*",
    "sun.*"
  ],
  "requiredPackages": [
    "com.cforcoding.*",
    "com.gradleware.tooling.*",
    "com.mountainminds.eclemma.*",
    "com.naef.*",
    "org.eclipse.*",
    "org.fordiac.*",
    "org.gradle.*",
    "org.jacoco.*"
  ],
  "acceptOtherPackages": false,
  "acceptUiFreezes": true,
  "ignoredStatuses": [
    ":java.io.IOException:There is not enough space on the disk",
    ":java.net.*:",
    "org.eclipse.core.filesystem::Could not delete*",
    "org.eclipse.core.filesystem::Could not move*",
    "org.eclipse.core.runtime::Invalid input url*",
    "org.eclipse.epp.mpc.ui:java.io.IOException:",
    "org.eclipse.equinox.p2.*::",
    "org.eclipse.jface:java.io.IOException:Unable to resolve plug-in*",
    "org.eclipse.oomph.setup.core:$org.apache.http.ConnectionClosedException:",
    "org.eclipse.pde.core::The current target platform contains errors*",
    "org.eclipse.ui::Conflicting handlers for*"
  ],
  "problemsZipLastDownloadTimestamp": 1484127006387
}
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.jdt.core/savedIndexNames.txt">
INDEX VERSION 1.127+/home/jose-agustin.barrachina/Compilation/Practice/mini-python-java/workspace/.metadata/.plugins/org.eclipse.jdt.core
2820215315.index
346860699.index
3761096043.index
1582553210.index
2530192399.index
476941819.index
1566176712.index
1379344257.index
1849650901.index
520612066.index
2726518502.index
799512722.index
816719260.index
2631635096.index
3829055936.index
3405316120.index
2159530823.index
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.jdt.launching/.install.xml">
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<dirs>
<entry loc="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.111-2.b15.el7_3.x86_64" stamp="1481598087000"/>
</dirs>
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.jdt.launching/libraryInfos.xml">
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<libraryInfos>
<libraryInfo home="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.111-2.b15.el7_3.x86_64" version="1.8.0_111">
<bootpath>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.111-2.b15.el7_3.x86_64/jre/lib/resources.jar"/>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.111-2.b15.el7_3.x86_64/jre/lib/rt.jar"/>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.111-2.b15.el7_3.x86_64/jre/lib/sunrsasign.jar"/>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.111-2.b15.el7_3.x86_64/jre/lib/jsse.jar"/>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.111-2.b15.el7_3.x86_64/jre/lib/jce.jar"/>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.111-2.b15.el7_3.x86_64/jre/lib/charsets.jar"/>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.111-2.b15.el7_3.x86_64/jre/lib/jfr.jar"/>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.111-2.b15.el7_3.x86_64/jre/classes"/>
</bootpath>
<extensionDirs>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.111-2.b15.el7_3.x86_64/jre/lib/ext"/>
<entry path="/usr/java/packages/lib/ext"/>
</extensionDirs>
<endorsedDirs>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.111-2.b15.el7_3.x86_64/jre/lib/endorsed"/>
</endorsedDirs>
</libraryInfo>
</libraryInfos>
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.jdt.ui/dialog_settings.xml">
<?xml version="1.0" encoding="UTF-8"?>
<section name="Workbench">
	<item value="JavaSE-1.8" key="org.eclipse.jdt.ui.last.selected.execution.enviroment"/>
	<item value="/home/jose-agustin.barrachina/Compilation/Practice/mini-python-java/workspace/mini-python-java/lib" key="org.eclipse.jdt.ui.lastextjar"/>
	<item value="filter_imports;" key="filters_last_used"/>
	<item value="/home/jose-agustin.barrachina/Compilation/Practice/mini-python-java" key="org.eclipse.jdt.ui.last.external.project"/>
	<section name="org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart">
		<item value="2" key="layout"/>
		<item value="true" key="group_libraries"/>
		<item value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#x0A;&lt;packageExplorer group_libraries=&quot;1&quot; layout=&quot;2&quot; linkWithEditor=&quot;0&quot; rootMode=&quot;1&quot; workingSetName=&quot;Aggregate for window 1484126026112&quot;&gt;&#x0A;&lt;customFilters userDefinedPatternsEnabled=&quot;false&quot;&gt;&#x0A;&lt;xmlDefinedFilters&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.StaticsFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.mylyn.java.ui.MembersFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonJavaProjectsFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer_patternFilterId_.*&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonSharedProjectsFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.SyntheticMembersFilter&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ContainedLibraryFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.m2e.MavenModuleFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.HideInnerClassFilesFilter&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.EmptyInnerPackageFilter&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ClosedProjectsFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.EmptyLibraryContainerFilter&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.PackageDeclarationFilter&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ImportDeclarationFilter&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonJavaElementFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.LibraryFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.CuAndClassFileFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.EmptyPackageFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonPublicFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.LocalTypesFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.FieldsFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;/xmlDefinedFilters&gt;&#x0A;&lt;/customFilters&gt;&#x0A;&lt;/packageExplorer&gt;" key="memento"/>
		<item value="1" key="rootMode"/>
		<item value="false" key="linkWithEditor"/>
	</section>
	<section name="quick_assist_proposal_size">
	</section>
	<section name="JavaSearchPage">
		<item value="0" key="HISTORY_SIZE"/>
		<item value="false" key="CASE_SENSITIVE"/>
		<item value="11" key="INCLUDE_MASK"/>
	</section>
	<section name="BuildPathsPropertyPage">
		<item value="2" key="pageIndex"/>
	</section>
	<section name="completion_proposal_size">
	</section>
	<section name="JavaElementSearchActions">
	</section>
</section>
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.jdt.ui/OpenTypeHistory.xml">
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<typeInfoHistroy/>
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.jdt.ui/QualifiedTypeNameHistory.xml">
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy/>
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.m2e.logback.configuration/logback.1.6.2.20150902-0002.xml">
<configuration scan="true">
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <pattern>%date [%thread] %-5level %logger{35} - %msg%n</pattern>
    </encoder>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>OFF</level> <!-- change to DEBUG to mimic '-consolelog' behaviour -->
    </filter>
  </appender>

  <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <File>${org.eclipse.m2e.log.dir}/0.log</File>
    <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
      <FileNamePattern>${org.eclipse.m2e.log.dir}/%i.log</FileNamePattern>
      <MinIndex>1</MinIndex>
      <MaxIndex>10</MaxIndex>
    </rollingPolicy>
    <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
      <MaxFileSize>100MB</MaxFileSize>
    </triggeringPolicy>
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <pattern>%date [%thread] %-5level %logger{35} - %msg%n</pattern>
    </encoder>
  </appender>

  <appender name="EclipseLog" class="org.eclipse.m2e.logback.appender.EclipseLogAppender">
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>WARN</level>
    </filter>
  </appender>

  <appender name="MavenConsoleLog" class="org.eclipse.m2e.logback.appender.MavenConsoleAppender">
  </appender>
        
  <root level="INFO">
    <appender-ref ref="FILE" />
    <appender-ref ref="STDOUT" />
    <appender-ref ref="EclipseLog" />
    <appender-ref ref="MavenConsoleLog" />
  </root>

  <logger name="com.ning.http.client" level="INFO" />
</configuration>
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.oomph.setup/workspace.setup">
<?xml version="1.0" encoding="UTF-8"?>
<setup:Workspace
    xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:setup="http://www.eclipse.org/oomph/setup/1.0"
    name="workspace"/>
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.search/dialog_settings.xml">
<?xml version="1.0" encoding="UTF-8"?>
<section name="Workbench">
	<section name="SearchDialog.ScopePart">
		<item value="0" key="scope"/>
	</section>
	<section name="">
		<item value="1000" key="org.eclipse.jdt.search.resultpage.limit"/>
		<item value="TRUE" key="org.eclipse.jdt.search.resultpage.limit_enabled"/>
	</section>
	<section name="">
		<item value="1000" key="org.eclipse.jdt.search.resultpage.limit"/>
		<item value="TRUE" key="org.eclipse.jdt.search.resultpage.limit_enabled"/>
	</section>
	<section name="Search">
		<list key="Search.processedPageIds">
			<item value="org.eclipse.search.internal.ui.text.TextSearchPage"/>
			<item value="org.eclipse.mylyn.tasks.ui.search.page"/>
			<item value="org.eclipse.egit.ui.commitSearchPage"/>
			<item value="org.eclipse.jdt.ui.JavaSearchPage"/>
		</list>
		<list key="Search.enabledPageIds">
			<item value="org.eclipse.search.internal.ui.text.TextSearchPage"/>
			<item value="org.eclipse.mylyn.tasks.ui.search.page"/>
			<item value="org.eclipse.egit.ui.commitSearchPage"/>
			<item value="org.eclipse.jdt.ui.JavaSearchPage"/>
		</list>
	</section>
	<section name="SearchDialog">
		<item value="org.eclipse.jdt.ui.JavaSearchPage" key="PREVIOUS_PAGE"/>
	</section>
	<section name="org.eclipse.jdt.ui.JavaSearchResultPage">
		<item value="1000" key="org.eclipse.jdt.search.resultpage.limit"/>
		<item value="TRUE" key="org.eclipse.jdt.search.resultpage.limit_enabled"/>
	</section>
	<section name="DialogBounds_SearchDialog">
		<item value="620" key="DIALOG_WIDTH"/>
		<item value="1|Cantarell|11.0|0|GTK|1|" key="DIALOG_FONT_NAME"/>
		<item value="563" key="DIALOG_HEIGHT"/>
		<item value="651" key="DIALOG_X_ORIGIN"/>
		<item value="134" key="DIALOG_Y_ORIGIN"/>
	</section>
</section>
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.ui.workbench.texteditor/dialog_settings.xml">
<?xml version="1.0" encoding="UTF-8"?>
<section name="Workbench">
	<section name="org.eclipse.ui.texteditor.FindReplaceDialog">
		<item value="false" key="isRegEx"/>
		<item value="question 2" key="selection"/>
		<item value="false" key="casesensitive"/>
		<item value="false" key="incremental"/>
		<item value="true" key="wrap"/>
		<item value="false" key="wholeword"/>
		<list key="findhistory">
			<item value="question 2"/>
			<item value="question 1"/>
		</list>
		<list key="replacehistory">
		</list>
	</section>
	<section name="org.eclipse.ui.texteditor.FindReplaceDialog_dialogBounds">
		<item value="327" key="DIALOG_WIDTH"/>
		<item value="1|Cantarell|11.0|0|GTK|1|" key="DIALOG_FONT_NAME"/>
		<item value="453" key="DIALOG_HEIGHT"/>
		<item value="800" key="DIALOG_X_ORIGIN"/>
		<item value="202" key="DIALOG_Y_ORIGIN"/>
	</section>
</section>
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.ui.workbench/dialog_settings.xml">
<?xml version="1.0" encoding="UTF-8"?>
<section name="Workbench">
	<section name="WorkbenchPreferenceDialogSettings">
		<item value="181" key="DIALOG_X_ORIGIN"/>
		<item value="70" key="DIALOG_Y_ORIGIN"/>
	</section>
	<section name="org.eclipse.ui.internal.QuickAccess">
		<item value="-1" key="dialogHeight"/>
		<item value="-1" key="dialogWidth"/>
		<list key="textEntries">
		</list>
		<list key="orderedElements">
		</list>
		<list key="orderedProviders">
		</list>
		<list key="textArray">
		</list>
	</section>
	<section name="ImportExportAction">
		<item value="org.eclipse.ui.wizards.import.FileSystem" key="ImportExportPage.STORE_SELECTED_IMPORT_WIZARD_ID"/>
		<list key="ImportExportPage.STORE_EXPANDED_IMPORT_CATEGORIES">
			<item value="org.eclipse.ui.Basic"/>
		</list>
	</section>
	<section name="FileSystemImportWizard">
		<item value="false" key="WizardFileSystemResourceImportPage1.STORE_CREATE_CONTAINER_STRUCTURE_ID"/>
		<item value="false" key="WizardFileSystemResourceImportPage1.STORE_OVERWRITE_EXISTING_RESOURCES_ID"/>
		<list key="WizardFileSystemResourceImportPage1.STORE_SOURCE_NAMES_ID">
			<item value="/home/jose-agustin.barrachina/Compilation/Practice/mini-python-java/src/mini_python"/>
		</list>
	</section>
</section>
</file>

<file path="Practice/.metadata/.plugins/org.eclipse.ui.workbench/workingsets.xml">
<?xml version="1.0" encoding="UTF-8"?>
<workingSetManager>
<workingSet aggregate="true" factoryID="org.eclipse.ui.internal.WorkingSetFactory" id="1484126701959_0" label="Window Working Set" name="Aggregate for window 1484126026112"/>
</workingSetManager>
</file>

<file path="Practice/.metadata/version.ini">
#Wed Jan 11 11:19:02 CET 2017
org.eclipse.core.runtime=2
org.eclipse.platform=4.5.2.v20160212-1500
</file>

<file path="Practice/.recommenders/caches/identified-project-coordinates.json">
[[{"location":"/home/jose-agustin.barrachina/Compilation/Practice/mini-python-java/workspace/mini-python-java","type":"PROJECT","hints":{"PROJECT_NAME":"mini-python-java"}},"ABSENT"],[{"location":"/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.111-2.b15.el7_3.x86_64","type":"JRE","hints":{"EXECUTION_ENVIRONMENT":"JavaSE-1.8"}},"jre:jre:1.8.0"]]
</file>

<file path="Practice/.recommenders/caches/manual-mappings.json">
{}
</file>

<file path="Practice/flexExample/Lexer.flex">
/* JFlex example: partial Java language lexer specification */
    import java_cup.runtime.*;

    /**
     * This class is a simple example lexer.
     */
    %%

    %class Lexer
    %unicode
    %cup
    %line
    %column

    %{
      StringBuffer string = new StringBuffer();

      private Symbol symbol(int type) {
        return new Symbol(type, yyline, yycolumn);
      }
      private Symbol symbol(int type, Object value) {
        return new Symbol(type, yyline, yycolumn, value);
      }
    %}

    LineTerminator = \r|\n|\r\n
    InputCharacter = [^\r\n]
    WhiteSpace     = {LineTerminator} | [ \t\f]

    /* comments */
    Comment = {TraditionalComment} | {EndOfLineComment} | {DocumentationComment}

    TraditionalComment   = "/*" [^*] ~"*/" | "/*" "*"+ "/"
    // Comment can be the last line of the file, without line terminator.
    EndOfLineComment     = "//" {InputCharacter}* {LineTerminator}?
    DocumentationComment = "/**" {CommentContent} "*"+ "/"
    CommentContent       = ( [^*] | \*+ [^/*] )*

    Identifier = [:jletter:] [:jletterdigit:]*

    DecIntegerLiteral = 0 | [1-9][0-9]*

    %state STRING

    %%

    /* keywords */
    <YYINITIAL> "abstract"           { return symbol(sym.ABSTRACT); }
    <YYINITIAL> "boolean"            { return symbol(sym.BOOLEAN); }
    <YYINITIAL> "break"              { return symbol(sym.BREAK); }

    <YYINITIAL> {
      /* identifiers */
      {Identifier}                   { return symbol(sym.IDENTIFIER); }

      /* literals */
      {DecIntegerLiteral}            { return symbol(sym.INTEGER_LITERAL); }
      \"                             { string.setLength(0); yybegin(STRING); }

      /* operators */
      "="                            { return symbol(sym.EQ); }
      "=="                           { return symbol(sym.EQEQ); }
      "+"                            { return symbol(sym.PLUS); }

      /* comments */
      {Comment}                      { /* ignore */ }

      /* whitespace */
      {WhiteSpace}                   { /* ignore */ }
    }

    <STRING> {
      \"                             { yybegin(YYINITIAL);
                                       return symbol(sym.STRING_LITERAL,
                                       string.toString()); }
      [^\n\r\"\\]+                   { string.append( yytext() ); }
      \\t                            { string.append('\t'); }
      \\n                            { string.append('\n'); }

      \\r                            { string.append('\r'); }
      \\\"                           { string.append('\"'); }
      \\                             { string.append('\\'); }
    }

    /* error fallback */
    [^]                              { throw new Error("Illegal character <"+
                                                        yytext()+">"); }
</file>

<file path="Practice/flexExample/pascal.flex">
%%
/*-*
 * LEXICAL FUNCTIONS:
 */

%cup
%line
%column
%unicode
%class PascalLexer

%{

/**
 * Return a new Symbol with the given token id, and with the current line and
 * column numbers.
 */
Symbol newSym(int tokenId) {
    return new Symbol(tokenId, yyline, yycolumn);
}

/**
 * Return a new Symbol with the given token id, the current line and column
 * numbers, and the given token value.  The value is used for tokens such as
 * identifiers and numbers.
 */
Symbol newSym(int tokenId, Object value) {
    return new Symbol(tokenId, yyline, yycolumn, value);
}

%}


/*-*
 * PATTERN DEFINITIONS:
 */
letter          = [A-Za-z]
digit           = [0-9]
alphanumeric    = {letter}|{digit}
other_id_char   = [_]
identifier      = {letter}({alphanumeric}|{other_id_char})*
integer         = {digit}*
real            = {integer}\.{integer}
char            = '.'
leftbrace       = \{
rightbrace      = \}
nonrightbrace   = [^}]
comment_body    = {nonrightbrace}*
comment         = {leftbrace}{comment_body}{rightbrace}
whitespace      = [ \n\t]


%%
/**
 * LEXICAL RULES:
 */
and             { return newSym(sym.AND); }
array           { return newSym(sym.ARRAY); }
begin           { return newSym(sym.BEGIN); }
else            { return newSym(sym.ELSE); }
end             { return newSym(sym.END); }
if              { return newSym(sym.IF); }
of              { return newSym(sym.OF); }
or              { return newSym(sym.OR); }
program         { return newSym(sym.PROGRAM); }
procedure       { return newSym(sym.PROCEDURE); }
then            { return newSym(sym.THEN); }
type            { return newSym(sym.TYPE); }
var             { return newSym(sym.VAR); }
"*"             { return newSym(sym.TIMES); }
"+"             { return newSym(sym.PLUS); }
"-"             { return newSym(sym.MINUS); }
"/"             { return newSym(sym.DIVIDE); }
";"             { return newSym(sym.SEMI); }
","             { return newSym(sym.COMMA); }
"("             { return newSym(sym.LEFT_PAREN); }
")"             { return newSym(sym.RT_PAREN); }
"["             { return newSym(sym.LEFT_BRKT); }
"]"             { return newSym(sym.RT_BRKT); }
"="             { return newSym(sym.EQ); }
"<"             { return newSym(sym.GTR); }
">"             { return newSym(sym.LESS); }
"<="            { return newSym(sym.LESS_EQ); }
">="            { return newSym(sym.GTR_EQ); }
"!="            { return newSym(sym.NOT_EQ); }
":"             { return newSym(sym.COLON); }
":="            { return newSym(sym.ASSMNT); }
"."             { return newSym(sym.DOT); }
{identifier}    { return newSym(sym.IDENT, yytext()); }
{integer}       { return newSym(sym.INT, new Integer(yytext())); }
{real}          { return newSym(sym.REAL, new Double(yytext())); }
{char}          { return newSym(sym.CHAR, new Character(yytext().charAt(1))); }
{comment}       { /* For this stand-alone lexer, print out comments. */
                  System.out.println("Recognized comment: " + yytext()); }
{whitespace}    { /* Ignore whitespace. */ }
.               { System.out.println("Illegal char, '" + yytext() +
                    "' line: " + yyline + ", column: " + yychar); }
</file>

<file path="Practice/flexExample/PascalLexer.java">
/* The following code was generated by JFlex 1.6.1 */



/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.6.1
 * from the specification file <tt>pascal.flex</tt>
 */
class PascalLexer implements java_cup.runtime.Scanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\12\1\6\1\7\1\7\1\7\22\0\1\12\1\54\5\0"+
    "\1\5\1\45\1\46\1\37\1\40\1\44\1\41\1\4\1\42\12\2"+
    "\1\55\1\43\1\52\1\51\1\53\2\0\32\1\1\47\1\0\1\50"+
    "\1\0\1\3\1\0\1\13\1\20\1\32\1\15\1\21\1\26\1\22"+
    "\1\35\1\23\2\1\1\24\1\31\1\14\1\27\1\30\1\1\1\16"+
    "\1\25\1\34\1\33\1\36\2\1\1\17\1\1\1\10\1\0\1\11"+
    "\7\0\1\7\u1fa2\0\1\7\1\7\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udfe6\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\1\1\2\1\3\1\1\1\4\1\2\1\5\1\2"+
    "\10\3\1\6\1\7\1\10\1\11\1\12\1\13\1\14"+
    "\1\15\1\16\1\17\1\20\1\21\1\22\1\2\1\23"+
    "\1\24\2\0\1\25\5\3\1\26\1\27\1\30\4\3"+
    "\1\31\1\32\1\33\1\34\1\35\1\36\2\3\1\37"+
    "\4\3\1\40\2\3\1\41\2\3\1\42\1\43\1\44"+
    "\1\45\4\3\1\46\2\3\1\47";

  private static int [] zzUnpackAction() {
    int [] result = new int[78];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\56\0\134\0\212\0\270\0\346\0\56\0\u0114"+
    "\0\u0142\0\u0170\0\u019e\0\u01cc\0\u01fa\0\u0228\0\u0256\0\u0284"+
    "\0\56\0\56\0\56\0\56\0\56\0\56\0\56\0\56"+
    "\0\56\0\56\0\56\0\u02b2\0\u02e0\0\u030e\0\u033c\0\270"+
    "\0\u036a\0\u0114\0\56\0\u0398\0\u03c6\0\u03f4\0\u0422\0\u0450"+
    "\0\134\0\134\0\134\0\u047e\0\u04ac\0\u04da\0\u0508\0\56"+
    "\0\56\0\56\0\56\0\56\0\134\0\u0536\0\u0564\0\134"+
    "\0\u0592\0\u05c0\0\u05ee\0\u061c\0\134\0\u064a\0\u0678\0\134"+
    "\0\u06a6\0\u06d4\0\134\0\134\0\134\0\134\0\u0702\0\u0730"+
    "\0\u075e\0\u078c\0\134\0\u07ba\0\u07e8\0\134";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[78];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\2\1\5\1\6\1\7\1\0"+
    "\1\10\1\2\1\7\1\11\4\3\1\12\1\13\1\3"+
    "\1\14\3\3\1\15\1\16\3\3\1\17\1\3\1\20"+
    "\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30"+
    "\1\31\1\32\1\33\1\34\1\35\1\36\1\37\57\0"+
    "\3\3\7\0\24\3\21\0\1\4\1\0\1\40\53\0"+
    "\1\40\53\0\6\41\2\0\46\41\11\42\1\43\44\42"+
    "\1\0\3\3\7\0\1\3\1\44\1\3\1\45\20\3"+
    "\20\0\3\3\7\0\6\3\1\46\15\3\20\0\3\3"+
    "\7\0\1\3\1\47\7\3\1\50\12\3\20\0\3\3"+
    "\7\0\13\3\1\51\10\3\20\0\3\3\7\0\3\3"+
    "\1\52\7\3\1\53\10\3\20\0\3\3\7\0\3\3"+
    "\1\54\20\3\20\0\3\3\7\0\4\3\1\55\15\3"+
    "\1\56\1\3\20\0\3\3\7\0\1\57\23\3\70\0"+
    "\1\60\55\0\1\61\55\0\1\62\55\0\1\63\11\0"+
    "\1\64\51\0\3\3\7\0\2\3\1\65\21\3\20\0"+
    "\3\3\7\0\3\3\1\66\20\3\20\0\3\3\7\0"+
    "\7\3\1\67\14\3\20\0\3\3\7\0\2\3\1\70"+
    "\21\3\20\0\3\3\7\0\12\3\1\71\11\3\20\0"+
    "\3\3\7\0\14\3\1\72\7\3\20\0\3\3\7\0"+
    "\15\3\1\73\6\3\20\0\3\3\7\0\6\3\1\74"+
    "\15\3\20\0\3\3\7\0\3\3\1\75\20\3\20\0"+
    "\3\3\7\0\1\76\23\3\20\0\3\3\7\0\10\3"+
    "\1\77\13\3\20\0\3\3\7\0\6\3\1\100\15\3"+
    "\20\0\3\3\7\0\7\3\1\101\7\3\1\102\4\3"+
    "\20\0\3\3\7\0\6\3\1\103\15\3\20\0\3\3"+
    "\7\0\1\3\1\104\22\3\20\0\3\3\7\0\4\3"+
    "\1\105\17\3\20\0\3\3\7\0\1\3\1\106\22\3"+
    "\20\0\3\3\7\0\3\3\1\107\20\3\20\0\3\3"+
    "\7\0\6\3\1\110\15\3\20\0\3\3\7\0\1\111"+
    "\23\3\20\0\3\3\7\0\2\3\1\112\21\3\20\0"+
    "\3\3\7\0\16\3\1\113\5\3\20\0\3\3\7\0"+
    "\20\3\1\114\3\3\20\0\3\3\7\0\3\3\1\115"+
    "\20\3\20\0\3\3\7\0\6\3\1\116\15\3\17\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[2070];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\1\1\11\4\1\1\11\11\1\13\11\5\1\2\0"+
    "\1\11\14\1\5\11\32\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[78];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */

/**
 * Return a new Symbol with the given token id, and with the current line and
 * column numbers.
 */
Symbol newSym(int tokenId) {
    return new Symbol(tokenId, yyline, yycolumn);
}

/**
 * Return a new Symbol with the given token id, the current line and column
 * numbers, and the given token value.  The value is used for tokens such as
 * identifiers and numbers.
 */
Symbol newSym(int tokenId, Object value) {
    return new Symbol(tokenId, yyline, yycolumn, value);
}



  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  PascalLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 164) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
      yyclose();
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public java_cup.runtime.Symbol next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
          { return new java_cup.runtime.Symbol(sym.EOF); }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { return newSym(sym.INT, new Integer(yytext()));
            }
          case 40: break;
          case 2: 
            { System.out.println("Illegal char, '" + yytext() +
                    "' line: " + yyline + ", column: " + yychar);
            }
          case 41: break;
          case 3: 
            { return newSym(sym.IDENT, yytext());
            }
          case 42: break;
          case 4: 
            { return newSym(sym.DOT);
            }
          case 43: break;
          case 5: 
            { /* Ignore whitespace. */
            }
          case 44: break;
          case 6: 
            { return newSym(sym.TIMES);
            }
          case 45: break;
          case 7: 
            { return newSym(sym.PLUS);
            }
          case 46: break;
          case 8: 
            { return newSym(sym.MINUS);
            }
          case 47: break;
          case 9: 
            { return newSym(sym.DIVIDE);
            }
          case 48: break;
          case 10: 
            { return newSym(sym.SEMI);
            }
          case 49: break;
          case 11: 
            { return newSym(sym.COMMA);
            }
          case 50: break;
          case 12: 
            { return newSym(sym.LEFT_PAREN);
            }
          case 51: break;
          case 13: 
            { return newSym(sym.RT_PAREN);
            }
          case 52: break;
          case 14: 
            { return newSym(sym.LEFT_BRKT);
            }
          case 53: break;
          case 15: 
            { return newSym(sym.RT_BRKT);
            }
          case 54: break;
          case 16: 
            { return newSym(sym.EQ);
            }
          case 55: break;
          case 17: 
            { return newSym(sym.GTR);
            }
          case 56: break;
          case 18: 
            { return newSym(sym.LESS);
            }
          case 57: break;
          case 19: 
            { return newSym(sym.COLON);
            }
          case 58: break;
          case 20: 
            { return newSym(sym.REAL, new Double(yytext()));
            }
          case 59: break;
          case 21: 
            { /* For this stand-alone lexer, print out comments. */
                  System.out.println("Recognized comment: " + yytext());
            }
          case 60: break;
          case 22: 
            { return newSym(sym.IF);
            }
          case 61: break;
          case 23: 
            { return newSym(sym.OR);
            }
          case 62: break;
          case 24: 
            { return newSym(sym.OF);
            }
          case 63: break;
          case 25: 
            { return newSym(sym.LESS_EQ);
            }
          case 64: break;
          case 26: 
            { return newSym(sym.GTR_EQ);
            }
          case 65: break;
          case 27: 
            { return newSym(sym.NOT_EQ);
            }
          case 66: break;
          case 28: 
            { return newSym(sym.ASSMNT);
            }
          case 67: break;
          case 29: 
            { return newSym(sym.CHAR, new Character(yytext().charAt(1)));
            }
          case 68: break;
          case 30: 
            { return newSym(sym.AND);
            }
          case 69: break;
          case 31: 
            { return newSym(sym.END);
            }
          case 70: break;
          case 32: 
            { return newSym(sym.VAR);
            }
          case 71: break;
          case 33: 
            { return newSym(sym.ELSE);
            }
          case 72: break;
          case 34: 
            { return newSym(sym.TYPE);
            }
          case 73: break;
          case 35: 
            { return newSym(sym.THEN);
            }
          case 74: break;
          case 36: 
            { return newSym(sym.ARRAY);
            }
          case 75: break;
          case 37: 
            { return newSym(sym.BEGIN);
            }
          case 76: break;
          case 38: 
            { return newSym(sym.PROGRAM);
            }
          case 77: break;
          case 39: 
            { return newSym(sym.PROCEDURE);
            }
          case 78: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
</file>

<file path="Practice/mini-python-java/.classpath">
<?xml version="1.0" encoding="UTF-8"?>
<classpath>
	<classpathentry kind="src" path="src"/>
	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8"/>
	<classpathentry kind="lib" path="/home/jose-agustin.barrachina/Compilation/Practice/mini-python-java/workspace/mini-python-java/lib/java-cup-11a.jar"/>
	<classpathentry kind="lib" path="/home/jose-agustin.barrachina/Compilation/Practice/mini-python-java/workspace/mini-python-java/lib/java-cup-11a-runtime.jar"/>
	<classpathentry kind="con" path="org.eclipse.jdt.USER_LIBRARY/java-cup-11a-runtime"/>
	<classpathentry kind="output" path="bin"/>
</classpath>
</file>

<file path="Practice/mini-python-java/.gitignore">
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio

# User-specific stuff:
.idea/workspace.xml
.idea/tasks.xml
.idea/dictionaries
.idea/shelf

# Sensitive or high-churn files:
.idea/dataSources.ids
.idea/dataSources.xml
.idea/sqlDataSources.xml
.idea/dynamic.xml
.idea/uiDesigner.xml

# Gradle:
.idea/gradle.xml
.idea/libraries

# Mongo Explorer plugin:
.idea/mongoSettings.xml

## File-based project format:
*.ipr
*.iws

## Plugin-specific files:

# IntelliJ
out/*

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties
</file>

<file path="Practice/mini-python-java/.idea/compiler.xml">
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CompilerConfiguration">
    <resourceExtensions />
    <wildcardResourcePatterns>
      <entry name="!?*.java" />
      <entry name="!?*.form" />
      <entry name="!?*.class" />
      <entry name="!?*.groovy" />
      <entry name="!?*.scala" />
      <entry name="!?*.flex" />
      <entry name="!?*.kt" />
      <entry name="!?*.clj" />
      <entry name="!?*.aj" />
    </wildcardResourcePatterns>
    <annotationProcessing>
      <profile default="true" name="Default" enabled="false">
        <processorPath useClasspath="true" />
      </profile>
    </annotationProcessing>
  </component>
</project>
</file>

<file path="Practice/mini-python-java/.idea/copyright/profiles_settings.xml">
<component name="CopyrightManager">
  <settings default="" />
</component>
</file>

<file path="Practice/mini-python-java/.idea/encodings.xml">
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="Encoding">
    <file url="PROJECT" charset="UTF-8" />
  </component>
</project>
</file>

<file path="Practice/mini-python-java/.idea/misc.xml">
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="EntryPointsManager">
    <entry_points version="2.0" />
  </component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="mavenHome" value="Bundled (Maven 3)" />
      </MavenGeneralSettings>
    </option>
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="false">
    <OptionsSetting value="true" id="Add" />
    <OptionsSetting value="true" id="Remove" />
    <OptionsSetting value="true" id="Checkout" />
    <OptionsSetting value="true" id="Update" />
    <OptionsSetting value="true" id="Status" />
    <OptionsSetting value="true" id="Edit" />
    <ConfirmationsSetting value="0" id="Add" />
    <ConfirmationsSetting value="0" id="Remove" />
  </component>
  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" assert-keyword="true" jdk-15="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
    <output url="file://$PROJECT_DIR$/out" />
  </component>
</project>
</file>

<file path="Practice/mini-python-java/.idea/modules.xml">
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ProjectModuleManager">
    <modules>
      <module fileurl="file://$PROJECT_DIR$/mini-python-java.iml" filepath="$PROJECT_DIR$/mini-python-java.iml" />
    </modules>
  </component>
</project>
</file>

<file path="Practice/mini-python-java/.project">
<?xml version="1.0" encoding="UTF-8"?>
<projectDescription>
	<name>mini-python-java</name>
	<comment></comment>
	<projects>
	</projects>
	<buildSpec>
		<buildCommand>
			<name>org.eclipse.jdt.core.javabuilder</name>
			<arguments>
			</arguments>
		</buildCommand>
	</buildSpec>
	<natures>
		<nature>org.eclipse.jdt.core.javanature</nature>
	</natures>
</projectDescription>
</file>

<file path="Practice/mini-python-java/.settings/org.eclipse.jdt.core.prefs">
eclipse.preferences.version=1
org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
org.eclipse.jdt.core.compiler.compliance=1.8
org.eclipse.jdt.core.compiler.debug.lineNumber=generate
org.eclipse.jdt.core.compiler.debug.localVariable=generate
org.eclipse.jdt.core.compiler.debug.sourceFile=generate
org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
org.eclipse.jdt.core.compiler.source=1.8
</file>

<file path="Practice/mini-python-java/bin/.gitignore">
/mini_c/
</file>

<file path="Practice/mini-python-java/bin/Lexer.flex">
/* JFlex example: partial Java language lexer specification */
    import java_cup.runtime.*;

    /**
     * This class is a simple example lexer.
     */
    %%

    %class Lexer
    %unicode
    %cup
    %line
    %column

    %{
      StringBuffer string = new StringBuffer();

      private Symbol symbol(int type) {
        return new Symbol(type, yyline, yycolumn);
      }
      private Symbol symbol(int type, Object value) {
        return new Symbol(type, yyline, yycolumn, value);
      }
    %}

    LineTerminator = \r|\n|\r\n
    InputCharacter = [^\r\n]
    WhiteSpace     = {LineTerminator} | [ \t\f]

    /* comments */
    Comment = {TraditionalComment} | {EndOfLineComment} | {DocumentationComment}

    TraditionalComment   = "/*" [^*] ~"*/" | "/*" "*"+ "/"
    // Comment can be the last line of the file, without line terminator.
    EndOfLineComment     = "//" {InputCharacter}* {LineTerminator}?
    DocumentationComment = "/**" {CommentContent} "*"+ "/"
    CommentContent       = ( [^*] | \*+ [^/*] )*

    Identifier = [:jletter:] [:jletterdigit:]*

    DecIntegerLiteral = 0 | [1-9][0-9]*

    %state STRING

    %%

    /* keywords */
    <YYINITIAL> "abstract"           { return symbol(sym.ABSTRACT); }
    <YYINITIAL> "boolean"            { return symbol(sym.BOOLEAN); }
    <YYINITIAL> "break"              { return symbol(sym.BREAK); }

    <YYINITIAL> {
      /* identifiers */
      {Identifier}                   { return symbol(sym.IDENTIFIER); }

      /* literals */
      {DecIntegerLiteral}            { return symbol(sym.INTEGER_LITERAL); }
      \"                             { string.setLength(0); yybegin(STRING); }

      /* operators */
      "="                            { return symbol(sym.EQ); }
      "=="                           { return symbol(sym.EQEQ); }
      "+"                            { return symbol(sym.PLUS); }

      /* comments */
      {Comment}                      { /* ignore */ }

      /* whitespace */
      {WhiteSpace}                   { /* ignore */ }
    }

    <STRING> {
      \"                             { yybegin(YYINITIAL);
                                       return symbol(sym.STRING_LITERAL,
                                       string.toString()); }
      [^\n\r\"\\]+                   { string.append( yytext() ); }
      \\t                            { string.append('\t'); }
      \\n                            { string.append('\n'); }

      \\r                            { string.append('\r'); }
      \\\"                           { string.append('\"'); }
      \\                             { string.append('\\'); }
    }

    /* error fallback */
    [^]                              { throw new Error("Illegal character <"+
                                                        yytext()+">"); }
</file>

<file path="Practice/mini-python-java/bin/mini_python/Lexer.flex">
package mini_python;

import java_cup.runtime.*;
import java.util.*;
import static mini_python.sym.*;

%%

%class Lexer
%unicode
%cup
%cupdebug
%line
%column
%yylexthrow Exception

/* The symbols produced by the lexical analyzer not just integers, but objects
   of type java_cup.runtime.Symbol. To create such an object, one invokes the
   function symbol(), defined below, and supplies an integer constant, which
   identifies a terminal symbol; if necessary, one also supplies a semantic
   value, of an appropriate type -- this must match the type declared for this
   terminal symbol in Parser.cup. */

/* See https://www2.in.tum.de/repos/cup/develop/src/java_cup/runtime/ */

/* Technical note: CUP seems to assume that the two integer parameters
   passed to the Symbol constructor are character counts for the left
   and right positions. Instead, we choose to provide line and column
   information. Accordingly, we will replace CUP's error reporting
   routine with our own. */

%{

    private Symbol symbol(int id)
    {
	return new Symbol(id, yyline, yycolumn);
    }

    private Symbol symbol(int id, Object value)
    {
	return new Symbol(id, yyline, yycolumn, value);
    }

    static Stack<Integer> indent = new Stack<Integer>();
    { indent.push(0); }

%}
LineTerminator     = \r | \n | \r\n
InputCharacter     = [^\r\n]
WhiteSpace         = [ \t\f]
String             = "\"" [^\"]* "\""

Comment            = "#" {InputCharacter}* {LineTerminator}

Identifier         = [:jletter:] [:jletterdigit:]*

Integer            = [:digit:]+

%%

/* A specification of which regular expressions to recognize and what
   symbols to produce. */

<YYINITIAL> {

    "="
    { return symbol(EQUAL); }

    ":"
    { return symbol(COLON); }

    ","
    { return symbol(COMMA); }

    "("
    { return symbol(LP); }

    ")"
    { return symbol(RP); }

    "["
    { return symbol(LSQ); }

    "]"
    { return symbol(RSQ); }

    "+"
    { return symbol(PLUS); }

    "-"
    { return symbol(MINUS); }

    "*"
    { return symbol(TIMES); }

    "/"
    { return symbol(DIV); }

    "%"
    { return symbol(MOD); }

    "<"
    { return symbol(CMP, Binop.Blt); }

    "<="
    { return symbol(CMP, Binop.Ble); }

    ">"
    { return symbol(CMP, Binop.Bgt); }

    ">="
    { return symbol(CMP, Binop.Bge); }

    "=="
    { return symbol(CMP, Binop.Beq); }

    "!="
    { return symbol(CMP, Binop.Bneq); }

    "and"
    { return symbol(AND); }

    "or"
    { return symbol(OR); }

    "not"
    { return symbol(NOT); }

    "def"
    { return symbol(DEF); }

    "if"
    { return symbol(IF); }

    "else"
    { return symbol(ELSE); }

    "return"
    { return symbol(RETURN); }

    "print"
    { return symbol(PRINT); }

    "for"
    { return symbol(FOR); }

    "in"
    { return symbol(IN); }

    "None"
    { return symbol(CST, Constant.None); }

    "True"
    { return symbol(CST, new Cbool(true)); }

    "False"
    { return symbol(CST, new Cbool(false)); }

    {Identifier}
    { return symbol(IDENT, yytext().intern()); }
    // The call to intern() allows identifiers to be compared using == .

    {String}
    { String s = yytext();
      return symbol(CST, new Cstring(s.substring(1, s.length() - 1))); }

    {Integer}
    { return symbol(CST, new Cint(Integer.parseInt(yytext()))); }

    {Comment}
    { /* ignore */ }

    {WhiteSpace}
    { /* ignore */ }

    {LineTerminator} (({WhiteSpace} | {Comment})* {LineTerminator})*
    {WhiteSpace}*
    { String s = yytext();
      int n = s.length() - 1 - s.lastIndexOf('\n');
      // System.out.println("n = " + n);
      if (indent.peek() < n) {
        indent.push(n);
        return symbol(INCINDENT);
      } else {
        int k = 0;
        while (indent.peek() > n) { indent.pop(); k++; }
        return symbol(DECINDENT, k);
      }
    }

    .
    { throw new Exception (String.format (
        "Line %d, column %d: illegal character: '%s'\n", yyline, yycolumn, yytext()
      ));
    }

}
</file>

<file path="Practice/mini-python-java/bin/mini_python/Parser.cup">
import java_cup.runtime.*;
import java.util.*;

terminal String IDENT;
terminal Constant CST;
terminal Binop CMP;
terminal INCINDENT;
terminal Integer DECINDENT;
terminal  DEF, IF, ELSE, RETURN, PRINT, FOR, IN, AND, OR, NOT,
	     LP, RP, LSQ, RSQ, COMMA, EQUAL, COLON, BEGIN, END, NEWLINE,
		  PLUS, MINUS, TIMES, DIV, MOD, MAIN, RB, LB;
terminal UMINUS;

non terminal File file;
non terminal Def def;
non terminal opt_newline;
non terminal LinkedList<Def> list_def;
non terminal LinkedList<Stmt> list_stmt, nonempty_list_stmt;
non terminal LinkedList<String> list_comma_ident, nonempty_list_comma_ident;
non terminal Stmt simple_stmt, stmt, suite;
non terminal Expr expr;
non terminal LeftValue left_value;
non terminal LinkedList<Expr> nonempty_list_comma_expr, list_comma_expr;

precedence left OR;
precedence left AND;
precedence nonassoc NOT;
precedence nonassoc CMP;
precedence left PLUS, MINUS;
precedence left TIMES, DIV, MOD;
precedence nonassoc UMINUS;
precedence nonassoc LSQ;

start with file;

file ::=
  opt_newline list_def:l nonempty_list_stmt:b
    {: RESULT = new File(l, new Sblock(b)); :}
;

def ::=
  DEF IDENT:f LP list_comma_ident:x RP COLON suite:s
    {: RESULT = new Def(f, x, s); :}
;

suite ::=
 simple_stmt:s NEWLINE
    {: RESULT = s; :}
| NEWLINE BEGIN nonempty_list_stmt:l END
    {: RESULT = new Sblock(l); :}
;

stmt ::=
  simple_stmt:s NEWLINE
    {: RESULT =  s; :}
| IF expr:c COLON suite:s
    {: RESULT =  new Sif(c, s, new Sblock()); :}
| IF expr:c COLON suite:s1 ELSE COLON suite:s2
    {: RESULT =  new Sif(c, s1, s2); :}
| FOR IDENT:x IN expr:e COLON suite:s
    {: RESULT =  new Sfor(x, e, s); :}
;

simple_stmt ::=
  RETURN expr:e
    {: RESULT =  new Sreturn(e); :}
| left_value:l EQUAL expr:e
    {: RESULT =  new Sassign(l, e); :}
| PRINT expr:e
    {: RESULT =  new Sprint(e); :}
| expr:e
    {: RESULT =  new Seval(e); :}
;

expr ::=
  CST:c
    {: RESULT = new Ecst(c); :}
| left_value:lv
    {: RESULT = new Eleft(lv); :}
| MINUS expr:e1
    {: RESULT = new Eunop(Unop.Uneg, e1); :}
  %prec UMINUS
| NOT expr:e1
    {: RESULT = new Eunop(Unop.Unot, e1); :}
| expr:e1 PLUS expr:e2
    {: RESULT = new Ebinop(Binop.Badd, e1, e2); :}
| expr:e1 MINUS expr:e2
    {: RESULT = new Ebinop(Binop.Bsub, e1, e2); :}
| expr:e1 TIMES expr:e2
    {: RESULT = new Ebinop(Binop.Bmul, e1, e2); :}
| expr:e1 DIV expr:e2
    {: RESULT = new Ebinop(Binop.Bdiv, e1, e2); :}
| expr:e1 MOD expr:e2
    {: RESULT = new Ebinop(Binop.Bmod, e1, e2); :}
| expr:e1 CMP:c expr:e2
    {: RESULT = new Ebinop(c, e1, e2); :}
| expr:e1 AND expr:e2
    {: RESULT = new Ebinop(Binop.Band, e1, e2); :}
| expr:e1 OR expr:e2
    {: RESULT = new Ebinop(Binop.Bor, e1, e2); :}
| IDENT:f LP list_comma_expr:l RP
    {: RESULT = new Ecall (f, l); :}
| LSQ list_comma_expr:l RSQ
    {: RESULT = new Elist(l); :}
| LP expr:e RP
    {: RESULT = e; :}
;

left_value ::=
  IDENT:id
    {: RESULT = new Lident(id); :}
| expr:e1 LSQ expr:e2 RSQ
    {: RESULT = new Lnth(e1, e2); :}
;

list_comma_expr ::=
  nonempty_list_comma_expr:l
   {: RESULT = l; :}
|
   {: RESULT = new LinkedList<Expr>(); :}
;

nonempty_list_comma_expr ::=
  expr:x COMMA nonempty_list_comma_expr:l
   {: l.addFirst(x); RESULT = l; :}
| expr:x
   {: LinkedList<Expr> l = new LinkedList<Expr>();
      l.add(x); RESULT = l; :}
;

list_comma_ident ::=
  nonempty_list_comma_ident:l
   {: RESULT = l; :}
|
   {: RESULT = new LinkedList<String>(); :}
;

nonempty_list_comma_ident ::=
  IDENT:x COMMA nonempty_list_comma_ident:l
   {: l.addFirst(x); RESULT = l; :}
| IDENT:x
   {: LinkedList<String> l = new LinkedList<String>();
      l.add(x); RESULT = l; :}
;

list_def ::=
  def:d list_def:l
   {: l.addFirst(d); RESULT = l; :}
|
   {: RESULT = new LinkedList<Def>(); :}
;

nonempty_list_stmt ::=
  stmt:s list_stmt:l
   {: l.addFirst(s); RESULT = l; :}
;

list_stmt ::=
  stmt:s list_stmt:l
   {: l.addFirst(s); RESULT = l; :}
|
   {: RESULT = new LinkedList<Stmt>(); :}
;

opt_newline ::=
  NEWLINE
|
;
</file>

<file path="Practice/mini-python-java/bin/pascal.flex">
%%
/*-*
 * LEXICAL FUNCTIONS:
 */

%cup
%line
%column
%unicode
%class PascalLexer

%{

/**
 * Return a new Symbol with the given token id, and with the current line and
 * column numbers.
 */
Symbol newSym(int tokenId) {
    return new Symbol(tokenId, yyline, yycolumn);
}

/**
 * Return a new Symbol with the given token id, the current line and column
 * numbers, and the given token value.  The value is used for tokens such as
 * identifiers and numbers.
 */
Symbol newSym(int tokenId, Object value) {
    return new Symbol(tokenId, yyline, yycolumn, value);
}

%}


/*-*
 * PATTERN DEFINITIONS:
 */
letter          = [A-Za-z]
digit           = [0-9]
alphanumeric    = {letter}|{digit}
other_id_char   = [_]
identifier      = {letter}({alphanumeric}|{other_id_char})*
integer         = {digit}*
real            = {integer}\.{integer}
char            = '.'
leftbrace       = \{
rightbrace      = \}
nonrightbrace   = [^}]
comment_body    = {nonrightbrace}*
comment         = {leftbrace}{comment_body}{rightbrace}
whitespace      = [ \n\t]


%%
/**
 * LEXICAL RULES:
 */
and             { return newSym(sym.AND); }
array           { return newSym(sym.ARRAY); }
begin           { return newSym(sym.BEGIN); }
else            { return newSym(sym.ELSE); }
end             { return newSym(sym.END); }
if              { return newSym(sym.IF); }
of              { return newSym(sym.OF); }
or              { return newSym(sym.OR); }
program         { return newSym(sym.PROGRAM); }
procedure       { return newSym(sym.PROCEDURE); }
then            { return newSym(sym.THEN); }
type            { return newSym(sym.TYPE); }
var             { return newSym(sym.VAR); }
"*"             { return newSym(sym.TIMES); }
"+"             { return newSym(sym.PLUS); }
"-"             { return newSym(sym.MINUS); }
"/"             { return newSym(sym.DIVIDE); }
";"             { return newSym(sym.SEMI); }
","             { return newSym(sym.COMMA); }
"("             { return newSym(sym.LEFT_PAREN); }
")"             { return newSym(sym.RT_PAREN); }
"["             { return newSym(sym.LEFT_BRKT); }
"]"             { return newSym(sym.RT_BRKT); }
"="             { return newSym(sym.EQ); }
"<"             { return newSym(sym.GTR); }
">"             { return newSym(sym.LESS); }
"<="            { return newSym(sym.LESS_EQ); }
">="            { return newSym(sym.GTR_EQ); }
"!="            { return newSym(sym.NOT_EQ); }
":"             { return newSym(sym.COLON); }
":="            { return newSym(sym.ASSMNT); }
"."             { return newSym(sym.DOT); }
{identifier}    { return newSym(sym.IDENT, yytext()); }
{integer}       { return newSym(sym.INT, new Integer(yytext())); }
{real}          { return newSym(sym.REAL, new Double(yytext())); }
{char}          { return newSym(sym.CHAR, new Character(yytext().charAt(1))); }
{comment}       { /* For this stand-alone lexer, print out comments. */
                  System.out.println("Recognized comment: " + yytext()); }
{whitespace}    { /* Ignore whitespace. */ }
.               { System.out.println("Illegal char, '" + yytext() +
                    "' line: " + yyline + ", column: " + yychar); }
</file>

<file path="Practice/mini-python-java/Makefile">
JAVACUP   := java -jar ../../lib/java-cup-11a.jar

all: src/mini_python/Lexer.java src/mini_python/parser.java

.PHONY: tests
tests:
	bash run-tests

src/mini_python/parser.java src/mini_python/sym.java: src/mini_python/Parser.cup
	cd src/mini_python/ && $(JAVACUP) -package mini_python Parser.cup

%.java: %.flex
	rm -f $@
	jflex $<
</file>

<file path="Practice/mini-python-java/mini-python-java.eml">
<?xml version="1.0" encoding="UTF-8"?>
<component inheritJdk="true">
	<exclude-output/>
	<contentEntry url="file://$MODULE_DIR$"/>
	<levels>
		<level name="java-cup-11a-runtime" value="project"/>
	</levels>
</component>
</file>

<file path="Practice/mini-python-java/mini-python-java.iml">
<?xml version="1.0" encoding="UTF-8"?>
<module classpath="eclipse" classpath-dir="$MODULE_DIR$" type="JAVA_MODULE" version="4" />
</file>

<file path="Practice/mini-python-java/run-tests">
#!/bin/bash

score=0
max=0

echo "Tests positifs (fichiers dans tests/good/)"

pgm="java -cp lib/java-cup-11a.jar:bin mini_python.Main"

for f in tests/good/*.py; do
    max=`expr $max + 1`;
    echo $f
    expected=tests/good/`basename $f .py`.out
    rm -f out
    if $pgm $f > out; then
	if cmp --quiet out $expected; then
	    score=`expr $score + 1`;
	else
	    echo "  ECHEC : mauvaise sortie pour $f"
	fi
    else
	echo "  ECHEC de l'interprétation pour $f"
    fi
done
echo

echo "Tests négatifs (fichiers dans tests/bad/)"

for f in tests/bad/*.py; do
    max=`expr $max + 1`;
    echo $f
    rm -f out
    if $pgm $f > out 2>&1; then
	echo "  ECHEC : l'évaluation de $f devrait échouer"
    else
        if grep -q "^error:" out; then
	    score=`expr $score + 1`;
        else
            echo "  ECHEC : devrait afficher 'error'"
        fi
    fi
done

echo
percent=`expr 100 \* $score / $max`;
echo "Score: $score / $max tests, soit $percent%"
</file>

<file path="Practice/mini-python-java/src/mini_python/Interp.java">
package mini_python;

import java.util.HashMap;
import java.util.Iterator;

/* Les valeurs de mini-Python

   - une différence notable avec Python : on
     utilise ici le type int alors que les entiers de Python sont de
     précision arbitraire ; on pourrait utiliser les grands entiers de Java
     mais on choisit la facilité
   - ce que Python appelle une liste est en réalité un tableau
     redimensionnable ; dans le fragment considéré ici, il n'y a pas
     de possibilité d'en modifier la longueur, donc un simple tableau
     convient */

abstract class Value implements Comparable<Value> {
	abstract boolean isFalse();

	boolean isTrue() {
		return !this.isFalse();
	}

	int asInt() {
		if (!(this instanceof Vint))
			throw new Error("integer expected");
		return ((Vint) this).i;
	}

	Vlist asList() {
		if (!(this instanceof Vlist))
			throw new Error("list expected");
		return (Vlist) this;
	}
}

class Vnone extends Value {
	@Override
	boolean isFalse() {
		return true; 
	}

	@Override
	public String toString() {
		return "None";
	}

	@Override
	public int compareTo(Value o) {
		return o instanceof Vnone ? 0 : -1;
	}
}

class Vbool extends Value {
	final boolean b;

	Vbool(boolean b) {
		this.b = b;
	}

	@Override
	boolean isFalse() {
		return !this.b;
	}

	@Override
	public String toString() {
		return this.b ? "True" : "False";
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone)
			return 1;
		if (o instanceof Vbool) {
			boolean ob = ((Vbool) o).b;
			return b ? (ob ? 0 : 1) : (ob ? -1 : 0);
		}
		return -1;
	}
}

class Vint extends Value {
	final int i;

	Vint(int i) {
		this.i = i;
	}

	@Override
	boolean isFalse() {
		return this.i == 0 ? true : false;
	}

	@Override
	public String toString() {
		return "" + this.i;
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone || o instanceof Vbool)
			return 1;
		if (o instanceof Vint)
			return this.i - o.asInt();
		return -1;
	}
}

class Vstring extends Value {
	final String s;

	Vstring(String s) {
		this.s = s;
	}

	@Override
	boolean isFalse() {
		return this.s == "" ? true : false;
	}

	@Override
	public String toString() {
		return this.s;
	}

	@Override
	public int compareTo(Value o) {
		if (o instanceof Vnone || o instanceof Vbool || o instanceof Vint)
			return 1;
		if (o instanceof Vstring)
			return this.s.compareTo(((Vstring) o).s);
		return -1;
	}
}

class Vlist extends Value {
	final Value[] l;

	Vlist(int n) {
		this.l = new Value[n];
	}

	Vlist(Value[] l1, Value[] l2) {
		this.l = new Value[l1.length + l2.length];
		System.arraycopy(l1, 0, l, 0, l1.length);
		System.arraycopy(l2, 0, l, l1.length, l2.length);
	}

	@Override
	boolean isFalse() {
		return l.length == 0 ? true : false;
	}

	@Override
	public String toString() {
		StringBuffer b = new StringBuffer();
		b.append("[");
		for (int i = 0; i < this.l.length; i++) {
			if (i != 0)
				b.append(", ");
			b.append(this.l[i]);
		}
		b.append("]");
		return b.toString();
	}

	@Override
	public int compareTo(Value o) {
		if (!(o instanceof Vlist))
			return -1;
		Value[] ol = ((Vlist) o).l;
		int n1 = this.l.length, n2 = ol.length;
		int i1 = 0, i2 = 0;
		for (; i1 < n1 && i2 < n2; i1++, i2++) {
			Value v1 = this.l[i1];
			Value v2 = ol[i2];
			int c = v1.compareTo(v2);
			if (c != 0)
				return c;
		}
		if (i1 < n1)
			return 1;
		if (i2 < n2)
			return -1;
		return 0;
	}
}

/* on utilise l'exception ci-dessous pour interpréter la construction return
 * de mini-Python */

class Return extends Exception {
	private static final long serialVersionUID = 1L;
	
	final Value v;

	Return(Value v) { this.v = v; }
}

class Todo extends Error {
	private static final long serialVersionUID = 1L;
}

/* l'interprète */

class Interp implements Interpreter {

	// variables de mini-Python (globales, locales, arguments)
	HashMap<String, Value> vars;

	Interp() {
		this.vars = new HashMap<String, Value>();
	}

	// les définitions de fonctions
	static HashMap<String, Def> functions = new HashMap<String, Def>();

	// interprétation d'une opération binaire sur deux valeurs
	static Value binop(Binop op, Value v1, Value v2) {
		switch (op) {
		case Bsub: // Do operations. For the first ones, only the int is considered.
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() - v2.asInt());
			}
			break;
		case Bmul:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() * v2.asInt());
			}
			break;
		case Bdiv:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				if ( v2.asInt() != 0) { return new Vint(v1.asInt() / v2.asInt()); } // Here I call 2 times asInt. Perhaps is no efficient
				else { return new Vnone(); } //Don't really sure what I have to do in a divide by zero case
			}
			break;
		case Bmod:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				if ( v2.asInt() != 0) { return new Vint(v1.asInt() % v2.asInt()); } // Here I call 2 times asInt. Perhaps is no efficient
				else { return new Vnone(); } //Don't really sure what I have to do in a divide by zero case
			}
			break;
		case Badd:
			if (v1 instanceof Vint && v2 instanceof Vint) {
				return new Vint(v1.asInt() + v2.asInt());
			}
			if (v1 instanceof Vstring && v2 instanceof Vstring) {
				return new Vstring(v1.toString() + v2.toString());
			}
			if (v1 instanceof Vlist && v2 instanceof Vlist) {
				return new Vlist( ((Vlist)v1).l , ((Vlist)v2).l );
			}
			break;
		case Beq:
			return new Vbool(v1.compareTo(v2) == 0);
		case Bneq:
			return new Vbool(v1.compareTo(v2) != 0);
		case Blt:
			return new Vbool(v1.compareTo(v2) < 0);
		case Ble:
			return new Vbool(v1.compareTo(v2) <= 0);
		case Bgt:
			return new Vbool(v1.compareTo(v2) > 0);
		case Bge:
			return new Vbool(v1.compareTo(v2) >= 0);
		default:
		}
		throw new Error("unsupported operand types");
	}

	// interprétation des différentes constructions de mini-Python

	@Override
	public Value interp(Ecst e) {
		return e.c.interp();
	}

	@Override
	public Value interp(Ebinop e) {
		Value v1 = e.e1.accept(this);
		Value v2 = e.e2.accept(this);
		switch (e.op) {
		case Band:
			return new Vbool(v1.isTrue() && v2.isTrue()); //Other way: Vbool(v1.compareTo(v2) == 0);
		case Bor:
			return new Vbool(v1.isTrue() || v2.isTrue());
		default:
			return binop(e.op, v1, e.e2.accept(this));
		}
	}

	@Override
	public Value interp(Eunop e) {
		switch (e.op) {
		case Unot: // ~b
			return new Vbool(e.e.accept(this).isFalse());
		case Uneg: // if 4 -> -4
			return new Vint(-e.e.accept(this).asInt());
		}
		throw new Error("unreachable");
	}

	@Override
	public Value interp(Ecall e) {
		switch (e.f) {
		case "len":
			if (e.l.size() != 1) { throw new Error("more than 1 list not supported");	}
			Value v = e.l.get(0).accept(this);
			if (v instanceof Vlist) { return new Vint( ((Vlist)v).l.length ); }
			else if (v instanceof Vstring) { return new Vint( ((Vstring) v).s.length() ); }
			else { throw new Error("This value has no length"); }
		case "range":
			if (e.l.size() != 1) { throw new Error("more than 1 element not supported"); }
			int n = e.l.get(0).accept(this).asInt();
			if (n <= 0) { throw new Error("Negative or Null size for range"); }
			Vlist vlist = new Vlist(n);
			for (int i = 0; i < n; i++) {
				vlist.l[i] = new Vint(i); // Create array [0, 1, 2, ..., n];
			}
		default:
			Def def = functions.get(e.f);
			if (def == null) { throw new Error("unbound function " + e.f); }
			if (e.l.size() != def.l.size()) { throw new Error("bad arity"); } // ASK: isn't this always true?
			Interp variables = new Interp();
			Iterator<String> it = def.l.iterator();
			for (Expr e1 : e.l)
				variables.vars.put(it.next(), e1.accept(this));
			try {
				def.s.accept(variables);
				return new Vnone();
			} catch (Return r) {
				return r.v;
			}
		}
	}

	@Override
	public Value interp(Elist e) {
		Vlist v = new Vlist(e.l.size());
		for (int i = 0; i < e.l.size(); i++) {
			v.l[i] = e.l.get(i).accept(this);
		}
		return v;
	}

	@Override
	public Value interp(Eleft e) {
		return e.lv.accept(this);
	}

	@Override
	public Value interp(Lident lv) {
		Value v = vars.get(lv.s);
		if (v == null) { throw new Error("unbound variable" + lv.s); }
		return v;
	}

	@Override
	public Value interp(Lnth lv) { // returns the value of the list e1 at the index e2
		Vlist v = lv.e1.accept(this).asList();
		int i = lv.e2.accept(this).asInt();
		if (i < 0 || i >= v.l.length) {	throw new Error("index out of bounds"); }
		return v.l[i];
	}

	@Override
	public void assign(Lident lv, Expr e) {
		vars.put(lv.s, e.accept(this));
	}

	@Override
	public void assign(Lnth lv, Expr e) {
		Vlist v = lv.e1.accept(this).asList();
		int i = lv.e2.accept(this).asInt();
		if (i < 0 || i >= v.l.length)
			throw new Error("index out of bounds");
		v.l[i] = e.accept(this);
	}

	/* instructions */
	
	@Override
	public void interp(Seval s) throws Return {
		s.e.accept(this);
	}

	@Override
	public void interp(Sprint s) throws Return {
		System.out.println(s.e.accept(this).toString());
	}

	@Override
	public void interp(Sblock s) throws Return {
		for (Stmt st: s.l)
			st.accept(this);
	}

	@Override
	public void interp(Sif s) throws Return {
		if ( s.e.accept(this).isTrue() ) { s.s1.accept(this); }
		else { s.s2.accept(this); }
	}

	@Override
	public void interp(Sassign s) throws Return {
		s.lv.assign(this, s.e);
	}

	@Override
	public void interp(Sreturn s) throws Return {
		throw new Return(s.e.accept(this)); // ASK: why not something like function.put(...) and... where do I do function.put????
	}

	@Override
	public void interp(Sfor s) throws Return {
		Vlist l = s.e.accept(this).asList();
		for (Value v: l.l) {
			vars.put(s.x, v);
			s.s.accept(this);
		}
	}

}
</file>

<file path="Practice/mini-python-java/src/mini_python/Lexer.flex">
package mini_python;

import java_cup.runtime.*;
import java.util.*;
import static mini_python.sym.*;

%%

%class Lexer
%unicode
%cup
%cupdebug
%line
%column
%yylexthrow Exception

/* The symbols produced by the lexical analyzer not just integers, but objects
   of type java_cup.runtime.Symbol. To create such an object, one invokes the
   function symbol(), defined below, and supplies an integer constant, which
   identifies a terminal symbol; if necessary, one also supplies a semantic
   value, of an appropriate type -- this must match the type declared for this
   terminal symbol in Parser.cup. */

/* See https://www2.in.tum.de/repos/cup/develop/src/java_cup/runtime/ */

/* Technical note: CUP seems to assume that the two integer parameters
   passed to the Symbol constructor are character counts for the left
   and right positions. Instead, we choose to provide line and column
   information. Accordingly, we will replace CUP's error reporting
   routine with our own. */

%{

    private Symbol symbol(int id)
    {
	return new Symbol(id, yyline, yycolumn);
    }

    private Symbol symbol(int id, Object value)
    {
	return new Symbol(id, yyline, yycolumn, value);
    }

    static Stack<Integer> indent = new Stack<Integer>();
    { indent.push(0); }

%}
LineTerminator     = \r | \n | \r\n
InputCharacter     = [^\r\n]
WhiteSpace         = [ \t\f]
String             = "\"" [^\"]* "\""

Comment            = "#" {InputCharacter}* {LineTerminator}

Identifier         = [:jletter:] [:jletterdigit:]*

Integer            = [:digit:]+

%%

/* A specification of which regular expressions to recognize and what
   symbols to produce. */

<YYINITIAL> {

    "="
    { return symbol(EQUAL); }

    ":"
    { return symbol(COLON); }

    ","
    { return symbol(COMMA); }

    "("
    { return symbol(LP); }

    ")"
    { return symbol(RP); }

    "["
    { return symbol(LSQ); }

    "]"
    { return symbol(RSQ); }

    "+"
    { return symbol(PLUS); }

    "-"
    { return symbol(MINUS); }

    "*"
    { return symbol(TIMES); }

    "/"
    { return symbol(DIV); }

    "%"
    { return symbol(MOD); }

    "<"
    { return symbol(CMP, Binop.Blt); }

    "<="
    { return symbol(CMP, Binop.Ble); }

    ">"
    { return symbol(CMP, Binop.Bgt); }

    ">="
    { return symbol(CMP, Binop.Bge); }

    "=="
    { return symbol(CMP, Binop.Beq); }

    "!="
    { return symbol(CMP, Binop.Bneq); }

    "and"
    { return symbol(AND); }

    "or"
    { return symbol(OR); }

    "not"
    { return symbol(NOT); }

    "def"
    { return symbol(DEF); }

    "if"
    { return symbol(IF); }

    "else"
    { return symbol(ELSE); }

    "return"
    { return symbol(RETURN); }

    "print"
    { return symbol(PRINT); }

    "for"
    { return symbol(FOR); }

    "in"
    { return symbol(IN); }

    "None"
    { return symbol(CST, Constant.None); }

    "True"
    { return symbol(CST, new Cbool(true)); }

    "False"
    { return symbol(CST, new Cbool(false)); }

    {Identifier}
    { return symbol(IDENT, yytext().intern()); }
    // The call to intern() allows identifiers to be compared using == .

    {String}
    { String s = yytext();
      return symbol(CST, new Cstring(s.substring(1, s.length() - 1))); }

    {Integer}
    { return symbol(CST, new Cint(Integer.parseInt(yytext()))); }

    {Comment}
    { /* ignore */ }

    {WhiteSpace}
    { /* ignore */ }

    {LineTerminator} (({WhiteSpace} | {Comment})* {LineTerminator})*
    {WhiteSpace}*
    { String s = yytext();
      int n = s.length() - 1 - s.lastIndexOf('\n');
      // System.out.println("n = " + n);
      if (indent.peek() < n) {
        indent.push(n);
        return symbol(INCINDENT);
      } else {
        int k = 0;
        while (indent.peek() > n) { indent.pop(); k++; }
        return symbol(DECINDENT, k);
      }
    }

    .
    { throw new Exception (String.format (
        "Line %d, column %d: illegal character: '%s'\n", yyline, yycolumn, yytext()
      ));
    }

}
</file>

<file path="Practice/mini-python-java/src/mini_python/Lexer.java">
/* The following code was generated by JFlex 1.4.3 on 1/5/17 10:16 AM */


package mini_python;

import java_cup.runtime.*;
import java.util.*;
import static mini_python.sym.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 1/5/17 10:16 AM from the specification file
 * <tt>src/mini_python/Lexer.flex</tt>
 */
class Lexer implements java_cup.runtime.Scanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\7\1\3\1\2\1\0\1\3\1\1\16\7\4\0\1\3\1\27"+
    "\1\4\1\5\1\6\1\24\2\0\1\14\1\15\1\22\1\20\1\13"+
    "\1\21\1\0\1\23\12\10\1\12\1\0\1\25\1\11\1\26\2\0"+
    "\5\6\1\47\7\6\1\45\5\6\1\46\6\6\1\16\1\0\1\17"+
    "\1\0\1\6\1\0\1\30\2\6\1\32\1\36\1\37\2\6\1\40"+
    "\2\6\1\41\1\6\1\31\1\33\1\44\1\6\1\34\1\42\1\35"+
    "\1\43\5\6\4\0\41\7\2\0\4\6\4\0\1\6\2\0\1\7"+
    "\7\0\1\6\4\0\1\6\5\0\27\6\1\0\37\6\1\0\u01ca\6"+
    "\4\0\14\6\16\0\5\6\7\0\1\6\1\0\1\6\21\0\160\7"+
    "\5\6\1\0\2\6\2\0\4\6\10\0\1\6\1\0\3\6\1\0"+
    "\1\6\1\0\24\6\1\0\123\6\1\0\213\6\1\0\5\7\2\0"+
    "\236\6\11\0\46\6\2\0\1\6\7\0\47\6\7\0\1\6\1\0"+
    "\55\7\1\0\1\7\1\0\2\7\1\0\2\7\1\0\1\7\10\0"+
    "\33\6\5\0\3\6\15\0\5\7\6\0\1\6\4\0\13\7\5\0"+
    "\53\6\25\7\12\10\4\0\2\6\1\7\143\6\1\0\1\6\10\7"+
    "\1\0\6\7\2\6\2\7\1\0\4\7\2\6\12\10\3\6\2\0"+
    "\1\6\17\0\1\7\1\6\1\7\36\6\33\7\2\0\131\6\13\7"+
    "\1\6\16\0\12\10\41\6\11\7\2\6\4\0\1\6\5\0\26\6"+
    "\4\7\1\6\11\7\1\6\3\7\1\6\5\7\22\0\31\6\3\7"+
    "\104\0\1\6\1\0\13\6\67\0\33\7\1\0\4\7\66\6\3\7"+
    "\1\6\22\7\1\6\7\7\12\6\2\7\2\0\12\10\1\0\7\6"+
    "\1\0\7\6\1\0\3\7\1\0\10\6\2\0\2\6\2\0\26\6"+
    "\1\0\7\6\1\0\1\6\3\0\4\6\2\0\1\7\1\6\7\7"+
    "\2\0\2\7\2\0\3\7\1\6\10\0\1\7\4\0\2\6\1\0"+
    "\3\6\2\7\2\0\12\10\4\6\7\0\1\6\5\0\3\7\1\0"+
    "\6\6\4\0\2\6\2\0\26\6\1\0\7\6\1\0\2\6\1\0"+
    "\2\6\1\0\2\6\2\0\1\7\1\0\5\7\4\0\2\7\2\0"+
    "\3\7\3\0\1\7\7\0\4\6\1\0\1\6\7\0\12\10\2\7"+
    "\3\6\1\7\13\0\3\7\1\0\11\6\1\0\3\6\1\0\26\6"+
    "\1\0\7\6\1\0\2\6\1\0\5\6\2\0\1\7\1\6\10\7"+
    "\1\0\3\7\1\0\3\7\2\0\1\6\17\0\2\6\2\7\2\0"+
    "\12\10\1\0\1\6\17\0\3\7\1\0\10\6\2\0\2\6\2\0"+
    "\26\6\1\0\7\6\1\0\2\6\1\0\5\6\2\0\1\7\1\6"+
    "\7\7\2\0\2\7\2\0\3\7\10\0\2\7\4\0\2\6\1\0"+
    "\3\6\2\7\2\0\12\10\1\0\1\6\20\0\1\7\1\6\1\0"+
    "\6\6\3\0\3\6\1\0\4\6\3\0\2\6\1\0\1\6\1\0"+
    "\2\6\3\0\2\6\3\0\3\6\3\0\14\6\4\0\5\7\3\0"+
    "\3\7\1\0\4\7\2\0\1\6\6\0\1\7\16\0\12\10\11\0"+
    "\1\6\7\0\3\7\1\0\10\6\1\0\3\6\1\0\27\6\1\0"+
    "\12\6\1\0\5\6\3\0\1\6\7\7\1\0\3\7\1\0\4\7"+
    "\7\0\2\7\1\0\2\6\6\0\2\6\2\7\2\0\12\10\22\0"+
    "\2\7\1\0\10\6\1\0\3\6\1\0\27\6\1\0\12\6\1\0"+
    "\5\6\2\0\1\7\1\6\7\7\1\0\3\7\1\0\4\7\7\0"+
    "\2\7\7\0\1\6\1\0\2\6\2\7\2\0\12\10\1\0\2\6"+
    "\17\0\2\7\1\0\10\6\1\0\3\6\1\0\51\6\2\0\1\6"+
    "\7\7\1\0\3\7\1\0\4\7\1\6\10\0\1\7\10\0\2\6"+
    "\2\7\2\0\12\10\12\0\6\6\2\0\2\7\1\0\22\6\3\0"+
    "\30\6\1\0\11\6\1\0\1\6\2\0\7\6\3\0\1\7\4\0"+
    "\6\7\1\0\1\7\1\0\10\7\22\0\2\7\15\0\60\6\1\7"+
    "\2\6\7\7\4\0\10\6\10\7\1\0\12\10\47\0\2\6\1\0"+
    "\1\6\2\0\2\6\1\0\1\6\2\0\1\6\6\0\4\6\1\0"+
    "\7\6\1\0\3\6\1\0\1\6\1\0\1\6\2\0\2\6\1\0"+
    "\4\6\1\7\2\6\6\7\1\0\2\7\1\6\2\0\5\6\1\0"+
    "\1\6\1\0\6\7\2\0\12\10\2\0\4\6\40\0\1\6\27\0"+
    "\2\7\6\0\12\10\13\0\1\7\1\0\1\7\1\0\1\7\4\0"+
    "\2\7\10\6\1\0\44\6\4\0\24\7\1\0\2\7\5\6\13\7"+
    "\1\0\44\7\11\0\1\7\71\0\53\6\24\7\1\6\12\10\6\0"+
    "\6\6\4\7\4\6\3\7\1\6\3\7\2\6\7\7\3\6\4\7"+
    "\15\6\14\7\1\6\1\7\12\10\4\7\2\0\46\6\1\0\1\6"+
    "\5\0\1\6\2\0\53\6\1\0\u014d\6\1\0\4\6\2\0\7\6"+
    "\1\0\1\6\1\0\4\6\2\0\51\6\1\0\4\6\2\0\41\6"+
    "\1\0\4\6\2\0\7\6\1\0\1\6\1\0\4\6\2\0\17\6"+
    "\1\0\71\6\1\0\4\6\2\0\103\6\2\0\3\7\40\0\20\6"+
    "\20\0\125\6\14\0\u026c\6\2\0\21\6\1\0\32\6\5\0\113\6"+
    "\3\0\3\6\17\0\15\6\1\0\4\6\3\7\13\0\22\6\3\7"+
    "\13\0\22\6\2\7\14\0\15\6\1\0\3\6\1\0\2\7\14\0"+
    "\64\6\40\7\3\0\1\6\3\0\2\6\1\7\2\0\12\10\41\0"+
    "\3\7\2\0\12\10\6\0\130\6\10\0\51\6\1\7\1\6\5\0"+
    "\106\6\12\0\35\6\3\0\14\7\4\0\14\7\12\0\12\10\36\6"+
    "\2\0\5\6\13\0\54\6\4\0\21\7\7\6\2\7\6\0\12\10"+
    "\46\0\27\6\5\7\4\0\65\6\12\7\1\0\35\7\2\0\1\7"+
    "\12\10\6\0\12\10\15\0\1\6\130\0\5\7\57\6\21\7\7\6"+
    "\4\0\12\10\21\0\11\7\14\0\3\7\36\6\15\7\2\6\12\10"+
    "\54\6\16\7\14\0\44\6\24\7\10\0\12\10\3\0\3\6\12\10"+
    "\44\6\122\0\3\7\1\0\25\7\4\6\1\7\4\6\3\7\2\6"+
    "\11\0\300\6\47\7\25\0\4\7\u0116\6\2\0\6\6\2\0\46\6"+
    "\2\0\6\6\2\0\10\6\1\0\1\6\1\0\1\6\1\0\1\6"+
    "\1\0\37\6\2\0\65\6\1\0\7\6\1\0\1\6\3\0\3\6"+
    "\1\0\7\6\3\0\4\6\2\0\6\6\4\0\15\6\5\0\3\6"+
    "\1\0\7\6\16\0\5\7\32\0\5\7\20\0\2\6\23\0\1\6"+
    "\13\0\5\7\5\0\6\7\1\0\1\6\15\0\1\6\20\0\15\6"+
    "\3\0\33\6\25\0\15\7\4\0\1\7\3\0\14\7\21\0\1\6"+
    "\4\0\1\6\2\0\12\6\1\0\1\6\3\0\5\6\6\0\1\6"+
    "\1\0\1\6\1\0\1\6\1\0\4\6\1\0\13\6\2\0\4\6"+
    "\5\0\5\6\4\0\1\6\21\0\51\6\u0a77\0\57\6\1\0\57\6"+
    "\1\0\205\6\6\0\4\6\3\7\2\6\14\0\46\6\1\0\1\6"+
    "\5\0\1\6\2\0\70\6\7\0\1\6\17\0\1\7\27\6\11\0"+
    "\7\6\1\0\7\6\1\0\7\6\1\0\7\6\1\0\7\6\1\0"+
    "\7\6\1\0\7\6\1\0\7\6\1\0\40\7\57\0\1\6\u01d5\0"+
    "\3\6\31\0\11\6\6\7\1\0\5\6\2\0\5\6\4\0\126\6"+
    "\2\0\2\7\2\0\3\6\1\0\132\6\1\0\4\6\5\0\51\6"+
    "\3\0\136\6\21\0\33\6\65\0\20\6\u0200\0\u19b6\6\112\0\u51cd\6"+
    "\63\0\u048d\6\103\0\56\6\2\0\u010d\6\3\0\20\6\12\10\2\6"+
    "\24\0\57\6\1\7\4\0\12\7\1\0\31\6\7\0\1\7\120\6"+
    "\2\7\45\0\11\6\2\0\147\6\2\0\4\6\1\0\4\6\14\0"+
    "\13\6\115\0\12\6\1\7\3\6\1\7\4\6\1\7\27\6\5\7"+
    "\20\0\1\6\7\0\64\6\14\0\2\7\62\6\21\7\13\0\12\10"+
    "\6\0\22\7\6\6\3\0\1\6\4\0\12\10\34\6\10\7\2\0"+
    "\27\6\15\7\14\0\35\6\3\0\4\7\57\6\16\7\16\0\1\6"+
    "\12\10\46\0\51\6\16\7\11\0\3\6\1\7\10\6\2\7\2\0"+
    "\12\10\6\0\27\6\3\0\1\6\1\7\4\0\60\6\1\7\1\6"+
    "\3\7\2\6\2\7\5\6\2\7\1\6\1\7\1\6\30\0\3\6"+
    "\2\0\13\6\5\7\2\0\3\6\2\7\12\0\6\6\2\0\6\6"+
    "\2\0\6\6\11\0\7\6\1\0\7\6\221\0\43\6\10\7\1\0"+
    "\2\7\2\0\12\10\6\0\u2ba4\6\14\0\27\6\4\0\61\6\u2104\0"+
    "\u016e\6\2\0\152\6\46\0\7\6\14\0\5\6\5\0\1\6\1\7"+
    "\12\6\1\0\15\6\1\0\5\6\1\0\1\6\1\0\2\6\1\0"+
    "\2\6\1\0\154\6\41\0\u016b\6\22\0\100\6\2\0\66\6\50\0"+
    "\15\6\3\0\20\7\20\0\7\7\14\0\2\6\30\0\3\6\31\0"+
    "\1\6\6\0\5\6\1\0\207\6\2\0\1\7\4\0\1\6\13\0"+
    "\12\10\7\0\32\6\4\0\1\6\1\0\32\6\13\0\131\6\3\0"+
    "\6\6\2\0\6\6\2\0\6\6\2\0\3\6\3\0\2\6\3\0"+
    "\2\6\22\0\3\7\4\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\2\1\1\4\1\5\1\6"+
    "\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16"+
    "\1\17\1\20\1\21\1\22\1\23\1\1\14\4\2\0"+
    "\1\24\1\0\1\3\1\25\1\26\1\27\1\30\3\4"+
    "\1\31\3\4\1\32\1\33\4\4\1\0\1\34\1\35"+
    "\1\36\2\4\1\37\5\4\1\40\1\4\1\41\1\42"+
    "\2\4\1\43\1\44\1\45";

  private static int [] zzUnpackAction() {
    int [] result = new int[78];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\50\0\120\0\50\0\170\0\240\0\310\0\360"+
    "\0\u0118\0\50\0\50\0\50\0\50\0\50\0\50\0\50"+
    "\0\50\0\50\0\50\0\50\0\u0140\0\u0168\0\u0190\0\u01b8"+
    "\0\u01e0\0\u0208\0\u0230\0\u0258\0\u0280\0\u02a8\0\u02d0\0\u02f8"+
    "\0\u0320\0\u0348\0\u0370\0\u0398\0\170\0\50\0\240\0\u03c0"+
    "\0\50\0\50\0\50\0\50\0\u03e8\0\u0410\0\u0438\0\310"+
    "\0\u0460\0\u0488\0\u04b0\0\310\0\310\0\u04d8\0\u0500\0\u0528"+
    "\0\u0550\0\u0578\0\310\0\310\0\310\0\u05a0\0\u05c8\0\310"+
    "\0\u05f0\0\u0618\0\u0640\0\u0668\0\u0690\0\310\0\u06b8\0\310"+
    "\0\310\0\u06e0\0\u0708\0\310\0\310\0\310";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[78];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\2\3\1\4\1\5\1\6\1\7\1\2\1\10"+
    "\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20"+
    "\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30"+
    "\1\31\1\32\1\33\1\34\1\7\1\35\1\36\1\37"+
    "\3\7\1\40\1\41\1\42\1\43\51\0\3\3\1\0"+
    "\1\44\42\0\4\45\1\46\43\45\1\47\1\50\1\4"+
    "\45\47\6\0\3\7\17\0\20\7\10\0\1\10\50\0"+
    "\1\51\47\0\1\52\47\0\1\53\47\0\1\54\44\0"+
    "\3\7\17\0\1\7\1\55\16\7\6\0\3\7\17\0"+
    "\3\7\1\56\14\7\6\0\3\7\17\0\6\7\1\57"+
    "\11\7\6\0\3\7\17\0\4\7\1\60\13\7\6\0"+
    "\3\7\17\0\6\7\1\61\11\7\6\0\3\7\17\0"+
    "\11\7\1\62\6\7\6\0\3\7\17\0\3\7\1\63"+
    "\14\7\6\0\3\7\17\0\1\7\1\64\5\7\1\65"+
    "\10\7\6\0\3\7\17\0\4\7\1\66\13\7\6\0"+
    "\3\7\17\0\3\7\1\67\14\7\6\0\3\7\17\0"+
    "\4\7\1\70\13\7\6\0\3\7\17\0\1\71\17\7"+
    "\1\44\2\72\45\44\2\0\1\4\53\0\3\7\17\0"+
    "\2\7\1\73\15\7\6\0\3\7\17\0\5\7\1\74"+
    "\12\7\6\0\3\7\17\0\7\7\1\75\10\7\6\0"+
    "\3\7\17\0\5\7\1\76\12\7\6\0\3\7\17\0"+
    "\12\7\1\77\5\7\6\0\3\7\17\0\4\7\1\100"+
    "\13\7\6\0\3\7\17\0\10\7\1\101\7\7\6\0"+
    "\3\7\17\0\1\7\1\102\16\7\6\0\3\7\17\0"+
    "\13\7\1\103\4\7\6\0\3\7\17\0\11\7\1\104"+
    "\6\7\1\0\2\3\1\72\1\0\1\44\50\0\3\7"+
    "\17\0\13\7\1\105\4\7\6\0\3\7\17\0\6\7"+
    "\1\106\11\7\6\0\3\7\17\0\1\7\1\107\16\7"+
    "\6\0\3\7\17\0\6\7\1\110\11\7\6\0\3\7"+
    "\17\0\6\7\1\111\11\7\6\0\3\7\17\0\12\7"+
    "\1\112\5\7\6\0\3\7\17\0\4\7\1\113\13\7"+
    "\6\0\3\7\17\0\5\7\1\114\12\7\6\0\3\7"+
    "\17\0\6\7\1\115\11\7\6\0\3\7\17\0\1\7"+
    "\1\116\16\7";

  private static int [] zzUnpackTrans() {
    int [] result = new int[1840];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\1\1\1\11\5\1\13\11\17\1\2\0"+
    "\1\11\1\0\1\1\4\11\15\1\1\0\24\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[78];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */

    private Symbol symbol(int id)
    {
	return new Symbol(id, yyline, yycolumn);
    }

    private Symbol symbol(int id, Object value)
    {
	return new Symbol(id, yyline, yycolumn, value);
    }

    static Stack<Integer> indent = new Stack<Integer>();
    { indent.push(0); }



  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  Lexer(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 2248) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
      yyclose();
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public java_cup.runtime.Symbol next_token() throws java.io.IOException, Exception {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      for (zzCurrentPosL = zzStartRead; zzCurrentPosL < zzMarkedPosL;
                                                             zzCurrentPosL++) {
        switch (zzBufferL[zzCurrentPosL]) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn++;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 3: 
          { /* ignore */
          }
        case 38: break;
        case 10: 
          { return symbol(RP);
          }
        case 39: break;
        case 37: 
          { return symbol(RETURN);
          }
        case 40: break;
        case 14: 
          { return symbol(MINUS);
          }
        case 41: break;
        case 35: 
          { return symbol(PRINT);
          }
        case 42: break;
        case 13: 
          { return symbol(PLUS);
          }
        case 43: break;
        case 8: 
          { return symbol(COMMA);
          }
        case 44: break;
        case 32: 
          { return symbol(ELSE);
          }
        case 45: break;
        case 12: 
          { return symbol(RSQ);
          }
        case 46: break;
        case 21: 
          { return symbol(CMP, Binop.Beq);
          }
        case 47: break;
        case 29: 
          { return symbol(NOT);
          }
        case 48: break;
        case 28: 
          { return symbol(AND);
          }
        case 49: break;
        case 24: 
          { return symbol(CMP, Binop.Bneq);
          }
        case 50: break;
        case 16: 
          { return symbol(DIV);
          }
        case 51: break;
        case 2: 
          { String s = yytext();
      int n = s.length() - 1 - s.lastIndexOf('\n');
      // System.out.println("n = " + n);
      if (indent.peek() < n) {
        indent.push(n);
        return symbol(INCINDENT);
      } else {
        int k = 0;
        while (indent.peek() > n) { indent.pop(); k++; }
        return symbol(DECINDENT, k);
      }
          }
        case 52: break;
        case 27: 
          { return symbol(IF);
          }
        case 53: break;
        case 17: 
          { return symbol(MOD);
          }
        case 54: break;
        case 34: 
          { return symbol(CST, new Cbool(true));
          }
        case 55: break;
        case 25: 
          { return symbol(OR);
          }
        case 56: break;
        case 26: 
          { return symbol(IN);
          }
        case 57: break;
        case 9: 
          { return symbol(LP);
          }
        case 58: break;
        case 23: 
          { return symbol(CMP, Binop.Bge);
          }
        case 59: break;
        case 5: 
          { return symbol(CST, new Cint(Integer.parseInt(yytext())));
          }
        case 60: break;
        case 22: 
          { return symbol(CMP, Binop.Ble);
          }
        case 61: break;
        case 30: 
          { return symbol(DEF);
          }
        case 62: break;
        case 1: 
          { throw new Exception (String.format (
        "Line %d, column %d: illegal character: '%s'\n", yyline, yycolumn, yytext()
      ));
          }
        case 63: break;
        case 36: 
          { return symbol(CST, new Cbool(false));
          }
        case 64: break;
        case 4: 
          { return symbol(IDENT, yytext().intern());
          }
        case 65: break;
        case 15: 
          { return symbol(TIMES);
          }
        case 66: break;
        case 7: 
          { return symbol(COLON);
          }
        case 67: break;
        case 31: 
          { return symbol(FOR);
          }
        case 68: break;
        case 20: 
          { String s = yytext();
      return symbol(CST, new Cstring(s.substring(1, s.length() - 1)));
          }
        case 69: break;
        case 19: 
          { return symbol(CMP, Binop.Bgt);
          }
        case 70: break;
        case 6: 
          { return symbol(EQUAL);
          }
        case 71: break;
        case 33: 
          { return symbol(CST, Constant.None);
          }
        case 72: break;
        case 18: 
          { return symbol(CMP, Binop.Blt);
          }
        case 73: break;
        case 11: 
          { return symbol(LSQ);
          }
        case 74: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            zzDoEOF();
              { return new java_cup.runtime.Symbol(sym.EOF); }
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }

  /**
   * Converts an int token code into the name of the
   * token by reflection on the cup symbol class/interface sym
   *
   * This code was contributed by Karl Meissner <meissnersd@yahoo.com>
   */
  private String getTokenName(int token) {
    try {
      java.lang.reflect.Field [] classFields = sym.class.getFields();
      for (int i = 0; i < classFields.length; i++) {
        if (classFields[i].getInt(null) == token) {
          return classFields[i].getName();
        }
      }
    } catch (Exception e) {
      e.printStackTrace(System.err);
    }

    return "UNKNOWN TOKEN";
  }

  /**
   * Same as next_token but also prints the token to standard out
   * for debugging.
   *
   * This code was contributed by Karl Meissner <meissnersd@yahoo.com>
   */
  public java_cup.runtime.Symbol debug_next_token() throws java.io.IOException, Exception {
    java_cup.runtime.Symbol s = next_token();
    System.out.println( "line:" + (yyline+1) + " col:" + (yycolumn+1) + " --"+ yytext() + "--" + getTokenName(s.sym) + "--");
    return s;
  }

  /**
   * Runs the scanner on input files.
   *
   * This main method is the debugging routine for the scanner.
   * It prints debugging information about each returned token to
   * System.out until the end of file is reached, or an error occured.
   *
   * @param argv   the command line, contains the filenames to run
   *               the scanner on.
   */
  public static void main(String argv[]) {
    if (argv.length == 0) {
      System.out.println("Usage : java Lexer <inputfile>");
    }
    else {
      for (int i = 0; i < argv.length; i++) {
        Lexer scanner = null;
        try {
          scanner = new Lexer( new java.io.FileReader(argv[i]) );
          while ( !scanner.zzAtEOF ) scanner.debug_next_token();
        }
        catch (java.io.FileNotFoundException e) {
          System.out.println("File not found : \""+argv[i]+"\"");
        }
        catch (java.io.IOException e) {
          System.out.println("IO error scanning file \""+argv[i]+"\"");
          System.out.println(e);
        }
        catch (Exception e) {
          System.out.println("Unexpected exception:");
          e.printStackTrace();
        }
      }
    }
  }


}
</file>

<file path="Practice/mini-python-java/src/mini_python/Main.java">
package mini_python;

public class Main {

	public static void main(String[] args) throws Exception {
		String file = args.length > 0 ? args[0] : "test.py";
		java.io.Reader reader = new java.io.FileReader(file);
		Lexer lexer = new MyLexer(reader);
		MyParser parser = new MyParser(lexer);
		File f = (File) parser.parse().value;
		for (Def d: f.l)
			Interp.functions.put(d.f, d);
		try {
			f.s.accept(new Interp());
		} catch (Error e) {
			System.out.println("error: " + e.toString());
			System.exit(1);
		}
	}

}
</file>

<file path="Practice/mini-python-java/src/mini_python/MyLexer.java">
package mini_python;

import java.io.IOException;
import java.io.Reader;
import java.util.LinkedList;
import java.util.Queue;

import java_cup.runtime.Symbol;

public class MyLexer extends Lexer {

	MyLexer(Reader in) {
		super(in);
	}
	
	Queue<Symbol> tokens = new LinkedList<Symbol>();
	
	@Override
	public Symbol next_token() throws IOException, Exception {
		if (tokens.isEmpty()) {
			Symbol token = super.next_token();
			// System.out.println("next_token => " + token);
			if (token.sym == sym.INCINDENT) {
				// System.out.println("INC");
				tokens.add(new Symbol(sym.NEWLINE));
				tokens.add(new Symbol(sym.BEGIN));
			} else if (token.sym == sym.DECINDENT) {
				tokens.add(new Symbol(sym.NEWLINE));
				// System.out.println("DEC " + (Integer)token.value);
				for (int i = 0; i < (Integer)token.value; i++)
					tokens.add(new Symbol(sym.END));
			} else
				tokens.add(token);
		}
		return tokens.poll();
	}
	
}
</file>

<file path="Practice/mini-python-java/src/mini_python/MyParser.java">
package mini_python;

import java_cup.runtime.*;

public class MyParser extends parser {

	MyParser(Scanner scanner) {
		super(scanner);
	}

	public void report_error(String message, Object info) {
		// Override this method to be silent.
	}

	public void report_fatal_error(String message, Object info)
			throws Exception {
		// Override this method to be silent and throw an exception that
		// contains the error message.
		message = "Syntax error"; // discard message produced by CUP
		if (info instanceof Symbol) {
			Symbol symbol = (Symbol) info;
			message += String.format(" at line %d, column %d (%s)\n",
					symbol.left, symbol.right, showSymbol(symbol.sym));
		}
		throw new Exception(message);
	}

	String showSymbol(int token) {
		try {
			java.lang.reflect.Field[] classFields = sym.class.getFields();
			for (int i = 0; i < classFields.length; i++) {
				if (classFields[i].getInt(null) == token) {
					return classFields[i].getName();
				}
			}
		} catch (java.lang.IllegalAccessException e) {
		}
		throw new AssertionError(); // hopefully unreachable statement
	}

}
</file>

<file path="Practice/mini-python-java/src/mini_python/Parser.cup">
import java_cup.runtime.*;
import java.util.*;

terminal String IDENT;
terminal Constant CST;
terminal Binop CMP;
terminal INCINDENT;
terminal Integer DECINDENT;
terminal  DEF, IF, ELSE, RETURN, PRINT, FOR, IN, AND, OR, NOT,
	     LP, RP, LSQ, RSQ, COMMA, EQUAL, COLON, BEGIN, END, NEWLINE,
		  PLUS, MINUS, TIMES, DIV, MOD, MAIN, RB, LB;
terminal UMINUS;

non terminal File file;
non terminal Def def;
non terminal opt_newline;
non terminal LinkedList<Def> list_def;
non terminal LinkedList<Stmt> list_stmt, nonempty_list_stmt;
non terminal LinkedList<String> list_comma_ident, nonempty_list_comma_ident;
non terminal Stmt simple_stmt, stmt, suite;
non terminal Expr expr;
non terminal LeftValue left_value;
non terminal LinkedList<Expr> nonempty_list_comma_expr, list_comma_expr;

precedence left OR;
precedence left AND;
precedence nonassoc NOT;
precedence nonassoc CMP;
precedence left PLUS, MINUS;
precedence left TIMES, DIV, MOD;
precedence nonassoc UMINUS;
precedence nonassoc LSQ;

start with file;

file ::=
  opt_newline list_def:l nonempty_list_stmt:b
    {: RESULT = new File(l, new Sblock(b)); :}
;

def ::=
  DEF IDENT:f LP list_comma_ident:x RP COLON suite:s
    {: RESULT = new Def(f, x, s); :}
;

suite ::=
 simple_stmt:s NEWLINE
    {: RESULT = s; :}
| NEWLINE BEGIN nonempty_list_stmt:l END
    {: RESULT = new Sblock(l); :}
;

stmt ::=
  simple_stmt:s NEWLINE
    {: RESULT =  s; :}
| IF expr:c COLON suite:s
    {: RESULT =  new Sif(c, s, new Sblock()); :}
| IF expr:c COLON suite:s1 ELSE COLON suite:s2
    {: RESULT =  new Sif(c, s1, s2); :}
| FOR IDENT:x IN expr:e COLON suite:s
    {: RESULT =  new Sfor(x, e, s); :}
;

simple_stmt ::=
  RETURN expr:e
    {: RESULT =  new Sreturn(e); :}
| left_value:l EQUAL expr:e
    {: RESULT =  new Sassign(l, e); :}
| PRINT expr:e
    {: RESULT =  new Sprint(e); :}
| expr:e
    {: RESULT =  new Seval(e); :}
;

expr ::=
  CST:c
    {: RESULT = new Ecst(c); :}
| left_value:lv
    {: RESULT = new Eleft(lv); :}
| MINUS expr:e1
    {: RESULT = new Eunop(Unop.Uneg, e1); :}
  %prec UMINUS
| NOT expr:e1
    {: RESULT = new Eunop(Unop.Unot, e1); :}
| expr:e1 PLUS expr:e2
    {: RESULT = new Ebinop(Binop.Badd, e1, e2); :}
| expr:e1 MINUS expr:e2
    {: RESULT = new Ebinop(Binop.Bsub, e1, e2); :}
| expr:e1 TIMES expr:e2
    {: RESULT = new Ebinop(Binop.Bmul, e1, e2); :}
| expr:e1 DIV expr:e2
    {: RESULT = new Ebinop(Binop.Bdiv, e1, e2); :}
| expr:e1 MOD expr:e2
    {: RESULT = new Ebinop(Binop.Bmod, e1, e2); :}
| expr:e1 CMP:c expr:e2
    {: RESULT = new Ebinop(c, e1, e2); :}
| expr:e1 AND expr:e2
    {: RESULT = new Ebinop(Binop.Band, e1, e2); :}
| expr:e1 OR expr:e2
    {: RESULT = new Ebinop(Binop.Bor, e1, e2); :}
| IDENT:f LP list_comma_expr:l RP
    {: RESULT = new Ecall (f, l); :}
| LSQ list_comma_expr:l RSQ
    {: RESULT = new Elist(l); :}
| LP expr:e RP
    {: RESULT = e; :}
;

left_value ::=
  IDENT:id
    {: RESULT = new Lident(id); :}
| expr:e1 LSQ expr:e2 RSQ
    {: RESULT = new Lnth(e1, e2); :}
;

list_comma_expr ::=
  nonempty_list_comma_expr:l
   {: RESULT = l; :}
|
   {: RESULT = new LinkedList<Expr>(); :}
;

nonempty_list_comma_expr ::=
  expr:x COMMA nonempty_list_comma_expr:l
   {: l.addFirst(x); RESULT = l; :}
| expr:x
   {: LinkedList<Expr> l = new LinkedList<Expr>();
      l.add(x); RESULT = l; :}
;

list_comma_ident ::=
  nonempty_list_comma_ident:l
   {: RESULT = l; :}
|
   {: RESULT = new LinkedList<String>(); :}
;

nonempty_list_comma_ident ::=
  IDENT:x COMMA nonempty_list_comma_ident:l
   {: l.addFirst(x); RESULT = l; :}
| IDENT:x
   {: LinkedList<String> l = new LinkedList<String>();
      l.add(x); RESULT = l; :}
;

list_def ::=
  def:d list_def:l
   {: l.addFirst(d); RESULT = l; :}
|
   {: RESULT = new LinkedList<Def>(); :}
;

nonempty_list_stmt ::=
  stmt:s list_stmt:l
   {: l.addFirst(s); RESULT = l; :}
;

list_stmt ::=
  stmt:s list_stmt:l
   {: l.addFirst(s); RESULT = l; :}
|
   {: RESULT = new LinkedList<Stmt>(); :}
;

opt_newline ::=
  NEWLINE
|
;
</file>

<file path="Practice/mini-python-java/src/mini_python/parser.java">
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Mon Jan 09 21:31:35 CET 2017
//----------------------------------------------------

package mini_python;

import java_cup.runtime.*;
import java.util.*;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Mon Jan 09 21:31:35 CET 2017
  */
public class parser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\055\000\002\002\004\000\002\002\005\000\002\003" +
    "\011\000\002\014\004\000\002\014\006\000\002\013\004" +
    "\000\002\013\006\000\002\013\011\000\002\013\010\000" +
    "\002\012\004\000\002\012\005\000\002\012\004\000\002" +
    "\012\003\000\002\015\003\000\002\015\003\000\002\015" +
    "\004\000\002\015\004\000\002\015\005\000\002\015\005" +
    "\000\002\015\005\000\002\015\005\000\002\015\005\000" +
    "\002\015\005\000\002\015\005\000\002\015\005\000\002" +
    "\015\006\000\002\015\005\000\002\015\005\000\002\016" +
    "\003\000\002\016\006\000\002\020\003\000\002\020\002" +
    "\000\002\017\005\000\002\017\003\000\002\010\003\000" +
    "\002\010\002\000\002\011\005\000\002\011\003\000\002" +
    "\005\004\000\002\005\002\000\002\007\004\000\002\006" +
    "\004\000\002\006\002\000\002\004\003\000\002\004\002" +
    "" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\134\000\032\004\uffd5\005\uffd5\011\uffd5\012\uffd5\014" +
    "\uffd5\015\uffd5\016\uffd5\022\uffd5\023\uffd5\025\uffd5\034\006" +
    "\036\uffd5\001\002\000\004\002\136\001\002\000\030\004" +
    "\uffda\005\uffda\011\010\012\uffda\014\uffda\015\uffda\016\uffda" +
    "\022\uffda\023\uffda\025\uffda\036\uffda\001\002\000\030\004" +
    "\uffd6\005\uffd6\011\uffd6\012\uffd6\014\uffd6\015\uffd6\016\uffd6" +
    "\022\uffd6\023\uffd6\025\uffd6\036\uffd6\001\002\000\026\004" +
    "\030\005\025\012\045\014\037\015\034\016\042\022\036" +
    "\023\026\025\027\036\024\001\002\000\004\004\013\001" +
    "\002\000\030\004\uffda\005\uffda\011\010\012\uffda\014\uffda" +
    "\015\uffda\016\uffda\022\uffda\023\uffda\025\uffda\036\uffda\001" +
    "\002\000\026\004\uffdb\005\uffdb\012\uffdb\014\uffdb\015\uffdb" +
    "\016\uffdb\022\uffdb\023\uffdb\025\uffdb\036\uffdb\001\002\000" +
    "\004\023\014\001\002\000\006\004\017\024\uffde\001\002" +
    "\000\004\024\uffdf\001\002\000\004\024\022\001\002\000" +
    "\006\024\uffdc\027\020\001\002\000\004\004\017\001\002" +
    "\000\004\024\uffdd\001\002\000\004\031\023\001\002\000" +
    "\024\004\030\005\025\014\037\015\034\022\036\023\026" +
    "\025\027\034\040\036\024\001\002\000\016\004\030\005" +
    "\025\022\036\023\026\025\027\036\024\001\002\000\036" +
    "\006\ufff4\020\ufff4\021\ufff4\024\ufff4\025\ufff4\026\ufff4\027" +
    "\ufff4\031\ufff4\034\ufff4\035\ufff4\036\ufff4\037\ufff4\040\ufff4" +
    "\041\ufff4\001\002\000\016\004\030\005\025\022\036\023" +
    "\026\025\027\036\024\001\002\000\020\004\030\005\025" +
    "\022\036\023\026\025\027\026\uffe2\036\024\001\002\000" +
    "\042\006\uffe5\020\uffe5\021\uffe5\023\121\024\uffe5\025\uffe5" +
    "\026\uffe5\027\uffe5\030\uffe5\031\uffe5\034\uffe5\035\uffe5\036" +
    "\uffe5\037\uffe5\040\uffe5\041\uffe5\001\002\000\030\004\uffff" +
    "\005\uffff\011\uffff\012\uffff\014\uffff\015\uffff\016\uffff\022" +
    "\uffff\023\uffff\025\uffff\036\uffff\001\002\000\004\034\120" +
    "\001\002\000\030\006\ufff3\020\ufff3\021\ufff3\025\ufff3\030" +
    "\116\034\ufff3\035\ufff3\036\ufff3\037\ufff3\040\ufff3\041\ufff3" +
    "\001\002\000\016\004\030\005\025\022\036\023\026\025" +
    "\027\036\024\001\002\000\026\006\056\020\052\021\063" +
    "\025\054\034\ufff5\035\060\036\053\037\062\040\061\041" +
    "\057\001\002\000\016\004\030\005\025\022\036\023\026" +
    "\025\027\036\024\001\002\000\016\004\030\005\025\022" +
    "\036\023\026\025\027\036\024\001\002\000\004\032\041" +
    "\001\002\000\026\004\030\005\025\012\045\014\037\015" +
    "\034\016\042\022\036\023\026\025\027\036\024\001\002" +
    "\000\004\004\106\001\002\000\032\002\uffd7\004\030\005" +
    "\025\012\045\014\037\015\034\016\042\022\036\023\026" +
    "\025\027\033\uffd7\036\024\001\002\000\004\033\102\001" +
    "\002\000\016\004\030\005\025\022\036\023\026\025\027" +
    "\036\024\001\002\000\004\034\047\001\002\000\032\002" +
    "\ufffc\004\ufffc\005\ufffc\012\ufffc\014\ufffc\015\ufffc\016\ufffc" +
    "\022\ufffc\023\ufffc\025\ufffc\033\ufffc\036\ufffc\001\002\000" +
    "\036\006\ufff3\020\ufff3\021\ufff3\024\ufff3\025\ufff3\026\ufff3" +
    "\027\ufff3\031\ufff3\034\ufff3\035\ufff3\036\ufff3\037\ufff3\040" +
    "\ufff3\041\ufff3\001\002\000\026\006\056\020\052\021\063" +
    "\025\054\031\055\035\060\036\053\037\062\040\061\041" +
    "\057\001\002\000\016\004\030\005\025\022\036\023\026" +
    "\025\027\036\024\001\002\000\016\004\030\005\025\022" +
    "\036\023\026\025\027\036\024\001\002\000\016\004\030" +
    "\005\025\022\036\023\026\025\027\036\024\001\002\000" +
    "\024\004\030\005\025\014\037\015\034\022\036\023\026" +
    "\025\027\034\040\036\024\001\002\000\016\004\030\005" +
    "\025\022\036\023\026\025\027\036\024\001\002\000\016" +
    "\004\030\005\025\022\036\023\026\025\027\036\024\001" +
    "\002\000\016\004\030\005\025\022\036\023\026\025\027" +
    "\036\024\001\002\000\016\004\030\005\025\022\036\023" +
    "\026\025\027\036\024\001\002\000\016\004\030\005\025" +
    "\022\036\023\026\025\027\036\024\001\002\000\016\004" +
    "\030\005\025\022\036\023\026\025\027\036\024\001\002" +
    "\000\036\006\056\020\052\021\uffe9\024\uffe9\025\054\026" +
    "\uffe9\027\uffe9\031\uffe9\034\uffe9\035\060\036\053\037\062" +
    "\040\061\041\057\001\002\000\036\006\uffee\020\uffee\021" +
    "\uffee\024\uffee\025\054\026\uffee\027\uffee\031\uffee\034\uffee" +
    "\035\uffee\036\uffee\037\uffee\040\uffee\041\uffee\001\002\000" +
    "\036\006\uffed\020\uffed\021\uffed\024\uffed\025\054\026\uffed" +
    "\027\uffed\031\uffed\034\uffed\035\uffed\036\uffed\037\uffed\040" +
    "\uffed\041\uffed\001\002\000\036\006\ufff0\020\ufff0\021\ufff0" +
    "\024\ufff0\025\054\026\ufff0\027\ufff0\031\ufff0\034\ufff0\035" +
    "\ufff0\036\ufff0\037\062\040\061\041\057\001\002\000\036" +
    "\006\uffec\020\uffec\021\uffec\024\uffec\025\054\026\uffec\027" +
    "\uffec\031\uffec\034\uffec\035\uffec\036\uffec\037\uffec\040\uffec" +
    "\041\uffec\001\002\000\034\020\uffeb\021\uffeb\024\uffeb\025" +
    "\054\026\uffeb\027\uffeb\031\uffeb\034\uffeb\035\060\036\053" +
    "\037\062\040\061\041\057\001\002\000\034\002\ufffb\004" +
    "\ufffb\005\ufffb\012\ufffb\013\073\014\ufffb\015\ufffb\016\ufffb" +
    "\022\ufffb\023\ufffb\025\ufffb\033\ufffb\036\ufffb\001\002\000" +
    "\004\031\074\001\002\000\024\004\030\005\025\014\037" +
    "\015\034\022\036\023\026\025\027\034\040\036\024\001" +
    "\002\000\032\002\ufffa\004\ufffa\005\ufffa\012\ufffa\014\ufffa" +
    "\015\ufffa\016\ufffa\022\ufffa\023\ufffa\025\ufffa\033\ufffa\036" +
    "\ufffa\001\002\000\026\006\056\020\052\021\063\025\054" +
    "\026\077\035\060\036\053\037\062\040\061\041\057\001" +
    "\002\000\040\006\uffe4\020\uffe4\021\uffe4\024\uffe4\025\uffe4" +
    "\026\uffe4\027\uffe4\030\uffe4\031\uffe4\034\uffe4\035\uffe4\036" +
    "\uffe4\037\uffe4\040\uffe4\041\uffe4\001\002\000\036\006\uffef" +
    "\020\uffef\021\uffef\024\uffef\025\054\026\uffef\027\uffef\031" +
    "\uffef\034\uffef\035\uffef\036\uffef\037\062\040\061\041\057" +
    "\001\002\000\036\006\056\020\uffea\021\uffea\024\uffea\025" +
    "\054\026\uffea\027\uffea\031\uffea\034\uffea\035\060\036\053" +
    "\037\062\040\061\041\057\001\002\000\036\002\ufffd\004" +
    "\ufffd\005\ufffd\011\ufffd\012\ufffd\013\ufffd\014\ufffd\015\ufffd" +
    "\016\ufffd\022\ufffd\023\ufffd\025\ufffd\033\ufffd\036\ufffd\001" +
    "\002\000\032\002\uffd7\004\030\005\025\012\045\014\037" +
    "\015\034\016\042\022\036\023\026\025\027\033\uffd7\036" +
    "\024\001\002\000\006\002\uffd9\033\uffd9\001\002\000\006" +
    "\002\uffd8\033\uffd8\001\002\000\004\017\107\001\002\000" +
    "\016\004\030\005\025\022\036\023\026\025\027\036\024" +
    "\001\002\000\026\006\056\020\052\021\063\025\054\031" +
    "\111\035\060\036\053\037\062\040\061\041\057\001\002" +
    "\000\024\004\030\005\025\014\037\015\034\022\036\023" +
    "\026\025\027\034\040\036\024\001\002\000\032\002\ufff9" +
    "\004\ufff9\005\ufff9\012\ufff9\014\ufff9\015\ufff9\016\ufff9\022" +
    "\ufff9\023\ufff9\025\ufff9\033\ufff9\036\ufff9\001\002\000\026" +
    "\006\056\020\052\021\063\025\054\034\ufff8\035\060\036" +
    "\053\037\062\040\061\041\057\001\002\000\036\006\056" +
    "\020\ufff1\021\ufff1\024\ufff1\025\054\026\ufff1\027\ufff1\031" +
    "\ufff1\034\ufff1\035\060\036\053\037\062\040\061\041\057" +
    "\001\002\000\026\006\056\020\052\021\063\025\054\034" +
    "\ufff6\035\060\036\053\037\062\040\061\041\057\001\002" +
    "\000\016\004\030\005\025\022\036\023\026\025\027\036" +
    "\024\001\002\000\026\006\056\020\052\021\063\025\054" +
    "\034\ufff7\035\060\036\053\037\062\040\061\041\057\001" +
    "\002\000\036\002\ufffe\004\ufffe\005\ufffe\011\ufffe\012\ufffe" +
    "\013\ufffe\014\ufffe\015\ufffe\016\ufffe\022\ufffe\023\ufffe\025" +
    "\ufffe\033\ufffe\036\ufffe\001\002\000\020\004\030\005\025" +
    "\022\036\023\026\024\uffe2\025\027\036\024\001\002\000" +
    "\004\024\127\001\002\000\006\024\uffe3\026\uffe3\001\002" +
    "\000\032\006\056\020\052\021\063\024\uffe0\025\054\026" +
    "\uffe0\027\125\035\060\036\053\037\062\040\061\041\057" +
    "\001\002\000\016\004\030\005\025\022\036\023\026\025" +
    "\027\036\024\001\002\000\006\024\uffe1\026\uffe1\001\002" +
    "\000\036\006\uffe8\020\uffe8\021\uffe8\024\uffe8\025\uffe8\026" +
    "\uffe8\027\uffe8\031\uffe8\034\uffe8\035\uffe8\036\uffe8\037\uffe8" +
    "\040\uffe8\041\uffe8\001\002\000\004\026\131\001\002\000" +
    "\036\006\uffe7\020\uffe7\021\uffe7\024\uffe7\025\uffe7\026\uffe7" +
    "\027\uffe7\031\uffe7\034\uffe7\035\uffe7\036\uffe7\037\uffe7\040" +
    "\uffe7\041\uffe7\001\002\000\026\006\056\020\052\021\063" +
    "\024\133\025\054\035\060\036\053\037\062\040\061\041" +
    "\057\001\002\000\036\006\uffe6\020\uffe6\021\uffe6\024\uffe6" +
    "\025\uffe6\026\uffe6\027\uffe6\031\uffe6\034\uffe6\035\uffe6\036" +
    "\uffe6\037\uffe6\040\uffe6\041\uffe6\001\002\000\036\006\ufff2" +
    "\020\ufff2\021\ufff2\024\ufff2\025\054\026\ufff2\027\ufff2\031" +
    "\ufff2\034\ufff2\035\ufff2\036\ufff2\037\ufff2\040\ufff2\041\ufff2" +
    "\001\002\000\004\002\000\001\002\000\004\002\001\001" +
    "\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\134\000\006\002\003\004\004\001\001\000\002\001" +
    "\001\000\006\003\010\005\006\001\001\000\002\001\001" +
    "\000\014\007\134\012\045\013\042\015\034\016\032\001" +
    "\001\000\002\001\001\000\006\003\010\005\011\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\010\015\011" +
    "\014\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\011\020\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\012\031\014\030\015\034\016\032" +
    "\001\001\000\006\015\133\016\047\001\001\000\002\001" +
    "\001\000\006\015\131\016\047\001\001\000\012\015\123" +
    "\016\047\017\122\020\127\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\015\114\016\047\001\001\000\002\001\001\000\006\015" +
    "\113\016\047\001\001\000\006\015\112\016\047\001\001" +
    "\000\002\001\001\000\014\007\043\012\045\013\042\015" +
    "\034\016\032\001\001\000\002\001\001\000\014\006\103" +
    "\012\045\013\102\015\034\016\032\001\001\000\002\001" +
    "\001\000\006\015\050\016\047\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\015\100\016\047\001\001\000\006\015\077\016\047" +
    "\001\001\000\006\015\075\016\047\001\001\000\012\012" +
    "\031\014\071\015\034\016\032\001\001\000\006\015\070" +
    "\016\047\001\001\000\006\015\067\016\047\001\001\000" +
    "\006\015\066\016\047\001\001\000\006\015\065\016\047" +
    "\001\001\000\006\015\064\016\047\001\001\000\006\015" +
    "\063\016\047\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\012\031\014\074\015\034\016\032\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\006\104\012" +
    "\045\013\102\015\034\016\032\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\015\107\016" +
    "\047\001\001\000\002\001\001\000\012\012\031\014\111" +
    "\015\034\016\032\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\015\116" +
    "\016\047\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\015\123\016\047\017\122\020\121\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\015" +
    "\123\016\047\017\125\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // opt_newline ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opt_newline",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // opt_newline ::= NEWLINE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opt_newline",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // list_stmt ::= 
            {
              LinkedList<Stmt> RESULT =null;
		 RESULT = new LinkedList<Stmt>(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("list_stmt",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // list_stmt ::= stmt list_stmt 
            {
              LinkedList<Stmt> RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Stmt s = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LinkedList<Stmt> l = (LinkedList<Stmt>)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 l.addFirst(s); RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("list_stmt",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // nonempty_list_stmt ::= stmt list_stmt 
            {
              LinkedList<Stmt> RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Stmt s = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LinkedList<Stmt> l = (LinkedList<Stmt>)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 l.addFirst(s); RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("nonempty_list_stmt",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // list_def ::= 
            {
              LinkedList<Def> RESULT =null;
		 RESULT = new LinkedList<Def>(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("list_def",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // list_def ::= def list_def 
            {
              LinkedList<Def> RESULT =null;
		int dleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int dright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Def d = (Def)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LinkedList<Def> l = (LinkedList<Def>)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 l.addFirst(d); RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("list_def",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // nonempty_list_comma_ident ::= IDENT 
            {
              LinkedList<String> RESULT =null;
		int xleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int xright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String x = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 LinkedList<String> l = new LinkedList<String>();
      l.add(x); RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("nonempty_list_comma_ident",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // nonempty_list_comma_ident ::= IDENT COMMA nonempty_list_comma_ident 
            {
              LinkedList<String> RESULT =null;
		int xleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String x = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LinkedList<String> l = (LinkedList<String>)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 l.addFirst(x); RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("nonempty_list_comma_ident",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // list_comma_ident ::= 
            {
              LinkedList<String> RESULT =null;
		 RESULT = new LinkedList<String>(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("list_comma_ident",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // list_comma_ident ::= nonempty_list_comma_ident 
            {
              LinkedList<String> RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LinkedList<String> l = (LinkedList<String>)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("list_comma_ident",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // nonempty_list_comma_expr ::= expr 
            {
              LinkedList<Expr> RESULT =null;
		int xleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int xright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr x = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 LinkedList<Expr> l = new LinkedList<Expr>();
      l.add(x); RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("nonempty_list_comma_expr",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // nonempty_list_comma_expr ::= expr COMMA nonempty_list_comma_expr 
            {
              LinkedList<Expr> RESULT =null;
		int xleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr x = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LinkedList<Expr> l = (LinkedList<Expr>)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 l.addFirst(x); RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("nonempty_list_comma_expr",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // list_comma_expr ::= 
            {
              LinkedList<Expr> RESULT =null;
		 RESULT = new LinkedList<Expr>(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("list_comma_expr",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // list_comma_expr ::= nonempty_list_comma_expr 
            {
              LinkedList<Expr> RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LinkedList<Expr> l = (LinkedList<Expr>)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = l; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("list_comma_expr",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // left_value ::= expr LSQ expr RSQ 
            {
              LeftValue RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = new Lnth(e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("left_value",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // left_value ::= IDENT 
            {
              LeftValue RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Lident(id); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("left_value",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // expr ::= LP expr RP 
            {
              Expr RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = e; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // expr ::= LSQ list_comma_expr RSQ 
            {
              Expr RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		LinkedList<Expr> l = (LinkedList<Expr>)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = new Elist(l); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // expr ::= IDENT LP list_comma_expr RP 
            {
              Expr RESULT =null;
		int fleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int fright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String f = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		LinkedList<Expr> l = (LinkedList<Expr>)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = new Ecall (f, l); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // expr ::= expr OR expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Bor, e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // expr ::= expr AND expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Band, e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // expr ::= expr CMP expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Binop c = (Binop)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ebinop(c, e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // expr ::= expr MOD expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Bmod, e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // expr ::= expr DIV expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Bdiv, e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // expr ::= expr TIMES expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Bmul, e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // expr ::= expr MINUS expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Bsub, e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // expr ::= expr PLUS expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Badd, e1, e2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // expr ::= NOT expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Eunop(Unop.Unot, e1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // expr ::= MINUS expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Eunop(Unop.Uneg, e1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // expr ::= left_value 
            {
              Expr RESULT =null;
		int lvleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int lvright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LeftValue lv = (LeftValue)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Eleft(lv); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // expr ::= CST 
            {
              Expr RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Constant c = (Constant)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Ecst(c); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("expr",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // simple_stmt ::= expr 
            {
              Stmt RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT =  new Seval(e); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("simple_stmt",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // simple_stmt ::= PRINT expr 
            {
              Stmt RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT =  new Sprint(e); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("simple_stmt",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // simple_stmt ::= left_value EQUAL expr 
            {
              Stmt RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		LeftValue l = (LeftValue)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT =  new Sassign(l, e); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("simple_stmt",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // simple_stmt ::= RETURN expr 
            {
              Stmt RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT =  new Sreturn(e); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("simple_stmt",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // stmt ::= FOR IDENT IN expr COLON suite 
            {
              Stmt RESULT =null;
		int xleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String x = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Stmt s = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT =  new Sfor(x, e, s); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // stmt ::= IF expr COLON suite ELSE COLON suite 
            {
              Stmt RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Expr c = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int s1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int s1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Stmt s1 = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int s2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int s2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Stmt s2 = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT =  new Sif(c, s1, s2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // stmt ::= IF expr COLON suite 
            {
              Stmt RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Expr c = (Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Stmt s = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT =  new Sif(c, s, new Sblock()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // stmt ::= simple_stmt NEWLINE 
            {
              Stmt RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Stmt s = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT =  s; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("stmt",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // suite ::= NEWLINE BEGIN nonempty_list_stmt END 
            {
              Stmt RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		LinkedList<Stmt> l = (LinkedList<Stmt>)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = new Sblock(l); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("suite",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // suite ::= simple_stmt NEWLINE 
            {
              Stmt RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Stmt s = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = s; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("suite",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // def ::= DEF IDENT LP list_comma_ident RP COLON suite 
            {
              Def RESULT =null;
		int fleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int fright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String f = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int xleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		LinkedList<String> x = (LinkedList<String>)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Stmt s = (Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Def(f, x, s); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("def",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // file ::= opt_newline list_def nonempty_list_stmt 
            {
              File RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		LinkedList<Def> l = (LinkedList<Def>)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		LinkedList<Stmt> b = (LinkedList<Stmt>)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new File(l, new Sblock(b)); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("file",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= file EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		File start_val = (File)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}
</file>

<file path="Practice/mini-python-java/src/mini_python/sym.java">
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Mon Jan 09 21:31:35 CET 2017
//----------------------------------------------------

package mini_python;

/** CUP generated class containing symbol constants. */
public class sym {
  /* terminals */
  public static final int TIMES = 29;
  public static final int MOD = 31;
  public static final int AND = 14;
  public static final int ELSE = 9;
  public static final int IDENT = 2;
  public static final int PLUS = 27;
  public static final int OR = 15;
  public static final int EQUAL = 22;
  public static final int LP = 17;
  public static final int IN = 13;
  public static final int RP = 18;
  public static final int NOT = 16;
  public static final int END = 25;
  public static final int RETURN = 10;
  public static final int DECINDENT = 6;
  public static final int IF = 8;
  public static final int COLON = 23;
  public static final int BEGIN = 24;
  public static final int COMMA = 21;
  public static final int CST = 3;
  public static final int LSQ = 19;
  public static final int EOF = 0;
  public static final int CMP = 4;
  public static final int DEF = 7;
  public static final int DIV = 30;
  public static final int MINUS = 28;
  public static final int NEWLINE = 26;
  public static final int INCINDENT = 5;
  public static final int PRINT = 11;
  public static final int error = 1;
  public static final int FOR = 12;
  public static final int RSQ = 20;
  public static final int UMINUS = 32;
}
</file>

<file path="Practice/mini-python-java/src/mini_python/Syntax.java">
package mini_python;
import java.util.LinkedList;

/* Syntaxe abstraite de Mini-Python */

/* opérateurs unaires et binaires */

enum Unop { Uneg, Unot }

enum Binop {
  Badd , Bsub , Bmul , Bdiv , Bmod,
  Beq , Bneq , Blt , Ble , Bgt , Bge, // comparaison structurelle
  Band , Bor // paresseux
}

/* constantes litérales */

abstract class Constant {
	static final Cnone None = new Cnone();
	abstract Value interp(); // la valeur d'une constante
}	

class Cnone extends Constant {
	@Override
	Value interp() { return new Vnone(); }
}
class Cbool extends Constant {
	final boolean b;
	Cbool(boolean b) {
		this.b = b;
	}
	@Override
	Value interp() { return new Vbool(this.b); }
}
class Cstring extends Constant {
	final String s;
	Cstring(String s) {
		this.s = s;
	}
	@Override
	Value interp() { return new Vstring(this.s); }
}
class Cint extends Constant {
	final int i; /* en Python les entiers sont en réalité de précision
                   arbitraire ; on simplifie ici */
	Cint(int i) {
		this.i = i;
	}
	@Override
	Value interp() { return new Vint(this.i); }
}

/* expressions */

abstract class Expr {
	abstract Value accept(Interpreter v);
}
class Ecst extends Expr {
	final Constant c;
	Ecst(Constant c) {
		this.c = c;
	}
	@Override
	Value accept(Interpreter v) { return v.interp(this); }
}
class Ebinop extends Expr {
	final Binop op;
	final Expr e1, e2;
	Ebinop(Binop op, Expr e1, Expr e2) {
		super();
		this.op = op;
		this.e1 = e1;
		this.e2 = e2;
	}
	@Override
	Value accept(Interpreter v) { return v.interp(this); }
}
class Eunop extends Expr {
	final Unop op;
	final Expr e;
	Eunop(Unop op, Expr e) {
		super();
		this.op = op;
		this.e = e;
	}
	@Override
	Value accept(Interpreter v) { return v.interp(this); }
}
class Ecall extends Expr {
	final String f;
	final LinkedList<Expr> l;
	Ecall(String f, LinkedList<Expr> l) {
		super();
		this.f = f;
		this.l = l;
	}
	@Override
	Value accept(Interpreter v) { return v.interp(this); }
}
class Elist extends Expr {
	final LinkedList<Expr> l;

	Elist(LinkedList<Expr> l) {
		super();
		this.l = l;
	}
	@Override
	Value accept(Interpreter v) { return v.interp(this); }
}
class Eleft extends Expr {
	final LeftValue lv;

	Eleft(LeftValue lv) {
		super();
		this.lv = lv;
	}
	@Override
	Value accept(Interpreter v) { return v.interp(this); }
}

/* valeur gauche */

abstract class LeftValue {
	abstract Value accept(Interpreter v); // as a right value
	abstract void assign(Interpreter v, Expr e);
}
class Lident extends LeftValue {
	final String s;

	Lident(String s) {
		super();
		this.s = s;
	}

	@Override
	Value accept(Interpreter v) { return v.interp(this); }
	@Override
	void assign(Interpreter v, Expr e) { v.assign(this, e); }
}
class Lnth extends LeftValue {
	final Expr e1, e2;
	Lnth(Expr e1, Expr e2) {
		super();
		this.e1 = e1;
		this.e2 = e2;
	}
	@Override
	Value accept(Interpreter v) { return v.interp(this); }
	@Override
	void assign(Interpreter v, Expr e) { v.assign(this, e); }
}

/* instruction */

abstract class Stmt {
	abstract void accept(Interpreter v) throws Return;
}
class Sif extends Stmt {
	final Expr e;
	final Stmt s1, s2;
	Sif(Expr e, Stmt s1, Stmt s2) {
		super();
		this.e = e;
		this.s1 = s1;
		this.s2 = s2;
	}
	@Override
	void accept(Interpreter v) throws Return { v.interp(this); }
}
class Sreturn extends Stmt {
	final Expr e;

	Sreturn(Expr e) {
		super();
		this.e = e;
	}
	@Override
	void accept(Interpreter v) throws Return { v.interp(this); }
}
class Sassign extends Stmt {
	final LeftValue lv;
	final Expr e;
	Sassign(LeftValue lv, Expr e) {
		super();
		this.lv = lv;
		this.e = e;
	}
	@Override
	void accept(Interpreter v) throws Return { v.interp(this); }
}
class Sprint extends Stmt {
	final Expr e;

	Sprint(Expr e) {
		super();
		this.e = e;
	}
	@Override
	void accept(Interpreter v) throws Return { v.interp(this); }
}
class Sblock extends Stmt {
	final LinkedList<Stmt> l;
	Sblock() {
		this.l = new LinkedList<Stmt>();
	}
	Sblock(LinkedList<Stmt> l) {
		super();
		this.l = l;
	}
	@Override
	void accept(Interpreter v) throws Return { v.interp(this); }
}
class Sfor extends Stmt {
	final String x;
	final Expr e;
	final Stmt s;
	Sfor(String x, Expr e, Stmt s) {
		super();
		this.x = x;
		this.e = e;
		this.s = s;
	}
	@Override
	void accept(Interpreter v) throws Return { v.interp(this); }
}
class Seval extends Stmt {
	final Expr e;

	Seval(Expr e) {
		super();
		this.e = e;
	}
	@Override
	void accept(Interpreter v) throws Return { v.interp(this); }
}

/* définition de fonction */

class Def {
	final String f;
	final LinkedList<String> l; // arguments formels
	final Stmt s;
	Def(String f, LinkedList<String> l, Stmt s) {
		super();
		this.f = f; // the functions name
		this.l = l; // arguments it has
		this.s = s; // what the function do
	}
}

class File {
	final LinkedList<Def> l;
	final Stmt s;
	File(LinkedList<Def> l, Stmt s) {
		super();
		this.l = l;
		this.s = s;
	}
}

/* un interprète (voir Interp.java) aura l'interface suivante */

interface Interpreter {
	// l'interprétation d'une expression est une valeur
	Value interp(Ecst e);
	Value interp(Ebinop e);
	Value interp(Eunop e);
	Value interp(Ecall e);
	Value interp(Elist e);
	Value interp(Eleft e);
	Value interp(Lident lv);
	Value interp(Lnth lv);
	// affectation
	void assign(Lident lv, Expr e);
	void assign(Lnth lv, Expr e);
	// l'interprétation d'une instruction ne renvoie rien
	// mais peut faire des effets de bord (affectations)
	// et lever l'exception Return
	void interp(Sif s) throws Return;
	void interp(Sreturn s) throws Return;
	void interp(Sassign s) throws Return;
	void interp(Sprint s) throws Return;
	void interp(Sblock s) throws Return;
	void interp(Sfor s) throws Return;
	void interp(Seval s) throws Return;
}
</file>

<file path="Practice/mini-python-java/test.py">
def fibaux(a, b, k):
    if k == 0:
        return a
    else:
        return fibaux(b, a+b, k-1)

def fib(n):
    return fibaux(0, 1, n)

print "quelques valeurs de la suite de Fibonacci :"
for n in [0, 1, 11, 42]:
    print fib(n)
</file>

<file path="Practice/mini-python-java/tests/bad/add1.py">
print 1 + "foo"
</file>

<file path="Practice/mini-python-java/tests/bad/bool1.py">
print 1<2 and len(1)
</file>

<file path="Practice/mini-python-java/tests/bad/bool2.py">
print 1>2 or len(1)
</file>

<file path="Practice/mini-python-java/tests/bad/for1.py">
for x in 42:
    print x
</file>

<file path="Practice/mini-python-java/tests/bad/len1.py">
print len(1)
</file>

<file path="Practice/mini-python-java/tests/bad/range1.py">
x = range([])
</file>

<file path="Practice/mini-python-java/tests/bad/range2.py">
x = range(7)
print x[7]
</file>

<file path="Practice/mini-python-java/tests/good/arith1.py">
print 1+2
</file>

<file path="Practice/mini-python-java/tests/good/arith2.py">
print 2*3
</file>

<file path="Practice/mini-python-java/tests/good/arith3.py">
print 17/2
</file>

<file path="Practice/mini-python-java/tests/good/arith4.py">
print 19 % 4
</file>

<file path="Practice/mini-python-java/tests/good/bool1.py">
print 1<2
</file>

<file path="Practice/mini-python-java/tests/good/bool2.py">
print 1==2
</file>

<file path="Practice/mini-python-java/tests/good/bool3.py">
print 1>2 and len(1)
</file>

<file path="Practice/mini-python-java/tests/good/bool4.py">
print 1<2 or len(1)
</file>

<file path="Practice/mini-python-java/tests/good/bool5.py">
print True
print False
print True and False
print True or False
</file>

<file path="Practice/mini-python-java/tests/good/bool6.py">
print True == False
print True != False
print True <  False
print True <= False
print True >  False
print True >= False
</file>

<file path="Practice/mini-python-java/tests/good/compare_list1.py">
# true
print []     == []
print []     <  [1]
print [1]    != [2]
print [2, 1] <  [4, 1]
print [4]    <= [4, 6]
# false
print [5]    <= []
</file>

<file path="Practice/mini-python-java/tests/good/compare_list2.py">
print [1, [2,3], 4] != [1, 2, 3]
print [1, [2,3], 4] == [1, [2,3], 3]
print [1, [2,3], 4] == [1, [2,3], 4]
x = 1
print [x,x,x] == [x,[x],x]
</file>

<file path="Practice/mini-python-java/tests/good/compare_string1.py">
# true
print "" == ""
print "" < "a"
print "b" < "c"
print "ab" >= "ab"
print "" != "a"
print "abc" == "abc"
# false
print "a" > "b"
print "" > "b"
print "abc" <= "ab"
</file>

<file path="Practice/mini-python-java/tests/good/concat1.py">
print "foo" + "bar"
</file>

<file path="Practice/mini-python-java/tests/good/concat2.py">
def make(n):
    if n == 0: 
        return ""
    else:
        return "a" + make(n-1)

print make(3)
</file>

<file path="Practice/mini-python-java/tests/good/eval1.py">
l = [1,2,3]
for x in l:
    l = []
    print x
</file>

<file path="Practice/mini-python-java/tests/good/fib.py">
# zéro, une ou plusieurs définitions de fonctions au début du fichier
def fibaux(a, b, k):
    if k == 0:
        return a
    else:
        return fibaux(b, a+b, k-1)

def fib(n):
    return fibaux(0, 1, n)

# une ou plusieurs instructions à la fin du fichier
print "quelques valeurs de la suite de Fibonacci :"
for n in [0, 1, 11, 42]:
    print fib(n)
</file>

<file path="Practice/mini-python-java/tests/good/list1.py">
x = [111,222,333]
print x[1]
</file>

<file path="Practice/mini-python-java/tests/good/list2.py">
x = [0,[0,1,42],1]
print x[1][2]
</file>

<file path="Practice/mini-python-java/tests/good/loop1.py">
def loop(x):
    print x
    if x < 3: loop(x+1)

loop(0)
</file>

<file path="Practice/mini-python-java/tests/good/mandelbrot.py">
# arithmetique de virgule fixe
# precision q = 8192 i.e. 13 bits pour la partie decimale

def add(x, y): 
    return x + y
def sub(x, y): 
    return x - y
def mul(x, y): 
    t = x * y
    return (t + 8192 / 2) / 8192
def div(x, y):
    t = x * 8192
    return (t + y / 2) / y
def of_int(x): 
    return x * 8192

def iter(n, a, b, xn, yn):
    if n == 100: return 1
    xn2 = mul(xn, xn)
    yn2 = mul(yn, yn)
    if add(xn2, yn2) > of_int(4): return 0
    return iter(n+1, a, b, add(sub(xn2, yn2), a), add(mul(of_int(2), mul(xn, yn)), b))

def inside(x, y):
    return iter(0, x, y, of_int(0), of_int(0))

def main():
    xmin = of_int(-2)
    xmax = of_int(1)
    steps = 40
    deltax = div(sub(xmax, xmin), of_int(2 * steps))
    ymin = of_int(-1)
    ymax = of_int(1)
    deltay = div(sub(ymax, ymin), of_int(steps))
    for i in range(steps):
        y = add(ymin, mul(of_int(i), deltay))
        s = ""
        for j in range(2 * steps):
            x = add(xmin, mul(of_int(j), deltax))
            if inside(x, y): s = s + "0"
            else: s = s + "1"
        print s

main()
</file>

<file path="Practice/mini-python-java/tests/good/none.py">
def foo():
    x = 1
print foo()
print foo() == foo()
print foo() != foo()
print foo() <  foo()
print foo() <= foo()
print foo() >  foo()
print foo() >= foo()
</file>

<file path="Practice/mini-python-java/tests/good/pascal.py">
# triangle de Pascal modulo 7

def print_row(r, i):
    s = ""
    for j in range(i+1):
        if r[j]:
            s = "*" + s
        else:
            s = "0" + s
    print s

def compute_row(r, j):
    v = 0
    if j == 0:
        v = 1
    else:
        v = (r[j] + r[j-1]) % 7
    r[j] = v
    if j > 0: compute_row(r, j-1)

def main():
    h = 40
    r = range(h+1)
    for i in range(h):
        r[i] = 0
        compute_row(r, i)
        print_row(r, i)

main ()
</file>

<file path="Practice/mini-python-java/tests/good/primes1.py">
def prefix(n, l):
    r = range(n)
    for i in r:
        r[i] = l[i]
    return r

def range2(n1, n2):
    r = range(n2 - n1 + 1)
    i = 0
    for x in r:
        r[i] = n1
        n1 = n1 + 1
        i = i + 1
    return r

def filter_out(p, l):
    i = 0
    for x in l:
        if x > p and x % p == 0:
            l[i] = 0
        i = i + 1

def primes(n):
    l = range2(2, n)
    nb = 0
    for x in l:
        if x > 0:
            l[nb] = x
            nb = nb + 1
            filter_out(x, l)
    return prefix(nb, l)

print primes(100)
</file>

<file path="Practice/mini-python-java/tests/good/print_int.py">
print 42
</file>

<file path="Practice/mini-python-java/tests/good/print_list1.py">
print range(3)
</file>

<file path="Practice/mini-python-java/tests/good/print_list2.py">
print [1, 2, 3]
</file>

<file path="Practice/mini-python-java/tests/good/print_list3.py">
print [1, [2, 3], 4]
</file>

<file path="Practice/mini-python-java/tests/good/print_string.py">
print "foo"
</file>

<file path="Practice/mini-python-java/tests/good/range1.py">
print len(range(7))
</file>

<file path="Practice/mini-python-java/tests/good/range2.py">
x = range(7)
print x[0]
print x[6]
</file>

<file path="Practice/mini-python-java/tests/good/range3.py">
l = range(7)
for x in l:
    print x
</file>

<file path="Practice/mini-python-java/tests/good/str1.py">
def str(i):
    l = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]
    if i < 10:
        return l[i]
    else:
        return str(i / 10) + l[i % 10]

print str(0)    
print str(42)
print str(1024)
</file>

<file path="Practice/mini-python-java/tests/good/var1.py">
x = 42
print x
</file>

<file path="Practice/mini-python-java/tests/good/var2.py">
x = "foo"
print x
</file>

<file path="Practice/mini-python/.depend">
interp.cmo : ast.cmi interp.cmi
interp.cmx : ast.cmi interp.cmi
lexer.cmo : parser.cmi ast.cmi
lexer.cmx : parser.cmx ast.cmi
main.cmo : parser.cmi lexer.cmo interp.cmi
main.cmx : parser.cmx lexer.cmx interp.cmx
parser.cmo : ast.cmi parser.cmi
parser.cmx : ast.cmi parser.cmi
ast.cmi :
interp.cmi : ast.cmi
parser.cmi : ast.cmi
</file>

<file path="Practice/mini-python/ast.mli">
(* Arbres de syntaxe abstraite de Mini-Python *)

type ident = string

type unop =
  | Uneg | Unot

type binop =
  | Badd | Bsub | Bmul | Bdiv | Bmod
  | Beq | Bneq | Blt | Ble | Bgt | Bge (* comparaison structurelle *)
  | Band | Bor (* paresseux *)

type constant =
  | Cnone
  | Cbool of bool
  | Cstring of string
  | Cint of int (* en Python les entiers sont en réalité de précision
                   arbitraire; on simplifie ici *)

type expr =
  | Ecst of constant
  | Ebinop of binop * expr * expr
  | Eunop of unop * expr
  | Ecall of ident * expr list
  | Elist of expr list
  | Eleft of left_value

and left_value =
  | Lident of ident
  | Lnth of expr * expr

and stmt =
  | Sif of expr * stmt * stmt
  | Sreturn of expr
  | Sassign of left_value * expr
  | Sprint of expr
  | Sblock of stmt list
  | Sfor of ident * expr * stmt
  | Seval of expr

and def = ident * ident list * stmt

and file = def list * stmt
</file>

<file path="Practice/mini-python/interp.ml">
open Ast
open Format

(* Exception levée pour signaler une erreur pendant l'interprétation *)
exception Error of string
let error s = raise (Error s)

(* Les valeurs de Mini-Python

   - une différence notable avec Python : on
     utilise ici le type int alors que les entiers de Python sont de
     précision arbitraire ; on pourrait utiliser le module Big_int d'OCaml
     mais on choisit la facilité
   - ce que Python appelle une liste est en réalité un tableau
     redimensionnable ; dans le fragment considéré ici, il n'y a pas
     de possibilité d'en modifier la longueur, donc un simple tableau OCaml
     convient *)
type value =
  | Vnone
  | Vbool of bool
  | Vint of int
  | Vstring of string
  | Vlist of value array

(* Affichage d'une valeur sur la sortie standard *)
let rec print_value = function
  | Vnone -> printf "None"
  | Vbool true -> printf "True"
  | Vbool false -> printf "False"
  | Vint n -> printf "%d" n
  | Vstring s -> printf "%s" s
  | Vlist a ->
    let n = Array.length a in
    printf "[";
    for i = 0 to n-1 do print_value a.(i); if i < n-1 then printf ", " done;
    printf "]"

(* Interprétation booléenne d'une valeur

   En Python, toute valeur peut être utilisée comme un booléen : None,
   la liste vide, la chaîne vide et l'entier 0 sont considérés comme
   False et toute autre valeurs comme True *)

let is_false v = assert false (* à compléter (question 2) *)

let is_true v = assert false (* à compléter (question 2) *)

(* Les fonctions sont ici uniquement globales *)

let functions = (Hashtbl.create 17 : (string, ident list * stmt) Hashtbl.t)

(* L'instruction 'return' de Python est interprétée à l'aide d'une exception *)

exception Return of value

(* Les variables locales (paramètres de fonctions et variables introduites
   par des affectations) sont stockées dans une table de hachage passée en
   arguments aux fonctions suivantes sous le nom 'ctx' *)

type ctx = (string, value) Hashtbl.t

(* Interprétation d'une expression (renvoie une valeur) *)

let rec expr ctx = function
  | Ecst Cnone ->
      Vnone
  | Ecst (Cstring s) ->
      Vstring s
  (* arithmétique *)
  | Ecst (Cint n) ->
      assert false (* à compléter (question 1) *)
  | Ebinop (Badd | Bsub | Bmul | Bdiv | Bmod |
            Beq | Bneq | Blt | Ble | Bgt | Bge as op, e1, e2) ->
      let v1 = expr ctx e1 in
      let v2 = expr ctx e2 in
      begin match op, v1, v2 with
        | Badd, Vint n1, Vint n2 -> assert false (* à compléter (question 1) *)
        | Bsub, Vint n1, Vint n2 -> assert false (* à compléter (question 1) *)
        | Bmul, Vint n1, Vint n2 -> assert false (* à compléter (question 1) *)
        | Bdiv, Vint n1, Vint n2 -> assert false (* à compléter (question 1) *)
        | Bmod, Vint n1, Vint n2 -> assert false (* à compléter (question 1) *)
        | Beq, _, _  -> assert false (* à compléter (question 2) *)
        | Bneq, _, _ -> assert false (* à compléter (question 2) *)
        | Blt, _, _  -> assert false (* à compléter (question 2) *)
        | Ble, _, _  -> assert false (* à compléter (question 2) *)
        | Bgt, _, _  -> assert false (* à compléter (question 2) *)
        | Bge, _, _  -> assert false (* à compléter (question 2) *)
        | Badd, Vstring s1, Vstring s2 ->
            assert false (* à compléter (question 3) *)
        | Badd, Vlist l1, Vlist l2 ->
            assert false (* à compléter (question 5) *)
        | _ -> error "unsupported operand types"
      end
  | Eunop (Uneg, e1) ->
      assert false (* à compléter (question 1) *)
  (* booléens *)
  | Ecst (Cbool b) ->
      assert false (* à compléter (question 2) *)
  | Ebinop (Band, e1, e2) ->
      assert false (* à compléter (question 2) *)
  | Ebinop (Bor, e1, e2) ->
      assert false (* à compléter (question 2) *)
  | Eunop (Unot, e1) ->
      assert false (* à compléter (question 2) *)
  (* appel de fonction *)
  | Ecall ("len", [e1]) ->
      assert false (* à compléter (question 5) *)
  | Ecall ("range", [e1]) ->
      assert false (* à compléter (question 5) *)
  | Ecall (f, el) ->
      assert false (* à compléter (question 4) *)
  | Eleft (Lident id) ->
      assert false (* à compléter (question 3) *)
  | Elist el ->
      assert false (* à compléter (question 5) *)
  | Eleft (Lnth (e1, e2)) ->
      assert false (* à compléter (question 5) *)

(* interprétation d'une instruction ; ne renvoie rien *)

and stmt ctx = function
  | Seval e ->
      ignore (expr ctx e)
  | Sprint e ->
      print_value (expr ctx e); printf "@."
  | Sblock bl ->
      block ctx bl
  | Sif (e, s1, s2) ->
      assert false (* à compléter (question 2) *)
  | Sassign (Lident id, e1) ->
      assert false (* à compléter (question 3) *)
  | Sreturn e ->
      assert false (* à compléter (question 4) *)
  | Sfor (x, e, s) ->
      assert false (* à compléter (question 5) *)
  | Sassign (Lnth (e1, e2), e3) ->
      assert false (* à compléter (question 5) *)

(* interprétation d'un bloc i.e. d'une séquence d'instructions *)

and block ctx = function
  | [] -> ()
  | s :: sl -> stmt ctx s; block ctx sl

(* interprétation d'un fichier *)

let file (fl, s) =
  List.iter
    (fun (f,args,body) -> Hashtbl.add functions f (args, body)) fl;
  stmt (Hashtbl.create 17) s
</file>

<file path="Practice/mini-python/lexer.mll">
(* Analyseur lexical pour Mini-Python *)

{
  open Lexing
  open Ast
  open Parser

  exception Lexing_error of string

  let kwd_tbl = ["def", DEF; "if", IF; "else", ELSE;
		 "return", RETURN; "print", PRINT;
		 "for", FOR; "in", IN;
		 "and", AND; "or", OR; "not", NOT;
		 "True", CST (Cbool true);
		 "False", CST (Cbool false);
		 "None", CST Cnone;]
  let id_or_kwd s = try List.assoc s kwd_tbl with _ -> IDENT s

  let newline lexbuf =
    let pos = lexbuf.lex_curr_p in
    lexbuf.lex_curr_p <-
      { pos with pos_lnum = pos.pos_lnum + 1; pos_bol = pos.pos_cnum }

  let string_buffer = Buffer.create 1024

  let stack = ref [0]  (* pile d'indentation *)
  let rec unindent n = match !stack with
    | m :: _ when m = n -> []
    | m :: st when m > n -> stack := st; END :: unindent n
    | _ -> raise (Lexing_error "bad indentation")
}

let letter = ['a'-'z' 'A'-'Z']
let digit = ['0'-'9']
let ident = letter (letter | digit | '_')*
let integer = ['0'-'9']+
let space = ' ' | '\t'
let comment = "#" [^'\n']*

rule next_tokens = parse
  | '\n'
      { newline lexbuf;
	let n = indentation lexbuf in
	match !stack with
	  | m :: _ when m < n ->
	      stack := n :: !stack;
	      [NEWLINE; BEGIN]
	  | _ ->
	      NEWLINE :: unindent n
      }
  | (space | comment)+
      { next_tokens lexbuf }
  | ident as id { [id_or_kwd id] }
  | '+'     { [PLUS] }
  | '-'     { [MINUS] }
  | '*'     { [TIMES] }
  | '/'     { [DIV] }
  | '%'     { [MOD] }
  | '='     { [EQUAL] }
  | "=="    { [CMP Beq] }
  | "!="    { [CMP Bneq] }
  | "<"     { [CMP Blt] }
  | "<="    { [CMP Ble] }
  | ">"     { [CMP Bgt] }
  | ">="    { [CMP Bge] }
  | '('     { [LP] }
  | ')'     { [RP] }
  | '['     { [LSQ] }
  | ']'     { [RSQ] }
  | ','     { [COMMA] }
  | ':'     { [COLON] }
  | integer as s
            { try [CST (Cint (int_of_string s))]
              with _ -> raise (Lexing_error ("constant too large: " ^ s)) }
  | '"'     { [CST (Cstring (string lexbuf))] }
  | eof     { [EOF] }
  | _ as c  { raise (Lexing_error ("illegal character: " ^ String.make 1 c)) }

and indentation = parse
  | (space | comment)* '\n'
      { newline lexbuf; indentation lexbuf }
  | space* as s
      { String.length s }

and string = parse
  | '"'
      { let s = Buffer.contents string_buffer in
	Buffer.reset string_buffer;
	s }
  | "\\n"
      { Buffer.add_char string_buffer '\n';
	string lexbuf }
  | "\\\""
      { Buffer.add_char string_buffer '"';
	string lexbuf }
  | _ as c
      { Buffer.add_char string_buffer c;
	string lexbuf }
  | eof
      { raise (Lexing_error "unterminated string") }

{

  let next_token =
    let tokens = Queue.create () in (* prochains lexèmes à renvoyer *)
    fun lb ->
      if Queue.is_empty tokens then begin
	let l = next_tokens lb in
	List.iter (fun t -> Queue.add t tokens) l
      end;
      Queue.pop tokens
}
</file>

<file path="Practice/mini-python/main.ml">
open Ast
open Format

(* Exception levée pour signaler une erreur pendant l'interprétation *)
exception Error of string
let error s = raise (Error s)

(* Les valeurs de Mini-Python

   - une différence notable avec Python : on
     utilise ici le type int alors que les entiers de Python sont de
     précision arbitraire ; on pourrait utiliser le module Big_int d'OCaml
     mais on chosisit la facilité
   - ce que Python appelle une liste est en réalité un tableau
     redimensionnable ; dans le fragment considéré ici, il n'y a pas
     de possibilité d'en modifier la longueur, donc un simple tableau OCaml
     convient *)
type value =
  | Vnone
  | Vbool of bool
  | Vint of int
  | Vstring of string
  | Vlist of value array

(* Affichage d'une valeur sur la sortie standard *)
let rec print_value = function
  | Vnone -> printf "None"
  | Vbool true -> printf "True"
  | Vbool false -> printf "False"
  | Vint n -> printf "%d" n
  | Vstring s -> printf "%s" s
  | Vlist a ->
    let n = Array.length a in
    printf "[";
    for i = 0 to n-1 do print_value a.(i); if i < n-1 then printf ", " done;
    printf "]"

(* Interprétation booléenne d'une valeur

   En Python, toute valeur peut être utilisée comme un booléen : None,
   la liste vide, la chaîne vide et l'entier 0 sont considérés comme
   False et toute autre valeurs comme True *)

let is_false = function
  | Vnone
  | Vbool false
  | Vstring ""
  | Vlist [||] -> true
  | Vint n -> n = 0
  | _ -> false

let is_true v = not (is_false v)

(* Interprétation des opérateurs binaires

   - l'opérateur + est surchargé : il désigne aussi la concaténation
     des chaînes et des listes
   - les opérateurs / et % doivent lever une exception si on tente de diviser
     par zéro
   - pour les comparaisons structurelles, on utilisera celles d'OCaml, même
     si elles ne coïncident pas exactement avec celles de Python
*)

let binop op v1 v2 = match op, v1, v2 with
  | Badd, Vint n1, Vint n2 -> Vint (n1+n2)
  | Badd, Vstring s1, Vstring s2 -> Vstring (s1 ^ s2)
  | Badd, Vlist l1, Vlist l2 -> Vlist (Array.append l1 l2)
  | Bsub, Vint n1, Vint n2 -> Vint (n1-n2)
  | Bmul, Vint n1, Vint n2 -> Vint (n1*n2)
  | (Bdiv | Bmod), Vint _, Vint 0 -> error "division by zero"
  | Bdiv, Vint n1, Vint n2 -> Vint (n1/n2)
  | Bmod, Vint n1, Vint n2 -> Vint (n1 mod n2)
  | Beq, _, _ -> Vbool (v1 = v2)
  | Bneq, _, _ -> Vbool (v1 <> v2)
  | Blt, _, _ -> Vbool (v1 < v2)
  | Ble, _, _ -> Vbool (v1 <= v2)
  | Bgt, _, _ -> Vbool (v1 > v2)
  | Bge, _, _ -> Vbool (v1 >= v2)
  | _ -> error "unsupported operand types"

(* Les fonctions sont ici uniquement globales *)

let functions = (Hashtbl.create 17 : (string, ident list * stmt) Hashtbl.t)

(* L'instruction 'return' de Python est interprétée à l'aide d'une exception *)

exception Return of value

(* Les variables locales (paramètres de fonctions et variables introduites
   par des affectations) sont stockées dans une table de hachage passée en
   arguments aux fonctions suivantes sous le nom 'ctx' *)

type ctx = (string, value) Hashtbl.t

(* Interprétation d'une expression (renvoie une valeur) *)

let rec expr ctx = function
  | Ecst Cnone ->
      Vnone
  | Ecst (Cbool b) ->
      Vbool b
  | Ecst (Cint n) ->
      Vint n
  | Ecst (Cstring s) ->
      Vstring s
  | Ebinop (Band, e1, e2) ->
      let v1 = expr ctx e1 in
      if is_true v1 then expr ctx e2 else v1
  | Ebinop (Bor, e1, e2) ->
      let v1 = expr ctx e1 in
      if is_false v1 then expr ctx e2 else v1
  | Ebinop (Badd | Bsub | Bmul | Bdiv | Bmod |
            Beq | Bneq | Blt | Ble | Bgt | Bge as op, e1, e2) ->
      binop op (expr ctx e1) (expr ctx e2)
  | Eunop (Uneg, e1) ->
      begin match expr ctx e1 with
        | Vint n -> Vint (-n)
        | _ -> error "unsupported operand types" end
  | Eunop (Unot, e1) ->
      Vbool (is_false (expr ctx e1))
  | Ecall ("len", [e1]) ->
      begin match expr ctx e1 with
        | Vstring s -> Vint (String.length s)
        | Vlist l -> Vint (Array.length l)
        | _ -> error "this value has no 'len'" end
  | Ecall ("range", [e1]) ->
      let n = expr_int ctx e1 in
      Vlist (Array.init (max 0 n) (fun i -> Vint i))
  | Ecall (f, el) ->
      if not (Hashtbl.mem functions f) then error ("unbound function " ^ f);
      let args, body = Hashtbl.find functions f in
      if List.length args <> List.length el then error "bad arity";
      let ctx' = Hashtbl.create 17 in
      List.iter2 (fun x e -> Hashtbl.add ctx' x (expr ctx e)) args el;
      begin try stmt ctx' body; Vnone with Return v -> v end
  | Elist el ->
      Vlist (Array.of_list (List.map (expr ctx) el))
  | Eleft lv ->
      right_value ctx lv

(* interprétation d'une valeur droite *)

and right_value ctx = function
  | Lident id ->
      if not (Hashtbl.mem ctx id) then error "unbound variable";
      Hashtbl.find ctx id
  | Lnth (e1, e2) ->
      let l = expr_list ctx e1 in
      let i = expr_int ctx e2 in
      if i < 0 || i >= Array.length l then error "index out of bounds";
      l.(i)

(* interprétation d'une valeur et vérification qu'il s'agit d'un entier *)

and expr_int ctx e = match expr ctx e with
  | Vint n -> n
  | _ -> error "integer expected"

and expr_list ctx e = match expr ctx e with
  | Vlist l -> l
  | _ -> error "list expected"

(* interprétation d'une instruction ; ne renvoie rien *)

and stmt ctx = function
  | Sif (e, s1, s2) ->
      if is_true (expr ctx e) then stmt ctx s1 else stmt ctx s2
  | Sreturn e ->
      raise (Return (expr ctx e))
  | Sassign (Lident id, e1) ->
      Hashtbl.replace ctx id (expr ctx e1)
  | Sassign (Lnth (e1, e2), e3) ->
      let l = expr_list ctx e1 in
      let i = expr_int ctx e2 in
      if i < 0 || i >= Array.length l then error "index out of bounds";
      l.(i) <- expr ctx e3
  | Sprint e ->
      print_value (expr ctx e); printf "@."
  | Sblock bl ->
      block ctx bl
  | Sfor (x, e, s) ->
      let l = expr_list ctx e in
      Array.iter (fun v -> Hashtbl.replace ctx x v; stmt ctx s) l
  | Seval e ->
      ignore (expr ctx e)

(* interprétation d'un bloc i.e. d'une séquence d'instructions *)

and block ctx = function
  | [] -> ()
  | s :: sl -> stmt ctx s; block ctx sl

(* interprétation d'un fichier *)

let file (fl, s) =
  List.iter
    (fun (f,args,body) -> Hashtbl.add functions f (args, body)) fl;
  stmt (Hashtbl.create 17) s
</file>

<file path="Practice/mini-python/Makefile">
CMO=lexer.cmo parser.cmo interp.cmo main.cmo
GENERATED = lexer.ml parser.ml parser.mli
FLAGS=-annot -g

all: mini-python
	./mini-python test.py

.PHONY: tests
tests: mini-python
	bash run-tests

mini-python: $(CMO)
	ocamlc $(FLAGS) -o $@ nums.cma $(CMO)

.SUFFIXES: .mli .ml .cmi .cmo .mll .mly

.mli.cmi:
	ocamlc $(FLAGS) -c  $<

.ml.cmo:
	ocamlc $(FLAGS) -c $<

.mll.ml:
	ocamllex $<

.mly.ml:
	menhir -v $<

.mly.mli:
	menhir -v $<

clean:
	rm -f *.cm[io] *.o *.annot *~ mini-python $(GENERATED)
	rm -f parser.output parser.automaton

.depend depend:$(GENERATED)
	rm -f .depend
	ocamldep *.ml *.mli > .depend

include .depend
</file>

<file path="Practice/mini-python/parser.mly">
/* Analyseur syntaxique pour Mini-Python */

%{
  open Ast
%}

%token <Ast.constant> CST
%token <Ast.binop> CMP
%token <string> IDENT
%token DEF IF ELSE RETURN PRINT FOR IN AND OR NOT
%token EOF
%token LP RP LSQ RSQ COMMA EQUAL COLON BEGIN END NEWLINE
%token PLUS MINUS TIMES DIV MOD

/* Définitions des priorités et associativités des tokens */

%left OR
%left AND
%nonassoc NOT
%nonassoc CMP
%left PLUS MINUS
%left TIMES DIV MOD
%nonassoc unary_minus
%nonassoc LSQ

/* Point d'entrée de la grammaire */
%start file

/* Type des valeurs retournées par l'analyseur syntaxique */
%type <Ast.file> file

%%

file:
| NEWLINE? dl = list(def) b = nonempty_list(stmt) EOF
    { dl, Sblock b }
;

def:
| DEF f = ident LP x = separated_list(COMMA, ident) RP
  COLON s = suite
    { f, x, s }
;

expr:
| c = CST
    { Ecst c }
| lv = left_value
    { Eleft lv }
| MINUS e1 = expr %prec unary_minus
    { Eunop (Uneg, e1) }
| NOT e1 = expr
    { Eunop (Unot, e1) }
| e1 = expr o = binop e2 = expr
    { Ebinop (o, e1, e2) }
| f = ident LP e = separated_list(COMMA, expr) RP
    { Ecall (f, e) }
| LSQ l = separated_list(COMMA, expr) RSQ
    { Elist l }
| LP e = expr RP
    { e }
;

left_value:
| id = ident
    { Lident id }
| e1 = expr LSQ e2 = expr RSQ
    { Lnth (e1, e2) }
;

suite:
| s = simple_stmt NEWLINE
    { s }
| NEWLINE BEGIN l = nonempty_list(stmt) END
    { Sblock l }
;

stmt:
| s = simple_stmt NEWLINE
    { s }
| IF c = expr COLON s = suite
    { Sif (c, s, Sblock []) }
| IF c = expr COLON s1 = suite ELSE COLON s2 = suite
    { Sif (c, s1, s2) }
| FOR x = ident IN e = expr COLON s = suite
    { Sfor (x, e, s) }
;

simple_stmt:
| RETURN e = expr
    { Sreturn e }
| l = left_value EQUAL e = expr
    { Sassign (l, e) }
| PRINT e = expr
    { Sprint e }
| e = expr
    { Seval e }
;

%inline binop:
| PLUS  { Badd }
| MINUS { Bsub }
| TIMES { Bmul }
| DIV   { Bdiv }
| MOD   { Bmod }
| c=CMP { c    }
| AND   { Band }
| OR    { Bor  }
;

ident:
  id = IDENT { id }
;
</file>

<file path="Practice/mini-python/run-tests">
#!/bin/bash

score=0
max=0

echo "Tests positifs (fichiers dans tests/good/)"

for f in tests/good/*.py; do
    max=`expr $max + 1`;
    echo $f
    expected=tests/good/`basename $f .py`.out
    rm -f out
    if ./mini-python $f > out; then
	if cmp --quiet out $expected; then
	    score=`expr $score + 1`;
	else
	    echo "  ECHEC : mauvaise sortie pour $f"
	fi
    else
	echo "  ECHEC de l'interprétation pour $f"
    fi
done
echo

echo "Tests négatifs (fichiers dans tests/bad/)"

for f in tests/bad/*.py; do
    max=`expr $max + 1`;
    echo $f
    rm -f out
    if ./mini-python $f > out 2>&1; then
	echo "  ECHEC : l'évaluation de $f devrait échouer"
    else
        if grep -q "^error:" out; then
	    score=`expr $score + 1`;
        else
            echo "  ECHEC : devrait afficher 'error'"
        fi
    fi
done

echo
percent=`expr 100 \* $score / $max`;
echo "Score: $score / $max tests, soit $percent%"
</file>

<file path="Practice/mini-python/test.py">
print 41+1
</file>

<file path="Practice/mini-python/tests/bad/add1.py">
print 1 + "foo"
</file>

<file path="Practice/mini-python/tests/bad/bool1.py">
print 1<2 and len(1)
</file>

<file path="Practice/mini-python/tests/bad/bool2.py">
print 1>2 or len(1)
</file>

<file path="Practice/mini-python/tests/bad/for1.py">
for x in 42:
    print x
</file>

<file path="Practice/mini-python/tests/bad/len1.py">
print len(1)
</file>

<file path="Practice/mini-python/tests/bad/range1.py">
x = range([])
</file>

<file path="Practice/mini-python/tests/bad/range2.py">
x = range(7)
print x[7]
</file>

<file path="Practice/mini-python/tests/good/arith1.py">
print 1+2
</file>

<file path="Practice/mini-python/tests/good/arith2.py">
print 2*3
</file>

<file path="Practice/mini-python/tests/good/arith3.py">
print 17/2
</file>

<file path="Practice/mini-python/tests/good/arith4.py">
print 19 % 4
</file>

<file path="Practice/mini-python/tests/good/bool1.py">
print 1<2
</file>

<file path="Practice/mini-python/tests/good/bool2.py">
print 1==2
</file>

<file path="Practice/mini-python/tests/good/bool3.py">
print 1>2 and len(1)
</file>

<file path="Practice/mini-python/tests/good/bool4.py">
print 1<2 or len(1)
</file>

<file path="Practice/mini-python/tests/good/bool5.py">
print True
print False
print True and False
print True or False
</file>

<file path="Practice/mini-python/tests/good/bool6.py">
print True == False
print True != False
print True <  False
print True <= False
print True >  False
print True >= False
</file>

<file path="Practice/mini-python/tests/good/compare_list1.py">
# true
print []     == []
print []     <  [1]
print [1]    != [2]
print [2, 1] <  [4, 1]
print [4]    <= [4, 6]
# false
print [5]    <= []
</file>

<file path="Practice/mini-python/tests/good/compare_list2.py">
print [1, [2,3], 4] != [1, 2, 3]
print [1, [2,3], 4] == [1, [2,3], 3]
print [1, [2,3], 4] == [1, [2,3], 4]
x = 1
print [x,x,x] == [x,[x],x]
</file>

<file path="Practice/mini-python/tests/good/compare_string1.py">
# true
print "" == ""
print "" < "a"
print "b" < "c"
print "ab" >= "ab"
print "" != "a"
print "abc" == "abc"
# false
print "a" > "b"
print "" > "b"
print "abc" <= "ab"
</file>

<file path="Practice/mini-python/tests/good/concat1.py">
print "foo" + "bar"
</file>

<file path="Practice/mini-python/tests/good/concat2.py">
def make(n):
    if n == 0: 
        return ""
    else:
        return "a" + make(n-1)

print make(3)
</file>

<file path="Practice/mini-python/tests/good/eval1.py">
l = [1,2,3]
for x in l:
    l = []
    print x
</file>

<file path="Practice/mini-python/tests/good/fib.py">
# zéro, une ou plusieurs définitions de fonctions au début du fichier
def fibaux(a, b, k):
    if k == 0:
        return a
    else:
        return fibaux(b, a+b, k-1)

def fib(n):
    return fibaux(0, 1, n)

# une ou plusieurs instructions à la fin du fichier
print "quelques valeurs de la suite de Fibonacci :"
for n in [0, 1, 11, 42]:
    print fib(n)
</file>

<file path="Practice/mini-python/tests/good/list1.py">
x = [111,222,333]
print x[1]
</file>

<file path="Practice/mini-python/tests/good/list2.py">
x = [0,[0,1,42],1]
print x[1][2]
</file>

<file path="Practice/mini-python/tests/good/loop1.py">
def loop(x):
    print x
    if x < 3: loop(x+1)

loop(0)
</file>

<file path="Practice/mini-python/tests/good/mandelbrot.py">
# arithmetique de virgule fixe
# precision q = 8192 i.e. 13 bits pour la partie decimale

def add(x, y): 
    return x + y
def sub(x, y): 
    return x - y
def mul(x, y): 
    t = x * y
    return (t + 8192 / 2) / 8192
def div(x, y):
    t = x * 8192
    return (t + y / 2) / y
def of_int(x): 
    return x * 8192

def iter(n, a, b, xn, yn):
    if n == 100: return 1
    xn2 = mul(xn, xn)
    yn2 = mul(yn, yn)
    if add(xn2, yn2) > of_int(4): return 0
    return iter(n+1, a, b, add(sub(xn2, yn2), a), add(mul(of_int(2), mul(xn, yn)), b))

def inside(x, y):
    return iter(0, x, y, of_int(0), of_int(0))

def main():
    xmin = of_int(-2)
    xmax = of_int(1)
    steps = 40
    deltax = div(sub(xmax, xmin), of_int(2 * steps))
    ymin = of_int(-1)
    ymax = of_int(1)
    deltay = div(sub(ymax, ymin), of_int(steps))
    for i in range(steps):
        y = add(ymin, mul(of_int(i), deltay))
        s = ""
        for j in range(2 * steps):
            x = add(xmin, mul(of_int(j), deltax))
            if inside(x, y): s = s + "0"
            else: s = s + "1"
        print s

main()
</file>

<file path="Practice/mini-python/tests/good/none.py">
def foo():
    x = 1
print foo()
print foo() == foo()
print foo() != foo()
print foo() <  foo()
print foo() <= foo()
print foo() >  foo()
print foo() >= foo()
</file>

<file path="Practice/mini-python/tests/good/pascal.py">
# triangle de Pascal modulo 7

def print_row(r, i):
    s = ""
    for j in range(i+1):
        if r[j]:
            s = "*" + s
        else:
            s = "0" + s
    print s

def compute_row(r, j):
    v = 0
    if j == 0:
        v = 1
    else:
        v = (r[j] + r[j-1]) % 7
    r[j] = v
    if j > 0: compute_row(r, j-1)

def main():
    h = 40
    r = range(h+1)
    for i in range(h):
        r[i] = 0
        compute_row(r, i)
        print_row(r, i)

main ()
</file>

<file path="Practice/mini-python/tests/good/primes1.py">
def prefix(n, l):
    r = range(n)
    for i in r:
        r[i] = l[i]
    return r

def range2(n1, n2):
    r = range(n2 - n1 + 1)
    i = 0
    for x in r:
        r[i] = n1
        n1 = n1 + 1
        i = i + 1
    return r

def filter_out(p, l):
    i = 0
    for x in l:
        if x > p and x % p == 0:
            l[i] = 0
        i = i + 1

def primes(n):
    l = range2(2, n)
    nb = 0
    for x in l:
        if x > 0:
            l[nb] = x
            nb = nb + 1
            filter_out(x, l)
    return prefix(nb, l)

print primes(100)
</file>

<file path="Practice/mini-python/tests/good/print_int.py">
print 42
</file>

<file path="Practice/mini-python/tests/good/print_list1.py">
print range(3)
</file>

<file path="Practice/mini-python/tests/good/print_list2.py">
print [1, 2, 3]
</file>

<file path="Practice/mini-python/tests/good/print_list3.py">
print [1, [2, 3], 4]
</file>

<file path="Practice/mini-python/tests/good/print_string.py">
print "foo"
</file>

<file path="Practice/mini-python/tests/good/range1.py">
print len(range(7))
</file>

<file path="Practice/mini-python/tests/good/range2.py">
x = range(7)
print x[0]
print x[6]
</file>

<file path="Practice/mini-python/tests/good/range3.py">
l = range(7)
for x in l:
    print x
</file>

<file path="Practice/mini-python/tests/good/str1.py">
def str(i):
    l = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]
    if i < 10:
        return l[i]
    else:
        return str(i / 10) + l[i % 10]

print str(0)    
print str(42)
print str(1024)
</file>

<file path="Practice/mini-python/tests/good/var1.py">
x = 42
print x
</file>

<file path="Practice/mini-python/tests/good/var2.py">
x = "foo"
print x
</file>

<file path="Practice/Part1/matrix.c">
#include <stdio.h>

// problem: given the following 15x15 matrix, find the maximum sum of matrix
// elements with each element being the only one in his row and column

#define N 15

const int m[N][N] = {
  { 7, 53, 183, 439, 863, 497, 383, 563, 79, 973, 287, 63, 343, 169, 583 },
  { 627, 343, 773, 959, 943, 767, 473, 103, 699, 303, 957, 703, 583, 639, 913 },
  { 447, 283, 463, 29, 23, 487, 463, 993, 119, 883, 327, 493, 423, 159, 743 },
  { 217, 623, 3, 399, 853, 407, 103, 983, 89, 463, 290, 516, 212, 462, 350 },
  { 960, 376, 682, 962, 300, 780, 486, 502, 912, 800, 250, 346, 172, 812, 350 },
  { 870, 456, 192, 162, 593, 473, 915, 45, 989, 873, 823, 965, 425, 329, 803 },
  { 973, 965, 905, 919, 133, 673, 665, 235, 509, 613, 673, 815, 165, 992, 326 },
  { 322, 148, 972, 962, 286, 255, 941, 541, 265, 323, 925, 281, 601, 95, 973 },
  { 445, 721, 11, 525, 473, 65, 511, 164, 138, 672, 18, 428, 154, 448, 848 },
  { 414, 456, 310, 312, 798, 104, 566, 520, 302, 248, 694, 976, 430, 392, 198 },
  { 184, 829, 373, 181, 631, 101, 969, 613, 840, 740, 778, 458, 284, 760, 390 },
  { 821, 461, 843, 513, 17, 901, 711, 993, 293, 157, 274, 94, 192, 156, 574 },
  { 34, 124, 4, 878, 450, 476, 712, 914, 838, 669, 875, 299, 823, 329, 699 },
  { 815, 559, 813, 459, 522, 788, 168, 586, 966, 232, 308, 833, 251, 631, 107 },
  { 813, 883, 451, 509, 615, 77, 281, 613, 459, 205, 380, 274, 302, 35, 805 }
};

// solution: function f(i, c) below computes the maximal sum for the
// subset of rows i..N and the subset of columns corresponding to bits
// set in c

#define L 4  // no smaller than log(N)

// to memoize function f
static int memo[1 << (N + L)];

// invariant: 0 <= i <= N, 0 <= c < 2^N, and C has exactly N-i bits set
int f(int i, int c) {
  if (i == N)
    return 0;
  int key = c << L | i;
  int r = memo[key];
  if (r != 0)
    return r;
  int s = 0, j = 0;
  for (j = 0; j < N; j++) {
    int col = 1 << j;
    if ((c & col) == 0)
      continue;
    int x = m[i][j] + f(i + 1, c - col);
    if (x > s) s = x;
  }
  memo[key] = s;
  return s;
}

// solving the problem means calling f with all rows and columns
int main() {
  printf("solution = %d\n", f(0, (1 << N) - 1));
  return 0;
}

/*
Local Variables:
compile-command: "gcc matrix.c && ./a.out"
End:
*/
</file>

<file path="Practice/Part1/matrix.txt">
7  53 183 439 863 497 383 563  79 973 287  63 343 169 583
627 343 773 959 943 767 473 103 699 303 957 703 583 639 913
447 283 463  29  23 487 463 993 119 883 327 493 423 159 743
217 623   3 399 853 407 103 983  89 463 290 516 212 462 350
960 376 682 962 300 780 486 502 912 800 250 346 172 812 350
870 456 192 162 593 473 915  45 989 873 823 965 425 329 803
973 965 905 919 133 673 665 235 509 613 673 815 165 992 326
322 148 972 962 286 255 941 541 265 323 925 281 601  95 973
445 721  11 525 473  65 511 164 138 672  18 428 154 448 848
414 456 310 312 798 104 566 520 302 248 694 976 430 392 198
184 829 373 181 631 101 969 613 840 740 778 458 284 760 390
821 461 843 513  17 901 711 993 293 157 274  94 192 156 574
 34 124   4 878 450 476 712 914 838 669 875 299 823 329 699
815 559 813 459 522 788 168 586 966 232 308 833 251 631 107
813 883 451 509 615  77 281 613 459 205 380 274 302  35 805
</file>

<file path="README.md">
# Compilation

A compilator was created to generate a x86-64 assembler code from a C fragment called mini-C. This is a 100% C-compatible fragment, in the sense that any Mini C program is also a C program.

Course done at Ecole Polytechnique: [INF564 : Compilation](https://www.enseignement.polytechnique.fr/informatique/INF564/)
</file>

<file path="report/IEEEtran.cls">
%%
%% IEEEtran.cls 2015/08/26 version V1.8b
%% 
%% This is the IEEEtran LaTeX class for authors of the Institute of 
%% Electrical and Electronics Engineers (IEEE) Transactions journals and
%% conferences.
%% 
%% Support sites:
%% http://www.michaelshell.org/tex/ieeetran/
%% http://www.ctan.org/pkg/ieeetran
%% and
%% http://www.ieee.org/
%%
%% Based on the original 1993 IEEEtran.cls, but with many bug fixes
%% and enhancements (from both JVH and MDS) over the 1996/7 version.
%%
%%
%% Contributors:
%% Gerry Murray (1993), Silvano Balemi (1993),
%% Jon Dixon (1996), Peter N"uchter (1996),
%% Juergen von Hagen (2000), and Michael Shell (2001-2014)
%% 
%% 
%% Copyright (c) 1993-2000 by Gerry Murray, Silvano Balemi, 
%%                         Jon Dixon, Peter N"uchter,
%%                         Juergen von Hagen
%%                         and
%% Copyright (c) 2001-2015 by Michael Shell
%%
%% Current maintainer (V1.3 to V1.8b): Michael Shell
%%                                     See:
%%                                     http://www.michaelshell.org/
%%                                     for current contact information.
%%
%% Special thanks to Peter Wilson (CUA) and Donald Arseneau
%% for allowing the inclusion of the \@ifmtarg command 
%% from their ifmtarg LaTeX package. 
%% 
%%*************************************************************************
%% Legal Notice:
%% This code is offered as-is without any warranty either expressed or
%% implied; without even the implied warranty of MERCHANTABILITY or
%% FITNESS FOR A PARTICULAR PURPOSE! 
%% User assumes all risk.
%% In no event shall the IEEE or any contributor to this code be liable for
%% any damages or losses, including, but not limited to, incidental,
%% consequential, or any other damages, resulting from the use or misuse
%% of any information contained here.
%%
%% All comments are the opinions of their respective authors and are not
%% necessarily endorsed by the IEEE.
%%
%% This work is distributed under the LaTeX Project Public License (LPPL)
%% ( http://www.latex-project.org/ ) version 1.3, and may be freely used,
%% distributed and modified. A copy of the LPPL, version 1.3, is included
%% in the base LaTeX documentation of all distributions of LaTeX released
%% 2003/12/01 or later.
%% Retain all contribution notices and credits.
%% ** Modified files should be clearly indicated as such, including  **
%% ** renaming them and changing author support contact information. **
%%
%% File list of work: IEEEtran.cls, IEEEtran_HOWTO.pdf, bare_adv.tex,
%%                    bare_conf.tex, bare_jrnl.tex, bare_conf_compsoc.tex,
%%                    bare_jrnl_compsoc.tex
%% 
%% Major changes to the user interface should be indicated by an 
%% increase in the version numbers. If a version is a beta, it will 
%% be indicated with a BETA suffix, i.e., 1.4 BETA.
%% Small changes can be indicated by appending letters to the version
%% such as "IEEEtran_v14a.cls".
%% In all cases, \Providesclass, any \typeout messages to the user,
%% \IEEEtransversionmajor and \IEEEtransversionminor must reflect the
%% correct version information.
%% The changes should also be documented via source comments.
%%*************************************************************************
%%
%
% Available class options 
% e.g., \documentclass[10pt,conference]{IEEEtran} 
% 
%             *** choose only one from each category ***
%
% 9pt, 10pt, 11pt, 12pt
%    Sets normal font size. The default is 10pt.
% 
% conference, journal, technote, peerreview, peerreviewca
%    determines format mode - conference papers, journal papers,
%    correspondence papers (technotes), or peer review papers. The user
%    should also select 9pt when using technote. peerreview is like
%    journal mode, but provides for a single-column "cover" title page for
%    anonymous peer review. The paper title (without the author names) is
%    repeated at the top of the page after the cover page. For peer review
%    papers, the \IEEEpeerreviewmaketitle command must be executed (will
%    automatically be ignored for non-peerreview modes) at the place the
%    cover page is to end, usually just after the abstract (keywords are
%    not normally used with peer review papers). peerreviewca is like
%    peerreview, but allows the author names to be entered and formatted
%    as with conference mode so that author affiliation and contact
%    information can be easily seen on the cover page.
%    The default is journal.
%
% draft, draftcls, draftclsnofoot, final
%    determines if paper is formatted as a widely spaced draft (for
%    handwritten editor comments) or as a properly typeset final version.
%    draftcls restricts draft mode to the class file while all other LaTeX
%    packages (i.e., \usepackage{graphicx}) will behave as final - allows
%    for a draft paper with visible figures, etc. draftclsnofoot is like
%    draftcls, but does not display the date and the word "DRAFT" at the foot
%    of the pages. If using one of the draft modes, the user will probably
%    also want to select onecolumn.
%    The default is final.
%
% letterpaper, a4paper, cspaper
%    determines paper size: 8.5in X 11in, 210mm X 297mm or 7.875in X 10.75in.
%    Changing the paper size in the standard journal and conference modes
%    will not alter the typesetting of the document - only the margins will
%    be affected. In particular, documents using the a4paper option will
%    have reduced side margins (A4 is narrower than US letter) and a longer
%    bottom margin (A4 is longer than US letter). For both cases, the top
%    margins will be the same and the text will be horizontally centered.
%    For the compsoc conference and draft modes, it is the margins that will
%    remain constant, and thus the text area size will vary, with changes in
%    the paper size.
%    The cspaper option is the special ``trim'' paper size (7.875in x 10.75in)
%    used in the actual publication of Computer Society journals. Under
%    compsoc journal mode, this option does not alter the typesetting of the
%    document. Authors should invoke the cspaper option only if requested to
%    do so by the editors of the specific journal they are submitting to.
%    For final submission to the IEEE, authors should generally use US letter 
%    (8.5 X 11in) paper unless otherwise instructed. Note that authors should
%    ensure that all post-processing (ps, pdf, etc.) uses the same paper
%    specificiation as the .tex document. Problems here are by far the number
%    one reason for incorrect margins. IEEEtran will automatically set the
%    default paper size under pdflatex (without requiring any change to
%    pdftex.cfg), so this issue is more important to dvips users. Fix
%    config.ps, config.pdf, or ~/.dvipsrc for dvips, or use the
%    dvips -t papersize option instead as needed. For the cspaper option,
%    the corresponding dvips paper name is "ieeecs".
%    See the testflow documentation
%    http://www.ctan.org/tex-archive/macros/latex/contrib/IEEEtran/testflow
%    for more details on dvips paper size configuration.
%    The default is letterpaper.
%
% oneside, twoside
%    determines if layout follows single sided or two sided (duplex)
%    printing. The only notable change is with the headings at the top of
%    the pages.
%    The default is oneside.
%
% onecolumn, twocolumn
%    determines if text is organized into one or two columns per page. One
%    column mode is usually used only with draft papers.
%    The default is twocolumn.
%
% comsoc, compsoc, transmag
%    Use the format of the IEEE Communications Society, IEEE Computer Society
%    or IEEE Transactions on Magnetics, respectively.
%
% romanappendices
%    Use the "Appendix I" convention when numbering appendices. IEEEtran.cls
%    now defaults to Alpha "Appendix A" convention - the opposite of what
%    v1.6b and earlier did.
%
% captionsoff
%    disables the display of the figure/table captions. Some IEEE journals
%    request that captions be removed and figures/tables be put on pages
%    of their own at the end of an initial paper submission. The endfloat
%    package can be used with this class option to achieve this format.
%
% nofonttune
%    turns off tuning of the font interword spacing. Maybe useful to those
%    not using the standard Times fonts or for those who have already "tuned"
%    their fonts.
%    The default is to enable IEEEtran to tune font parameters.
%
%
%----------
% Available CLASSINPUTs provided (all are macros unless otherwise noted):
% \CLASSINPUTbaselinestretch
% \CLASSINPUTinnersidemargin
% \CLASSINPUToutersidemargin
% \CLASSINPUTtoptextmargin
% \CLASSINPUTbottomtextmargin
%
% Available CLASSINFOs provided:
% \ifCLASSINFOpdf                       (TeX if conditional)
% \CLASSINFOpaperwidth                  (macro)
% \CLASSINFOpaperheight                 (macro)
% \CLASSINFOnormalsizebaselineskip      (length)
% \CLASSINFOnormalsizeunitybaselineskip (length)
%
% Available CLASSOPTIONs provided:
% all class option flags (TeX if conditionals) unless otherwise noted,
% e.g., \ifCLASSOPTIONcaptionsoff
% point size options provided as a single macro:
% \CLASSOPTIONpt
% which will be defined as 9, 10, 11, or 12 depending on the document's
% normalsize point size.
% also, class option peerreviewca implies the use of class option peerreview
% and classoption draft implies the use of class option draftcls





\ProvidesClass{IEEEtran}[2015/08/26 V1.8b by Michael Shell]
\typeout{-- See the "IEEEtran_HOWTO" manual for usage information.}
\typeout{-- http://www.michaelshell.org/tex/ieeetran/}
\NeedsTeXFormat{LaTeX2e}

% IEEEtran.cls version numbers, provided as of V1.3
% These values serve as a way a .tex file can
% determine if the new features are provided.
% The version number of this IEEEtrans.cls can be obtained from 
% these values. i.e., V1.4
% KEEP THESE AS INTEGERS! i.e., NO {4a} or anything like that-
% (no need to enumerate "a" minor changes here)
\def\IEEEtransversionmajor{1}
\def\IEEEtransversionminor{8}


% hook to allow easy changeover to IEEEtran.cls/tools.sty error reporting
\def\@IEEEclspkgerror{\ClassError{IEEEtran}}


% These do nothing, but provide them like in article.cls
\newif\if@restonecol
\newif\if@titlepage


% class option conditionals
\newif\ifCLASSOPTIONonecolumn       \CLASSOPTIONonecolumnfalse
\newif\ifCLASSOPTIONtwocolumn       \CLASSOPTIONtwocolumntrue

\newif\ifCLASSOPTIONoneside         \CLASSOPTIONonesidetrue
\newif\ifCLASSOPTIONtwoside         \CLASSOPTIONtwosidefalse

\newif\ifCLASSOPTIONfinal           \CLASSOPTIONfinaltrue
\newif\ifCLASSOPTIONdraft           \CLASSOPTIONdraftfalse
\newif\ifCLASSOPTIONdraftcls        \CLASSOPTIONdraftclsfalse
\newif\ifCLASSOPTIONdraftclsnofoot  \CLASSOPTIONdraftclsnofootfalse

\newif\ifCLASSOPTIONpeerreview      \CLASSOPTIONpeerreviewfalse
\newif\ifCLASSOPTIONpeerreviewca    \CLASSOPTIONpeerreviewcafalse

\newif\ifCLASSOPTIONjournal         \CLASSOPTIONjournaltrue
\newif\ifCLASSOPTIONconference      \CLASSOPTIONconferencefalse
\newif\ifCLASSOPTIONtechnote        \CLASSOPTIONtechnotefalse

\newif\ifCLASSOPTIONnofonttune      \CLASSOPTIONnofonttunefalse

\newif\ifCLASSOPTIONcaptionsoff     \CLASSOPTIONcaptionsofffalse

\newif\ifCLASSOPTIONcomsoc          \CLASSOPTIONcomsocfalse
\newif\ifCLASSOPTIONcompsoc         \CLASSOPTIONcompsocfalse
\newif\ifCLASSOPTIONtransmag        \CLASSOPTIONtransmagfalse

\newif\ifCLASSOPTIONromanappendices \CLASSOPTIONromanappendicesfalse


% class info conditionals

% indicates if pdf (via pdflatex) output
\newif\ifCLASSINFOpdf               \CLASSINFOpdffalse


% V1.6b internal flag to show if using a4paper
\newif\if@IEEEusingAfourpaper       \@IEEEusingAfourpaperfalse
% V1.6b internal flag to show if using cspaper
\newif\if@IEEEusingcspaper          \@IEEEusingcspaperfalse


% IEEEtran class scratch pad registers
% dimen
\newdimen\@IEEEtrantmpdimenA
\newdimen\@IEEEtrantmpdimenB
\newdimen\@IEEEtrantmpdimenC
% count
\newcount\@IEEEtrantmpcountA
\newcount\@IEEEtrantmpcountB
\newcount\@IEEEtrantmpcountC
% token list
\newtoks\@IEEEtrantmptoksA

% we use \CLASSOPTIONpt so that we can ID the point size (even for 9pt docs)
% as well as LaTeX's \@ptsize to retain some compatability with some
% external packages
\def\@ptsize{0}
% LaTeX does not support 9pt, so we set \@ptsize to 0 - same as that of 10pt
\DeclareOption{9pt}{\def\CLASSOPTIONpt{9}\def\@ptsize{0}}
\DeclareOption{10pt}{\def\CLASSOPTIONpt{10}\def\@ptsize{0}}
\DeclareOption{11pt}{\def\CLASSOPTIONpt{11}\def\@ptsize{1}}
\DeclareOption{12pt}{\def\CLASSOPTIONpt{12}\def\@ptsize{2}}



\DeclareOption{letterpaper}{\setlength{\paperwidth}{8.5in}%
                            \setlength{\paperheight}{11in}%
                            \@IEEEusingAfourpaperfalse
                            \@IEEEusingcspaperfalse
                            \def\CLASSOPTIONpaper{letter}%
                            \def\CLASSINFOpaperwidth{8.5in}%
                            \def\CLASSINFOpaperheight{11in}}


\DeclareOption{a4paper}{\setlength{\paperwidth}{210mm}%
                        \setlength{\paperheight}{297mm}%
                        \@IEEEusingAfourpapertrue
                        \@IEEEusingcspaperfalse
                        \def\CLASSOPTIONpaper{a4}%
                        \def\CLASSINFOpaperwidth{210mm}%
                        \def\CLASSINFOpaperheight{297mm}}

% special paper option for compsoc journals
\DeclareOption{cspaper}{\setlength{\paperwidth}{7.875in}%
                        \setlength{\paperheight}{10.75in}%
                        \@IEEEusingcspapertrue
                        \@IEEEusingAfourpaperfalse
                        \def\CLASSOPTIONpaper{ieeecs}%
                        \def\CLASSINFOpaperwidth{7.875in}%
                        \def\CLASSINFOpaperheight{10.75in}}

\DeclareOption{oneside}{\@twosidefalse\@mparswitchfalse
                        \CLASSOPTIONonesidetrue\CLASSOPTIONtwosidefalse}
\DeclareOption{twoside}{\@twosidetrue\@mparswitchtrue
                        \CLASSOPTIONtwosidetrue\CLASSOPTIONonesidefalse}

\DeclareOption{onecolumn}{\CLASSOPTIONonecolumntrue\CLASSOPTIONtwocolumnfalse}
\DeclareOption{twocolumn}{\CLASSOPTIONtwocolumntrue\CLASSOPTIONonecolumnfalse}

% If the user selects draft, then this class AND any packages
% will go into draft mode.
\DeclareOption{draft}{\CLASSOPTIONdrafttrue\CLASSOPTIONdraftclstrue
                      \CLASSOPTIONdraftclsnofootfalse} 
% draftcls is for a draft mode which will not affect any packages
% used by the document.
\DeclareOption{draftcls}{\CLASSOPTIONdraftfalse\CLASSOPTIONdraftclstrue
                         \CLASSOPTIONdraftclsnofootfalse} 
% draftclsnofoot is like draftcls, but without the footer.
\DeclareOption{draftclsnofoot}{\CLASSOPTIONdraftfalse\CLASSOPTIONdraftclstrue
                               \CLASSOPTIONdraftclsnofoottrue} 
\DeclareOption{final}{\CLASSOPTIONdraftfalse\CLASSOPTIONdraftclsfalse
                      \CLASSOPTIONdraftclsnofootfalse}

\DeclareOption{journal}{\CLASSOPTIONpeerreviewfalse\CLASSOPTIONpeerreviewcafalse
                        \CLASSOPTIONjournaltrue\CLASSOPTIONconferencefalse\CLASSOPTIONtechnotefalse}

\DeclareOption{conference}{\CLASSOPTIONpeerreviewfalse\CLASSOPTIONpeerreviewcafalse
                           \CLASSOPTIONjournalfalse\CLASSOPTIONconferencetrue\CLASSOPTIONtechnotefalse}

\DeclareOption{technote}{\CLASSOPTIONpeerreviewfalse\CLASSOPTIONpeerreviewcafalse
                         \CLASSOPTIONjournalfalse\CLASSOPTIONconferencefalse\CLASSOPTIONtechnotetrue}

\DeclareOption{peerreview}{\CLASSOPTIONpeerreviewtrue\CLASSOPTIONpeerreviewcafalse
                           \CLASSOPTIONjournalfalse\CLASSOPTIONconferencefalse\CLASSOPTIONtechnotefalse}

\DeclareOption{peerreviewca}{\CLASSOPTIONpeerreviewtrue\CLASSOPTIONpeerreviewcatrue
                             \CLASSOPTIONjournalfalse\CLASSOPTIONconferencefalse\CLASSOPTIONtechnotefalse}

\DeclareOption{nofonttune}{\CLASSOPTIONnofonttunetrue}

\DeclareOption{captionsoff}{\CLASSOPTIONcaptionsofftrue}

\DeclareOption{comsoc}{\CLASSOPTIONcomsoctrue\CLASSOPTIONcompsocfalse\CLASSOPTIONtransmagfalse}

\DeclareOption{compsoc}{\CLASSOPTIONcomsocfalse\CLASSOPTIONcompsoctrue\CLASSOPTIONtransmagfalse}

\DeclareOption{transmag}{\CLASSOPTIONtransmagtrue\CLASSOPTIONcomsocfalse\CLASSOPTIONcompsocfalse}

\DeclareOption{romanappendices}{\CLASSOPTIONromanappendicestrue}


% default to US letter paper, 10pt, twocolumn, one sided, final, journal
\ExecuteOptions{letterpaper,10pt,twocolumn,oneside,final,journal}
% overrride these defaults per user requests
\ProcessOptions



%% -- Command Argument Scanning Support Functions --

% Sets the category codes for punctuation to their normal values.
% For local use with argument scanning.
\def\IEEEnormalcatcodespunct{\catcode`\!=12 \catcode`\,=12 \catcode`\:=12
\catcode`\;=12 \catcode`\`=12 \catcode`\'=12 \catcode`\"=12 \catcode`\.=12
\catcode`\/=12 \catcode`\?=12 \catcode`\*=12 \catcode`\+=12 \catcode`\-=12
\catcode`\<=12 \catcode`\>=12 \catcode`\(=12 \catcode`\)=12 \catcode`\[=12
\catcode`\]=12 \catcode`\==12 \catcode`\|=12}
% Sets the category codes for numbers to their normal values.
% For local use with argument scanning.
\def\IEEEnormalcatcodesnum{\catcode`\0=12 \catcode`\1=12 \catcode`\2=12
\catcode`\3=12 \catcode`\4=12 \catcode`\5=12 \catcode`\6=12 \catcode`\7=12
\catcode`\8=12 \catcode`\9=12}
% combined action of \IEEEnormalcatcodespunct and \IEEEnormalcatcodesnum
\def\IEEEnormalcatcodes{\IEEEnormalcatcodespunct\IEEEnormalcatcodesnum}


% usage: \@IEEEextracttoken*{}
% \@IEEEextracttoken fully expands its argument (which it then stores in
% \@IEEEextracttokenarg) via \edef and then the meaning of the first
% nonbrace (but including the empty group) token found is assigned via \let
% to \@IEEEextractedtoken as well as stored in the macro
% \@IEEEextractedtokenmacro. Tokens that would otherwise be discarded during
% the acquisition of the first are stored in \@IEEEextractedtokensdiscarded,
% however their original relative brace nesting depths are not guaranteed to
% be preserved.
% If the argument is empty, or if a first nonbrace token does not exist (or
% is an empty group), \@IEEEextractedtoken will be \relax and
% \@IEEEextractedtokenmacro and \@IEEEextractedtokensdiscarded will be empty.
%
% For example:
% \@IEEEextracttoken{{{ab}{cd}}{{ef}g}}
% results in:
%
% \@IEEEextracttokenarg          ==> a macro containing {{ab}{cd}}{{ef}g}
% \@IEEEextractedtoken           ==> the letter a
% \@IEEEextractedtokenmacro      ==> a macro containing a
% \@IEEEextractedtokensdiscarded ==> a macro containing bcd{ef}g
%
% the *-star form, \@IEEEextracttoken*, does not expand its argument
% contents during processing.
\def\@IEEEextracttoken{\@ifstar{\let\@IEEEextracttokendef=\def\@@IEEEextracttoken}{\let\@IEEEextracttokendef=\edef\@@IEEEextracttoken}}

\def\@@IEEEextracttoken#1{\@IEEEextracttokendef\@IEEEextracttokenarg{#1}\relax
\def\@IEEEextractedtokensdiscarded{}\relax % initialize to empty
% if the macro is unchanged after being acquired as a single undelimited argument
% with anything after it being stripped off as a delimited argument
% we know we have one token without any enclosing braces. loop until this is true.
\let\@IEEEextracttokencurgroup\@IEEEextracttokenarg
\loop
  % trap case of an empty argument as this would cause a problem with
  % \@@@IEEEextracttoken's first (nondelimited) argument acquisition
  \ifx\@IEEEextracttokencurgroup\@empty
    \def\@IEEEextractedtokenmacro{}\relax
  \else
    \expandafter\@@@IEEEextracttoken\@IEEEextracttokencurgroup\@IEEEgeneralsequenceDELIMITER\relax
  \fi
  \ifx\@IEEEextractedtokenmacro\@IEEEextracttokencurgroup
  \else
    \let\@IEEEextracttokencurgroup=\@IEEEextractedtokenmacro
\repeat
% we can safely do a \let= here because there should be at most one token
% the relax is needed to handle the case of no token found
\expandafter\let\expandafter\@IEEEextractedtoken\@IEEEextractedtokenmacro\relax}

\def\@@@IEEEextracttoken#1#2\@IEEEgeneralsequenceDELIMITER{\def\@IEEEextractedtokenmacro{#1}\relax
\def\@@IEEEextractedtokensdiscarded{#2}\expandafter\expandafter\expandafter\def\expandafter\expandafter\expandafter
\@IEEEextractedtokensdiscarded\expandafter\expandafter\expandafter
{\expandafter\@@IEEEextractedtokensdiscarded\@IEEEextractedtokensdiscarded}}
%%
%% -- End of Command Argument Scanning Support Functions --



% Computer Society conditional execution command
\long\def\@IEEEcompsoconly#1{\relax\ifCLASSOPTIONcompsoc\relax#1\relax\fi\relax}
% inverse
\long\def\@IEEEnotcompsoconly#1{\relax\ifCLASSOPTIONcompsoc\else\relax#1\relax\fi\relax}
% compsoc conference
\long\def\@IEEEcompsocconfonly#1{\relax\ifCLASSOPTIONcompsoc\ifCLASSOPTIONconference\relax#1\relax\fi\fi\relax}
% compsoc not conference
\long\def\@IEEEcompsocnotconfonly#1{\relax\ifCLASSOPTIONcompsoc\ifCLASSOPTIONconference\else\relax#1\relax\fi\fi\relax}


% comsoc verify that newtxmath, mtpro2, mt11p or mathtime has been loaded
\def\@IEEEcomsocverifymathfont{\typeout{-- Verifying Times compatible math font.}\relax
  \@ifpackageloaded{newtxmath}{\typeout{-- newtxmath loaded, OK.}}{\@@IEEEcomsocverifymathfont}}
\def\@@IEEEcomsocverifymathfont{\@ifpackageloaded{mtpro2}{\typeout{-- mtpro2 loaded, OK.}}{\@@@IEEEcomsocverifymathfont}}
\def\@@@IEEEcomsocverifymathfont{\@ifpackageloaded{mt11p}{\typeout{-- mt11p2 loaded, OK.}}{\@@@@IEEEcomsocverifymathfont}}
\def\@@@@IEEEcomsocverifymathfont{\@ifpackageloaded{mathtime}{\typeout{-- mathtime loaded, OK.}}{\@IEEEcomsocenforcemathfont}}

% comsoc, if a Times math font was not loaded by user, enforce it
\def\@IEEEcomsocenforcemathfont{\typeout{** Times compatible math font not found, forcing.}\relax
\IfFileExists{newtxmath.sty}{\typeout{-- Found newtxmath, loading.}\RequirePackage{newtxmath}}{\@@IEEEcomsocenforcemathfont}}
\def\@@IEEEcomsocenforcemathfont{\IfFileExists{mtpro2.sty}{\typeout{-- Found mtpro2, loading.}\RequirePackage{mtpro2}}{\@@@IEEEcomsocenforcemathfont}}
\def\@@@IEEEcomsocenforcemathfont{\IfFileExists{mt11p.sty}{\typeout{-- Found mt11p, loading.}\RequirePackage{mt11p}}{\@@@@IEEEcomsocenforcemathfont}}
\def\@@@@IEEEcomsocenforcemathfont{\IfFileExists{mathtime.sty}{\typeout{-- Found mathtime, loading.}\RequirePackage{mathtime}}{\@@@@@IEEEcomsocenforcemathfont}}
% if no acceptable Times math font package found, error with newtxmath requirement
\def\@@@@@IEEEcomsocenforcemathfont{\typeout{** No Times compatible math font package found. newtxmath is required.}\RequirePackage{newtxmath}}


\ifCLASSOPTIONcomsoc
  % ensure that if newtxmath is used, the cmintegrals option is also invoked
  \PassOptionsToPackage{cmintegrals}{newtxmath}
  % comsoc requires a Times like math font
  % ensure this requirement is satisfied at document start
  \AtBeginDocument{\@IEEEcomsocverifymathfont}
\fi



% The IEEE uses Times Roman font, so we'll default to Times.
% These three commands make up the entire times.sty package.
\renewcommand{\sfdefault}{phv}
\renewcommand{\rmdefault}{ptm}
\renewcommand{\ttdefault}{pcr}

% V1.7 compsoc nonconference papers, use Palatino/Palladio as the main text font,
% not Times Roman.
\@IEEEcompsocnotconfonly{\renewcommand{\rmdefault}{ppl}}

% enable the selected main text font
\normalfont\selectfont


\ifCLASSOPTIONcomsoc
  \typeout{-- Using IEEE Communications Society mode.}
\fi

\ifCLASSOPTIONcompsoc
  \typeout{-- Using IEEE Computer Society mode.}
\fi


% V1.7 conference notice message hook
\def\@IEEEconsolenoticeconference{\typeout{}%
\typeout{** Conference Paper **}%
\typeout{Before submitting the final camera ready copy, remember to:}%
\typeout{}%
\typeout{ 1. Manually equalize the lengths of two columns on the last page}%
\typeout{ of your paper;}%
\typeout{}%
\typeout{ 2. Ensure that any PostScript and/or PDF output post-processing}%
\typeout{ uses only Type 1 fonts and that every step in the generation}%
\typeout{ process uses the appropriate paper size.}%
\typeout{}}


% we can send console reminder messages to the user here
\AtEndDocument{\ifCLASSOPTIONconference\@IEEEconsolenoticeconference\fi}


% warn about the use of single column other than for draft mode
\ifCLASSOPTIONtwocolumn\else%
  \ifCLASSOPTIONdraftcls\else%
   \typeout{** ATTENTION: Single column mode is not typically used with IEEE publications.}%
  \fi%
\fi


% V1.7 improved paper size setting code.
% Set pdfpage and dvips paper sizes. Conditional tests are similar to that
% of ifpdf.sty. Retain within {} to ensure tested macros are never altered,
% even if only effect is to set them to \relax.
% if \pdfoutput is undefined or equal to relax, output a dvips special
{\@ifundefined{pdfoutput}{\AtBeginDvi{\special{papersize=\CLASSINFOpaperwidth,\CLASSINFOpaperheight}}}{%
% pdfoutput is defined and not equal to \relax
% check for pdfpageheight existence just in case someone sets pdfoutput
% under non-pdflatex. If exists, set them regardless of value of \pdfoutput.
\@ifundefined{pdfpageheight}{\relax}{\global\pdfpagewidth\paperwidth
\global\pdfpageheight\paperheight}%
% if using \pdfoutput=0 under pdflatex, send dvips papersize special
\ifcase\pdfoutput
\AtBeginDvi{\special{papersize=\CLASSINFOpaperwidth,\CLASSINFOpaperheight}}%
\else
% we are using pdf output, set CLASSINFOpdf flag
\global\CLASSINFOpdftrue
\fi}}

% let the user know the selected papersize
\typeout{-- Using \CLASSINFOpaperwidth\space x \CLASSINFOpaperheight\space
(\CLASSOPTIONpaper)\space paper.}

\ifCLASSINFOpdf
\typeout{-- Using PDF output.}
\else
\typeout{-- Using DVI output.}
\fi


% The idea hinted here is for LaTeX to generate markleft{} and markright{}
% automatically for you after you enter \author{}, \journal{},
% \journaldate{}, journalvol{}, \journalnum{}, etc.
% However, there may be some backward compatibility issues here as
% well as some special applications for IEEEtran.cls and special issues
% that may require the flexible \markleft{}, \markright{} and/or \markboth{}.
% We'll leave this as an open future suggestion.
%\newcommand{\journal}[1]{\def\@journal{#1}}
%\def\@journal{}



% pointsize values
% used with ifx to determine the document's normal size
\def\@IEEEptsizenine{9}
\def\@IEEEptsizeten{10}
\def\@IEEEptsizeeleven{11}
\def\@IEEEptsizetwelve{12}



% FONT DEFINITIONS (No sizexx.clo file needed) 
% V1.6 revised font sizes, displayskip values and
%      revised normalsize baselineskip to reduce underfull vbox problems
%      on the 58pc = 696pt = 9.5in text height we want
%      normalsize     #lines/column  baselineskip (aka leading)
%             9pt     63             11.0476pt (truncated down)
%            10pt     58             12pt      (exact)
%            11pt     52             13.3846pt (truncated down)
%            12pt     50             13.92pt   (exact)
%

% we need to store the nominal baselineskip for the given font size
% in case baselinestretch ever changes.
% this is a dimen, so it will not hold stretch or shrink
\newdimen\@IEEEnormalsizeunitybaselineskip
\@IEEEnormalsizeunitybaselineskip\baselineskip



%% ******* WARNING! *******
%%
%% Authors should not alter font sizes, baselineskip ("leading"),
%% margins or other spacing values in an attempt to squeeze more
%% material on each page.
%%
%% The IEEE's own typesetting software will restore the correct
%% values when re-typesetting/proofing the submitted document,
%% possibly resulting in unexpected article over length charges.
%%
%% ******* WARNING! *******


% 9pt option defaults
\ifx\CLASSOPTIONpt\@IEEEptsizenine
\typeout{-- This is a 9 point document.}
\def\normalsize{\@setfontsize{\normalsize}{9}{11.0476pt}}
\setlength{\@IEEEnormalsizeunitybaselineskip}{11.0476pt}
\normalsize
\abovedisplayskip 1.5ex plus 3pt minus 1pt
\belowdisplayskip \abovedisplayskip
\abovedisplayshortskip 0pt plus 3pt
\belowdisplayshortskip 1.5ex plus 3pt minus 1pt
\def\small{\@setfontsize{\small}{8.5}{10pt}}
\def\footnotesize{\@setfontsize{\footnotesize}{8}{9pt}}
\def\scriptsize{\@setfontsize{\scriptsize}{7}{8pt}}
\def\tiny{\@setfontsize{\tiny}{5}{6pt}}
% sublargesize is the same as large - 10pt
\def\sublargesize{\@setfontsize{\sublargesize}{10}{12pt}}
\def\large{\@setfontsize{\large}{10}{12pt}}
\def\Large{\@setfontsize{\Large}{12}{14pt}}
\def\LARGE{\@setfontsize{\LARGE}{14}{17pt}}
\def\huge{\@setfontsize{\huge}{17}{20pt}}
\def\Huge{\@setfontsize{\Huge}{20}{24pt}}
\fi
%
% 10pt option defaults
\ifx\CLASSOPTIONpt\@IEEEptsizeten
\typeout{-- This is a 10 point document.}
\def\normalsize{\@setfontsize{\normalsize}{10}{12.00pt}}
\setlength{\@IEEEnormalsizeunitybaselineskip}{12pt}
\normalsize
\abovedisplayskip 1.5ex plus 4pt minus 2pt
\belowdisplayskip \abovedisplayskip
\abovedisplayshortskip 0pt plus 4pt
\belowdisplayshortskip 1.5ex plus 4pt minus 2pt
\def\small{\@setfontsize{\small}{9}{10pt}}
\def\footnotesize{\@setfontsize{\footnotesize}{8}{9pt}}
\def\scriptsize{\@setfontsize{\scriptsize}{7}{8pt}}
\def\tiny{\@setfontsize{\tiny}{5}{6pt}}
% sublargesize is a tad smaller than large - 11pt
\def\sublargesize{\@setfontsize{\sublargesize}{11}{13.4pt}}
\def\large{\@setfontsize{\large}{12}{14pt}}
\def\Large{\@setfontsize{\Large}{14}{17pt}}
\def\LARGE{\@setfontsize{\LARGE}{17}{20pt}}
\def\huge{\@setfontsize{\huge}{20}{24pt}}
\def\Huge{\@setfontsize{\Huge}{24}{28pt}}
\fi
%
% 11pt option defaults
\ifx\CLASSOPTIONpt\@IEEEptsizeeleven
\typeout{-- This is an 11 point document.}
\def\normalsize{\@setfontsize{\normalsize}{11}{13.3846pt}}
\setlength{\@IEEEnormalsizeunitybaselineskip}{13.3846pt}
\normalsize
\abovedisplayskip 1.5ex plus 5pt minus 3pt
\belowdisplayskip \abovedisplayskip
\abovedisplayshortskip 0pt plus 5pt
\belowdisplayshortskip 1.5ex plus 5pt minus 3pt
\def\small{\@setfontsize{\small}{10}{12pt}}
\def\footnotesize{\@setfontsize{\footnotesize}{9}{10.5pt}}
\def\scriptsize{\@setfontsize{\scriptsize}{8}{9pt}}
\def\tiny{\@setfontsize{\tiny}{6}{7pt}}
% sublargesize is the same as large - 12pt
\def\sublargesize{\@setfontsize{\sublargesize}{12}{14pt}}
\def\large{\@setfontsize{\large}{12}{14pt}}
\def\Large{\@setfontsize{\Large}{14}{17pt}}
\def\LARGE{\@setfontsize{\LARGE}{17}{20pt}}
\def\huge{\@setfontsize{\huge}{20}{24pt}}
\def\Huge{\@setfontsize{\Huge}{24}{28pt}}
\fi
%
% 12pt option defaults
\ifx\CLASSOPTIONpt\@IEEEptsizetwelve
\typeout{-- This is a 12 point document.}
\def\normalsize{\@setfontsize{\normalsize}{12}{13.92pt}}
\setlength{\@IEEEnormalsizeunitybaselineskip}{13.92pt}
\normalsize
\abovedisplayskip 1.5ex plus 6pt minus 4pt
\belowdisplayskip \abovedisplayskip
\abovedisplayshortskip 0pt plus 6pt
\belowdisplayshortskip 1.5ex plus 6pt minus 4pt
\def\small{\@setfontsize{\small}{10}{12pt}}
\def\footnotesize{\@setfontsize{\footnotesize}{9}{10.5pt}}
\def\scriptsize{\@setfontsize{\scriptsize}{8}{9pt}}
\def\tiny{\@setfontsize{\tiny}{6}{7pt}}
% sublargesize is the same as large - 14pt
\def\sublargesize{\@setfontsize{\sublargesize}{14}{17pt}}
\def\large{\@setfontsize{\large}{14}{17pt}}
\def\Large{\@setfontsize{\Large}{17}{20pt}}
\def\LARGE{\@setfontsize{\LARGE}{20}{24pt}}
\def\huge{\@setfontsize{\huge}{22}{26pt}}
\def\Huge{\@setfontsize{\Huge}{24}{28pt}}
\fi



% V1.8a compsoc font sizes
% compsoc font sizes use bp "Postscript" point units (1/72in) 
% rather than the traditional pt (1/72.27)
\ifCLASSOPTIONcompsoc
% -- compsoc defaults --
% ** will override some of these values later **
% 9pt
\ifx\CLASSOPTIONpt\@IEEEptsizenine
\def\normalsize{\@setfontsize{\normalsize}{9bp}{11bp}}
\setlength{\@IEEEnormalsizeunitybaselineskip}{11bp}
\normalsize
\abovedisplayskip 1.5ex plus 3bp minus 1bp
\belowdisplayskip \abovedisplayskip
\abovedisplayshortskip 0bp plus 3bp
\belowdisplayshortskip 1.5ex plus 3bp minus 1bp
\def\small{\@setfontsize{\small}{8.5bp}{10bp}}
\def\footnotesize{\@setfontsize{\footnotesize}{8bp}{9bp}}
\def\scriptsize{\@setfontsize{\scriptsize}{7bp}{8bp}}
\def\tiny{\@setfontsize{\tiny}{5bp}{6bp}}
% sublargesize is the same as large - 10bp
\def\sublargesize{\@setfontsize{\sublargesize}{10bp}{12bp}}
\def\large{\@setfontsize{\large}{10bp}{12bp}}
\def\Large{\@setfontsize{\Large}{12bp}{14bp}}
\def\LARGE{\@setfontsize{\LARGE}{14bp}{17bp}}
\def\huge{\@setfontsize{\huge}{17bp}{20bp}}
\def\Huge{\@setfontsize{\Huge}{20bp}{24bp}}
\fi
%
% 10pt
\ifx\CLASSOPTIONpt\@IEEEptsizeten
\def\normalsize{\@setfontsize{\normalsize}{10bp}{12bp}}
\setlength{\@IEEEnormalsizeunitybaselineskip}{12bp}
\normalsize
\abovedisplayskip 1.5ex plus 4bp minus 2bp
\belowdisplayskip \abovedisplayskip
\abovedisplayshortskip 0pt plus 4bp
\belowdisplayshortskip 1.5ex plus 4bp minus 2bp
\def\small{\@setfontsize{\small}{9bp}{10bp}}
\def\footnotesize{\@setfontsize{\footnotesize}{8bp}{9bp}}
\def\scriptsize{\@setfontsize{\scriptsize}{7bp}{8bp}}
\def\tiny{\@setfontsize{\tiny}{5bp}{6bp}}
% sublargesize is a tad smaller than large - 11bp
\def\sublargesize{\@setfontsize{\sublargesize}{11bp}{13.5bp}}
\def\large{\@setfontsize{\large}{12bp}{14bp}}
\def\Large{\@setfontsize{\Large}{14bp}{17bp}}
\def\LARGE{\@setfontsize{\LARGE}{17bp}{20bp}}
\def\huge{\@setfontsize{\huge}{20bp}{24bp}}
\def\Huge{\@setfontsize{\Huge}{24bp}{28bp}}
\fi
%
% 11pt
\ifx\CLASSOPTIONpt\@IEEEptsizeeleven
\def\normalsize{\@setfontsize{\normalsize}{11bp}{13.5bp}}
\setlength{\@IEEEnormalsizeunitybaselineskip}{13.5bp}
\normalsize
\abovedisplayskip 1.5ex plus 5bp minus 3bp
\belowdisplayskip \abovedisplayskip
\abovedisplayshortskip 0pt plus 5bp
\belowdisplayshortskip 1.5ex plus 5bp minus 3bp
\def\small{\@setfontsize{\small}{10bp}{12bp}}
\def\footnotesize{\@setfontsize{\footnotesize}{9bp}{10.5bp}}
\def\scriptsize{\@setfontsize{\scriptsize}{8bp}{9bp}}
\def\tiny{\@setfontsize{\tiny}{6bp}{7bp}}
% sublargesize is the same as large - 12bp
\def\sublargesize{\@setfontsize{\sublargesize}{12bp}{14bp}}
\def\large{\@setfontsize{\large}{12bp}{14bp}}
\def\Large{\@setfontsize{\Large}{14bp}{17bp}}
\def\LARGE{\@setfontsize{\LARGE}{17bp}{20bp}}
\def\huge{\@setfontsize{\huge}{20bp}{24bp}}
\def\Huge{\@setfontsize{\Huge}{24bp}{28bp}}
\fi
%
% 12pt
\ifx\CLASSOPTIONpt\@IEEEptsizetwelve
\def\normalsize{\@setfontsize{\normalsize}{12bp}{14bp}}%
\setlength{\@IEEEnormalsizeunitybaselineskip}{14bp}%
\normalsize
\abovedisplayskip 1.5ex plus 6bp minus 4bp
\belowdisplayskip \abovedisplayskip
\abovedisplayshortskip 0pt plus 6bp
\belowdisplayshortskip 1.5ex plus 6bp minus 4bp
\def\small{\@setfontsize{\small}{10bp}{12bp}}
\def\footnotesize{\@setfontsize{\footnotesize}{9bp}{10.5bp}}
\def\scriptsize{\@setfontsize{\scriptsize}{8bp}{9bp}}
\def\tiny{\@setfontsize{\tiny}{6bp}{7bp}}
% sublargesize is the same as large - 14bp
\def\sublargesize{\@setfontsize{\sublargesize}{14bp}{17bp}}
\def\large{\@setfontsize{\large}{14bp}{17bp}}
\def\Large{\@setfontsize{\Large}{17bp}{20bp}}
\def\LARGE{\@setfontsize{\LARGE}{20bp}{24bp}}
\def\huge{\@setfontsize{\huge}{22bp}{26bp}}
\def\Huge{\@setfontsize{\Huge}{24bp}{28bp}}
\fi
%
% -- override defaults: compsoc journals use special normalsizes --
\ifCLASSOPTIONconference
% 
% compsoc conferences
% 9pt
\ifx\CLASSOPTIONpt\@IEEEptsizenine
\def\normalsize{\@setfontsize{\normalsize}{9bp}{10.8bp}}
\setlength{\@IEEEnormalsizeunitybaselineskip}{10.8bp}
\normalsize
\abovedisplayskip 1.5ex plus 3bp minus 1bp
\belowdisplayskip \abovedisplayskip
\abovedisplayshortskip 0bp plus 3bp
\belowdisplayshortskip 1.5ex plus 3bp minus 1bp
\fi
% 10pt
\ifx\CLASSOPTIONpt\@IEEEptsizeten
\def\normalsize{\@setfontsize{\normalsize}{10bp}{11.2bp}}
\setlength{\@IEEEnormalsizeunitybaselineskip}{11.2bp}
\normalsize
\abovedisplayskip 1.5ex plus 4bp minus 2bp
\belowdisplayskip \abovedisplayskip
\abovedisplayshortskip 0pt plus 4bp
\belowdisplayshortskip 1.5ex plus 4bp minus 2bp
\fi
% 11pt
\ifx\CLASSOPTIONpt\@IEEEptsizeeleven
\def\normalsize{\@setfontsize{\normalsize}{11bp}{13.2bp}}
\setlength{\@IEEEnormalsizeunitybaselineskip}{13.2bp}
\normalsize
\abovedisplayskip 1.5ex plus 5bp minus 3bp
\belowdisplayskip \abovedisplayskip
\abovedisplayshortskip 0pt plus 5bp
\belowdisplayshortskip 1.5ex plus 5bp minus 3bp
\fi
% 12pt
\ifx\CLASSOPTIONpt\@IEEEptsizetwelve
\def\normalsize{\@setfontsize{\normalsize}{12bp}{14.4bp}}
\setlength{\@IEEEnormalsizeunitybaselineskip}{14.4bp}
\normalsize
\abovedisplayskip 1.5ex plus 6bp minus 4bp
\belowdisplayskip \abovedisplayskip
\abovedisplayshortskip 0pt plus 6bp
\belowdisplayshortskip 1.5ex plus 6bp minus 4bp
\fi
% 
% compsoc nonconferences
\else
% 9pt
\ifx\CLASSOPTIONpt\@IEEEptsizenine
\def\normalsize{\@setfontsize{\normalsize}{9bp}{10.8bp}}
\setlength{\@IEEEnormalsizeunitybaselineskip}{10.8bp}
\normalsize
\abovedisplayskip 1.5ex plus 3bp minus 1bp
\belowdisplayskip \abovedisplayskip
\abovedisplayshortskip 0bp plus 3bp
\belowdisplayshortskip 1.5ex plus 3bp minus 1bp
\fi
% 10pt
\ifx\CLASSOPTIONpt\@IEEEptsizeten
% the official spec is 9.5bp with 11.4bp leading for 10pt,
% but measurements of proofs suggest upto 11.723bp leading
% here we'll use 11.54bp which gives 61 lines per column
% with the standard compsoc margins
\def\normalsize{\@setfontsize{\normalsize}{9.5bp}{11.54bp}}
\setlength{\@IEEEnormalsizeunitybaselineskip}{11.54bp}
\normalsize
\abovedisplayskip 1.5ex plus 4bp minus 2bp
\belowdisplayskip \abovedisplayskip
\abovedisplayshortskip 0pt plus 4bp
\belowdisplayshortskip 1.5ex plus 4bp minus 2bp
\fi
% 11pt
\ifx\CLASSOPTIONpt\@IEEEptsizeeleven
\def\normalsize{\@setfontsize{\normalsize}{11bp}{13.2bp}}
\setlength{\@IEEEnormalsizeunitybaselineskip}{13.2bp}
\normalsize
\abovedisplayskip 1.5ex plus 5bp minus 3bp
\belowdisplayskip \abovedisplayskip
\abovedisplayshortskip 0pt plus 5bp
\belowdisplayshortskip 1.5ex plus 5bp minus 3bp
\fi
% 12pt
\ifx\CLASSOPTIONpt\@IEEEptsizetwelve
\def\normalsize{\@setfontsize{\normalsize}{12bp}{14.4bp}}
\setlength{\@IEEEnormalsizeunitybaselineskip}{14.4bp}
\normalsize
\abovedisplayskip 1.5ex plus 6bp minus 4bp
\belowdisplayskip \abovedisplayskip
\abovedisplayshortskip 0pt plus 6bp
\belowdisplayshortskip 1.5ex plus 6bp minus 4bp
\fi
\fi\fi




% V1.6 The Computer Modern Fonts will issue a substitution warning for
% 24pt titles (24.88pt is used instead, but the default and correct
% Times font will scale exactly as needed) increase the substitution
% tolerance to turn off this warning.
% 
% V1.8a, the compsoc bp font sizes can also cause bogus font substitution
% warnings with footnote or scriptsize math and the $\bullet$ itemized
% list of \IEEEcompsocitemizethanks. So, increase this to 1.5pt or more.
\def\fontsubfuzz{1.7bp}


% warn the user in case they forget to use the 9pt option with
% technote
\ifCLASSOPTIONtechnote%
 \ifx\CLASSOPTIONpt\@IEEEptsizenine\else%
  \typeout{** ATTENTION: Technotes are normally 9pt documents.}%
 \fi%
\fi


% V1.7
% Improved \textunderscore to provide a much better fake _ when used with
% OT1 encoding. Under OT1, detect use of pcr or cmtt \ttfamily and use
% available true _ glyph for those two typewriter fonts.
\def\@IEEEstringptm{ptm} % Times Roman family
\def\@IEEEstringppl{ppl} % Palatino Roman family
\def\@IEEEstringphv{phv} % Helvetica Sans Serif family
\def\@IEEEstringpcr{pcr} % Courier typewriter family
\def\@IEEEstringcmtt{cmtt} % Computer Modern typewriter family
\DeclareTextCommandDefault{\textunderscore}{\leavevmode
\ifx\f@family\@IEEEstringpcr\string_\else
\ifx\f@family\@IEEEstringcmtt\string_\else
\ifx\f@family\@IEEEstringptm\kern 0em\vbox{\hrule\@width 0.5em\@height 0.5pt\kern -0.3ex}\else
\ifx\f@family\@IEEEstringppl\kern 0em\vbox{\hrule\@width 0.5em\@height 0.5pt\kern -0.3ex}\else
\ifx\f@family\@IEEEstringphv\kern -0.03em\vbox{\hrule\@width 0.62em\@height 0.52pt\kern -0.33ex}\kern -0.03em\else
\kern 0.09em\vbox{\hrule\@width 0.6em\@height 0.44pt\kern -0.63pt\kern -0.42ex}\kern 0.09em\fi\fi\fi\fi\fi\relax}




% set the default \baselinestretch
\def\baselinestretch{1}
\ifCLASSOPTIONdraftcls
  \def\baselinestretch{1.5}% default baselinestretch for draft modes
\fi 


% process CLASSINPUT baselinestretch
\ifx\CLASSINPUTbaselinestretch\@IEEEundefined
\else
  \edef\baselinestretch{\CLASSINPUTbaselinestretch} % user CLASSINPUT override
  \typeout{** ATTENTION: Overriding \string\baselinestretch\space to
           \baselinestretch\space via \string\CLASSINPUT.}
\fi

\small\normalsize % make \baselinestretch take affect




% store the normalsize baselineskip
\newdimen\CLASSINFOnormalsizebaselineskip
\CLASSINFOnormalsizebaselineskip=\baselineskip\relax
% and the normalsize unity (baselinestretch=1) baselineskip
% we could save a register by giving the user access to
% \@IEEEnormalsizeunitybaselineskip. However, let's protect
% its read only internal status
\newdimen\CLASSINFOnormalsizeunitybaselineskip
\CLASSINFOnormalsizeunitybaselineskip=\@IEEEnormalsizeunitybaselineskip\relax
% store the nominal value of jot
\newdimen\IEEEnormaljot
\IEEEnormaljot=0.25\baselineskip\relax

% set \jot
\jot=\IEEEnormaljot\relax




% V1.6, we are now going to fine tune the interword spacing
% The default interword glue for Times under TeX appears to use a
% nominal interword spacing of 25% (relative to the font size, i.e., 1em)
% a maximum of 40% and a minimum of 19%.
% For example, 10pt text uses an interword glue of:
% 
% 2.5pt plus 1.49998pt minus 0.59998pt
% 
% However, the IEEE allows for a more generous range which reduces the need
% for hyphenation, especially for two column text. Furthermore, the IEEE
% tends to use a little bit more nominal space between the words.
% The IEEE's interword spacing percentages appear to be:
% 35% nominal
% 23% minimum
% 50% maximum
% (They may even be using a tad more for the largest fonts such as 24pt.)
% 
% for bold text, the IEEE increases the spacing a little more:
% 37.5% nominal
% 23% minimum
% 55% maximum

% here are the interword spacing ratios we'll use
% for medium (normal weight)
\def\@IEEEinterspaceratioM{0.35}
\def\@IEEEinterspaceMINratioM{0.23}
\def\@IEEEinterspaceMAXratioM{0.50}

% for bold
\def\@IEEEinterspaceratioB{0.375}
\def\@IEEEinterspaceMINratioB{0.23}
\def\@IEEEinterspaceMAXratioB{0.55}


% compsoc nonconference papers use Palatino,
% tweak settings to better match the proofs
\ifCLASSOPTIONcompsoc
\ifCLASSOPTIONconference\else
% for medium (normal weight)
\def\@IEEEinterspaceratioM{0.28}
\def\@IEEEinterspaceMINratioM{0.21}
\def\@IEEEinterspaceMAXratioM{0.47}
% for bold
\def\@IEEEinterspaceratioB{0.305}
\def\@IEEEinterspaceMINratioB{0.21}
\def\@IEEEinterspaceMAXratioB{0.52}
\fi\fi


% command to revise the interword spacing for the current font under TeX:
% \fontdimen2 = nominal interword space
% \fontdimen3 = interword stretch
% \fontdimen4 = interword shrink
% since all changes to the \fontdimen are global, we can enclose these commands
% in braces to confine any font attribute or length changes
\def\@@@IEEEsetfontdimens#1#2#3{{%
\setlength{\@IEEEtrantmpdimenB}{\f@size pt}% grab the font size in pt, could use 1em instead.
\setlength{\@IEEEtrantmpdimenA}{#1\@IEEEtrantmpdimenB}%
\fontdimen2\font=\@IEEEtrantmpdimenA\relax
\addtolength{\@IEEEtrantmpdimenA}{-#2\@IEEEtrantmpdimenB}%
\fontdimen3\font=-\@IEEEtrantmpdimenA\relax
\setlength{\@IEEEtrantmpdimenA}{#1\@IEEEtrantmpdimenB}%
\addtolength{\@IEEEtrantmpdimenA}{-#3\@IEEEtrantmpdimenB}%
\fontdimen4\font=\@IEEEtrantmpdimenA\relax}}

% revise the interword spacing for each font weight
\def\@@IEEEsetfontdimens{{%
\mdseries
\@@@IEEEsetfontdimens{\@IEEEinterspaceratioM}{\@IEEEinterspaceMAXratioM}{\@IEEEinterspaceMINratioM}%
\bfseries
\@@@IEEEsetfontdimens{\@IEEEinterspaceratioB}{\@IEEEinterspaceMAXratioB}{\@IEEEinterspaceMINratioB}%
}}

% revise the interword spacing for each font shape
% \slshape is not often used for IEEE work and is not altered here. The \scshape caps are
% already a tad too large in the free LaTeX fonts (as compared to what the IEEE uses) so we
% won't alter these either.
\def\@IEEEsetfontdimens{{%
\normalfont
\@@IEEEsetfontdimens
\normalfont\itshape
\@@IEEEsetfontdimens
}}

% command to revise the interword spacing for each font size (and shape
% and weight). Only the \rmfamily is done here as \ttfamily uses a 
% fixed spacing and \sffamily is not used as the main text of IEEE papers.
\def\@IEEEtunefonts{{\selectfont\rmfamily
\tiny\@IEEEsetfontdimens
\scriptsize\@IEEEsetfontdimens
\footnotesize\@IEEEsetfontdimens
\small\@IEEEsetfontdimens
\normalsize\@IEEEsetfontdimens
\sublargesize\@IEEEsetfontdimens
\large\@IEEEsetfontdimens
\LARGE\@IEEEsetfontdimens
\huge\@IEEEsetfontdimens
\Huge\@IEEEsetfontdimens}}

% if the nofonttune class option is not given, revise the interword spacing
% now - in case IEEEtran makes any default length measurements, and make
% sure all the default fonts are loaded
\ifCLASSOPTIONnofonttune\else
\@IEEEtunefonts
\fi

% and again at the start of the document in case the user loaded different fonts
\AtBeginDocument{\ifCLASSOPTIONnofonttune\else\@IEEEtunefonts\fi}





% -- V1.8a page setup commands --

% The default sample text for calculating margins
% Note that IEEE publications use \scriptsize for headers and footers.
\def\IEEEdefaultsampletext{\normalfont\normalsize gT}
\def\IEEEdefaultheadersampletext{\normalfont\scriptsize T}% IEEE headers default to uppercase
\def\IEEEdefaultfootersampletext{\normalfont\scriptsize gT}



% usage: \IEEEsettextwidth{inner margin}{outer margin}
% Sets \textwidth to allow the specified inner and outer margins
% for the current \paperwidth.
\def\IEEEsettextwidth#1#2{\@IEEEtrantmpdimenA\paperwidth
\@IEEEtrantmpdimenB#1\relax
\advance\@IEEEtrantmpdimenA by -\@IEEEtrantmpdimenB
\@IEEEtrantmpdimenB#2\relax
\advance\@IEEEtrantmpdimenA by -\@IEEEtrantmpdimenB
\textwidth\@IEEEtrantmpdimenA}



% usage: \IEEEsetsidemargin{mode: i, o, c, a}{margin/offset}
% Sets \oddsidemargin and \evensidemargin to yield the specified margin
% of the given mode.
% The available modes are:
% i = inner margin
% o = outer margin
% c = centered, with the given offset
% a = adjust the margins using the given offset
% For the offsets, positive values increase the inner margin.
% \textwidth should be set properly for the given margins before calling this
% function.
\def\IEEEsetsidemargin#1#2{\@IEEEtrantmpdimenA #2\relax
\@IEEEextracttoken{#1}\relax
% check for mode errors
\ifx\@IEEEextractedtokenmacro\@empty
  \@IEEEclspkgerror{Empty mode type in \string\IEEEsetsidemargin\space (line \the\inputlineno).\MessageBreak
  Defaulting to `i'}{Valid modes for \string\IEEEsetsidemargin\space are: i, o, c and a.}\relax
  \let\@IEEEextractedtoken=i\relax
  \def\@IEEEextractedtokenmacro{i}\relax
\else
  \ifx\@IEEEextractedtokensdiscarded\@empty\else
    \typeout{** WARNING: \string\IEEEsetsidemargin\space mode specifiers after the first in `\@IEEEextracttokenarg' ignored (line \the\inputlineno).}\relax
  \fi
\fi
% handle each mode
\if\@IEEEextractedtoken a\relax
  \advance\oddsidemargin by \@IEEEtrantmpdimenA\relax
\else
\if\@IEEEextractedtoken c\relax
  \oddsidemargin\paperwidth
  \advance\oddsidemargin by -\textwidth
  \divide\oddsidemargin by 2\relax
  \advance\oddsidemargin by -1in\relax
  \advance\oddsidemargin by \@IEEEtrantmpdimenA\relax
\else
\if\@IEEEextractedtoken o\relax
  \oddsidemargin\paperwidth
  \advance\oddsidemargin by -\textwidth
  \advance\oddsidemargin by -\@IEEEtrantmpdimenA
  \advance\oddsidemargin by -1in\relax
\else
  \if\@IEEEextractedtoken i\relax
  \else
    \@IEEEclspkgerror{Unknown mode type `\@IEEEextractedtokenmacro' in \string\IEEEsetsidemargin\space (line \the\inputlineno).\MessageBreak
    Defaulting to `i'}%
    {Valid modes for \string\IEEEsetsidemargin\space are: i, o, c  and a.}%
  \fi
  \oddsidemargin\@IEEEtrantmpdimenA
  \advance\oddsidemargin by -1in\relax
\fi\fi\fi
% odd and even side margins both mean "inner" for single sided pages
\evensidemargin\oddsidemargin
% but are mirrors of each other when twosided is in effect
\if@twoside
  \evensidemargin\paperwidth
  \advance\evensidemargin by -\textwidth
  \advance\evensidemargin by -\oddsidemargin
  % have to compensate for both the builtin 1in LaTex offset
  % and the fact we already subtracted this offset from \oddsidemargin
  \advance\evensidemargin -2in\relax
\fi}



% usage: \IEEEsettextheight[sample text]{top text margin}{bottom text margin}
% Sets \textheight based on the specified top margin and bottom margin.
% Takes into consideration \paperheight, \topskip, and (by default) the
% the actual height and depth of the \IEEEdefaultsampletext text. 
\def\IEEEsettextheight{\@ifnextchar [{\@IEEEsettextheight}{\@IEEEsettextheight[\IEEEdefaultsampletext]}}
\def\@IEEEsettextheight[#1]#2#3{\textheight\paperheight\relax
  \@IEEEtrantmpdimenA #2\relax
  \advance \textheight by -\@IEEEtrantmpdimenA% subtract top margin
  \@IEEEtrantmpdimenA #3\relax
  \advance \textheight by -\@IEEEtrantmpdimenA% subtract bottom margin
  \advance \textheight by \topskip% add \topskip
  % subtract off everything above the top, and below the bottom, baselines
  \settoheight{\@IEEEtrantmpdimenA}{\begingroup #1\relax\relax\relax\endgroup}\relax
  \advance \textheight by -\@IEEEtrantmpdimenA
  \settodepth{\@IEEEtrantmpdimenA}{\begingroup #1\relax\relax\relax\endgroup}\relax
  \advance \textheight by -\@IEEEtrantmpdimenA}



\newdimen\IEEEquantizedlength
\IEEEquantizedlength 0sp\relax
\newdimen\IEEEquantizedlengthdiff
\IEEEquantizedlengthdiff 0sp\relax
\def\IEEEquantizedlengthint{0}

% usage: \IEEEquantizelength{mode: d, c, i}{base unit}{length}
% Sets the length \IEEEquantizedlength to be an integer multiple of the given
% (nonzero) base unit such that \IEEEquantizedlength approximates the given
% length.
% \IEEEquantizedlengthdiff is a length equal to the difference between the
% \IEEEquantizedlength and the given length.
% \IEEEquantizedlengthint is a macro containing the integer number of base units
% in \IEEEquantizedlength.
% i.e., \IEEEquantizedlength =  \IEEEquantizedlengthint * base unit
% The mode determines how \IEEEquantizedlength is quantized:
% d = always decrease (always round down \IEEEquantizeint)
% c = use the closest match
% i = always increase (always round up \IEEEquantizeint)
% In anycase, if the given length is already quantized,
% \IEEEquantizedlengthdiff will be set to zero.
\def\IEEEquantizelength#1#2#3{\begingroup
% work in isolation so as not to externally disturb the \@IEEEtrantmp
% variables
% load the argument values indirectly via \IEEEquantizedlengthdiff
% in case the user refers to our \@IEEEtrantmpdimenX, \IEEEquantizedlength,
% etc. in the arguments. we also will work with these as counters,
% i.e., in sp units
% A has the base unit
\IEEEquantizedlengthdiff #2\relax\relax\relax\relax
\@IEEEtrantmpcountA\IEEEquantizedlengthdiff
% B has the input length
\IEEEquantizedlengthdiff #3\relax\relax\relax\relax
\@IEEEtrantmpcountB\IEEEquantizedlengthdiff
\@IEEEtrantmpdimenA\the\@IEEEtrantmpcountA sp\relax
\@IEEEtrantmpdimenB\the\@IEEEtrantmpcountB sp\relax
% \@IEEEtrantmpcountC will have the quantized int
% \IEEEquantizedlength will have the quantized length
% \@IEEEtrantmpdimenC will have the quantized diff
% initialize them to zero as this is what will be
% exported if an error occurs
\@IEEEtrantmpcountC 0\relax
\IEEEquantizedlength 0sp\relax
\@IEEEtrantmpdimenC 0sp\relax
% extract mode
\@IEEEextracttoken{#1}\relax
% check for mode errors
\ifx\@IEEEextractedtokenmacro\@empty
  \@IEEEclspkgerror{Empty mode type in \string\IEEEquantizelength\space (line \the\inputlineno).\MessageBreak
  Defaulting to `d'}{Valid modes for \string\IEEEquantizelength\space are: d, c and i.}\relax
  \let\@IEEEextractedtoken=d\relax
  \def\@IEEEextractedtokenmacro{d}\relax
\else
  \ifx\@IEEEextractedtokensdiscarded\@empty\else
    \typeout{** WARNING: \string\IEEEquantizelength\space mode specifiers after the first in `\@IEEEextracttokenarg' ignored (line \the\inputlineno).}\relax
  \fi
\fi
% check for base unit is zero error
\ifnum\@IEEEtrantmpcountA=0\relax
\@IEEEclspkgerror{Base unit is zero in \string\IEEEquantizelength\space (line \the\inputlineno).\MessageBreak
  \string\IEEEquantizedlength\space and \string\IEEEquantizedlengthdiff\space are set to zero}{Division by zero is not allowed.}\relax
\else% base unit is nonzero
  % \@IEEEtrantmpcountC carries the number of integer units
  % in the quantized length (integer length \ base)
  \@IEEEtrantmpcountC\@IEEEtrantmpcountB\relax
  \divide\@IEEEtrantmpcountC by \@IEEEtrantmpcountA\relax
  % \IEEEquantizedlength has the (rounded down) quantized length
  % = base * int
  \IEEEquantizedlength\@IEEEtrantmpdimenA\relax
  \multiply\IEEEquantizedlength by \@IEEEtrantmpcountC\relax
  % \@IEEEtrantmpdimenC has the difference
  % = quantized length - length
  \@IEEEtrantmpdimenC\IEEEquantizedlength\relax
  \advance\@IEEEtrantmpdimenC by -\@IEEEtrantmpdimenB\relax
  % trap special case of length being already quantized
  % to avoid a roundup under i option
  \ifdim\@IEEEtrantmpdimenC=0sp\relax
  \else % length not is already quantized
    % set dimenA to carry the upper quantized (absolute value) difference:
    % quantizedlength + base - length
    \advance\@IEEEtrantmpdimenA by \IEEEquantizedlength\relax
    \advance\@IEEEtrantmpdimenA by -\@IEEEtrantmpdimenB\relax
    % set dimenB to carry the lower quantized (absolute value) difference:
    % length - quantizedlength
    \advance\@IEEEtrantmpdimenB by -\IEEEquantizedlength\relax
    % handle each mode
    \if\@IEEEextractedtoken c\relax
      % compare upper and lower amounts, select upper if lower > upper
      \ifdim\@IEEEtrantmpdimenB>\@IEEEtrantmpdimenA\relax
        % use upper
        \advance\IEEEquantizedlength by \the\@IEEEtrantmpcountA sp\relax
        \advance\@IEEEtrantmpcountC by 1\relax
        \@IEEEtrantmpdimenC\@IEEEtrantmpdimenA
      \else% <=. uselower
        % no need to do anything for lower, use output values already setup
      \fi
    \else% not mode c
    \if\@IEEEextractedtoken i\relax
      % always round up under i mode
      \advance\IEEEquantizedlength by \the\@IEEEtrantmpcountA sp\relax
      \advance\@IEEEtrantmpcountC by 1\relax
      \@IEEEtrantmpdimenC\@IEEEtrantmpdimenA
    \else
      \if\@IEEEextractedtoken d\relax
      \else
        \@IEEEclspkgerror{Unknown mode type `\@IEEEextractedtokenmacro' in \string\IEEEquantizelength\space (line \the\inputlineno).\MessageBreak
        Defaulting to `d'}%
        {Valid modes for \string\IEEEquantizelength\space are: d, c, and i.}\relax
      \fi % if d
      % no need to do anything for d, use output values already setup
    \fi\fi % if i, c
  \fi % if length is already quantized
\fi% if base unit is zero
% globally assign the results to macros we use here to escape the enclosing
% group without needing to call \global on any of the \@IEEEtrantmp variables.
% \@IEEEtrantmpcountC has the quantized int
% \IEEEquantizedlength has the quantized length
% \@IEEEtrantmpdimenC has the quantized diff
\xdef\@IEEEquantizedlengthintmacro{\the\@IEEEtrantmpcountC}\relax
\@IEEEtrantmpcountC\IEEEquantizedlength\relax
\xdef\@IEEEquantizedlengthmacro{\the\@IEEEtrantmpcountC}\relax
\@IEEEtrantmpcountC\@IEEEtrantmpdimenC\relax
\xdef\@IEEEquantizedlengthdiffmacro{\the\@IEEEtrantmpcountC}\relax
\endgroup
% locally assign the outputs here from the macros
\expandafter\IEEEquantizedlength\@IEEEquantizedlengthmacro sp\relax
\expandafter\IEEEquantizedlengthdiff\@IEEEquantizedlengthdiffmacro sp\relax
\edef\IEEEquantizedlengthint{\@IEEEquantizedlengthintmacro}\relax}



\newdimen\IEEEquantizedtextheightdiff
\IEEEquantizedtextheightdiff 0sp\relax

% usage: \IEEEquantizetextheight[base unit]{mode: d, c, i}
% Sets \textheight to be an integer multiple of the current \baselineskip
% (or the optionally specified base unit) plus the first (\topskip) line.
% \IEEEquantizedtextheightdiff is a length equal to the difference between
% the new quantized and original \textheight.
% \IEEEquantizedtextheightlpc is a macro containing the integer number of
% lines per column under the quantized \textheight. i.e.,
% \textheight = \IEEEquantizedtextheightlpc * \baselineskip + \topskip
% The mode determines how \textheight is quantized:
% d = always decrease (always round down the number of lines per column)
% c = use the closest match
% i = always increase (always round up the number of lines per column)
% In anycase, if \textheight is already quantized, it will remain unchanged,
% and \IEEEquantizedtextheightdiff will be set to zero.
% Depends on: \IEEEquantizelength
\def\IEEEquantizetextheight{\@ifnextchar [{\@IEEEquantizetextheight}{\@IEEEquantizetextheight[\baselineskip]}}
\def\@IEEEquantizetextheight[#1]#2{\begingroup
% use our \IEEEquantizedtextheightdiff as a scratch pad
% we need to subtract off \topskip before quantization
\IEEEquantizedtextheightdiff\textheight
\advance\IEEEquantizedtextheightdiff by -\topskip\relax
\IEEEquantizelength{#2}{#1}{\IEEEquantizedtextheightdiff}
% add back \topskip line
\advance\IEEEquantizedlength by \topskip
\@IEEEtrantmpcountC\IEEEquantizedlengthint\relax
\advance\@IEEEtrantmpcountC by 1\relax
% globally assign the results to macros we use here to escape the enclosing
% group without needing to call \global on any of the \@IEEEtrantmp variables.
\xdef\@IEEEquantizedtextheightlpcmacro{\the\@IEEEtrantmpcountC}\relax
\@IEEEtrantmpcountC\IEEEquantizedlength\relax
\xdef\@IEEEquantizedtextheightmacro{\the\@IEEEtrantmpcountC}\relax
\@IEEEtrantmpcountC\IEEEquantizedlengthdiff\relax
\xdef\@IEEEquantizedtextheightdiffmacro{\the\@IEEEtrantmpcountC}\relax
\endgroup
% locally assign the outputs here from the macros
\textheight\@IEEEquantizedtextheightmacro sp\relax
\IEEEquantizedtextheightdiff\@IEEEquantizedtextheightdiffmacro sp\relax
\edef\IEEEquantizedtextheightlpc{\@IEEEquantizedtextheightlpcmacro}}



% usage: \IEEEsettopmargin[sample text]{mode: t, b, c, a, q}{margin/offset}
% Sets \topmargin based on the specified vertical margin.
% Takes into consideration the base 1in offset, \headheight, \headsep,
% \topskip, and (by default) the the actual height (or, for the bottom, depth)
% of the \IEEEdefaultsampletext text.
% The available modes are:
% t = top margin
% b = bottom margin
% c = vertically centered, with the given offset
% a = adjust the vertical margins using the given offset
% q = adjust the margins using \IEEEquantizedtextheightdiff and the given offset
% For the offsets, positive values increase the top margin.
% \headheight, \headsep, \topskip and \textheight should be set properly for the
% given margins before calling this function.
\def\IEEEsettopmargin{\@ifnextchar [{\@IEEEsettopmargin}{\@IEEEsettopmargin[\IEEEdefaultsampletext]}}
\def\@IEEEsettopmargin[#1]#2#3{\@IEEEtrantmpdimenA #3\relax
\@IEEEextracttoken{#2}\relax
% check for mode errors
\ifx\@IEEEextractedtokenmacro\@empty
  \@IEEEclspkgerror{Empty mode type in \string\IEEEsettopmargin\space (line \the\inputlineno).\MessageBreak
  Defaulting to `t'}{Valid modes for \string\IEEEsettopmargin\space are: t, b, c, a and q.}\relax
  \let\@IEEEextractedtoken=t\relax
  \def\@IEEEextractedtokenmacro{t}\relax
\else
  \ifx\@IEEEextractedtokensdiscarded\@empty\else
    \typeout{** WARNING: \string\IEEEsettopmargin\space mode specifiers after the first in `\@IEEEextracttokenarg' ignored (line \the\inputlineno).}\relax
  \fi
\fi
% handle each mode
\if\@IEEEextractedtoken a\relax
  \advance\topmargin by \@IEEEtrantmpdimenA\relax
\else
\if\@IEEEextractedtoken q\relax
  % we need to adjust by half the \IEEEquantizedtextheightdiff value
  \@IEEEtrantmpdimenB\IEEEquantizedtextheightdiff\relax
  \divide\@IEEEtrantmpdimenB by 2\relax
  % a positive \IEEEquantizedtextheightdiff means we need to reduce \topmargin
  % because \textheight has been lenghtened
  \advance\topmargin by -\@IEEEtrantmpdimenB\relax
  \advance\topmargin by \@IEEEtrantmpdimenA\relax
\else
\if\@IEEEextractedtoken c\relax
  \topmargin\paperheight
  \advance\topmargin by -\textheight
  % \textheight includes \topskip, but we should not count topskip whitespace here, backout
  \advance \topmargin by \topskip
  \settoheight{\@IEEEtrantmpdimenB}{\begingroup #1\relax\relax\relax\endgroup}\relax
  \advance\topmargin by -\@IEEEtrantmpdimenB\relax
  \settodepth{\@IEEEtrantmpdimenB}{\begingroup #1\relax\relax\relax\endgroup}\relax
  \advance\topmargin by -\@IEEEtrantmpdimenB\relax
  \divide\topmargin by 2\relax
  \advance\topmargin by \@IEEEtrantmpdimenA\relax
\else
\if\@IEEEextractedtoken b\relax
  \topmargin\paperheight
  \advance\topmargin by -\textheight
  % \textheight includes \topskip, but we should not count topskip whitespace here, backout
  \advance \topmargin by \topskip
  \settodepth{\@IEEEtrantmpdimenB}{\begingroup #1\relax\relax\relax\endgroup}\relax
  \advance\topmargin by -\@IEEEtrantmpdimenB\relax
  \advance\topmargin by -\@IEEEtrantmpdimenA\relax
\else
  \if\@IEEEextractedtoken t\relax
  \else
    \@IEEEclspkgerror{Unknown mode type `\@IEEEextractedtokenmacro' in \string\IEEEsettopmargin\space (line \the\inputlineno).\MessageBreak
    Defaulting to `t'}%
    {Valid modes for \string\IEEEsettopmargin\space are: t, b, c, a and q.}\relax
  \fi
  \topmargin\@IEEEtrantmpdimenA\relax
  \settoheight{\@IEEEtrantmpdimenB}{\begingroup #1\relax\relax\relax\endgroup}\relax
  \advance\topmargin by \@IEEEtrantmpdimenB\relax
\fi\fi % if t, b, c
% convert desired top margin into actual \topmargin
% this is not done for the q or a modes because they are only adjustments
\advance \topmargin by -\topskip
\advance \topmargin by -1in
\advance \topmargin by -\headheight
\advance \topmargin by -\headsep
\fi\fi % if q, a
}



% usage: \IEEEsetheadermargin[header sample][text sample]{mode: t, b, c, a}{margin/offset}
% Differentially adjusts \topmargin and \headsep (such that their sum is unchanged)
% based on the specified header margin.
% Takes into consideration the base 1in offset, \headheight, \topskip, and (by default)
% the actual height (or depth) of the \IEEEdefaultheadersampletext and
% \IEEEdefaultsampletext text.
% The available modes are:
% t = top margin (top of the header text to the top of the page)
% b = bottom margin (bottom of the header text to the top of the main text)
% c = vertically centered between the main text and the top of the page,
%     with the given offset
% a = adjust the vertical position using the given offset
% For the offsets, positive values move the header downward.
% \headheight, \headsep, \topskip and \topmargin should be set properly before
% calling this function.
\def\IEEEsetheadermargin{\@ifnextchar [{\@IEEEsetheadermargin}{\@IEEEsetheadermargin[\IEEEdefaultheadersampletext]}}
\def\@IEEEsetheadermargin[#1]{\@ifnextchar [{\@@IEEEsetheadermargin[#1]}{\@@IEEEsetheadermargin[#1][\IEEEdefaultsampletext]}}
\def\@@IEEEsetheadermargin[#1][#2]#3#4{\@IEEEtrantmpdimenA #4\relax
\@IEEEextracttoken{#3}\relax
% check for mode errors
\ifx\@IEEEextractedtokenmacro\@empty
  \@IEEEclspkgerror{Empty mode type in \string\IEEEsetheadermargin\space (line \the\inputlineno).\MessageBreak
  Defaulting to `t'}{Valid modes for \string\IEEEsetheadermargin\space are: t, b, c, and a.}\relax
  \let\@IEEEextractedtoken=t\relax
  \def\@IEEEextractedtokenmacro{t}\relax
\else
  \ifx\@IEEEextractedtokensdiscarded\@empty\else
    \typeout{** WARNING: \string\IEEEsetheadermargin\space mode specifiers after the first in `\@IEEEextracttokenarg' ignored (line \the\inputlineno).}\relax
  \fi
\fi
% handle each mode
\if\@IEEEextractedtoken a\relax
  % No need to do anything here and can pass through the adjustment
  % value as is. The end adjustment of \topmargin and \headsep will
  % do all that is needed
\else
\if\@IEEEextractedtoken c\relax
  % get the bottom margin
  \@IEEEtrantmpdimenB\headsep\relax
  \settodepth{\@IEEEtrantmpdimenC}{\begingroup #1\relax\relax\relax\endgroup}\relax
  \advance\@IEEEtrantmpdimenB by -\@IEEEtrantmpdimenC
  \advance\@IEEEtrantmpdimenB by \topskip
  \settoheight{\@IEEEtrantmpdimenC}{\begingroup #2\relax\relax\relax\endgroup}\relax
  \advance\@IEEEtrantmpdimenB by -\@IEEEtrantmpdimenC
  % at this point \@IEEEtrantmpdimenB has the actual header bottom margin
  % subtract from it the top header margin
  \advance\@IEEEtrantmpdimenB -1in\relax % take into consideration the system 1in offset of the top margin
  \advance\@IEEEtrantmpdimenB by -\topmargin
  \advance\@IEEEtrantmpdimenB by -\headheight
  \settoheight{\@IEEEtrantmpdimenC}{\begingroup #1\relax\relax\relax\endgroup}\relax
  \advance\@IEEEtrantmpdimenB by \@IEEEtrantmpdimenC
  % at this point \@IEEEtrantmpdimenB has the difference between the bottom and top margins
  % we need to adjust by half this amount to center the header
  \divide\@IEEEtrantmpdimenB by 2\relax
  % and add to offset
  \advance\@IEEEtrantmpdimenA by \@IEEEtrantmpdimenB
\else
\if\@IEEEextractedtoken b\relax
  \@IEEEtrantmpdimenB\headsep\relax
  \settodepth{\@IEEEtrantmpdimenC}{\begingroup #1\relax\relax\relax\endgroup}\relax
  \advance\@IEEEtrantmpdimenB by -\@IEEEtrantmpdimenC
  \advance\@IEEEtrantmpdimenB by \topskip
  \settoheight{\@IEEEtrantmpdimenC}{\begingroup #2\relax\relax\relax\endgroup}\relax
  \advance\@IEEEtrantmpdimenB by -\@IEEEtrantmpdimenC
  % at this point \@IEEEtrantmpdimenB has the actual header bottom margin
  % get the difference between the actual and the desired
  \advance\@IEEEtrantmpdimenB by -\@IEEEtrantmpdimenA
  \@IEEEtrantmpdimenA\@IEEEtrantmpdimenB
\else
  \if\@IEEEextractedtoken t\relax
  \else
    \@IEEEclspkgerror{Unknown mode type `\@IEEEextractedtokenmacro' in \string\IEEEsetheadermargin\space (line \the\inputlineno).\MessageBreak
    Defaulting to `t'}%
    {Valid modes for \string\IEEEsetheadermargin\space are: t, b, c and a.}\relax
  \fi
  \@IEEEtrantmpdimenB 1in\relax % take into consideration the system 1in offset of the top margin
  \advance\@IEEEtrantmpdimenB by \topmargin
  \advance\@IEEEtrantmpdimenB by \headheight
  \settoheight{\@IEEEtrantmpdimenC}{\begingroup #1\relax\relax\relax\endgroup}\relax
  \advance\@IEEEtrantmpdimenB by -\@IEEEtrantmpdimenC
  % at this point \@IEEEtrantmpdimenB has the actual header top margin
  % get the difference between the desired and the actual
  \advance\@IEEEtrantmpdimenA by -\@IEEEtrantmpdimenB
\fi\fi % if t, b, c
\fi % if a
% advance \topmargin by the needed amount and reduce \headsep by the same
% so as not to disturb the location of the main text
\advance\topmargin by \@IEEEtrantmpdimenA\relax
\advance\headsep by -\@IEEEtrantmpdimenA\relax
}



% usage: \IEEEsetfootermargin[footer sample][text sample]{mode: t, b, c, a}{margin/offset}
% Adjusts \footskip based on the specified footer margin.
% Takes into consideration the base 1in offset, \paperheight, \headheight,
% \headsep, \textheight and (by default) the actual height (or depth) of the
% \IEEEdefaultfootersampletext and \IEEEdefaultsampletext text.
% The available modes are:
% t = top margin (top of the footer text to the bottom of the main text)
% b = bottom margin (bottom of the footer text to the bottom of page)
% c = vertically centered between the main text and the bottom of the page,
%     with the given offset
% a = adjust the vertical position using the given offset
% For the offsets, positive values move the footer downward.
% \headheight, \headsep, \topskip, \topmargin, and \textheight should be set
% properly before calling this function.
\def\IEEEsetfootermargin{\@ifnextchar [{\@IEEEsetfootermargin}{\@IEEEsetfootermargin[\IEEEdefaultfootersampletext]}}
\def\@IEEEsetfootermargin[#1]{\@ifnextchar [{\@@IEEEsetfootermargin[#1]}{\@@IEEEsetfootermargin[#1][\IEEEdefaultsampletext]}}
\def\@@IEEEsetfootermargin[#1][#2]#3#4{\@IEEEtrantmpdimenA #4\relax
\@IEEEextracttoken{#3}\relax
% check for mode errors
\ifx\@IEEEextractedtokenmacro\@empty
  \@IEEEclspkgerror{Empty mode type in \string\IEEEsetfootermargin\space (line \the\inputlineno).\MessageBreak
  Defaulting to `t'}{Valid modes for \string\IEEEsetfootermargin\space are: t, b, c, and a.}\relax
  \let\@IEEEextractedtoken=t\relax
  \def\@IEEEextractedtokenmacro{t}\relax
\else
  \ifx\@IEEEextractedtokensdiscarded\@empty\else
    \typeout{** WARNING: \string\IEEEsetfootermargin\space mode specifiers after the first in `\@IEEEextracttokenarg' ignored (line \the\inputlineno).}\relax
  \fi
\fi
% handle each mode
\if\@IEEEextractedtoken a\relax
  % No need to do anything here and can pass through the adjustment
  % value as is. The end adjustment of \footskip will do all that
  % is needed
\else
\if\@IEEEextractedtoken c\relax
  % calculate the bottom margin
  \@IEEEtrantmpdimenB 1in\relax % system 1in offset
  \advance\@IEEEtrantmpdimenB\topmargin\relax
  \advance\@IEEEtrantmpdimenB\headheight\relax
  \advance\@IEEEtrantmpdimenB\headsep\relax
  \advance\@IEEEtrantmpdimenB\textheight\relax
  \advance\@IEEEtrantmpdimenB\footskip\relax
  \settodepth{\@IEEEtrantmpdimenC}{\begingroup #1\relax\relax\relax\endgroup}\relax
  \advance\@IEEEtrantmpdimenC by \@IEEEtrantmpdimenB
  \@IEEEtrantmpdimenB\paperheight
  \advance\@IEEEtrantmpdimenB by -\@IEEEtrantmpdimenC
  % at this point \@IEEEtrantmpdimenB has the actual footer bottom margin
  % now subtract off the footer top margin
  \advance\@IEEEtrantmpdimenB -\footskip\relax
  \settodepth{\@IEEEtrantmpdimenC}{\begingroup #2\relax\relax\relax\endgroup}\relax
  \advance\@IEEEtrantmpdimenB by \@IEEEtrantmpdimenC
  \settoheight{\@IEEEtrantmpdimenC}{\begingroup #1\relax\relax\relax\endgroup}\relax
  \advance\@IEEEtrantmpdimenB by \@IEEEtrantmpdimenC
  % at this point \@IEEEtrantmpdimenB has the difference between the bottom
  % and top footer margins
  % our adjustment must be half this value to center the footer
  \divide\@IEEEtrantmpdimenB by 2\relax
  % add to the offset
  \advance\@IEEEtrantmpdimenA by \@IEEEtrantmpdimenB
\else
\if\@IEEEextractedtoken b\relax
  % calculate the bottom margin
  \@IEEEtrantmpdimenB 1in\relax % system 1in offset
  \advance\@IEEEtrantmpdimenB\topmargin\relax
  \advance\@IEEEtrantmpdimenB\headheight\relax
  \advance\@IEEEtrantmpdimenB\headsep\relax
  \advance\@IEEEtrantmpdimenB\textheight\relax
  \advance\@IEEEtrantmpdimenB\footskip\relax
  \settodepth{\@IEEEtrantmpdimenC}{\begingroup #1\relax\relax\relax\endgroup}\relax
  \advance\@IEEEtrantmpdimenC by \@IEEEtrantmpdimenB
  \@IEEEtrantmpdimenB\paperheight
  \advance\@IEEEtrantmpdimenB by -\@IEEEtrantmpdimenC
  % at this point \@IEEEtrantmpdimenB has the actual footer bottom margin
  % get the difference between the actual and the desired
  \advance\@IEEEtrantmpdimenB by -\@IEEEtrantmpdimenA
  \@IEEEtrantmpdimenA\@IEEEtrantmpdimenB
\else
  \if\@IEEEextractedtoken t\relax
  \else
    \@IEEEclspkgerror{Unknown mode type `\@IEEEextractedtokenmacro' in \string\IEEEsetfootermargin\space (line \the\inputlineno).\MessageBreak
    Defaulting to `t'}%
    {Valid modes for \string\IEEEsetfootermargin\space are: t, b, c and a.}\relax
  \fi
  \@IEEEtrantmpdimenB\footskip\relax
  \settodepth{\@IEEEtrantmpdimenC}{\begingroup #2\relax\relax\relax\endgroup}\relax
  \advance\@IEEEtrantmpdimenB by -\@IEEEtrantmpdimenC
  \settoheight{\@IEEEtrantmpdimenC}{\begingroup #1\relax\relax\relax\endgroup}\relax
  \advance\@IEEEtrantmpdimenB by -\@IEEEtrantmpdimenC
  % at this point \@IEEEtrantmpdimenB has the actual footer top margin
  % get the difference between the desired and the actual
  \advance\@IEEEtrantmpdimenA by -\@IEEEtrantmpdimenB
\fi\fi % if t, b, c
\fi % if a
% advance \footskip by the needed amount
\advance\footskip by \@IEEEtrantmpdimenA\relax
}

% -- End V1.8a page setup commands --





% V1.6
% LaTeX is a little to quick to use hyphenations
% So, we increase the penalty for their use and raise
% the badness level that triggers an underfull hbox
% warning. The author may still have to tweak things,
% but the appearance will be much better "right out
% of the box" than that under V1.5 and prior.
% TeX default is 50
\hyphenpenalty=750
\ifCLASSOPTIONcompsoc
\hyphenpenalty 500
\fi
% If we didn't adjust the interword spacing, 2200 might be better.
% The TeX default is 1000
\hbadness=1350
% The IEEE does not use extra spacing after punctuation
\frenchspacing

% V1.7 increase this a tad to discourage equation breaks
\binoppenalty=1000 % default 700
\relpenalty=800     % default 500

% v1.8a increase these to discourage widows and orphans
\clubpenalty=1000          % default 150
\widowpenalty=1000         % default 150
\displaywidowpenalty=1000 % default  50


% margin note stuff
\marginparsep      10pt
\marginparwidth    20pt
\marginparpush     25pt


% if things get too close, go ahead and let them touch
\lineskip            0pt
\normallineskip      0pt
\lineskiplimit       0pt
\normallineskiplimit 0pt

% The distance from the lower edge of the text body to the
% footline
\footskip 0.4in

% normally zero, should be relative to font height.
% put in a little rubber to help stop some bad breaks (underfull vboxes)
\parskip 0ex plus 0.2ex minus 0.1ex

\parindent    1.0em
\ifCLASSOPTIONcompsoc
  \parindent    1.5em
\fi

\headheight   12pt
\headsep      18pt
% use the normal font baselineskip
% so that \topskip is unaffected by changes in \baselinestretch
\topskip=\@IEEEnormalsizeunitybaselineskip


% V1.8 \maxdepth defaults to 4pt, but should be font size dependent
\maxdepth=0.5\@IEEEnormalsizeunitybaselineskip
\textheight       58pc  % 9.63in, 696pt

% set the default top margin to 58pt
% which results in a \topmargin of -49.59pt for 10pt documents
\IEEEsettopmargin{t}{58pt}
% tweak textheight to a perfect integer number of lines/column.
% standard is: 9pt/63 lpc; 10pt/58 lpc; 11pt/52 lpc; 12pt/50 lpc
\IEEEquantizetextheight{c}
% tweak top margin so that the error is shared equally at the top and bottom
\IEEEsettopmargin{q}{0sp}


\columnsep         1pc
\textwidth        43pc   % 2 x 21pc + 1pc = 43pc

% set the default side margins to center the text
\IEEEsetsidemargin{c}{0pt}


% adjust margins for default conference mode
\ifCLASSOPTIONconference
 \textheight        9.25in % The standard for conferences (668.4975pt)
 \IEEEsettopmargin{t}{0.75in}
 % tweak textheight to a perfect integer number of lines/page.
 % standard is: 9pt/61 lpc; 10pt/56 lpc; 11pt/50 lpc; 12pt/48 lpc
 \IEEEquantizetextheight{c}
 % tweak top margin so that the error is shared equally at the top and bottom
 \IEEEsettopmargin{q}{0sp}
\fi


% compsoc text sizes, margins and spacings
\ifCLASSOPTIONcompsoc
 \columnsep         12bp
 % CS specs for \textwdith are 6.875in
 % \textwidth         6.875in
 % however, measurements from proofs show they are using 3.5in columns
 \textwidth         7in
 \advance\textwidth by \columnsep
 % set the side margins to center the text
 \IEEEsetsidemargin{c}{0pt}
 % top/bottom margins to center
 % could just set \textheight to 9.75in for all the different paper sizes
 % and then quantize, but we'll do it the long way here to allow for easy
 % future per-paper size adjustments
 \IEEEsettextheight{0.625in}{0.625in}% 11in - 2 * 0.625in = 9.75in is the standard text height for compsoc journals
 \IEEEsettopmargin{t}{0.625in}
 \if@IEEEusingcspaper
   \IEEEsettextheight{0.5in}{0.5in}% 10.75in - 2 * 0.5in = 9.75in
   \IEEEsettopmargin{t}{0.5in}
 \fi
 \if@IEEEusingAfourpaper
   \IEEEsettextheight{24.675mm}{24.675mm}% 297mm - 2 * 24.675mm = 247.650mm (9.75in)
   \IEEEsettopmargin{t}{24.675mm}
 \fi
 % tweak textheight to a perfect integer number of lines/page.
 % standard is: 9pt/65 lpc; 10pt/61 lpc; 11pt/53 lpc; 12pt/49 lpc
 \IEEEquantizetextheight{c}
 % tweak top margin so that the error is shared equally at the top and bottom
 \IEEEsettopmargin{q}{0sp}

% compsoc conference
 \ifCLASSOPTIONconference
  % compsoc conference use a larger value for columnsep
  \columnsep 0.25in
  \IEEEsettextwidth{0.75in}{0.75in}
  % set the side margins to center the text (0.75in for letterpaper)
  \IEEEsetsidemargin{c}{0pt}
  % compsoc conferences want 1in top and bottom margin
  \IEEEsettextheight{1in}{1in}
  \IEEEsettopmargin{t}{1in}
  % tweak textheight to a perfect integer number of lines/page.
  % standard is: 9pt/58 lpc; 10pt/53 lpc; 11pt/48 lpc; 12pt/46 lpc
  \IEEEquantizetextheight{c}
  % tweak top margin so that the error is shared equally at the top and bottom
  \IEEEsettopmargin{q}{0sp}
 \fi
\fi



% draft mode settings override that of all other modes
% provides a nice 1in margin all around the paper and extra
% space between the lines for editor's comments
\ifCLASSOPTIONdraftcls
  % we want 1in side margins regardless of paper type
  \IEEEsettextwidth{1in}{1in}
  \IEEEsetsidemargin{c}{0pt}
  % want 1in top and bottom margins
  \IEEEsettextheight{1in}{1in}
  \IEEEsettopmargin{t}{1in}
  % digitize textheight to be an integer number of lines.
  % this may cause the top and bottom margins to be off a tad
  \IEEEquantizetextheight{c}
  % tweak top margin so that the error is shared equally at the top and bottom
  \IEEEsettopmargin{q}{0sp}
\fi



% process CLASSINPUT inner/outer margin
% if inner margin defined, but outer margin not, set outer to inner.
\ifx\CLASSINPUTinnersidemargin\@IEEEundefined
\else
  \ifx\CLASSINPUToutersidemargin\@IEEEundefined
    \edef\CLASSINPUToutersidemargin{\CLASSINPUTinnersidemargin}
  \fi
\fi

\ifx\CLASSINPUToutersidemargin\@IEEEundefined
\else
  % if outer margin defined, but inner margin not, set inner to outer.
  \ifx\CLASSINPUTinnersidemargin\@IEEEundefined
    \edef\CLASSINPUTinnersidemargin{\CLASSINPUToutersidemargin}
  \fi
  \IEEEsettextwidth{\CLASSINPUTinnersidemargin}{\CLASSINPUToutersidemargin}
  \IEEEsetsidemargin{i}{\CLASSINPUTinnersidemargin}
  \typeout{** ATTENTION: Overriding inner side margin to \CLASSINPUTinnersidemargin\space and 
           outer side margin to \CLASSINPUToutersidemargin\space via \string\CLASSINPUT.}
\fi



% process CLASSINPUT top/bottom text margin
% if toptext margin defined, but bottomtext margin not, set bottomtext to toptext margin
\ifx\CLASSINPUTtoptextmargin\@IEEEundefined
\else
  \ifx\CLASSINPUTbottomtextmargin\@IEEEundefined
    \edef\CLASSINPUTbottomtextmargin{\CLASSINPUTtoptextmargin}
  \fi
\fi

\ifx\CLASSINPUTbottomtextmargin\@IEEEundefined
\else
  % if bottomtext margin defined, but toptext margin not, set toptext to bottomtext margin
  \ifx\CLASSINPUTtoptextmargin\@IEEEundefined
    \edef\CLASSINPUTtoptextmargin{\CLASSINPUTbottomtextmargin}
  \fi
  \IEEEsettextheight{\CLASSINPUTtoptextmargin}{\CLASSINPUTbottomtextmargin}
  \IEEEsettopmargin{t}{\CLASSINPUTtoptextmargin}
  \typeout{** ATTENTION: Overriding top text margin to \CLASSINPUTtoptextmargin\space and 
           bottom text margin to \CLASSINPUTbottomtextmargin\space via \string\CLASSINPUT.}
\fi



% default to center header and footer text in the margins
\IEEEsetheadermargin{c}{0pt}
\IEEEsetfootermargin{c}{0pt}

% adjust header and footer positions for compsoc journals
\ifCLASSOPTIONcompsoc
  \ifCLASSOPTIONjournal
    \IEEEsetheadermargin{b}{\@IEEEnormalsizeunitybaselineskip}
    \IEEEsetfootermargin{t}{\@IEEEnormalsizeunitybaselineskip}
  \fi
\fi


% V1.8a display lines per column info message on user's console
\def\IEEEdisplayinfolinespercolumn{\@IEEEtrantmpdimenA=\textheight
% topskip represents only one line even if > baselineskip
\advance\@IEEEtrantmpdimenA by -1\topskip
\@IEEEtrantmpcountA=\@IEEEtrantmpdimenA
\@IEEEtrantmpcountB=\@IEEEtrantmpdimenA
\divide\@IEEEtrantmpcountB by \baselineskip
% need to add one line to include topskip (first) line
\advance\@IEEEtrantmpcountB by 1
% save lines per column value as text
\edef\@IEEEnumlinespercolumninfotxt{\the\@IEEEtrantmpcountB}
% backout topskip advance to allow direct \@IEEEtrantmpcountA comparison
\advance\@IEEEtrantmpcountB by -1
% restore value as text height (without topskip) rather than just as number of lines
\multiply\@IEEEtrantmpcountB by \baselineskip
% is the column height an integer number of lines per column?
\ifnum\@IEEEtrantmpcountA=\@IEEEtrantmpcountB
\edef\@IEEEnumlinespercolumnexactinfotxt{exact}
\else
\@IEEEtrantmpdimenA\@IEEEtrantmpcountA sp\relax
\advance\@IEEEtrantmpdimenA by -\@IEEEtrantmpcountB sp\relax
\edef\@IEEEnumlinespercolumnexactinfotxt{approximate, difference = \the\@IEEEtrantmpdimenA}
\fi
\typeout{-- Lines per column: \@IEEEnumlinespercolumninfotxt\space (\@IEEEnumlinespercolumnexactinfotxt).}}
% delay execution till start of document to allow for user changes
\AtBeginDocument{\IEEEdisplayinfolinespercolumn}



% LIST SPACING CONTROLS

% Controls the amount of EXTRA spacing
% above and below \trivlist 
% Both \list and IED lists override this.
% However, \trivlist will use this as will most
% things built from \trivlist like the \center
% environment.
\topsep           0.5\baselineskip

% Controls the additional spacing around lists preceded
% or followed by blank lines. the IEEE does not increase
% spacing before or after paragraphs so it is set to zero.
% \z@ is the same as zero, but faster.
\partopsep          \z@

% Controls the spacing between paragraphs in lists. 
% The IEEE does not increase spacing before or after paragraphs
% so this is also zero. 
% With IEEEtran.cls, global changes to
% this value DO affect lists (but not IED lists).
\parsep             \z@

% Controls the extra spacing between list items. 
% The IEEE does not put extra spacing between items.
% With IEEEtran.cls, global changes to this value DO affect
% lists (but not IED lists).
\itemsep            \z@

% \itemindent is the amount to indent the FIRST line of a list
% item. It is auto set to zero within the \list environment. To alter
% it, you have to do so when you call the \list.
% However, the IEEE uses this for the theorem environment
% There is an alternative value for this near \leftmargini below
\itemindent         -1em

% \leftmargin, the spacing from the left margin of the main text to
% the left of the main body of a list item is set by \list.
% Hence this statement does nothing for lists.
% But, quote and verse do use it for indention.
\leftmargin         2em

% we retain this stuff from the older IEEEtran.cls so that \list
% will work the same way as before. However, itemize, enumerate and
% description (IED) could care less about what these are as they
% all are overridden.
\leftmargini        2em
%\itemindent         2em  % Alternative values: sometimes used.
%\leftmargini        0em
\leftmarginii       1em
\leftmarginiii    1.5em
\leftmarginiv     1.5em
\leftmarginv      1.0em
\leftmarginvi     1.0em
\labelsep         0.5em 
\labelwidth         \z@


% The old IEEEtran.cls behavior of \list is retained.
% However, the new V1.3 IED list environments override all the
% @list stuff (\@listX is called within \list for the
% appropriate level just before the user's list_decl is called). 
% \topsep is now 2pt as the IEEE puts a little extra space around
% lists - used by those non-IED macros that depend on \list.
% Note that \parsep and \itemsep are not redefined as in 
% the sizexx.clo \@listX (which article.cls uses) so global changes
% of these values DO affect \list
% 
\def\@listi{\leftmargin\leftmargini \topsep 2pt plus 1pt minus 1pt}
\let\@listI\@listi
\def\@listii{\leftmargin\leftmarginii\labelwidth\leftmarginii%
    \advance\labelwidth-\labelsep \topsep 2pt}
\def\@listiii{\leftmargin\leftmarginiii\labelwidth\leftmarginiii%
    \advance\labelwidth-\labelsep \topsep 2pt}
\def\@listiv{\leftmargin\leftmarginiv\labelwidth\leftmarginiv%
    \advance\labelwidth-\labelsep \topsep 2pt}
\def\@listv{\leftmargin\leftmarginv\labelwidth\leftmarginv%
    \advance\labelwidth-\labelsep \topsep 2pt}
\def\@listvi{\leftmargin\leftmarginvi\labelwidth\leftmarginvi%
    \advance\labelwidth-\labelsep \topsep 2pt}


% The IEEE uses 5) not 5.
\def\labelenumi{\theenumi)}     \def\theenumi{\arabic{enumi}}

% The IEEE uses a) not (a)
\def\labelenumii{\theenumii)}  \def\theenumii{\alph{enumii}}

% The IEEE uses iii) not iii.
\def\labelenumiii{\theenumiii)} \def\theenumiii{\roman{enumiii}}

% The IEEE uses A) not A.
\def\labelenumiv{\theenumiv)}   \def\theenumiv{\Alph{enumiv}}

% exactly the same as in article.cls
\def\p@enumii{\theenumi}
\def\p@enumiii{\theenumi(\theenumii)}
\def\p@enumiv{\p@enumiii\theenumiii}

% itemized list label styles
\def\labelitemi{$\scriptstyle\bullet$}
\def\labelitemii{\textbf{--}}
\def\labelitemiii{$\ast$}
\def\labelitemiv{$\cdot$}



% **** V1.3 ENHANCEMENTS ****
% Itemize, Enumerate and Description (IED) List Controls
% ***************************
% 
% 
% The IEEE seems to use at least two different values by
% which ITEMIZED list labels are indented to the right
% For The Journal of Lightwave Technology (JLT) and The Journal
% on Selected Areas in Communications (JSAC), they tend to use
% an indention equal to \parindent. For Transactions on Communications
% they tend to indent ITEMIZED lists a little more--- 1.3\parindent.
% We'll provide both values here for you so that you can choose 
% which one you like in your document using a command such as:
% setlength{\IEEEilabelindent}{\IEEEilabelindentB}
\newdimen\IEEEilabelindentA
\IEEEilabelindentA \parindent

\newdimen\IEEEilabelindentB
\IEEEilabelindentB 1.3\parindent
% However, we'll default to using \parindent
% which makes more sense to me
\newdimen\IEEEilabelindent
\IEEEilabelindent \IEEEilabelindentA


% This controls the default amount the enumerated list labels
% are indented to the right.
% Normally, this is the same as the paragraph indention
\newdimen\IEEEelabelindent
\IEEEelabelindent \parindent

% This controls the default amount the description list labels
% are indented to the right.
% Normally, this is the same as the paragraph indention
\newdimen\IEEEdlabelindent
\IEEEdlabelindent \parindent

% This is the value actually used within the IED lists.
% The IED environments automatically set its value to
% one of the three values above, so global changes do 
% not have any effect
\newdimen\IEEElabelindent
\IEEElabelindent \parindent

% The actual amount labels will be indented is
% \IEEElabelindent multiplied by the factor below
% corresponding to the level of nesting depth
% This provides a means by which the user can
% alter the effective \IEEElabelindent for deeper
% levels
% There may not be such a thing as correct "standard IEEE"
% values. What the IEEE actually does may depend on the specific
% circumstances.
% The first list level almost always has full indention.
% The second levels I've seen have only 75% of the normal indentation
% Three level or greater nestings are very rare. I am guessing
% that they don't use any indentation.
\def\IEEElabelindentfactori{1.0}   % almost always one
\def\IEEElabelindentfactorii{0.75} % 0.0 or 1.0 may be used in some cases
\def\IEEElabelindentfactoriii{0.0} % 0.75? 0.5? 0.0?
\def\IEEElabelindentfactoriv{0.0}
\def\IEEElabelindentfactorv{0.0}
\def\IEEElabelindentfactorvi{0.0}

% value actually used within IED lists, it is auto
% set to one of the 6 values above
% global changes here have no effect
\def\IEEElabelindentfactor{1.0}

% This controls the default spacing between the end of the IED
% list labels and the list text, when normal text is used for
% the labels.
% compsoc uses a larger value here, but we'll set that later
% in the class so that this code block area can be extracted
% as-is for IEEEtrantools.sty
\newdimen\IEEEiednormlabelsep
\IEEEiednormlabelsep 0.6em

% This controls the default spacing between the end of the IED
% list labels and the list text, when math symbols are used for
% the labels (nomenclature lists). The IEEE usually increases the 
% spacing in these cases
\newdimen\IEEEiedmathlabelsep
\IEEEiedmathlabelsep 1.2em

% This controls the extra vertical separation put above and
% below each IED list. the IEEE usually puts a little extra spacing
% around each list. However, this spacing is barely noticeable.
% compsoc uses a larger value here, but we'll set that later
% in the class so that this code block area can be extracted
% as-is for IEEEtrantools.sty
\newskip\IEEEiedtopsep
\IEEEiedtopsep 2pt plus 1pt minus 1pt


% This command is executed within each IED list environment
% at the beginning of the list. You can use this to set the 
% parameters for some/all your IED list(s) without disturbing 
% global parameters that affect things other than lists.
% i.e., renewcommand{\IEEEiedlistdecl}{\setlength{\labelsep}{5em}}
% will alter the \labelsep for the next list(s) until 
% \IEEEiedlistdecl is redefined. 
\def\IEEEiedlistdecl{\relax}

% This command provides an easy way to set \leftmargin based
% on the \labelwidth, \labelsep and the argument \IEEElabelindent
% Usage: \IEEEcalcleftmargin{width-to-indent-the-label}
% output is in the \leftmargin variable, i.e., effectively:
% \leftmargin = argument + \labelwidth + \labelsep
% Note controlled spacing here, shield end of lines with %
\def\IEEEcalcleftmargin#1{\setlength{\leftmargin}{#1}%
\addtolength{\leftmargin}{\labelwidth}%
\addtolength{\leftmargin}{\labelsep}}

% This command provides an easy way to set \labelwidth to the
% width of the given text. It is the same as
% \settowidth{\labelwidth}{label-text}
% and useful as a shorter alternative.
% Typically used to set \labelwidth to be the width
% of the longest label in the list
\def\IEEEsetlabelwidth#1{\settowidth{\labelwidth}{#1}}

% When this command is executed, IED lists will use the 
% IEEEiedmathlabelsep label separation rather than the normal
% spacing. To have an effect, this command must be executed via
% the \IEEEiedlistdecl or within the option of the IED list
% environments.
\def\IEEEusemathlabelsep{\setlength{\labelsep}{\IEEEiedmathlabelsep}}

% A flag which controls whether the IED lists automatically
% calculate \leftmargin from \IEEElabelindent, \labelwidth and \labelsep
% Useful if you want to specify your own \leftmargin
% This flag must be set (\IEEEnocalcleftmargintrue or \IEEEnocalcleftmarginfalse) 
% via the \IEEEiedlistdecl or within the option of the IED list
% environments to have an effect.
\newif\ifIEEEnocalcleftmargin
\IEEEnocalcleftmarginfalse

% A flag which controls whether \IEEElabelindent is multiplied by
% the \IEEElabelindentfactor for each list level.
% This flag must be set via the \IEEEiedlistdecl or within the option 
% of the IED list environments to have an effect.
\newif\ifIEEEnolabelindentfactor
\IEEEnolabelindentfactorfalse


% internal variable to indicate type of IED label
% justification
% 0 - left; 1 - center; 2 - right
\def\@IEEEiedjustify{0}


% commands to allow the user to control IED
% label justifications. Use these commands within
% the IED environment option or in the \IEEEiedlistdecl
% Note that changing the normal list justifications
% is nonstandard and the IEEE may not like it if you do so!
% I include these commands as they may be helpful to
% those who are using these enhanced list controls for
% other non-IEEE related LaTeX work.
% itemize and enumerate automatically default to right
% justification, description defaults to left.
\def\IEEEiedlabeljustifyl{\def\@IEEEiedjustify{0}}%left
\def\IEEEiedlabeljustifyc{\def\@IEEEiedjustify{1}}%center
\def\IEEEiedlabeljustifyr{\def\@IEEEiedjustify{2}}%right




% commands to save to and restore from the list parameter copies
% this allows us to set all the list parameters within
% the list_decl and prevent \list (and its \@list) 
% from overriding any of our parameters
% V1.6 use \edefs instead of dimen's to conserve dimen registers
% Note controlled spacing here, shield end of lines with %
\def\@IEEEsavelistparams{\edef\@IEEEiedtopsep{\the\topsep}%
\edef\@IEEEiedlabelwidth{\the\labelwidth}%
\edef\@IEEEiedlabelsep{\the\labelsep}%
\edef\@IEEEiedleftmargin{\the\leftmargin}%
\edef\@IEEEiedpartopsep{\the\partopsep}%
\edef\@IEEEiedparsep{\the\parsep}%
\edef\@IEEEieditemsep{\the\itemsep}%
\edef\@IEEEiedrightmargin{\the\rightmargin}%
\edef\@IEEEiedlistparindent{\the\listparindent}%
\edef\@IEEEieditemindent{\the\itemindent}}

% Note controlled spacing here
\def\@IEEErestorelistparams{\topsep\@IEEEiedtopsep\relax%
\labelwidth\@IEEEiedlabelwidth\relax%
\labelsep\@IEEEiedlabelsep\relax%
\leftmargin\@IEEEiedleftmargin\relax%
\partopsep\@IEEEiedpartopsep\relax%
\parsep\@IEEEiedparsep\relax%
\itemsep\@IEEEieditemsep\relax%
\rightmargin\@IEEEiedrightmargin\relax%
\listparindent\@IEEEiedlistparindent\relax%
\itemindent\@IEEEieditemindent\relax}


% v1.6b provide original LaTeX IED list environments
% note that latex.ltx defines \itemize and \enumerate, but not \description
% which must be created by the base classes
% save original LaTeX itemize and enumerate
\let\LaTeXitemize\itemize
\let\endLaTeXitemize\enditemize
\let\LaTeXenumerate\enumerate
\let\endLaTeXenumerate\endenumerate

% provide original LaTeX description environment from article.cls
\newenvironment{LaTeXdescription}
               {\list{}{\labelwidth\z@ \itemindent-\leftmargin
                        \let\makelabel\descriptionlabel}}
               {\endlist}
\newcommand*\descriptionlabel[1]{\hspace\labelsep
                                 \normalfont\bfseries #1}


% override LaTeX's default IED lists
\def\itemize{\@IEEEitemize}
\def\enditemize{\@endIEEEitemize}
\def\enumerate{\@IEEEenumerate}
\def\endenumerate{\@endIEEEenumerate}
\def\description{\@IEEEdescription}
\def\enddescription{\@endIEEEdescription}

% provide the user with aliases - may help those using packages that
% override itemize, enumerate, or description
\def\IEEEitemize{\@IEEEitemize}
\def\endIEEEitemize{\@endIEEEitemize}
\def\IEEEenumerate{\@IEEEenumerate}
\def\endIEEEenumerate{\@endIEEEenumerate}
\def\IEEEdescription{\@IEEEdescription}
\def\endIEEEdescription{\@endIEEEdescription}


% V1.6 we want to keep the IEEEtran IED list definitions as our own internal
% commands so they are protected against redefinition
\def\@IEEEitemize{\@ifnextchar[{\@@IEEEitemize}{\@@IEEEitemize[\relax]}}
\def\@IEEEenumerate{\@ifnextchar[{\@@IEEEenumerate}{\@@IEEEenumerate[\relax]}}
\def\@IEEEdescription{\@ifnextchar[{\@@IEEEdescription}{\@@IEEEdescription[\relax]}}
\def\@endIEEEitemize{\endlist}
\def\@endIEEEenumerate{\endlist}
\def\@endIEEEdescription{\endlist}


% DO NOT ALLOW BLANK LINES TO BE IN THESE IED ENVIRONMENTS
% AS THIS WILL FORCE NEW PARAGRAPHS AFTER THE IED LISTS
% IEEEtran itemized list MDS 1/2001
% Note controlled spacing here, shield end of lines with %
\def\@@IEEEitemize[#1]{%
                \ifnum\@itemdepth>3\relax\@toodeep\else%
                \ifnum\@listdepth>5\relax\@toodeep\else%
                \advance\@itemdepth\@ne%
                \edef\@itemitem{labelitem\romannumeral\the\@itemdepth}%
                % get the IEEElabelindentfactor for this level
                \advance\@listdepth\@ne% we need to know what the level WILL be
                \edef\IEEElabelindentfactor{\csname IEEElabelindentfactor\romannumeral\the\@listdepth\endcsname}%
                \advance\@listdepth-\@ne% undo our increment
                \def\@IEEEiedjustify{2}% right justified labels are default
                % set other defaults
                \IEEEnocalcleftmarginfalse%
                \IEEEnolabelindentfactorfalse%
                \topsep\IEEEiedtopsep%
                \IEEElabelindent\IEEEilabelindent%
                \labelsep\IEEEiednormlabelsep%
                \partopsep 0ex%
                \parsep 0ex%
                \itemsep 0ex%
                \rightmargin 0em%
                \listparindent 0em%
                \itemindent 0em%
                % calculate the label width
                % the user can override this later if
                % they specified a \labelwidth
                \settowidth{\labelwidth}{\csname labelitem\romannumeral\the\@itemdepth\endcsname}%
                \@IEEEsavelistparams% save our list parameters
                \list{\csname\@itemitem\endcsname}{%
                \@IEEErestorelistparams% override any list{} changes
                                       % to our globals
                \let\makelabel\@IEEEiedmakelabel% v1.6b setup \makelabel
                \IEEEiedlistdecl% let user alter parameters
                #1\relax%
                % If the user has requested not to use the
                % IEEElabelindent factor, don't revise \IEEElabelindent
                \ifIEEEnolabelindentfactor\relax%
                \else\IEEElabelindent=\IEEElabelindentfactor\IEEElabelindent%
                \fi%
                % Unless the user has requested otherwise,
                % calculate our left margin based
                % on \IEEElabelindent, \labelwidth and
                % \labelsep
                \ifIEEEnocalcleftmargin\relax%
                \else\IEEEcalcleftmargin{\IEEElabelindent}%
                \fi}\fi\fi}%


% DO NOT ALLOW BLANK LINES TO BE IN THESE IED ENVIRONMENTS
% AS THIS WILL FORCE NEW PARAGRAPHS AFTER THE IED LISTS
% IEEEtran enumerate list MDS 1/2001
% Note controlled spacing here, shield end of lines with %
\def\@@IEEEenumerate[#1]{%
                \ifnum\@enumdepth>3\relax\@toodeep\else%
                \ifnum\@listdepth>5\relax\@toodeep\else%
                \advance\@enumdepth\@ne%
                \edef\@enumctr{enum\romannumeral\the\@enumdepth}%
                % get the IEEElabelindentfactor for this level
                \advance\@listdepth\@ne% we need to know what the level WILL be
                \edef\IEEElabelindentfactor{\csname IEEElabelindentfactor\romannumeral\the\@listdepth\endcsname}%
                \advance\@listdepth-\@ne% undo our increment
                \def\@IEEEiedjustify{2}% right justified labels are default
                % set other defaults
                \IEEEnocalcleftmarginfalse%
                \IEEEnolabelindentfactorfalse%
                \topsep\IEEEiedtopsep%
                \IEEElabelindent\IEEEelabelindent%
                \labelsep\IEEEiednormlabelsep%
                \partopsep 0ex%
                \parsep 0ex%
                \itemsep 0ex%
                \rightmargin 0em%
                \listparindent 0em%
                \itemindent 0em%
                % calculate the label width
                % We'll set it to the width suitable for all labels using
                % normalfont 1) to 9)
                % The user can override this later
                \settowidth{\labelwidth}{9)}%
                \@IEEEsavelistparams% save our list parameters
                \list{\csname label\@enumctr\endcsname}{\usecounter{\@enumctr}%
                \@IEEErestorelistparams% override any list{} changes
                                       % to our globals
                \let\makelabel\@IEEEiedmakelabel% v1.6b setup \makelabel
                \IEEEiedlistdecl% let user alter parameters 
                #1\relax%
                % If the user has requested not to use the
                % IEEElabelindent factor, don't revise \IEEElabelindent
                \ifIEEEnolabelindentfactor\relax%
                \else\IEEElabelindent=\IEEElabelindentfactor\IEEElabelindent%
                \fi%
                % Unless the user has requested otherwise,
                % calculate our left margin based
                % on \IEEElabelindent, \labelwidth and
                % \labelsep
                \ifIEEEnocalcleftmargin\relax%
                \else\IEEEcalcleftmargin{\IEEElabelindent}%
                \fi}\fi\fi}%


% DO NOT ALLOW BLANK LINES TO BE IN THESE IED ENVIRONMENTS
% AS THIS WILL FORCE NEW PARAGRAPHS AFTER THE IED LISTS
% IEEEtran description list MDS 1/2001
% Note controlled spacing here, shield end of lines with %
\def\@@IEEEdescription[#1]{%
                \ifnum\@listdepth>5\relax\@toodeep\else%
                % get the IEEElabelindentfactor for this level
                \advance\@listdepth\@ne% we need to know what the level WILL be
                \edef\IEEElabelindentfactor{\csname IEEElabelindentfactor\romannumeral\the\@listdepth\endcsname}%
                \advance\@listdepth-\@ne% undo our increment
                \def\@IEEEiedjustify{0}% left justified labels are default
                % set other defaults
                \IEEEnocalcleftmarginfalse%
                \IEEEnolabelindentfactorfalse%
                \topsep\IEEEiedtopsep% 
                \IEEElabelindent\IEEEdlabelindent%
                % assume normal labelsep
                \labelsep\IEEEiednormlabelsep%
                \partopsep 0ex%
                \parsep 0ex%
                \itemsep 0ex%
                \rightmargin 0em%
                \listparindent 0em%
                \itemindent 0em%
                % Bogus label width in case the user forgets
                % to set it.
                % TIP: If you want to see what a variable's width is you
                % can use the TeX command \showthe\width-variable to 
                % display it on the screen during compilation 
                % (This might be helpful to know when you need to find out
                % which label is the widest)
                \settowidth{\labelwidth}{Hello}%
                \@IEEEsavelistparams% save our list parameters
                \list{}{\@IEEErestorelistparams% override any list{} changes
                                               % to our globals
                \let\makelabel\@IEEEiedmakelabel% v1.6b setup \makelabel
                \IEEEiedlistdecl% let user alter parameters 
                #1\relax%
                % If the user has requested not to use the
                % labelindent factor, don't revise \IEEElabelindent
                \ifIEEEnolabelindentfactor\relax%
                \else\IEEElabelindent=\IEEElabelindentfactor\IEEElabelindent%
                \fi%
                % Unless the user has requested otherwise,
                % calculate our left margin based
                % on \IEEElabelindent, \labelwidth and
                % \labelsep
                \ifIEEEnocalcleftmargin\relax%
                \else\IEEEcalcleftmargin{\IEEElabelindent}\relax%
                \fi}\fi}

% v1.6b we use one makelabel that does justification as needed.
\def\@IEEEiedmakelabel#1{\relax\if\@IEEEiedjustify 0\relax
\makebox[\labelwidth][l]{\normalfont #1}\else
\if\@IEEEiedjustify 1\relax
\makebox[\labelwidth][c]{\normalfont #1}\else
\makebox[\labelwidth][r]{\normalfont #1}\fi\fi}


% compsoc uses a larger value for the normal labelsep
% and also extra spacing above and below each list
\ifCLASSOPTIONcompsoc
  \IEEEiednormlabelsep 1.2em
  \IEEEiedtopsep 6pt plus 3pt minus 3pt
\fi


% VERSE and QUOTE
% V1.7 define environments with newenvironment
\newenvironment{verse}{\let\\=\@centercr
    \list{}{\itemsep\z@ \itemindent -1.5em \listparindent \itemindent
    \rightmargin\leftmargin\advance\leftmargin 1.5em}\item\relax}
    {\endlist}
\newenvironment{quotation}{\list{}{\listparindent 1.5em \itemindent\listparindent
    \rightmargin\leftmargin \parsep 0pt plus 1pt}\item\relax}
    {\endlist}
\newenvironment{quote}{\list{}{\rightmargin\leftmargin}\item\relax}
    {\endlist}


% \titlepage
% provided only for backward compatibility. \maketitle is the correct
% way to create the title page. 
\def\titlepage{\@restonecolfalse\if@twocolumn\@restonecoltrue\onecolumn
    \else \newpage \fi \thispagestyle{empty}\c@page\z@}
\def\endtitlepage{\if@restonecol\twocolumn \else \newpage \fi}

% standard values from article.cls
\arraycolsep     5pt
\arrayrulewidth .4pt
\doublerulesep   2pt

\tabcolsep       6pt
\tabbingsep      0.5em


%% FOOTNOTES
%
%\skip\footins 10pt plus 4pt minus 2pt
% V1.6 respond to changes in font size
% space added above the footnotes (if present)
\skip\footins 0.9\baselineskip  plus 0.4\baselineskip  minus 0.2\baselineskip

% V1.6, we need to make \footnotesep responsive to changes
% in \baselineskip or strange spacings will result when in
% draft mode. Here is a little LaTeX secret - \footnotesep
% determines the height of an invisible strut that is placed
% *above* the baseline of footnotes after the first. Since
% LaTeX considers the space for characters to be 0.7\baselineskip
% above the baseline and 0.3\baselineskip below it, we need to
% use 0.7\baselineskip as a \footnotesep to maintain equal spacing
% between all the lines of the footnotes. The IEEE often uses a tad
% more, so use 0.8\baselineskip. This slightly larger value also helps
% the text to clear the footnote marks. Note that \thanks in IEEEtran
% uses its own value of \footnotesep which is set in \maketitle.
{\footnotesize
\global\footnotesep 0.8\baselineskip}


\skip\@mpfootins = \skip\footins
\fboxsep = 3pt
\fboxrule = .4pt
% V1.6 use 1em, then use LaTeX2e's \@makefnmark
% Note that the IEEE normally *left* aligns the footnote marks, so we don't need
% box resizing tricks here.
\long\def\@makefntext#1{\parindent 1em\indent\hbox{\@makefnmark}#1}% V1.6 use 1em
% V1.7 compsoc does not use superscipts for footnote marks
\ifCLASSOPTIONcompsoc
\def\@IEEEcompsocmakefnmark{\hbox{\normalfont\@thefnmark.\ }}
\long\def\@makefntext#1{\parindent 1em\indent\hbox{\@IEEEcompsocmakefnmark}#1}
\fi

% The IEEE does not use footnote rules
\def\footnoterule{}

% V1.7 for compsoc, the IEEE uses a footnote rule only for \thanks. We devise a "one-shot"
% system to implement this.
\newif\if@IEEEenableoneshotfootnoterule
\@IEEEenableoneshotfootnoterulefalse
\ifCLASSOPTIONcompsoc
\def\footnoterule{\relax\if@IEEEenableoneshotfootnoterule
\kern-5pt
\hbox to \columnwidth{\hfill\vrule width 0.5\columnwidth height 0.4pt\hfill}
\kern4.6pt
\global\@IEEEenableoneshotfootnoterulefalse
\else
\relax
\fi}
\fi

% V1.6 do not allow LaTeX to break a footnote across multiple pages
\interfootnotelinepenalty=10000

% V1.6 discourage breaks within equations
% Note that amsmath normally sets this to 10000,
% but LaTeX2e normally uses 100.
\interdisplaylinepenalty=2500

% default allows section depth up to /paragraph
\setcounter{secnumdepth}{4}

% technotes do not allow /paragraph
\ifCLASSOPTIONtechnote
   \setcounter{secnumdepth}{3}
\fi
% neither do compsoc conferences
\@IEEEcompsocconfonly{\setcounter{secnumdepth}{3}}


\newcounter{section}
\newcounter{subsection}[section]
\newcounter{subsubsection}[subsection]
\newcounter{paragraph}[subsubsection]

% used only by IEEEtran's IEEEeqnarray as other packages may
% have their own, different, implementations
\newcounter{IEEEsubequation}[equation]

% as shown when called by user from \ref, \label and in table of contents
\def\theequation{\arabic{equation}}                          % 1
\def\theIEEEsubequation{\theequation\alph{IEEEsubequation}}  % 1a (used only by IEEEtran's IEEEeqnarray)
\ifCLASSOPTIONcompsoc
% compsoc is all arabic
\def\thesection{\arabic{section}}                
\def\thesubsection{\thesection.\arabic{subsection}}
\def\thesubsubsection{\thesubsection.\arabic{subsubsection}}
\def\theparagraph{\thesubsubsection.\arabic{paragraph}}
\else
\def\thesection{\Roman{section}}                             % I
% V1.7, \mbox prevents breaks around - 
\def\thesubsection{\mbox{\thesection-\Alph{subsection}}}     % I-A
% V1.7 use I-A1 format used by the IEEE rather than I-A.1
\def\thesubsubsection{\thesubsection\arabic{subsubsection}}  % I-A1
\def\theparagraph{\thesubsubsection\alph{paragraph}}         % I-A1a
\fi

% From Heiko Oberdiek. Because of the \mbox in \thesubsection, we need to
% tell hyperref to disable the \mbox command when making PDF bookmarks.
% This done already with hyperref.sty version 6.74o and later, but
% it will not hurt to do it here again for users of older versions.
\@ifundefined{pdfstringdefPreHook}{\let\pdfstringdefPreHook\@empty}{}%
\g@addto@macro\pdfstringdefPreHook{\let\mbox\relax}


% Main text forms (how shown in main text headings)
% V1.6, using \thesection in \thesectiondis allows changes
% in the former to automatically appear in the latter
\ifCLASSOPTIONcompsoc
  \ifCLASSOPTIONconference% compsoc conference
    \def\thesectiondis{\thesection.}
    \def\thesubsectiondis{\thesectiondis\arabic{subsection}.}
    \def\thesubsubsectiondis{\thesubsectiondis\arabic{subsubsection}.}
    \def\theparagraphdis{\thesubsubsectiondis\arabic{paragraph}.}
  \else% compsoc not conferencs
    \def\thesectiondis{\thesection}
    \def\thesubsectiondis{\thesectiondis.\arabic{subsection}}
    \def\thesubsubsectiondis{\thesubsectiondis.\arabic{subsubsection}}
    \def\theparagraphdis{\thesubsubsectiondis.\arabic{paragraph}}
  \fi
\else% not compsoc
  \def\thesectiondis{\thesection.}                   % I.
  \def\thesubsectiondis{\Alph{subsection}.}          % B.
  \def\thesubsubsectiondis{\arabic{subsubsection})}  % 3)
  \def\theparagraphdis{\alph{paragraph})}            % d)
\fi

% just like LaTeX2e's \@eqnnum
\def\theequationdis{{\normalfont \normalcolor (\theequation)}}% (1)
% IEEEsubequation used only by IEEEtran's IEEEeqnarray
\def\theIEEEsubequationdis{{\normalfont \normalcolor (\theIEEEsubequation)}}% (1a)
% redirect LaTeX2e's equation number display and all that depend on
% it, through IEEEtran's \theequationdis
\def\@eqnnum{\theequationdis}



% V1.7 provide string macros as article.cls does
\def\contentsname{Contents}
\def\listfigurename{List of Figures}
\def\listtablename{List of Tables}
\def\refname{References}
\def\indexname{Index}
\def\figurename{Fig.}
\def\tablename{TABLE}
\@IEEEcompsocconfonly{\def\figurename{Figure}}
\def\partname{Part}
\def\appendixname{Appendix}
\def\abstractname{Abstract}
% IEEE specific names
\def\IEEEkeywordsname{Index Terms}
\def\IEEEproofname{Proof}


% LIST OF FIGURES AND TABLES AND TABLE OF CONTENTS
%
\def\@pnumwidth{1.55em}
\def\@tocrmarg{2.55em}
\def\@dotsep{4.5}
\setcounter{tocdepth}{3}

% adjusted some spacings here so that section numbers will not easily 
% collide with the section titles. 
% VIII; VIII-A; and VIII-A.1 are usually the worst offenders.
% MDS 1/2001
\def\tableofcontents{\section*{\contentsname}\@starttoc{toc}}
\def\l@section#1#2{\addpenalty{\@secpenalty}\addvspace{1.0em plus 1pt}%
    \@tempdima 2.75em \begingroup \parindent \z@ \rightskip \@pnumwidth%
    \parfillskip-\@pnumwidth {\bfseries\leavevmode #1}\hfil\hbox to\@pnumwidth{\hss #2}\par%
    \endgroup}
% argument format #1:level, #2:labelindent,#3:labelsep
\def\l@subsection{\@dottedtocline{2}{2.75em}{3.75em}}
\def\l@subsubsection{\@dottedtocline{3}{6.5em}{4.5em}}
% must provide \l@ defs for ALL sublevels EVEN if tocdepth
% is such as they will not appear in the table of contents
% these defs are how TOC knows what level these things are!
\def\l@paragraph{\@dottedtocline{4}{6.5em}{5.5em}}
\def\l@subparagraph{\@dottedtocline{5}{6.5em}{6.5em}}
\def\listoffigures{\section*{\listfigurename}\@starttoc{lof}}
\def\l@figure{\@dottedtocline{1}{0em}{2.75em}}
\def\listoftables{\section*{\listtablename}\@starttoc{lot}}
\let\l@table\l@figure


% Definitions for floats
%
% Normal Floats
% V1.8 floatsep et al. revised down by 0.15\baselineskip
% to account for the sideeffects of \topskip compensation
\floatsep 0.85\baselineskip plus  0.2\baselineskip minus  0.2\baselineskip
\textfloatsep 1.55\baselineskip plus  0.2\baselineskip minus  0.4\baselineskip
\@fptop 0pt plus 1fil
\@fpsep 0.75\baselineskip plus 2fil
\@fpbot 0pt plus 1fil
\def\topfraction{0.9}
\def\bottomfraction{0.4}
\def\floatpagefraction{0.8}
% V1.7, let top floats approach 90% of page
\def\textfraction{0.1}

% Double Column Floats
\dblfloatsep 0.85\baselineskip plus  0.2\baselineskip minus  0.2\baselineskip

\dbltextfloatsep 1.55\baselineskip plus  0.2\baselineskip minus  0.4\baselineskip
% Note that it would be nice if the rubber here actually worked in LaTeX2e.
% There is a long standing limitation in LaTeX, first discovered (to the best
% of my knowledge) by Alan Jeffrey in 1992. LaTeX ignores the stretchable
% portion of \dbltextfloatsep, and as a result, double column figures can and
% do result in an non-integer number of lines in the main text columns with
% underfull vbox errors as a consequence. A post to comp.text.tex
% by Donald Arseneau confirms that this had not yet been fixed in 1998.
% IEEEtran V1.6 will fix this problem for you in the titles, but it doesn't
% protect you from other double floats. Happy vspace'ing.

\@dblfptop 0pt plus 1fil
\@dblfpsep 0.75\baselineskip plus 2fil
\@dblfpbot 0pt plus 1fil
\def\dbltopfraction{0.8}
\def\dblfloatpagefraction{0.8}
\setcounter{dbltopnumber}{4}

\intextsep 0.85\baselineskip plus 0.2\baselineskip minus  0.2\baselineskip
\setcounter{topnumber}{2}
\setcounter{bottomnumber}{2}
\setcounter{totalnumber}{4}



% article class provides these, we should too.
\newlength\abovecaptionskip
\newlength\belowcaptionskip
% but only \abovecaptionskip is used above figure captions and *below* table
% captions
\setlength\abovecaptionskip{0.5\baselineskip}
% compsoc journals are a little more generous
\ifCLASSOPTIONcompsoc\ifCLASSOPTIONjournal
  \setlength\abovecaptionskip{0.75\baselineskip}
\fi\fi
\setlength\belowcaptionskip{0pt}
% V1.6 create hooks in case the caption spacing ever needs to be
% overridden by a user
\def\@IEEEfigurecaptionsepspace{\vskip\abovecaptionskip\relax}%
\def\@IEEEtablecaptionsepspace{\vskip\abovecaptionskip\relax}%


% 1.6b revise caption system so that \@makecaption uses two arguments
% as with LaTeX2e. Otherwise, there will be problems when using hyperref.
\def\@IEEEtablestring{table}


% V1.8 compensate for \topskip so top of top figures align with tops of the first lines of main text
% here we calculate a space equal to the amount \topskip exceeds the main text height
% we hook in at \@floatboxreset
\def\@IEEEfiguretopskipspace{\ifdim\prevdepth=-1000pt\relax
\setlength{\@IEEEtrantmpdimenA}{1\topskip}\relax
\addtolength{\@IEEEtrantmpdimenA}{-0.7\@IEEEnormalsizeunitybaselineskip}\relax
\vspace*{\@IEEEtrantmpdimenA}\fi}
% V1.8 compensate for \topskip at the top of top tables so caption text is on main text baseline
% use a strut set on the caption baseline within \@makecaption
\def\@IEEEtabletopskipstrut{\ifdim\prevdepth=-1000pt\rule{0pt}{\topskip}\fi}
% the \ifdim\prevdepth checks are always expected to be true for IEEE style float caption ordering
% because top of figure content and top of captions in tables is the first thing on the vertical
% list of these floats
% thanks to Donald Arseneau for his 2000/11/11 post "Re: caption hacking" with info on this topic.


\ifCLASSOPTIONcompsoc
% V1.7 compsoc \@makecaption
\ifCLASSOPTIONconference% compsoc conference
\long\def\@makecaption#1#2{%
% test if is a for a figure or table
\ifx\@captype\@IEEEtablestring%
% if a table, do table caption
\footnotesize\bgroup\par\centering\@IEEEtabletopskipstrut{\normalfont\footnotesize {#1.}\nobreakspace\scshape #2}\par\addvspace{0.5\baselineskip}\egroup%
\@IEEEtablecaptionsepspace
% if not a table, format it as a figure
\else
\@IEEEfigurecaptionsepspace
\setbox\@tempboxa\hbox{\normalfont\footnotesize {#1.}\nobreakspace #2}%
\ifdim \wd\@tempboxa >\hsize%
% if caption is longer than a line, let it wrap around
\setbox\@tempboxa\hbox{\normalfont\footnotesize {#1.}\nobreakspace}%
\parbox[t]{\hsize}{\normalfont\footnotesize \noindent\unhbox\@tempboxa#2}%
% if caption is shorter than a line, center
\else%
\hbox to\hsize{\normalfont\footnotesize\hfil\box\@tempboxa\hfil}%
\fi\fi}
%
\else% nonconference compsoc
\long\def\@makecaption#1#2{%
% test if is a for a figure or table
\ifx\@captype\@IEEEtablestring%
% if a table, do table caption
\footnotesize\bgroup\par\centering\@IEEEtabletopskipstrut{\normalfont\sffamily\footnotesize #1}\\{\normalfont\sffamily\footnotesize #2}\par\addvspace{0.5\baselineskip}\egroup%
\@IEEEtablecaptionsepspace
% if not a table, format it as a figure
\else
\@IEEEfigurecaptionsepspace
\setbox\@tempboxa\hbox{\normalfont\sffamily\footnotesize {#1.}\nobreakspace #2}%
\ifdim \wd\@tempboxa >\hsize%
% if caption is longer than a line, let it wrap around
\setbox\@tempboxa\hbox{\normalfont\sffamily\footnotesize {#1.}\nobreakspace}%
\parbox[t]{\hsize}{\normalfont\sffamily\footnotesize \noindent\unhbox\@tempboxa#2}%
% if caption is shorter than a line, left justify
\else%
\hbox to\hsize{\normalfont\sffamily\footnotesize\box\@tempboxa\hfil}%
\fi\fi}
\fi
%
\else% traditional noncompsoc \@makecaption
\long\def\@makecaption#1#2{%
% test if is a for a figure or table
\ifx\@captype\@IEEEtablestring%
% if a table, do table caption
\footnotesize\bgroup\par\centering\@IEEEtabletopskipstrut{\normalfont\footnotesize #1}\\{\normalfont\footnotesize\scshape #2}\par\addvspace{0.5\baselineskip}\egroup%
\@IEEEtablecaptionsepspace
% if not a table, format it as a figure
\else
\@IEEEfigurecaptionsepspace
% 3/2001 use footnotesize, not small; use two nonbreaking spaces, not one
\setbox\@tempboxa\hbox{\normalfont\footnotesize {#1.}\nobreakspace\nobreakspace #2}%
\ifdim \wd\@tempboxa >\hsize%
% if caption is longer than a line, let it wrap around
\setbox\@tempboxa\hbox{\normalfont\footnotesize {#1.}\nobreakspace\nobreakspace}%
\parbox[t]{\hsize}{\normalfont\footnotesize\noindent\unhbox\@tempboxa#2}%
% if caption is shorter than a line, center if conference, left justify otherwise
\else%
\ifCLASSOPTIONconference \hbox to\hsize{\normalfont\footnotesize\hfil\box\@tempboxa\hfil}%
\else \hbox to\hsize{\normalfont\footnotesize\box\@tempboxa\hfil}%
\fi\fi\fi}
\fi



% V1.7 disable captions class option, do so in a way that retains operation of \label
% within \caption
\ifCLASSOPTIONcaptionsoff
\long\def\@makecaption#1#2{\vspace*{2em}\footnotesize\bgroup\par\addvspace{0.5\baselineskip}\centering{\footnotesize #1}\par\addvspace{0.5\baselineskip}\egroup%
\let\@IEEEtemporiglabeldefsave\label
\let\@IEEEtemplabelargsave\relax
\def\label##1{\gdef\@IEEEtemplabelargsave{##1}}%
\setbox\@tempboxa\hbox{#2}%
\let\label\@IEEEtemporiglabeldefsave
\ifx\@IEEEtemplabelargsave\relax\else\label{\@IEEEtemplabelargsave}\fi}
\fi


% V1.7 define end environments with \def not \let so as to work OK with
% preview-latex
\newcounter{figure}
\def\thefigure{\@arabic\c@figure}
\def\fps@figure{tbp}
\def\ftype@figure{1}
\def\ext@figure{lof}
\def\fnum@figure{\figurename\nobreakspace\thefigure}
% V1.8 within figures add \@IEEEfiguretopskipspace compensation to LaTeX2e's \@floatboxreset
\def\figure{\def\@floatboxreset{\reset@font\normalsize\@setminipage\@IEEEfiguretopskipspace}\@float{figure}}
\def\endfigure{\end@float}
% V1.8 also add \@IEEEfiguretopskipspace compensation to \figure*
\@namedef{figure*}{\def\@floatboxreset{\reset@font\normalsize\@setminipage\@IEEEfiguretopskipspace}\@dblfloat{figure}}
\@namedef{endfigure*}{\end@dblfloat}

\newcounter{table}
\ifCLASSOPTIONcompsoc
\def\thetable{\arabic{table}}
\else
\def\thetable{\@Roman\c@table}
\fi
\def\fps@table{tbp}
\def\ftype@table{2}
\def\ext@table{lot}
\def\fnum@table{\tablename\nobreakspace\thetable}
% V1.6 The IEEE uses 8pt text for tables
% within tables alter LaTeX2e's \@floatboxreset to use \footnotesize
\def\table{\def\@floatboxreset{\reset@font\footnotesize\@setminipage}\@float{table}}
\def\endtable{\end@float}
% v1.6b double column tables need to default to footnotesize as well.
\@namedef{table*}{\def\@floatboxreset{\reset@font\footnotesize\@setminipage}\@dblfloat{table}}
\@namedef{endtable*}{\end@dblfloat}




%% -- Command Argument Scanning Support Functions --
%% V1.8a 

% usage: \@IEEEstripouterbraces*{}
% \@IEEEstripouterbraces fully expands its argument (which it then stores
% in \@IEEEstripouterbracesarg) via \edef, then removes any outer enclosing
% braces, and finally stores the result in the macro
% \@IEEEstrippedouterbraces.
%
% For example:
% \@IEEEstripouterbraces{{{{ab}c}}}
% results in:
%
% \@IEEEstripouterbracesarg ==> a macro containing {{{ab}c}}
% \@IEEEstrippedouterbraces ==> a macro containing {ab}c
%
% the *-star form,\@IEEEstripouterbraces*, does not expand the argument
% contents during processing
\def\@IEEEstripouterbraces{\@ifstar{\let\@IEEEstripouterbracesdef=\def\@@IEEEstripouterbraces}{\let\@IEEEstripouterbracesdef=\edef\@@IEEEstripouterbraces}}

\def\@@IEEEstripouterbraces#1{\@IEEEstripouterbracesdef\@IEEEstripouterbracesarg{#1}\relax
% If the macro is unchanged after being acquired as a single delimited
% argument, we know we have one sequence of tokens without any enclosing
% braces. Loop until this is true.
\loop
  \expandafter\@@@IEEEstripouterbraces\@IEEEstripouterbracesarg\@IEEEgeneralsequenceDELIMITER
\ifx\@IEEEstrippedouterbraces\@IEEEstripouterbracesarg
\else
  \let\@IEEEstripouterbracesarg\@IEEEstrippedouterbraces
\repeat}

\def\@@@IEEEstripouterbraces#1\@IEEEgeneralsequenceDELIMITER{\def\@IEEEstrippedouterbraces{#1}}



% usage: \@IEEEextractgroup*{}
% \@IEEEextractgroup fully expands its argument (which it then stores in
% \@IEEEextractgrouparg) via \edef and then assigns the first "brace group"
% of tokens to the macro \@IEEEextractedgroup.
% The remaining groups, if any, are stored in the macro
% \@IEEEextractedgroupremain. If the argument does not contain the requisite
% groups, the respective macros will be defined to be empty.
% There is an asymmetry in that \@IEEEextractedgroup is stripped of its first
% outer grouping while \@IEEEextractedgroupremain retains even the outer
% grouping (if present) that originally identified it as a group.
%
% For example:
% \@IEEEextractgroup{{{ab}}{c{de}}}
% results in:
%
% \@IEEEextractgrouparg       ==> a macro containing {{ab}}{c{de}}
% \@IEEEextractedgroup        ==> a macro containing {ab}
% \@IEEEextractedgroupremain  ==> a macro containing {c{de}}
%
% The *-star form, \@IEEEextractgroup*, does not expand its argument
% contents during processing.
\def\@IEEEextractgroup{\@ifstar{\let\@IEEEextractgroupdef=\def\@@IEEEextractgroup}{\let\@IEEEextractgroupdef=\edef\@@IEEEextractgroup}}

\def\@@IEEEextractgroup#1{\@IEEEextractgroupdef\@IEEEextractgrouparg{#1}\relax
% trap the case of an empty extracted group as this would cause problems with
% \@IEEEextractgroupremain's argument acquisition
\ifx\@IEEEextractgrouparg\@empty
  \def\@IEEEextractedgroup{}\relax
  \def\@IEEEextractedgroupremain{}\relax
\else
  % We have to use some dirty tricks here. We want to insert {} around
  % whatever remains after the first group so that TeX's argument scanner
  % will preserve any originally enclosing braces as well as provide an
  % empty argument to acquire even if there isn't a second group.
  % In this first of two dirty tricks, we put a } at the end of the structure
  % we are going to extract from. The \ifnum0=`{\fi keeps TeX happy to allow
  % what would otherwise be an unbalanced macro definition for
  % \@@IEEEextractgroup to be acceptable to it.
  \ifnum0=`{\fi\expandafter\@IEEEextractgroupremain\@IEEEextractgrouparg}\relax
\fi}

% In the second part of the dirty tricks, we insert a leading { right after
% the first group is acquired, but before the remainder is. Again, the
% \ifnum0=`}\fi keeps TeX happy during definition time, but will disappear
% during run time.
\def\@IEEEextractgroupremain#1{\def\@IEEEextractedgroup{#1}\expandafter\@@IEEEextractgroupremain\expandafter{\ifnum0=`}\fi}

\def\@@IEEEextractgroupremain#1{\def\@IEEEextractedgroupremain{#1}}



% \@IEEEextracttoken relocated at top because margin setting commands rely on it



% usage: \@IEEEextracttokengroups*{}
% \@IEEEextracttokengroups fully expands its argument (which it then stores
% in \@IEEEextracttokengroupsarg) and then assigns the first "brace group" of
% tokens (with the outermost braces removed) to the macro
% \@IEEEextractedfirstgroup.
% The meaning of the first nonbrace (but including the empty group) token
% within this first group is assigned via \let to \@IEEEextractedfirsttoken
% as well as stored in the macro \@IEEEextractedfirsttokenmacro. If a first
% nonbrace token does not exist (or is an empty group), these will be \relax
% and empty, respectively.  Tokens that would otherwise be discarded during
% the acquisition of the first token in the first group are stored in
% \@IEEEextractedfirsttokensdiscarded, however their original relative brace
% nesting depths are not guaranteed to be preserved.
% The first group within this first group is stored in the macro
% \@IEEEextractedfirstfirstgroup.
% Likewise for the next group after the first: \@IEEEextractednextgroup,
% \@IEEEextractednextfirstgroup, \@IEEEextractednextgroupfirsttoken,
% \@IEEEextractednextgroupfirsttokenmacro, and 
% \@IEEEextractednextfirsttokensdiscarded.
% All tokens/groups after the first group, including any enclosing braces,
% are stored in the macro \@IEEEextractedafterfirstgroupremain which will
% be empty if none exist.
%
% For example:
% \@IEEEextracttokengroups{{{ab}{cd}}{{ef}g}}
% will result in:
%
% \@IEEEextracttokengroupsarg             ==> a macro containing {{ab}{cd}}{{ef}g}
% \@IEEEextractedfirstgroup               ==> a macro containing {ab}{cd}
% \@IEEEextractedafterfirstgroupremain    ==> a macro containing {{ef}g}
% \@IEEEextractedfirsttoken               ==> the letter a
% \@IEEEextractedfirsttokenmacro          ==> a macro containing a
% \@IEEEextractedfirsttokensdiscarded     ==> a macro containing bcd
% \@IEEEextractedfirstfirstgroup          ==> a macro containing ab
% \@IEEEextractednextgroup                ==> a macro containing {ef}g
% \@IEEEextractednextfirsttoken           ==> the letter e
% \@IEEEextractednextfirsttokenmacro      ==> a macro containing e
% \@IEEEextractednextfirsttokensdiscarded ==> a macro containing fg
% \@IEEEextractednextfirstgroup           ==> a macro containing ef
%
% If given an empty argument, \@IEEEextractedfirsttoken and
% \@IEEEextractednextfirsttoken will be set to \relax
% and all the macros will be empty.
% the *-star form, \@IEEEextracttokengroups*, does not expand its argument
% contents during processing.
%
% Depends on: \@IEEEextractgroup, \@IEEEextracttoken
\def\@IEEEextracttokengroups{\@ifstar{\let\@IEEEextracttokengroupsdef=\def\@@IEEEextracttokengroups}{\let\@IEEEextracttokengroupsdef=\edef\@@IEEEextracttokengroups}}
\def\@@IEEEextracttokengroups#1{\@IEEEextracttokengroupsdef\@IEEEextracttokengroupsarg{#1}\relax
% begin extraction, these functions are safe with empty arguments
% first group
\expandafter\@IEEEextractgroup\expandafter*\expandafter{\@IEEEextracttokengroupsarg}\relax
\let\@IEEEextractedfirstgroup\@IEEEextractedgroup
\let\@IEEEextractedafterfirstgroupremain\@IEEEextractedgroupremain
\expandafter\@IEEEextracttoken\expandafter*\expandafter{\@IEEEextractedfirstgroup}\relax
\let\@IEEEextractedfirsttoken\@IEEEextractedtoken
\let\@IEEEextractedfirsttokenmacro\@IEEEextractedtokenmacro
\let\@IEEEextractedfirsttokensdiscarded\@IEEEextractedtokensdiscarded
% first first group
\expandafter\@IEEEextractgroup\expandafter*\expandafter{\@IEEEextractedfirstgroup}\relax
\let\@IEEEextractedfirstfirstgroup\@IEEEextractedgroup
% next group
\expandafter\@IEEEextractgroup\expandafter*\expandafter{\@IEEEextractedafterfirstgroupremain}\relax
\let\@IEEEextractednextgroup\@IEEEextractedgroup
\expandafter\@IEEEextracttoken\expandafter*\expandafter{\@IEEEextractednextgroup}\relax
\let\@IEEEextractednextfirsttoken\@IEEEextractedtoken
\let\@IEEEextractednextfirsttokenmacro\@IEEEextractedtokenmacro
\let\@IEEEextractednextfirsttokensdiscarded\@IEEEextractedtokensdiscarded
% next first group
\expandafter\@IEEEextractgroup\expandafter*\expandafter{\@IEEEextractednextgroup}\relax
\let\@IEEEextractednextfirstgroup\@IEEEextractedgroup}


%% -- End of Command Argument Scanning Support Functions --




%%
%% START OF IEEEeqnarray DEFINITIONS
%%
%% Inspired by the concepts, examples, and previous works of LaTeX 
%% coders and developers such as Donald Arseneau, Fred Bartlett, 
%% David Carlisle, Tony Liu, Frank Mittelbach, Piet van Oostrum, 
%% Roland Winkler and Mark Wooding.
%% I don't make the claim that my work here is even near their calibre. ;)


\newif\if@IEEEeqnarrayboxnojot% flag to indicate if the environment was called as the star form
\@IEEEeqnarrayboxnojotfalse

\newif\if@advanceIEEEeqncolcnt% tracks if the environment should advance the col counter
% allows a way to make an \IEEEeqnarraybox that can be used within an \IEEEeqnarray
% used by IEEEeqnarraymulticol so that it can work properly in both
\@advanceIEEEeqncolcnttrue

\newcount\@IEEEeqnnumcols % tracks how many IEEEeqnarray cols are defined
\newcount\@IEEEeqncolcnt  % tracks how many IEEEeqnarray cols the user actually used


% The default math style used by the columns
\def\IEEEeqnarraymathstyle{\displaystyle}
% The default text style used by the columns
% default to using the current font
\def\IEEEeqnarraytextstyle{\relax}

% like the iedlistdecl but for \IEEEeqnarray
\def\IEEEeqnarraydecl{\relax}
\def\IEEEeqnarrayboxdecl{\relax}



% V1.8 flags to indicate that equation numbering is to persist
\newif\if@IEEEeqnumpersist%
\@IEEEeqnumpersistfalse
\newif\if@IEEEsubeqnumpersist%
\@IEEEsubeqnumpersistfalse
%
% V1.8 flags to indicate if (sub)equation number of last line was preadvanced
\newif\if@IEEEeqnumpreadv%
\@IEEEeqnumpreadvfalse
\newif\if@IEEEsubeqnumpreadv%
\@IEEEsubeqnumpreadvfalse

\newcount\@IEEEsubeqnnumrollback% saves previous value of IEEEsubequation number in case we need to restore it

% \yesnumber is the opposite of \nonumber
% a novel concept with the same def as the equationarray package
% However, we give IEEE versions too since some LaTeX packages such as 
% the MDWtools mathenv.sty redefine \nonumber to something else.
% This command is intended for use in non-IEEEeqnarray math environments
\providecommand{\yesnumber}{\global\@eqnswtrue}


% IEEEyes/nonumber 
% V1.8 add persistant * forms
% These commands can alter the type of equation an IEEEeqnarray line is.
\def\IEEEyesnumber{\@ifstar{\global\@IEEEeqnumpersisttrue\global\@IEEEsubeqnumpersistfalse\@IEEEyesnumber}{\@IEEEyesnumber}}

\def\@IEEEyesnumber{\global\@eqnswtrue
\if@IEEEeqnarrayISinner% alter counters and label only inside an IEEEeqnarray
\ifnum\c@IEEEsubequation>0\relax
   \stepcounter{equation}\setcounter{IEEEsubequation}{0}\gdef\@currentlabel{\p@equation\theequation}\relax
   \gdef\@currentHref{\@IEEEtheHrefequation}% setup hyperref label
\fi
% even if we reached this eqn num via a preadv, it is legit now
\global\@IEEEeqnumpreadvfalse\global\@IEEEsubeqnumpreadvfalse
\fi}

\def\IEEEnonumber{\@ifstar{\global\@IEEEeqnumpersistfalse\global\@IEEEsubeqnumpersistfalse\global\@eqnswfalse}{\global\@eqnswfalse}}


\def\IEEEyessubnumber{\@ifstar{\global\@IEEEsubeqnumpersisttrue\@IEEEyessubnumber}{\@IEEEyessubnumber}}
%
\def\@IEEEyessubnumber{\if@IEEEeqnarrayISinner% alter counters and label only inside an IEEEeqnarray
  \ifnum\c@IEEEsubequation>0\relax% if it already is a subequation, we are good to go as-is
  \else% if we are a regular equation we have to watch out for two cases
    \if@IEEEeqnumpreadv% if this equation is the result of a preadvance, backout and bump the sub eqnnum
       \global\advance\c@equation\m@ne\global\c@IEEEsubequation=\@IEEEsubeqnnumrollback\addtocounter{IEEEsubequation}{1}\relax
    \else% non-preadvanced equations just need initialization of their sub eqnnum
       \setcounter{IEEEsubequation}{1}\relax
    \fi
  \fi% fi already is subequation
  \gdef\@currentlabel{\p@IEEEsubequation\theIEEEsubequation}\relax
  \gdef\@currentHref{\@IEEEtheHrefsubequation}% setup hyperref label
  \global\@IEEEeqnumpreadvfalse\global\@IEEEsubeqnumpreadvfalse% no longer a preadv anymore
  \global\@eqnswtrue
\fi}


\def\IEEEnosubnumber{\@ifstar{\global\@IEEEsubeqnumpersistfalse\@IEEEnosubnumber}{\@IEEEnosubnumber}}
%
\def\@IEEEnosubnumber{\if@IEEEeqnarrayISinner% alter counters and label only inside an IEEEeqnarray
  \if@eqnsw % we do nothing unless we know we will display because we play with the counters here
    % if it currently is a subequation, bump up to the next equation number and turn off the subequation
    \ifnum\c@IEEEsubequation>0\relax\addtocounter{equation}{1}\setcounter{IEEEsubequation}{0}\relax
    \fi
    \global\@IEEEeqnumpreadvfalse\global\@IEEEsubeqnumpreadvfalse% no longer a preadv anymore
    \gdef\@currentlabel{\p@equation\theequation}\relax
    \gdef\@currentHref{\@IEEEtheHrefequation}% setup hyperref label
  \fi
\fi}



% allows users to "push away" equations that get too close to the equation numbers
\def\IEEEeqnarraynumspace{\hphantom{\ifnum\c@IEEEsubequation>0\relax\theIEEEsubequationdis\else\theequationdis\fi}}

% provides a way to span multiple columns within IEEEeqnarray environments
% will consider \if@advanceIEEEeqncolcnt before globally advancing the
% column counter - so as to work within \IEEEeqnarraybox
% usage: \IEEEeqnarraymulticol{number cols. to span}{col type}{cell text}
\long\def\IEEEeqnarraymulticol#1#2#3{\multispan{#1}\relax
% check if column is defined for the precolumn definition
% We have to be careful here because TeX scans for & even within an \iffalse
% where it does not expand macros. So, if we used only one \ifx and a #3
% appeared in the false branch and the user inserted another alignment
% structure that uses & in the \IEEEeqnarraymulticol{}, TeX will not see that
% there is an inner alignment in the false branch yet still will see any &
% there and will think that they apply to the outer alignment resulting in an
% incomplete \ifx error.
% So, here we use separate checks for the pre and post parts in order to keep
% the #3 outside of all conditionals.
\relax\expandafter\ifx\csname @IEEEeqnarraycolDEF#2\endcsname\@IEEEeqnarraycolisdefined\relax
\csname @IEEEeqnarraycolPRE#2\endcsname
\else% if not, error and use default type
\@IEEEclspkgerror{Invalid column type "#2" in \string\IEEEeqnarraymulticol.\MessageBreak
Using a default centering column instead}%
{You must define IEEEeqnarray column types before use.}%
\csname @IEEEeqnarraycolPRE@IEEEdefault\endcsname
\fi
% The ten \relax are to help prevent misleading error messages in case a user
% accidently inserted a macro that tries to acquire additional arguments.
#3\relax\relax\relax\relax\relax\relax\relax\relax\relax\relax
% check if column is defined for the postcolumn definition
\expandafter\ifx\csname @IEEEeqnarraycolDEF#2\endcsname\@IEEEeqnarraycolisdefined\relax
\csname @IEEEeqnarraycolPOST#2\endcsname
\else% if not, use the default type
\csname @IEEEeqnarraycolPOST@IEEEdefault\endcsname
\fi
% advance column counter only if the IEEEeqnarray environment wants it
\if@advanceIEEEeqncolcnt\global\advance\@IEEEeqncolcnt by #1\relax\fi}

% like \omit, but maintains track of the column counter for \IEEEeqnarray
\def\IEEEeqnarrayomit{\omit\if@advanceIEEEeqncolcnt\global\advance\@IEEEeqncolcnt by 1\relax\fi}


% provides a way to define a letter referenced column type
% usage: \IEEEeqnarraydefcol{col. type letter/name}{pre insertion text}{post insertion text}
\def\IEEEeqnarraydefcol#1#2#3{\expandafter\def\csname @IEEEeqnarraycolPRE#1\endcsname{#2}%
\expandafter\def\csname @IEEEeqnarraycolPOST#1\endcsname{#3}%
\expandafter\def\csname @IEEEeqnarraycolDEF#1\endcsname{1}}


% provides a way to define a numerically referenced inter-column glue types
% usage: \IEEEeqnarraydefcolsep{col. glue number}{glue definition}
\def\IEEEeqnarraydefcolsep#1#2{\expandafter\def\csname @IEEEeqnarraycolSEP\romannumeral #1\endcsname{#2}%
\expandafter\def\csname @IEEEeqnarraycolSEPDEF\romannumeral #1\endcsname{1}}


\def\@IEEEeqnarraycolisdefined{1}% just a macro for 1, used for checking undefined column types


% expands and appends the given argument to the \@IEEEtrantmptoksA token list
% used to build up the \halign preamble
\def\@IEEEappendtoksA#1{\edef\@@IEEEappendtoksA{\@IEEEtrantmptoksA={\the\@IEEEtrantmptoksA #1}}%
\@@IEEEappendtoksA}

% also appends to \@IEEEtrantmptoksA, but does not expand the argument
% uses \toks8 as a scratchpad register
\def\@IEEEappendNOEXPANDtoksA#1{\toks8={#1}%
\edef\@@IEEEappendNOEXPANDtoksA{\@IEEEtrantmptoksA={\the\@IEEEtrantmptoksA\the\toks8}}%
\@@IEEEappendNOEXPANDtoksA}

% define some common column types for the user
% math
\IEEEeqnarraydefcol{l}{$\IEEEeqnarraymathstyle}{$\hfil}
\IEEEeqnarraydefcol{c}{\hfil$\IEEEeqnarraymathstyle}{$\hfil}
\IEEEeqnarraydefcol{r}{\hfil$\IEEEeqnarraymathstyle}{$}
\IEEEeqnarraydefcol{L}{$\IEEEeqnarraymathstyle{}}{{}$\hfil}
\IEEEeqnarraydefcol{C}{\hfil$\IEEEeqnarraymathstyle{}}{{}$\hfil}
\IEEEeqnarraydefcol{R}{\hfil$\IEEEeqnarraymathstyle{}}{{}$}
% text
\IEEEeqnarraydefcol{s}{\IEEEeqnarraytextstyle}{\hfil}
\IEEEeqnarraydefcol{t}{\hfil\IEEEeqnarraytextstyle}{\hfil}
\IEEEeqnarraydefcol{u}{\hfil\IEEEeqnarraytextstyle}{}

% vertical rules
\IEEEeqnarraydefcol{v}{}{\vrule width\arrayrulewidth}
\IEEEeqnarraydefcol{vv}{\vrule width\arrayrulewidth\hfil}{\hfil\vrule width\arrayrulewidth}
\IEEEeqnarraydefcol{V}{}{\vrule width\arrayrulewidth\hskip\doublerulesep\vrule width\arrayrulewidth}
\IEEEeqnarraydefcol{VV}{\vrule width\arrayrulewidth\hskip\doublerulesep\vrule width\arrayrulewidth\hfil}%
{\hfil\vrule width\arrayrulewidth\hskip\doublerulesep\vrule width\arrayrulewidth}

% horizontal rules
\IEEEeqnarraydefcol{h}{}{\leaders\hrule height\arrayrulewidth\hfil}
\IEEEeqnarraydefcol{H}{}{\leaders\vbox{\hrule width\arrayrulewidth\vskip\doublerulesep\hrule width\arrayrulewidth}\hfil}

% plain
\IEEEeqnarraydefcol{x}{}{}
\IEEEeqnarraydefcol{X}{$}{$}

% the default column type to use in the event a column type is not defined
\IEEEeqnarraydefcol{@IEEEdefault}{\hfil$\IEEEeqnarraymathstyle}{$\hfil}


% a zero tabskip (used for "-" col types)
\def\@IEEEeqnarraycolSEPzero{0pt plus 0pt minus 0pt}
% a centering tabskip (used for "+" col types)
\def\@IEEEeqnarraycolSEPcenter{1000pt plus 0pt minus 1000pt}

% top level default tabskip glues for the start, end, and inter-column
% may be reset within environments not always at the top level, e.g., \IEEEeqnarraybox
\edef\@IEEEeqnarraycolSEPdefaultstart{\@IEEEeqnarraycolSEPcenter}% default start glue
\edef\@IEEEeqnarraycolSEPdefaultend{\@IEEEeqnarraycolSEPcenter}% default end glue
\edef\@IEEEeqnarraycolSEPdefaultmid{\@IEEEeqnarraycolSEPzero}% default inter-column glue



% creates a vertical rule that extends from the bottom to the top a a cell
% Provided in case other packages redefine \vline some other way.
% usage: \IEEEeqnarrayvrule[rule thickness]
% If no argument is provided, \arrayrulewidth will be used for the rule thickness. 
\newcommand\IEEEeqnarrayvrule[1][\arrayrulewidth]{\vrule\@width#1\relax}

% creates a blank separator row
% usage: \IEEEeqnarrayseprow[separation length][font size commands]
% default is \IEEEeqnarrayseprow[0.25\normalbaselineskip][\relax]
% blank arguments inherit the default values
% uses \skip5 as a scratch register - calls \@IEEEeqnarraystrutsize which uses more scratch registers
\def\IEEEeqnarrayseprow{\relax\@ifnextchar[{\@IEEEeqnarrayseprow}{\@IEEEeqnarrayseprow[0.25\normalbaselineskip]}}
\def\@IEEEeqnarrayseprow[#1]{\relax\@ifnextchar[{\@@IEEEeqnarrayseprow[#1]}{\@@IEEEeqnarrayseprow[#1][\relax]}}
\def\@@IEEEeqnarrayseprow[#1][#2]{\def\@IEEEeqnarrayseprowARGONE{#1}%
\ifx\@IEEEeqnarrayseprowARGONE\@empty%
% get the skip value, based on the font commands
% use skip5 because \IEEEeqnarraystrutsize uses \skip0, \skip2, \skip3
% assign within a bogus box to confine the font changes
{\setbox0=\hbox{#2\relax\global\skip5=0.25\normalbaselineskip}}%
\else%
{\setbox0=\hbox{#2\relax\global\skip5=#1}}%
\fi%
\@IEEEeqnarrayhoptolastcolumn\IEEEeqnarraystrutsize{\skip5}{0pt}[\relax]\relax}

% creates a blank separator row, but omits all the column templates
% usage: \IEEEeqnarrayseprowcut[separation length][font size commands]
% default is \IEEEeqnarrayseprowcut[0.25\normalbaselineskip][\relax]
% blank arguments inherit the default values
% uses \skip5 as a scratch register - calls \@IEEEeqnarraystrutsize which uses more scratch registers
\def\IEEEeqnarrayseprowcut{\multispan{\@IEEEeqnnumcols}\relax% span all the cols
% advance column counter only if the IEEEeqnarray environment wants it
\if@advanceIEEEeqncolcnt\global\advance\@IEEEeqncolcnt by \@IEEEeqnnumcols\relax\fi%
\@ifnextchar[{\@IEEEeqnarrayseprowcut}{\@IEEEeqnarrayseprowcut[0.25\normalbaselineskip]}}
\def\@IEEEeqnarrayseprowcut[#1]{\relax\@ifnextchar[{\@@IEEEeqnarrayseprowcut[#1]}{\@@IEEEeqnarrayseprowcut[#1][\relax]}}
\def\@@IEEEeqnarrayseprowcut[#1][#2]{\def\@IEEEeqnarrayseprowARGONE{#1}%
\ifx\@IEEEeqnarrayseprowARGONE\@empty%
% get the skip value, based on the font commands
% use skip5 because \IEEEeqnarraystrutsize uses \skip0, \skip2, \skip3
% assign within a bogus box to confine the font changes
{\setbox0=\hbox{#2\relax\global\skip5=0.25\normalbaselineskip}}%
\else%
{\setbox0=\hbox{#2\relax\global\skip5=#1}}%
\fi%
\IEEEeqnarraystrutsize{\skip5}{0pt}[\relax]\relax}



% draws a single rule across all the columns optional
% argument determines the rule width, \arrayrulewidth is the default
% updates column counter as needed and turns off struts
% usage: \IEEEeqnarrayrulerow[rule line thickness]
\def\IEEEeqnarrayrulerow{\multispan{\@IEEEeqnnumcols}\relax% span all the cols
% advance column counter only if the IEEEeqnarray environment wants it
\if@advanceIEEEeqncolcnt\global\advance\@IEEEeqncolcnt by \@IEEEeqnnumcols\relax\fi%
\@ifnextchar[{\@IEEEeqnarrayrulerow}{\@IEEEeqnarrayrulerow[\arrayrulewidth]}}
\def\@IEEEeqnarrayrulerow[#1]{\leaders\hrule height#1\hfil\relax% put in our rule 
% turn off any struts
\IEEEeqnarraystrutsize{0pt}{0pt}[\relax]\relax}


% draws a double rule by using a single rule row, a separator row, and then
% another single rule row 
% first optional argument determines the rule thicknesses, \arrayrulewidth is the default
% second optional argument determines the rule spacing, \doublerulesep is the default
% usage: \IEEEeqnarraydblrulerow[rule line thickness][rule spacing]
\def\IEEEeqnarraydblrulerow{\multispan{\@IEEEeqnnumcols}\relax% span all the cols
% advance column counter only if the IEEEeqnarray environment wants it
\if@advanceIEEEeqncolcnt\global\advance\@IEEEeqncolcnt by \@IEEEeqnnumcols\relax\fi%
\@ifnextchar[{\@IEEEeqnarraydblrulerow}{\@IEEEeqnarraydblrulerow[\arrayrulewidth]}}
\def\@IEEEeqnarraydblrulerow[#1]{\relax\@ifnextchar[{\@@IEEEeqnarraydblrulerow[#1]}%
{\@@IEEEeqnarraydblrulerow[#1][\doublerulesep]}}
\def\@@IEEEeqnarraydblrulerow[#1][#2]{\def\@IEEEeqnarraydblrulerowARG{#1}%
% we allow the user to say \IEEEeqnarraydblrulerow[][]
\ifx\@IEEEeqnarraydblrulerowARG\@empty%
\@IEEEeqnarrayrulerow[\arrayrulewidth]%
\else%
\@IEEEeqnarrayrulerow[#1]\relax%
\fi%
\def\@IEEEeqnarraydblrulerowARG{#2}%
\ifx\@IEEEeqnarraydblrulerowARG\@empty%
\\\IEEEeqnarrayseprow[\doublerulesep][\relax]%
\else%
\\\IEEEeqnarrayseprow[#2][\relax]%
\fi%
\\\multispan{\@IEEEeqnnumcols}%
% advance column counter only if the IEEEeqnarray environment wants it
\if@advanceIEEEeqncolcnt\global\advance\@IEEEeqncolcnt by \@IEEEeqnnumcols\relax\fi%
\def\@IEEEeqnarraydblrulerowARG{#1}%
\ifx\@IEEEeqnarraydblrulerowARG\@empty%
\@IEEEeqnarrayrulerow[\arrayrulewidth]%
\else%
\@IEEEeqnarrayrulerow[#1]%
\fi%
}

% draws a double rule by using a single rule row, a separator (cutting) row, and then
% another single rule row 
% first optional argument determines the rule thicknesses, \arrayrulewidth is the default
% second optional argument determines the rule spacing, \doublerulesep is the default
% usage: \IEEEeqnarraydblrulerow[rule line thickness][rule spacing]
\def\IEEEeqnarraydblrulerowcut{\multispan{\@IEEEeqnnumcols}\relax% span all the cols
% advance column counter only if the IEEEeqnarray environment wants it
\if@advanceIEEEeqncolcnt\global\advance\@IEEEeqncolcnt by \@IEEEeqnnumcols\relax\fi%
\@ifnextchar[{\@IEEEeqnarraydblrulerowcut}{\@IEEEeqnarraydblrulerowcut[\arrayrulewidth]}}
\def\@IEEEeqnarraydblrulerowcut[#1]{\relax\@ifnextchar[{\@@IEEEeqnarraydblrulerowcut[#1]}%
{\@@IEEEeqnarraydblrulerowcut[#1][\doublerulesep]}}
\def\@@IEEEeqnarraydblrulerowcut[#1][#2]{\def\@IEEEeqnarraydblrulerowARG{#1}%
% we allow the user to say \IEEEeqnarraydblrulerow[][]
\ifx\@IEEEeqnarraydblrulerowARG\@empty%
\@IEEEeqnarrayrulerow[\arrayrulewidth]%
\else%
\@IEEEeqnarrayrulerow[#1]%
\fi%
\def\@IEEEeqnarraydblrulerowARG{#2}%
\ifx\@IEEEeqnarraydblrulerowARG\@empty%
\\\IEEEeqnarrayseprowcut[\doublerulesep][\relax]%
\else%
\\\IEEEeqnarrayseprowcut[#2][\relax]%
\fi%
\\\multispan{\@IEEEeqnnumcols}%
% advance column counter only if the IEEEeqnarray environment wants it
\if@advanceIEEEeqncolcnt\global\advance\@IEEEeqncolcnt by \@IEEEeqnnumcols\relax\fi%
\def\@IEEEeqnarraydblrulerowARG{#1}%
\ifx\@IEEEeqnarraydblrulerowARG\@empty%
\@IEEEeqnarrayrulerow[\arrayrulewidth]%
\else%
\@IEEEeqnarrayrulerow[#1]%
\fi%
}



% inserts a full row's worth of &'s
% relies on \@IEEEeqnnumcols to provide the correct number of columns
% uses \@IEEEtrantmptoksA, \count0 as scratch registers
\def\@IEEEeqnarrayhoptolastcolumn{\@IEEEtrantmptoksA={}\count0=1\relax%
\loop% add cols if the user did not use them all
\ifnum\count0<\@IEEEeqnnumcols\relax%
\@IEEEappendtoksA{&}%
\advance\count0 by 1\relax% update the col count
\repeat%
\the\@IEEEtrantmptoksA%execute the &'s
}



\newif\if@IEEEeqnarrayISinner % flag to indicate if we are within the lines
\@IEEEeqnarrayISinnerfalse    % of an IEEEeqnarray - after the IEEEeqnarraydecl

\edef\@IEEEeqnarrayTHEstrutheight{0pt} % height and depth of IEEEeqnarray struts
\edef\@IEEEeqnarrayTHEstrutdepth{0pt}

\edef\@IEEEeqnarrayTHEmasterstrutheight{0pt} % default height and depth of
\edef\@IEEEeqnarrayTHEmasterstrutdepth{0pt}  % struts within an IEEEeqnarray

\edef\@IEEEeqnarrayTHEmasterstrutHSAVE{0pt} % saved master strut height
\edef\@IEEEeqnarrayTHEmasterstrutDSAVE{0pt} % and depth

\newif\if@IEEEeqnarrayusemasterstrut % flag to indicate that the master strut value
\@IEEEeqnarrayusemasterstruttrue     % is to be used



% saves the strut height and depth of the master strut
\def\@IEEEeqnarraymasterstrutsave{\relax%
\expandafter\skip0=\@IEEEeqnarrayTHEmasterstrutheight\relax%
\expandafter\skip2=\@IEEEeqnarrayTHEmasterstrutdepth\relax%
% remove stretchability
\dimen0\skip0\relax%
\dimen2\skip2\relax%
% save values
\edef\@IEEEeqnarrayTHEmasterstrutHSAVE{\the\dimen0}%
\edef\@IEEEeqnarrayTHEmasterstrutDSAVE{\the\dimen2}}

% restores the strut height and depth of the master strut
\def\@IEEEeqnarraymasterstrutrestore{\relax%
\expandafter\skip0=\@IEEEeqnarrayTHEmasterstrutHSAVE\relax%
\expandafter\skip2=\@IEEEeqnarrayTHEmasterstrutDSAVE\relax%
% remove stretchability
\dimen0\skip0\relax%
\dimen2\skip2\relax%
% restore values
\edef\@IEEEeqnarrayTHEmasterstrutheight{\the\dimen0}%
\edef\@IEEEeqnarrayTHEmasterstrutdepth{\the\dimen2}}


% globally restores the strut height and depth to the 
% master values and sets the master strut flag to true
\def\@IEEEeqnarraystrutreset{\relax%
\expandafter\skip0=\@IEEEeqnarrayTHEmasterstrutheight\relax%
\expandafter\skip2=\@IEEEeqnarrayTHEmasterstrutdepth\relax%
% remove stretchability
\dimen0\skip0\relax%
\dimen2\skip2\relax%
% restore values
\xdef\@IEEEeqnarrayTHEstrutheight{\the\dimen0}%
\xdef\@IEEEeqnarrayTHEstrutdepth{\the\dimen2}%
\global\@IEEEeqnarrayusemasterstruttrue}


% if the master strut is not to be used, make the current
% values of \@IEEEeqnarrayTHEstrutheight, \@IEEEeqnarrayTHEstrutdepth
% and the use master strut flag, global
% this allows user strut commands issued in the last column to be carried
% into the isolation/strut column
\def\@IEEEeqnarrayglobalizestrutstatus{\relax%
\if@IEEEeqnarrayusemasterstrut\else%
\xdef\@IEEEeqnarrayTHEstrutheight{\@IEEEeqnarrayTHEstrutheight}%
\xdef\@IEEEeqnarrayTHEstrutdepth{\@IEEEeqnarrayTHEstrutdepth}%
\global\@IEEEeqnarrayusemasterstrutfalse%
\fi}



% usage: \IEEEeqnarraystrutsize{height}{depth}[font size commands]
% If called outside the lines of an IEEEeqnarray, sets the height
% and depth of both the master and local struts. If called inside
% an IEEEeqnarray line, sets the height and depth of the local strut
% only and sets the flag to indicate the use of the local strut
% values. If the height or depth is left blank, 0.7\normalbaselineskip
% and 0.3\normalbaselineskip will be used, respectively.
% The optional argument can be used to evaluate the lengths under
% a different font size and styles. If none is specified, the current
% font is used.
% uses scratch registers \skip0, \skip2, \skip3, \dimen0, \dimen2
\def\IEEEeqnarraystrutsize#1#2{\relax\@ifnextchar[{\@IEEEeqnarraystrutsize{#1}{#2}}{\@IEEEeqnarraystrutsize{#1}{#2}[\relax]}}
\def\@IEEEeqnarraystrutsize#1#2[#3]{\def\@IEEEeqnarraystrutsizeARG{#1}%
\ifx\@IEEEeqnarraystrutsizeARG\@empty%
{\setbox0=\hbox{#3\relax\global\skip3=0.7\normalbaselineskip}}%
\skip0=\skip3\relax%
\else% arg one present
{\setbox0=\hbox{#3\relax\global\skip3=#1\relax}}%
\skip0=\skip3\relax%
\fi% if null arg
\def\@IEEEeqnarraystrutsizeARG{#2}%
\ifx\@IEEEeqnarraystrutsizeARG\@empty%
{\setbox0=\hbox{#3\relax\global\skip3=0.3\normalbaselineskip}}%
\skip2=\skip3\relax%
\else% arg two present
{\setbox0=\hbox{#3\relax\global\skip3=#2\relax}}%
\skip2=\skip3\relax%
\fi% if null arg
% remove stretchability, just to be safe
\dimen0\skip0\relax%
\dimen2\skip2\relax%
% dimen0 = height, dimen2 = depth
\if@IEEEeqnarrayISinner% inner does not touch master strut size
\edef\@IEEEeqnarrayTHEstrutheight{\the\dimen0}%
\edef\@IEEEeqnarrayTHEstrutdepth{\the\dimen2}%
\@IEEEeqnarrayusemasterstrutfalse% do not use master
\else% outer, have to set master strut too
\edef\@IEEEeqnarrayTHEmasterstrutheight{\the\dimen0}%
\edef\@IEEEeqnarrayTHEmasterstrutdepth{\the\dimen2}%
\edef\@IEEEeqnarrayTHEstrutheight{\the\dimen0}%
\edef\@IEEEeqnarrayTHEstrutdepth{\the\dimen2}%
\@IEEEeqnarrayusemasterstruttrue% use master strut
\fi}


% usage: \IEEEeqnarraystrutsizeadd{added height}{added depth}[font size commands]
% If called outside the lines of an IEEEeqnarray, adds the given height
% and depth to both the master and local struts.
% If called inside an IEEEeqnarray line, adds the given height and depth
% to the local strut only and sets the flag to indicate the use 
% of the local strut values.
% In both cases, if a height or depth is left blank, 0pt is used instead.
% The optional argument can be used to evaluate the lengths under
% a different font size and styles. If none is specified, the current
% font is used.
% uses scratch registers \skip0, \skip2, \skip3, \dimen0, \dimen2
\def\IEEEeqnarraystrutsizeadd#1#2{\relax\@ifnextchar[{\@IEEEeqnarraystrutsizeadd{#1}{#2}}{\@IEEEeqnarraystrutsizeadd{#1}{#2}[\relax]}}
\def\@IEEEeqnarraystrutsizeadd#1#2[#3]{\def\@IEEEeqnarraystrutsizearg{#1}%
\ifx\@IEEEeqnarraystrutsizearg\@empty%
\skip0=0pt\relax%
\else% arg one present
{\setbox0=\hbox{#3\relax\global\skip3=#1}}%
\skip0=\skip3\relax%
\fi% if null arg
\def\@IEEEeqnarraystrutsizearg{#2}%
\ifx\@IEEEeqnarraystrutsizearg\@empty%
\skip2=0pt\relax%
\else% arg two present
{\setbox0=\hbox{#3\relax\global\skip3=#2}}%
\skip2=\skip3\relax%
\fi% if null arg
% remove stretchability, just to be safe
\dimen0\skip0\relax%
\dimen2\skip2\relax%
% dimen0 = height, dimen2 = depth
\if@IEEEeqnarrayISinner% inner does not touch master strut size
% get local strut size
\expandafter\skip0=\@IEEEeqnarrayTHEstrutheight\relax%
\expandafter\skip2=\@IEEEeqnarrayTHEstrutdepth\relax%
% add it to the user supplied values
\advance\dimen0 by \skip0\relax%
\advance\dimen2 by \skip2\relax%
% update the local strut size
\edef\@IEEEeqnarrayTHEstrutheight{\the\dimen0}%
\edef\@IEEEeqnarrayTHEstrutdepth{\the\dimen2}%
\@IEEEeqnarrayusemasterstrutfalse% do not use master
\else% outer, have to set master strut too
% get master strut size
\expandafter\skip0=\@IEEEeqnarrayTHEmasterstrutheight\relax%
\expandafter\skip2=\@IEEEeqnarrayTHEmasterstrutdepth\relax%
% add it to the user supplied values
\advance\dimen0 by \skip0\relax%
\advance\dimen2 by \skip2\relax%
% update the local and master strut sizes
\edef\@IEEEeqnarrayTHEmasterstrutheight{\the\dimen0}%
\edef\@IEEEeqnarrayTHEmasterstrutdepth{\the\dimen2}%
\edef\@IEEEeqnarrayTHEstrutheight{\the\dimen0}%
\edef\@IEEEeqnarrayTHEstrutdepth{\the\dimen2}%
\@IEEEeqnarrayusemasterstruttrue% use master strut
\fi}


% allow user a way to see the struts
\newif\ifIEEEvisiblestruts
\IEEEvisiblestrutsfalse

% inserts an invisible strut using the master or local strut values
% uses scratch registers \skip0, \skip2, \dimen0, \dimen2
\def\@IEEEeqnarrayinsertstrut{\relax%
\if@IEEEeqnarrayusemasterstrut
% get master strut size
\expandafter\skip0=\@IEEEeqnarrayTHEmasterstrutheight\relax%
\expandafter\skip2=\@IEEEeqnarrayTHEmasterstrutdepth\relax%
\else%
% get local strut size
\expandafter\skip0=\@IEEEeqnarrayTHEstrutheight\relax%
\expandafter\skip2=\@IEEEeqnarrayTHEstrutdepth\relax%
\fi%
% remove stretchability, probably not needed
\dimen0\skip0\relax%
\dimen2\skip2\relax%
% dimen0 = height, dimen2 = depth
% allow user to see struts if desired
\ifIEEEvisiblestruts%
\vrule width0.2pt height\dimen0 depth\dimen2\relax%
\else%
\vrule width0pt height\dimen0 depth\dimen2\relax\fi}


% creates an invisible strut, useable even outside \IEEEeqnarray
% if \IEEEvisiblestrutstrue, the strut will be visible and 0.2pt wide. 
% usage: \IEEEstrut[height][depth][font size commands]
% default is \IEEEstrut[0.7\normalbaselineskip][0.3\normalbaselineskip][\relax]
% blank arguments inherit the default values
% uses \dimen0, \dimen2, \skip0, \skip2
\def\IEEEstrut{\relax\@ifnextchar[{\@IEEEstrut}{\@IEEEstrut[0.7\normalbaselineskip]}}
\def\@IEEEstrut[#1]{\relax\@ifnextchar[{\@@IEEEstrut[#1]}{\@@IEEEstrut[#1][0.3\normalbaselineskip]}}
\def\@@IEEEstrut[#1][#2]{\relax\@ifnextchar[{\@@@IEEEstrut[#1][#2]}{\@@@IEEEstrut[#1][#2][\relax]}}
\def\@@@IEEEstrut[#1][#2][#3]{\mbox{#3\relax%
\def\@IEEEstrutARG{#1}%
\ifx\@IEEEstrutARG\@empty%
\skip0=0.7\normalbaselineskip\relax%
\else%
\skip0=#1\relax%
\fi%
\def\@IEEEstrutARG{#2}%
\ifx\@IEEEstrutARG\@empty%
\skip2=0.3\normalbaselineskip\relax%
\else%
\skip2=#2\relax%
\fi%
% remove stretchability, probably not needed
\dimen0\skip0\relax%
\dimen2\skip2\relax%
\ifIEEEvisiblestruts%
\vrule width0.2pt height\dimen0 depth\dimen2\relax%
\else%
\vrule width0.0pt height\dimen0 depth\dimen2\relax\fi}}


% enables strut mode by setting a default strut size and then zeroing the
% \baselineskip, \lineskip, \lineskiplimit and \jot
\def\IEEEeqnarraystrutmode{\IEEEeqnarraystrutsize{0.7\normalbaselineskip}{0.3\normalbaselineskip}[\relax]%
\baselineskip=0pt\lineskip=0pt\lineskiplimit=0pt\jot=0pt}


% equation and subequation forms to use to setup hyperref's \@currentHref
\def\@IEEEtheHrefequation{equation.\theHequation}
\def\@IEEEtheHrefsubequation{equation.\theHequation\alph{IEEEsubequation}}


\def\IEEEeqnarray{\@IEEEeqnumpersisttrue\@IEEEsubeqnumpersistfalse\@IEEEeqnarray}
\def\endIEEEeqnarray{\end@IEEEeqnarray}

\@namedef{IEEEeqnarray*}{\@IEEEeqnumpersistfalse\@IEEEsubeqnumpersistfalse\@IEEEeqnarray}
\@namedef{endIEEEeqnarray*}{\end@IEEEeqnarray}


% \IEEEeqnarray is an enhanced \eqnarray. 
% The star form defaults to not putting equation numbers at the end of each row.
% usage: \IEEEeqnarray[decl]{cols}
\def\@IEEEeqnarray{\relax\@ifnextchar[{\@@IEEEeqnarray}{\@@IEEEeqnarray[\relax]}}
% We have to be careful here to normalize catcodes just before acquiring the
% cols as that specification may contain punctuation which could be subject
% to document catcode changes.
\def\@@IEEEeqnarray[#1]{\begingroup\IEEEnormalcatcodes\@@@IEEEeqnarray[#1]}
\def\@@@IEEEeqnarray[#1]#2{\endgroup
   % default to showing the equation number or not based on whether or not
   % the star form was involked
   \if@IEEEeqnumpersist\global\@eqnswtrue
   \else% not the star form
   \global\@eqnswfalse
   \fi% if star form
   % provide a basic hyperref \theHequation if this has not already been setup (hyperref not loaded, or no section counter)
   \@ifundefined{theHequation}{\def\theHequation{\arabic{equation}}}{}\relax
   % provide dummy hyperref commands in case hyperref is not loaded
   \providecommand{\Hy@raisedlink}[1]{}\relax
   \providecommand{\hyper@anchorstart}[1]{}\relax
   \providecommand{\hyper@anchorend}{}\relax
   \providecommand{\@currentHref}{}\relax
   \@IEEEeqnumpreadvfalse% reset eqnpreadv flag
   \@IEEEsubeqnumpreadvfalse% reset subeqnpreadv flag
   \@IEEEeqnarrayISinnerfalse% not yet within the lines of the halign
   \@IEEEeqnarraystrutsize{0pt}{0pt}[\relax]% turn off struts by default
   \@IEEEeqnarrayusemasterstruttrue% use master strut till user asks otherwise
   \IEEEvisiblestrutsfalse% diagnostic mode defaults to off
   % no extra space unless the user specifically requests it
   \lineskip=0pt\relax
   \lineskiplimit=0pt\relax
   \baselineskip=\normalbaselineskip\relax%
   \jot=\IEEEnormaljot\relax%
   \mathsurround\z@\relax% no extra spacing around math
   \@advanceIEEEeqncolcnttrue% advance the col counter for each col the user uses, 
                             % used in \IEEEeqnarraymulticol and in the preamble build
   %V1.8 Here we preadvance to the next equation number.
   % If the user later wants a continued subequation, we can roll back.
   \global\@IEEEsubeqnnumrollback=\c@IEEEsubequation%
   \stepcounter{equation}\@IEEEeqnumpreadvtrue% advance equation counter before first line
   \setcounter{IEEEsubequation}{0}% no subequation yet
   \let\@IEEEcurrentlabelsave\@currentlabel% save current label as we later change it globally
   \let\@IEEEcurrentHrefsave\@currentHref% save current href label as we later change it globally
   \def\@currentlabel{\p@equation\theequation}% redefine the ref label
   \def\@currentHref{\@IEEEtheHrefequation}% setup hyperref label
   \IEEEeqnarraydecl\relax% allow a way for the user to make global overrides
   #1\relax% allow user to override defaults
   \let\\\@IEEEeqnarraycr% replace newline with one that can put in eqn. numbers
   \global\@IEEEeqncolcnt\z@% col. count = 0 for first line
   \@IEEEbuildpreamble{#2}\relax% build the preamble and put it into \@IEEEtrantmptoksA 
   % put in the column for the equation number
   \ifnum\@IEEEeqnnumcols>0\relax\@IEEEappendtoksA{&}\fi% col separator for those after the first
   \toks0={##}%
   % advance the \@IEEEeqncolcnt for the isolation col, this helps with error checking
   \@IEEEappendtoksA{\global\advance\@IEEEeqncolcnt by 1\relax}%
   % add the isolation column
   \@IEEEappendtoksA{\tabskip\z@skip\bgroup\the\toks0\egroup}%
   % advance the \@IEEEeqncolcnt for the equation number col, this helps with error checking
   \@IEEEappendtoksA{&\global\advance\@IEEEeqncolcnt by 1\relax}%
   % add the equation number col to the preamble
   \@IEEEappendtoksA{\tabskip\z@skip\hb@xt@\z@\bgroup\hss\the\toks0\egroup}%
   % note \@IEEEeqnnumcols does not count the equation col or isolation col
   % set the starting tabskip glue as determined by the preamble build
   \tabskip=\@IEEEBPstartglue\relax
   % begin the display alignment
   \@IEEEeqnarrayISinnertrue% commands are now within the lines
   $$\everycr{}\halign to\displaywidth\bgroup
   % "exspand" the preamble
   \span\the\@IEEEtrantmptoksA\cr}

% enter isolation/strut column (or the next column if the user did not use
% every column), record the strut status, complete the columns, do the strut if needed,
% restore counters (to backout any equation setup for a next line that was never used)
% to their correct values and exit
\def\end@IEEEeqnarray{\@IEEEeqnarrayglobalizestrutstatus&\@@IEEEeqnarraycr\egroup
\if@IEEEsubeqnumpreadv\global\advance\c@IEEEsubequation\m@ne\fi
\if@IEEEeqnumpreadv\global\advance\c@equation\m@ne\global\c@IEEEsubequation=\@IEEEsubeqnnumrollback\fi
\global\let\@currentlabel\@IEEEcurrentlabelsave% restore current label
\global\let\@currentHref\@IEEEcurrentHrefsave% restore current href label
$$\@ignoretrue}


% IEEEeqnarray uses a modifed \\ instead of the plain \cr to
% end rows. This allows for things like \\*[vskip amount]
% These "cr" macros are modified versions of those for LaTeX2e's eqnarray
% the {\ifnum0=`} braces must be kept away from the last column to avoid
% altering spacing of its math, so we use & to advance to the next column
% as there is an isolation/strut column after the user's columns
\def\@IEEEeqnarraycr{\@IEEEeqnarrayglobalizestrutstatus&% save strut status and advance to next column
   {\ifnum0=`}\fi
   \@ifstar{%
      \global\@eqpen\@M\@IEEEeqnarrayYCR
   }{%
      \global\@eqpen\interdisplaylinepenalty \@IEEEeqnarrayYCR
   }%
}

\def\@IEEEeqnarrayYCR{\@testopt\@IEEEeqnarrayXCR\z@skip}

\def\@IEEEeqnarrayXCR[#1]{%
   \ifnum0=`{\fi}%
   \@@IEEEeqnarraycr
   \noalign{\penalty\@eqpen\vskip\jot\vskip #1\relax}}%

\def\@@IEEEeqnarraycr{\@IEEEtrantmptoksA={}% clear token register
    \advance\@IEEEeqncolcnt by -1\relax% adjust col count because of the isolation column
    \ifnum\@IEEEeqncolcnt>\@IEEEeqnnumcols\relax
    \@IEEEclspkgerror{Too many columns within the IEEEeqnarray\MessageBreak
                          environment}%
    {Use fewer \string &'s or put more columns in the IEEEeqnarray column\MessageBreak 
     specifications.}\relax%
    \else
    \loop% add cols if the user did not use them all
    \ifnum\@IEEEeqncolcnt<\@IEEEeqnnumcols\relax
    \@IEEEappendtoksA{&}%
    \advance\@IEEEeqncolcnt by 1\relax% update the col count
    \repeat
    % this number of &'s will take us the the isolation column
    \fi
    % execute the &'s
    \the\@IEEEtrantmptoksA%
    % handle the strut/isolation column
    \@IEEEeqnarrayinsertstrut% do the strut if needed
    \@IEEEeqnarraystrutreset% reset the strut system for next line or IEEEeqnarray
    &% and enter the equation number column
    \if@eqnsw% only if we display something
      \Hy@raisedlink{\hyper@anchorstart{\@currentHref}}% start a hyperref anchor
      \global\@IEEEeqnumpreadvfalse\relax% displaying an equation number means
      \global\@IEEEsubeqnumpreadvfalse\relax% the equation counters point to valid equations
      % V1.8 Here we setup the counters, currentlabel and status for what would be the *next*
      % equation line as would be the case under the current settings. However, there are two problems.
      % One problem is that there might not ever be a next line. The second problem is that the user
      % may later alter the meaning of a line with commands such as \IEEEyessubnumber. So, to handle
      % these cases we have to record the current values of the (sub)equation counters and revert back
      % to them if the next line is changed or never comes. The \if@IEEEeqnumpreadv, \if@IEEEsubeqnumpreadv
      % and \@IEEEsubeqnnumrollback stuff tracks this.
      % The logic to handle all this is surprisingly complex, but a nice feature of the approach here is
      % that the equation counters and labels remain valid for what the line would be unless a
      % \IEEEyessubnumber et al. later changes it. So, any hyperref links are always correct.
      \ifnum\c@IEEEsubequation>0\relax% handle subequation
         \theIEEEsubequationdis\relax
         \if@IEEEsubeqnumpersist% setup for default type of next line
            \stepcounter{IEEEsubequation}\global\@IEEEsubeqnumpreadvtrue\relax
            \gdef\@currentlabel{\p@IEEEsubequation\theIEEEsubequation}\relax
            \gdef\@currentHref{\@IEEEtheHrefsubequation}% setup hyperref label
         \else
             % if no subeqnum persist, go ahead and setup for a new equation number
             \global\@IEEEsubeqnnumrollback=\c@IEEEsubequation
             \stepcounter{equation}\global\@IEEEeqnumpreadvtrue\relax
             \setcounter{IEEEsubequation}{0}\gdef\@currentlabel{\p@equation\theequation}\relax
             \gdef\@currentHref{\@IEEEtheHrefequation}% setup hyperref label
         \fi
      \else% display a standard equation number
        \theequationdis\relax
        \setcounter{IEEEsubequation}{0}\relax% not really needed
        \if@IEEEsubeqnumpersist% setup for default type of next line
           % subequations that follow plain equations carry the same equation number e.g, 5, 5a rather than 5, 6a
           \stepcounter{IEEEsubequation}\global\@IEEEsubeqnumpreadvtrue\relax
           \gdef\@currentlabel{\p@IEEEsubequation\theIEEEsubequation}\relax
           \gdef\@currentHref{\@IEEEtheHrefsubequation}% setup hyperref label
         \else
             % if no subeqnum persist, go ahead and setup for a new equation number
             \global\@IEEEsubeqnnumrollback=\c@IEEEsubequation
             \stepcounter{equation}\global\@IEEEeqnumpreadvtrue\relax
             \setcounter{IEEEsubequation}{0}\gdef\@currentlabel{\p@equation\theequation}\relax
             \gdef\@currentHref{\@IEEEtheHrefequation}% setup hyperref label
         \fi
      \fi%
      \Hy@raisedlink{\hyper@anchorend}% end hyperref anchor
    \fi% fi only if we display something
    % reset the flags to indicate the default preferences of the display of equation numbers
    \if@IEEEeqnumpersist\global\@eqnswtrue\else\global\@eqnswfalse\fi
    \if@IEEEsubeqnumpersist\global\@eqnswtrue\fi% ditto for the subequation flag
    % reset the number of columns the user actually used
    \global\@IEEEeqncolcnt\z@\relax
    % the real end of the line
    \cr}





% \IEEEeqnarraybox is like \IEEEeqnarray except the box form puts everything
% inside a vtop, vbox, or vcenter box depending on the letter in the second
% optional argument (t,b,c). Vbox is the default. Unlike \IEEEeqnarray,
% equation numbers are not displayed and \IEEEeqnarraybox can be nested.
% \IEEEeqnarrayboxm is for math mode (like \array) and does not put the vbox
% within an hbox.
% \IEEEeqnarrayboxt is for text mode (like \tabular) and puts the vbox within
% a \hbox{$ $} construct.
% \IEEEeqnarraybox will auto detect whether to use \IEEEeqnarrayboxm or 
% \IEEEeqnarrayboxt depending on the math mode.
% The third optional argument specifies the width this box is to be set to -
% natural width is the default.
% The * forms do not add \jot line spacing
% usage: \IEEEeqnarraybox[decl][pos][width]{cols}
\def\IEEEeqnarrayboxm{\@IEEEeqnarrayboxnojotfalse\@IEEEeqnarrayboxHBOXSWfalse\@IEEEeqnarraybox}
\def\endIEEEeqnarrayboxm{\end@IEEEeqnarraybox}
\@namedef{IEEEeqnarrayboxm*}{\@IEEEeqnarrayboxnojottrue\@IEEEeqnarrayboxHBOXSWfalse\@IEEEeqnarraybox}
\@namedef{endIEEEeqnarrayboxm*}{\end@IEEEeqnarraybox}

\def\IEEEeqnarrayboxt{\@IEEEeqnarrayboxnojotfalse\@IEEEeqnarrayboxHBOXSWtrue\@IEEEeqnarraybox}
\def\endIEEEeqnarrayboxt{\end@IEEEeqnarraybox}
\@namedef{IEEEeqnarrayboxt*}{\@IEEEeqnarrayboxnojottrue\@IEEEeqnarrayboxHBOXSWtrue\@IEEEeqnarraybox}
\@namedef{endIEEEeqnarrayboxt*}{\end@IEEEeqnarraybox}

\def\IEEEeqnarraybox{\@IEEEeqnarrayboxnojotfalse\ifmmode\@IEEEeqnarrayboxHBOXSWfalse\else\@IEEEeqnarrayboxHBOXSWtrue\fi%
\@IEEEeqnarraybox}
\def\endIEEEeqnarraybox{\end@IEEEeqnarraybox}

\@namedef{IEEEeqnarraybox*}{\@IEEEeqnarrayboxnojottrue\ifmmode\@IEEEeqnarrayboxHBOXSWfalse\else\@IEEEeqnarrayboxHBOXSWtrue\fi%
\@IEEEeqnarraybox}
\@namedef{endIEEEeqnarraybox*}{\end@IEEEeqnarraybox}

% flag to indicate if the \IEEEeqnarraybox needs to put things into an hbox{$ $} 
% for \vcenter in non-math mode
\newif\if@IEEEeqnarrayboxHBOXSW%
\@IEEEeqnarrayboxHBOXSWfalse

\def\@IEEEeqnarraybox{\relax\@ifnextchar[{\@@IEEEeqnarraybox}{\@@IEEEeqnarraybox[\relax]}}
% We have to be careful here to normalize catcodes just before acquiring the
% cols as that specification may contain punctuation which could be subject
% to document catcode changes.
\def\@@IEEEeqnarraybox[#1]{\relax\begingroup\IEEEnormalcatcodes\@ifnextchar[{\@@@IEEEeqnarraybox[#1]}{\@@@IEEEeqnarraybox[#1][b]}}
\def\@@@IEEEeqnarraybox[#1][#2]{\relax\@ifnextchar[{\@@@@IEEEeqnarraybox[#1][#2]}{\@@@@IEEEeqnarraybox[#1][#2][\relax]}}

% #1 = decl; #2 = t,b,c; #3 = width, #4 = col specs
\def\@@@@IEEEeqnarraybox[#1][#2][#3]#4{\endgroup\@IEEEeqnarrayISinnerfalse % not yet within the lines of the halign
   \@IEEEeqnarraymasterstrutsave% save current master strut values
   \@IEEEeqnarraystrutsize{0pt}{0pt}[\relax]% turn off struts by default
   \@IEEEeqnarrayusemasterstruttrue% use master strut till user asks otherwise
   \IEEEvisiblestrutsfalse% diagnostic mode defaults to off
   % no extra space unless the user specifically requests it
   \lineskip=0pt\relax%
   \lineskiplimit=0pt\relax%
   \baselineskip=\normalbaselineskip\relax%
   \jot=\IEEEnormaljot\relax%
   \mathsurround\z@\relax% no extra spacing around math
   % the default end glues are zero for an \IEEEeqnarraybox
   \edef\@IEEEeqnarraycolSEPdefaultstart{\@IEEEeqnarraycolSEPzero}% default start glue
   \edef\@IEEEeqnarraycolSEPdefaultend{\@IEEEeqnarraycolSEPzero}% default end glue
   \edef\@IEEEeqnarraycolSEPdefaultmid{\@IEEEeqnarraycolSEPzero}% default inter-column glue
   \@advanceIEEEeqncolcntfalse% do not advance the col counter for each col the user uses, 
                              % used in \IEEEeqnarraymulticol and in the preamble build
   \IEEEeqnarrayboxdecl\relax% allow a way for the user to make global overrides
   #1\relax% allow user to override defaults
   \let\\\@IEEEeqnarrayboxcr% replace newline with one that allows optional spacing
   \@IEEEbuildpreamble{#4}\relax% build the preamble and put it into \@IEEEtrantmptoksA
   % add an isolation column to the preamble to stop \\'s {} from getting into the last col
   \ifnum\@IEEEeqnnumcols>0\relax\@IEEEappendtoksA{&}\fi% col separator for those after the first
   \toks0={##}%
   % add the isolation column to the preamble
   \@IEEEappendtoksA{\tabskip\z@skip\bgroup\the\toks0\egroup}% 
   % set the starting tabskip glue as determined by the preamble build
   \tabskip=\@IEEEBPstartglue\relax
   % begin the alignment
   \everycr{}%
   % use only the very first token to determine the positioning
   \@IEEEextracttoken{#2}\relax
   \ifx\@IEEEextractedtokensdiscarded\@empty\else
     \typeout{** WARNING: IEEEeqnarraybox position specifiers after the first in `\@IEEEextracttokenarg' ignored (line \the\inputlineno).}\relax
   \fi
   % \@IEEEextractedtoken has the first token, the rest are ignored
   % if we need to put things into and hbox and go into math mode, do so now
   \if@IEEEeqnarrayboxHBOXSW \leavevmode \hbox \bgroup $\fi%
   % use the appropriate vbox type
   \if\@IEEEextractedtoken t\relax\vtop\else\if\@IEEEextractedtoken c\relax%
   \vcenter\else\vbox\fi\fi\bgroup%
   \@IEEEeqnarrayISinnertrue% commands are now within the lines
   \ifx#3\relax\halign\else\halign to #3\relax\fi%
   \bgroup
   % "exspand" the preamble
   \span\the\@IEEEtrantmptoksA\cr}

% carry strut status and enter the isolation/strut column, 
% exit from math mode if needed, and exit
\def\end@IEEEeqnarraybox{\@IEEEeqnarrayglobalizestrutstatus% carry strut status
&% enter isolation/strut column
\@IEEEeqnarrayinsertstrut% do strut if needed
\@IEEEeqnarraymasterstrutrestore% restore the previous master strut values
% reset the strut system for next IEEEeqnarray
% (sets local strut values back to previous master strut values)
\@IEEEeqnarraystrutreset%
% ensure last line, exit from halign, close vbox
\crcr\egroup\egroup%
% exit from math mode and close hbox if needed
\if@IEEEeqnarrayboxHBOXSW $\egroup\fi}



% IEEEeqnarraybox uses a modifed \\ instead of the plain \cr to
% end rows. This allows for things like \\[vskip amount]
% This "cr" macros are modified versions those for LaTeX2e's eqnarray
% For IEEEeqnarraybox, \\* is the same as \\
% the {\ifnum0=`} braces must be kept away from the last column to avoid
% altering spacing of its math, so we use & to advance to the isolation/strut column
% carry strut status into isolation/strut column
\def\@IEEEeqnarrayboxcr{\@IEEEeqnarrayglobalizestrutstatus% carry strut status
&% enter isolation/strut column
\@IEEEeqnarrayinsertstrut% do strut if needed
% reset the strut system for next line or IEEEeqnarray
\@IEEEeqnarraystrutreset%
{\ifnum0=`}\fi%
\@ifstar{\@IEEEeqnarrayboxYCR}{\@IEEEeqnarrayboxYCR}}

% test and setup the optional argument to \\[]
\def\@IEEEeqnarrayboxYCR{\@testopt\@IEEEeqnarrayboxXCR\z@skip}

% IEEEeqnarraybox does not automatically increase line spacing by \jot
\def\@IEEEeqnarrayboxXCR[#1]{\ifnum0=`{\fi}%
\cr\noalign{\if@IEEEeqnarrayboxnojot\else\vskip\jot\fi\vskip#1\relax}}



% usage: \@IEEEbuildpreamble{column specifiers}
% starts the halign preamble build 
% the assembled preamble is put in \@IEEEtrantmptoksA
\def\@IEEEbuildpreamble#1{\@IEEEtrantmptoksA={}% clear token register
\let\@IEEEBPcurtype=u%current column type is not yet known
\let\@IEEEBPprevtype=s%the previous column type was the start
\let\@IEEEBPnexttype=u%next column type is not yet known
% ensure these are valid
\def\@IEEEBPcurglue={0pt plus 0pt minus 0pt}%
\def\@IEEEBPcurcolname{@IEEEdefault}% name of current column definition
% currently acquired numerically referenced glue
% use a name that is easier to remember
\let\@IEEEBPcurnum=\@IEEEtrantmpcountA%
\@IEEEBPcurnum=0%
% tracks number of columns in the preamble
\@IEEEeqnnumcols=0%
% record the default end glues
\edef\@IEEEBPstartglue{\@IEEEeqnarraycolSEPdefaultstart}%
\edef\@IEEEBPendglue{\@IEEEeqnarraycolSEPdefaultend}%
\edef\@IEEEedefMACRO{#1}\relax% fully expand the preamble to support macro containers
% now parse the user's column specifications
% \ignorespaces is used as a delimiter, need at least one trailing \relax because
% \@@IEEEbuildpreamble looks into the future 
\expandafter\@@IEEEbuildpreamble\@IEEEedefMACRO\ignorespaces\relax\relax}


% usage: \@@IEEEbuildpreamble{current column}{next column}
% parses and builds the halign preamble
\def\@@IEEEbuildpreamble#1#2{\let\@@nextIEEEbuildpreamble=\@@IEEEbuildpreamble%
% use only the very first token to check the end
\@IEEEextracttokengroups{#1}\relax
\ifx\@IEEEextractedfirsttoken\ignorespaces\let\@@nextIEEEbuildpreamble=\@@IEEEfinishpreamble\else%
% identify current and next token type
\@IEEEgetcoltype{#1}{\@IEEEBPcurtype}{1}% current, error on invalid
\@IEEEgetcoltype{#2}{\@IEEEBPnexttype}{0}% next, no error on invalid next
% if curtype is a glue, get the glue def
\if\@IEEEBPcurtype g\@IEEEgetcurglue{#1}{\@IEEEBPcurglue}\fi%
% if curtype is a column, get the column def and set the current column name
\if\@IEEEBPcurtype c\@IEEEgetcurcol{#1}\fi%
% if curtype is a numeral, acquire the user defined glue
\if\@IEEEBPcurtype n\@IEEEprocessNcol{#1}\fi%
% process the acquired glue 
\if\@IEEEBPcurtype g\@IEEEprocessGcol\fi%
% process the acquired col 
\if\@IEEEBPcurtype c\@IEEEprocessCcol\fi%
% ready prevtype for next col spec.
\let\@IEEEBPprevtype=\@IEEEBPcurtype%
% be sure and put back the future token(s) as a group
\fi\@@nextIEEEbuildpreamble{#2}}


% usage: \@@IEEEfinishpreamble{discarded}
% executed just after preamble build is completed
% warn about zero cols, and if prevtype type = u, put in end tabskip glue
% argument is not used
\def\@@IEEEfinishpreamble#1{\ifnum\@IEEEeqnnumcols<1\relax
\@IEEEclspkgerror{No column specifiers declared for IEEEeqnarray}%
{At least one column type must be declared for each IEEEeqnarray.}%
\fi%num cols less than 1
%if last type undefined, set default end tabskip glue
\if\@IEEEBPprevtype u\@IEEEappendtoksA{\tabskip=\@IEEEBPendglue}\fi}


% usage: \@IEEEgetcoltype{col specifier}{\output}{error more}
% Identify and return the column specifier's type code in the given
% \output macro:
% n = number
% g = glue (any other char in catagory 12)
% c = letter
% e = \ignorespaces (end of sequence)
% u = undefined
% error mode: 0 = no error message, 1 = error on invalid char
\def\@IEEEgetcoltype#1#2#3{%
% use only the very first token to determine the type
\@IEEEextracttoken{#1}\relax
% \@IEEEextractedtoken has the first token, the rest are discarded
\let#2=u\relax% assume invalid until know otherwise
\ifx\@IEEEextractedtoken\ignorespaces\let#2=e\else
\ifcat\@IEEEextractedtoken\relax\else% screen out control sequences
\if0\@IEEEextractedtoken\let#2=n\else
\if1\@IEEEextractedtoken\let#2=n\else
\if2\@IEEEextractedtoken\let#2=n\else
\if3\@IEEEextractedtoken\let#2=n\else
\if4\@IEEEextractedtoken\let#2=n\else
\if5\@IEEEextractedtoken\let#2=n\else
\if6\@IEEEextractedtoken\let#2=n\else
\if7\@IEEEextractedtoken\let#2=n\else
\if8\@IEEEextractedtoken\let#2=n\else
\if9\@IEEEextractedtoken\let#2=n\else
\ifcat,\@IEEEextractedtoken\let#2=g\relax
\else\ifcat a\@IEEEextractedtoken\let#2=c\relax\fi\fi\fi\fi\fi\fi\fi\fi\fi\fi\fi\fi\fi\fi
\if#2u\relax
\if0\noexpand#3\relax\else\@IEEEclspkgerror{Invalid character in column specifications}%
{Only letters, numerals and certain other symbols are allowed \MessageBreak
as IEEEeqnarray column specifiers.}\fi\fi}


% usage: \@IEEEgetcurcol{col specifier}
% verify the letter referenced column exists
% and return its name in \@IEEEBPcurcolname
% if column specifier is invalid, use the default column @IEEEdefault
\def\@IEEEgetcurcol#1{\expandafter\ifx\csname @IEEEeqnarraycolDEF#1\endcsname\@IEEEeqnarraycolisdefined%
\def\@IEEEBPcurcolname{#1}\else% invalid column name
\@IEEEclspkgerror{Invalid column type "#1" in column specifications.\MessageBreak
Using a default centering column instead}%
{You must define IEEEeqnarray column types before use.}%
\def\@IEEEBPcurcolname{@IEEEdefault}\fi}


% usage: \@IEEEgetcurglue{glue specifier}{\output}
% identify the predefined (punctuation) glue value
% and return it in the given output macro
\def\@IEEEgetcurglue#1#2{%
% ! = \! (neg small)  -0.16667em (-3/18 em)
% , = \, (small)       0.16667em ( 3/18 em)
% : = \: (med)         0.22222em ( 4/18 em)
% ; = \; (large)       0.27778em ( 5/18 em)
% ' = \quad            1em
% " = \qquad           2em
% . = 0.5\arraycolsep
% / = \arraycolsep
% ? = 2\arraycolsep
% * = 1fil
% + = \@IEEEeqnarraycolSEPcenter
% - = \@IEEEeqnarraycolSEPzero
% Note that all em values are referenced to the math font (textfont2) fontdimen6
% value for 1em.
% 
% use only the very first token to determine the type
\@IEEEextracttoken{#1}\relax
\ifx\@IEEEextractedtokensdiscarded\@empty\else
  \typeout{** WARNING: IEEEeqnarray predefined inter-column glue type specifiers after the first in `\@IEEEextracttokenarg' ignored (line \the\inputlineno).}\relax
\fi
% get the math font 1em value
% LaTeX2e's NFSS2 does not preload the fonts, but \IEEEeqnarray needs
% to gain access to the math (\textfont2) font's spacing parameters.
% So we create a bogus box here that uses the math font to ensure
% that \textfont2 is loaded and ready. If this is not done,
% the \textfont2 stuff here may not work.
% Thanks to Bernd Raichle for his 1997 post on this topic.
{\setbox0=\hbox{$\displaystyle\relax$}}%
% fontdimen6 has the width of 1em (a quad).
\@IEEEtrantmpdimenA=\fontdimen6\textfont2\relax%
% identify the glue value based on the first token
% we discard anything after the first
\if!\@IEEEextractedtoken\@IEEEtrantmpdimenA=-0.16667\@IEEEtrantmpdimenA\edef#2{\the\@IEEEtrantmpdimenA}\else
\if,\@IEEEextractedtoken\@IEEEtrantmpdimenA=0.16667\@IEEEtrantmpdimenA\edef#2{\the\@IEEEtrantmpdimenA}\else
\if:\@IEEEextractedtoken\@IEEEtrantmpdimenA=0.22222\@IEEEtrantmpdimenA\edef#2{\the\@IEEEtrantmpdimenA}\else
\if;\@IEEEextractedtoken\@IEEEtrantmpdimenA=0.27778\@IEEEtrantmpdimenA\edef#2{\the\@IEEEtrantmpdimenA}\else
\if'\@IEEEextractedtoken\@IEEEtrantmpdimenA=1\@IEEEtrantmpdimenA\edef#2{\the\@IEEEtrantmpdimenA}\else
\if"\@IEEEextractedtoken\@IEEEtrantmpdimenA=2\@IEEEtrantmpdimenA\edef#2{\the\@IEEEtrantmpdimenA}\else
\if.\@IEEEextractedtoken\@IEEEtrantmpdimenA=0.5\arraycolsep\edef#2{\the\@IEEEtrantmpdimenA}\else
\if/\@IEEEextractedtoken\edef#2{\the\arraycolsep}\else
\if?\@IEEEextractedtoken\@IEEEtrantmpdimenA=2\arraycolsep\edef#2{\the\@IEEEtrantmpdimenA}\else
\if *\@IEEEextractedtoken\edef#2{0pt plus 1fil minus 0pt}\else
\if+\@IEEEextractedtoken\edef#2{\@IEEEeqnarraycolSEPcenter}\else
\if-\@IEEEextractedtoken\edef#2{\@IEEEeqnarraycolSEPzero}\else
\edef#2{\@IEEEeqnarraycolSEPzero}%
\@IEEEclspkgerror{Invalid predefined inter-column glue type "#1" in\MessageBreak
column specifications. Using a default value of\MessageBreak
0pt instead}%
{Only !,:;'"./?*+ and - are valid predefined glue types in the\MessageBreak 
IEEEeqnarray column specifications.}\fi\fi\fi\fi\fi\fi\fi\fi\fi\fi\fi\fi}


% usage: \@IEEEprocessNcol{digit}
% process a numerical digit from the column specification
% and look up the corresponding user defined glue value
% can transform current type from n to g or a as the user defined glue is acquired
\def\@IEEEprocessNcol#1{\if\@IEEEBPprevtype g%
\@IEEEclspkgerror{Back-to-back inter-column glue specifiers in column\MessageBreak
specifications. Ignoring consecutive glue specifiers\MessageBreak
after the first}%
{You cannot have two or more glue types next to each other\MessageBreak 
in the IEEEeqnarray column specifications.}%
\let\@IEEEBPcurtype=a% abort this glue, future digits will be discarded
\@IEEEBPcurnum=0\relax%
\else% if we previously aborted a glue
\if\@IEEEBPprevtype a\@IEEEBPcurnum=0\let\@IEEEBPcurtype=a%maintain digit abortion
\else%acquire this number
% save the previous type before the numerical digits started
\if\@IEEEBPprevtype n\else\let\@IEEEBPprevsavedtype=\@IEEEBPprevtype\fi%
\multiply\@IEEEBPcurnum by 10\relax%
\advance\@IEEEBPcurnum by #1\relax% add in number, \relax is needed to stop TeX's number scan
\if\@IEEEBPnexttype n\else%close acquisition
\expandafter\ifx\csname @IEEEeqnarraycolSEPDEF\expandafter\romannumeral\number\@IEEEBPcurnum\endcsname\@IEEEeqnarraycolisdefined%
\edef\@IEEEBPcurglue{\csname @IEEEeqnarraycolSEP\expandafter\romannumeral\number\@IEEEBPcurnum\endcsname}%
\else%user glue not defined
\@IEEEclspkgerror{Invalid user defined inter-column glue type "\number\@IEEEBPcurnum" in\MessageBreak
column specifications. Using a default value of\MessageBreak
0pt instead}%
{You must define all IEEEeqnarray numerical inter-column glue types via\MessageBreak
\string\IEEEeqnarraydefcolsep \space before they are used in column specifications.}%
\edef\@IEEEBPcurglue{\@IEEEeqnarraycolSEPzero}%
\fi% glue defined or not
\let\@IEEEBPcurtype=g% change the type to reflect the acquired glue
\let\@IEEEBPprevtype=\@IEEEBPprevsavedtype% restore the prev type before this number glue
\@IEEEBPcurnum=0\relax%ready for next acquisition
\fi%close acquisition, get glue
\fi%discard or acquire number
\fi%prevtype glue or not
}


% process an acquired glue
% add any acquired column/glue pair to the preamble
\def\@IEEEprocessGcol{\if\@IEEEBPprevtype a\let\@IEEEBPcurtype=a%maintain previous glue abortions
\else
% if this is the start glue, save it, but do nothing else 
% as this is not used in the preamble, but before
\if\@IEEEBPprevtype s\edef\@IEEEBPstartglue{\@IEEEBPcurglue}%
\else%not the start glue
\if\@IEEEBPprevtype g%ignore if back to back glues
\@IEEEclspkgerror{Back-to-back inter-column glue specifiers in column\MessageBreak
specifications. Ignoring consecutive glue specifiers\MessageBreak
after the first}%
{You cannot have two or more glue types next to each other\MessageBreak 
in the IEEEeqnarray column specifications.}%
\let\@IEEEBPcurtype=a% abort this glue
\else% not a back to back glue
\if\@IEEEBPprevtype c\relax% if the previoustype was a col, add column/glue pair to preamble
\ifnum\@IEEEeqnnumcols>0\relax\@IEEEappendtoksA{&}\fi
\toks0={##}%
% make preamble advance col counter if this environment needs this
\if@advanceIEEEeqncolcnt\@IEEEappendtoksA{\global\advance\@IEEEeqncolcnt by 1\relax}\fi
% insert the column defintion into the preamble, being careful not to expand
% the column definition
\@IEEEappendtoksA{\tabskip=\@IEEEBPcurglue}%
\@IEEEappendNOEXPANDtoksA{\begingroup\csname @IEEEeqnarraycolPRE}%
\@IEEEappendtoksA{\@IEEEBPcurcolname}%
\@IEEEappendNOEXPANDtoksA{\endcsname}%
\@IEEEappendtoksA{\the\toks0}%
\@IEEEappendNOEXPANDtoksA{\relax\relax\relax\relax\relax%
\relax\relax\relax\relax\relax\csname @IEEEeqnarraycolPOST}%
\@IEEEappendtoksA{\@IEEEBPcurcolname}%
\@IEEEappendNOEXPANDtoksA{\endcsname\relax\relax\relax\relax\relax%
\relax\relax\relax\relax\relax\endgroup}%
\advance\@IEEEeqnnumcols by 1\relax%one more column in the preamble
\else% error: non-start glue with no pending column
\@IEEEclspkgerror{Inter-column glue specifier without a prior column\MessageBreak
type in the column specifications. Ignoring this glue\MessageBreak 
specifier}%
{Except for the first and last positions, glue can be placed only\MessageBreak
between column types.}%
\let\@IEEEBPcurtype=a% abort this glue
\fi% previous was a column
\fi% back-to-back glues
\fi% is start column glue
\fi% prev type not a
}


% process an acquired letter referenced column and, if necessary, add it to the preamble
\def\@IEEEprocessCcol{\if\@IEEEBPnexttype g\else
\if\@IEEEBPnexttype n\else
% we have a column followed by something other than a glue (or numeral glue)
% so we must add this column to the preamble now
\ifnum\@IEEEeqnnumcols>0\relax\@IEEEappendtoksA{&}\fi%col separator for those after the first
\if\@IEEEBPnexttype e\@IEEEappendtoksA{\tabskip=\@IEEEBPendglue\relax}\else%put in end glue
\@IEEEappendtoksA{\tabskip=\@IEEEeqnarraycolSEPdefaultmid\relax}\fi% or default mid glue
\toks0={##}%
% make preamble advance col counter if this environment needs this
\if@advanceIEEEeqncolcnt\@IEEEappendtoksA{\global\advance\@IEEEeqncolcnt by 1\relax}\fi
% insert the column definition into the preamble, being careful not to expand
% the column definition
\@IEEEappendNOEXPANDtoksA{\begingroup\csname @IEEEeqnarraycolPRE}%
\@IEEEappendtoksA{\@IEEEBPcurcolname}%
\@IEEEappendNOEXPANDtoksA{\endcsname}%
\@IEEEappendtoksA{\the\toks0}%
\@IEEEappendNOEXPANDtoksA{\relax\relax\relax\relax\relax%
\relax\relax\relax\relax\relax\csname @IEEEeqnarraycolPOST}%
\@IEEEappendtoksA{\@IEEEBPcurcolname}%
\@IEEEappendNOEXPANDtoksA{\endcsname\relax\relax\relax\relax\relax%
\relax\relax\relax\relax\relax\endgroup}%
\advance\@IEEEeqnnumcols by 1\relax%one more column in the preamble
\fi%next type not numeral
\fi%next type not glue
}


%%
%% END OF IEEEeqnarray DEFINITIONS
%%





% set up the running headers and footers
%
% header and footer font and size specifications
\def\@IEEEheaderstyle{\normalfont\scriptsize}
\def\@IEEEfooterstyle{\normalfont\scriptsize}
%
% compsoc uses sans-serif headers and footers
\ifCLASSOPTIONcompsoc
  \def\@IEEEheaderstyle{\normalfont\sffamily\scriptsize}
  \def\@IEEEfooterstyle{\normalfont\sffamily\scriptsize}
\fi


% standard page style, ps@headings
\def\ps@headings{% default to standard twoside headers, no footers
% will change later if the mode requires otherwise
\def\@oddhead{\hbox{}\@IEEEheaderstyle\rightmark\hfil\thepage}\relax
\def\@evenhead{\@IEEEheaderstyle\thepage\hfil\leftmark\hbox{}}\relax
\let\@oddfoot\@empty
\let\@evenfoot\@empty
\ifCLASSOPTIONtechnote
  % technote twoside
  \def\@oddhead{\hbox{}\@IEEEheaderstyle\leftmark\hfil\thepage}\relax
  \def\@evenhead{\@IEEEheaderstyle\thepage\hfil\leftmark\hbox{}}\relax
\fi
\ifCLASSOPTIONdraftcls
  % draft footers
  \def\@oddfoot{\@IEEEfooterstyle\@date\hfil DRAFT}\relax
  \def\@evenfoot{\@IEEEfooterstyle DRAFT\hfil\@date}\relax
\fi
% oneside
\if@twoside\else
  % standard one side headers
  \def\@oddhead{\hbox{}\@IEEEheaderstyle\leftmark\hfil\thepage}\relax
  \let\@evenhead\@empty
  \ifCLASSOPTIONdraftcls
    % oneside draft footers
    \def\@oddfoot{\@IEEEfooterstyle\@date\hfil DRAFT}\relax
    \let\@evenfoot\@empty
  \fi
\fi
% turn off headers for conferences
\ifCLASSOPTIONconference
  \let\@oddhead\@empty
  \let\@evenhead\@empty
\fi
% turn off footers for draftclsnofoot
\ifCLASSOPTIONdraftclsnofoot
  \let\@oddfoot\@empty
  \let\@evenfoot\@empty
\fi}


% title page style, ps@IEEEtitlepagestyle
\def\ps@IEEEtitlepagestyle{% default title page headers, no footers
\def\@oddhead{\hbox{}\@IEEEheaderstyle\leftmark\hfil\thepage}\relax
\def\@evenhead{\@IEEEheaderstyle\thepage\hfil\leftmark\hbox{}}\relax
\let\@oddfoot\@empty
\let\@evenfoot\@empty
% will change later if the mode requires otherwise
\ifCLASSOPTIONdraftcls
  % draft footers
  \ifCLASSOPTIONdraftclsnofoot\else
    % but only if not draftclsnofoot
    \def\@oddfoot{\@IEEEfooterstyle\@date\hfil DRAFT}\relax
    \def\@evenfoot{\@IEEEfooterstyle DRAFT\hfil\@date}\relax
  \fi
\else
  % all nondraft mode footers
  \if@IEEEusingpubid
    % for title pages that are using a pubid
    % do not repeat pubid on the title page if using a peer review cover page
    \ifCLASSOPTIONpeerreview\else
      % for noncompsoc papers, the pubid uses footnotesize and
      % is at the same vertical position as where the last baseline would normally be
      \def\@oddfoot{\hbox{}\hss\@IEEEfooterstyle\footnotesize\raisebox{\footskip}[0pt][0pt]{\@IEEEpubid}\hss\hbox{}}\relax
      \def\@evenfoot{\hbox{}\hss\@IEEEfooterstyle\footnotesize\raisebox{\footskip}[0pt][0pt]{\@IEEEpubid}\hss\hbox{}}\relax
      \ifCLASSOPTIONcompsoc
        % for compsoc papers, the pubid is at the same vertical position as the normal footer
        \def\@oddfoot{\hbox{}\hss\@IEEEfooterstyle\raisebox{0pt}[0pt][0pt]{\@IEEEpubid}\hss\hbox{}}\relax
        \def\@evenfoot{\hbox{}\hss\@IEEEfooterstyle\raisebox{0pt}[0pt][0pt]{\@IEEEpubid}\hss\hbox{}}\relax
      \fi
    \fi
  \fi
\fi
% turn off headers for conferences
\ifCLASSOPTIONconference
  \let\@oddhead\@empty
  \let\@evenhead\@empty
\fi}


% peer review cover page style, ps@IEEEpeerreviewcoverpagestyle
\def\ps@IEEEpeerreviewcoverpagestyle{% default peer review cover no headers, no footers
\let\@oddhead\@empty
\let\@evenhead\@empty
\let\@oddfoot\@empty
\let\@evenfoot\@empty
% will change later if the mode requires otherwise
\ifCLASSOPTIONdraftcls
  % draft footers
  \ifCLASSOPTIONdraftclsnofoot\else
    % but only if not draftclsnofoot
    \def\@oddfoot{\@IEEEfooterstyle\@date\hfil DRAFT}\relax
    \def\@evenfoot{\@IEEEfooterstyle DRAFT\hfil\@date}\relax
  \fi
\else
  % all nondraft mode footers
  \if@IEEEusingpubid
    % for peer review cover pages that are using a pubid
    % for noncompsoc papers, the pubid uses footnotesize and
    % is at the same vertical position as where the last baseline would normally be
    \def\@oddfoot{\hbox{}\hss\@IEEEfooterstyle\footnotesize\raisebox{\footskip}[0pt][0pt]{\@IEEEpubid}\hss\hbox{}}\relax
    \def\@evenfoot{\hbox{}\hss\@IEEEfooterstyle\footnotesize\raisebox{\footskip}[0pt][0pt]{\@IEEEpubid}\hss\hbox{}}\relax
    \ifCLASSOPTIONcompsoc
      % for compsoc papers, the pubid is at the same vertical position as the normal footer
      \def\@oddfoot{\hbox{}\hss\@IEEEfooterstyle\raisebox{0pt}[0pt][0pt]{\@IEEEpubid}\hss\hbox{}}\relax
      \def\@evenfoot{\hbox{}\hss\@IEEEfooterstyle\raisebox{0pt}[0pt][0pt]{\@IEEEpubid}\hss\hbox{}}\relax
    \fi
  \fi
\fi}



%% Defines the command for putting the header.
%% Note that all the text is forced into uppercase, if you have some text
%% that needs to be in lower case, for instance et. al., then either manually
%% set \leftmark and \rightmark or use \MakeLowercase{et. al.} within the
%% arguments to \markboth.
%% V1.7b add \protect to work with Babel
\def\markboth#1#2{\def\leftmark{\MakeUppercase{\protect#1}}%
\def\rightmark{\MakeUppercase{\protect#2}}}

\def\today{\ifcase\month\or
    January\or February\or March\or April\or May\or June\or
    July\or August\or September\or October\or November\or December\fi
    \space\number\day, \number\year}




%% CITATION AND BIBLIOGRAPHY COMMANDS
%% 
%% V1.6 no longer supports the older, nonstandard \shortcite and \citename setup stuff
% 
% 
% Modify Latex2e \@citex to separate citations with "], ["
\def\@citex[#1]#2{%
  \let\@citea\@empty
  \@cite{\@for\@citeb:=#2\do
    {\@citea\def\@citea{], [}%
     \edef\@citeb{\expandafter\@firstofone\@citeb\@empty}%
     \if@filesw\immediate\write\@auxout{\string\citation{\@citeb}}\fi
     \@ifundefined{b@\@citeb}{\mbox{\reset@font\bfseries ?}%
       \G@refundefinedtrue
       \@latex@warning
         {Citation `\@citeb' on page \thepage \space undefined}}%
       {\hbox{\csname b@\@citeb\endcsname}}}}{#1}}

% V1.6 we create hooks for the optional use of Donald Arseneau's
% cite.sty package. cite.sty is "smart" and will notice that the
% following format controls are already defined and will not
% redefine them. The result will be the proper sorting of the
% citation numbers and auto detection of 3 or more entry "ranges" -
% all in IEEE style:  [1], [2], [5]--[7], [12]
% This also allows for an optional note, i.e., \cite[mynote]{..}.
% If the \cite with note has more than one reference, the note will
% be applied to the last of the listed references. It is generally
% desired that if a note is given, only one reference is listed in
% that \cite.
% Thanks to Mr. Arseneau for providing the required format arguments
% to produce the IEEE style.
\def\citepunct{], [}
\def\citedash{]--[}

% V1.7 default to using same font for urls made by url.sty
\AtBeginDocument{\csname url@samestyle\endcsname}

% V1.6 class files should always provide these
\def\newblock{\hskip .11em\@plus.33em\@minus.07em}
\let\@openbib@code\@empty
% V1.8b article.cls is now providing these too
% we do not use \@mkboth, nor alter the page style
\newenvironment{theindex}
               {\if@twocolumn
                  \@restonecolfalse
                \else
                  \@restonecoltrue
                \fi
                \twocolumn[\section*{\indexname}]%
                \parindent\z@
                \parskip\z@ \@plus .3\p@\relax
                \columnseprule \z@
                \columnsep 35\p@
                \let\item\@idxitem}
               {\if@restonecol\onecolumn\else\clearpage\fi}
\newcommand\@idxitem{\par\hangindent 40\p@}
\newcommand\subitem{\@idxitem \hspace*{20\p@}}
\newcommand\subsubitem{\@idxitem \hspace*{30\p@}}
\newcommand\indexspace{\par \vskip 10\p@ \@plus5\p@ \@minus3\p@\relax}



% Provide support for the control entries of IEEEtran.bst V1.00 and later.
% V1.7 optional argument allows for a different aux file to be specified in
% order to handle multiple bibliographies. For example, with multibib.sty:
% \newcites{sec}{Secondary Literature}
% \bstctlcite[@auxoutsec]{BSTcontrolhak}
\def\bstctlcite{\@ifnextchar[{\@bstctlcite}{\@bstctlcite[@auxout]}}
\def\@bstctlcite[#1]#2{\@bsphack
  \@for\@citeb:=#2\do{%
    \edef\@citeb{\expandafter\@firstofone\@citeb}%
    \if@filesw\immediate\write\csname #1\endcsname{\string\citation{\@citeb}}\fi}%
  \@esphack}

% \IEEEnoauxwrite{} allows for citations that do not add to or affect
% the order of the existing citation list. Can be useful for \cite
% within \thanks{}.
\DeclareRobustCommand{\IEEEnoauxwrite}[1]{\relax
\if@filesw
\@fileswfalse
#1\relax\relax\relax\relax\relax
\@fileswtrue
\else
#1\relax\relax\relax\relax\relax
\fi}

% V1.6 provide a way for a user to execute a command just before 
% a given reference number - used to insert a \newpage to balance
% the columns on the last page
\edef\@IEEEtriggerrefnum{0}   % the default of zero means that
                              % the command is not executed
\def\@IEEEtriggercmd{\newpage}

% allow the user to alter the triggered command
\long\def\IEEEtriggercmd#1{\long\def\@IEEEtriggercmd{#1}}

% allow user a way to specify the reference number just before the
% command is executed
\def\IEEEtriggeratref#1{\@IEEEtrantmpcountA=#1%
\edef\@IEEEtriggerrefnum{\the\@IEEEtrantmpcountA}}%

% trigger command at the given reference
\def\@IEEEbibitemprefix{\@IEEEtrantmpcountA=\@IEEEtriggerrefnum\relax%
\advance\@IEEEtrantmpcountA by -1\relax%
\ifnum\c@enumiv=\@IEEEtrantmpcountA\relax\@IEEEtriggercmd\relax\fi}


\def\@biblabel#1{[#1]}

% compsoc journals and conferences left align the reference numbers
\@IEEEcompsoconly{\def\@biblabel#1{[#1]\hfill}}

% controls bib item spacing
\def\IEEEbibitemsep{0pt plus .5pt}

\@IEEEcompsocconfonly{\def\IEEEbibitemsep{0.5\baselineskip plus 0.25\baselineskip minus 0.25\baselineskip}}


\def\thebibliography#1{\section*{\refname}%
    \addcontentsline{toc}{section}{\refname}%
    % V1.6 add some rubber space here and provide a command trigger
    \footnotesize\vskip 0.3\baselineskip plus 0.1\baselineskip minus 0.1\baselineskip%
    \list{\@biblabel{\@arabic\c@enumiv}}%
    {\settowidth\labelwidth{\@biblabel{#1}}%
    \leftmargin\labelwidth
    \advance\leftmargin\labelsep\relax
    \itemsep \IEEEbibitemsep\relax
    \usecounter{enumiv}%
    \let\p@enumiv\@empty
    \renewcommand\theenumiv{\@arabic\c@enumiv}}%
    \let\@IEEElatexbibitem\bibitem%
    \def\bibitem{\@IEEEbibitemprefix\@IEEElatexbibitem}%
\def\newblock{\hskip .11em plus .33em minus .07em}%
% originally:
%   \sloppy\clubpenalty4000\widowpenalty4000%
% by adding the \interlinepenalty here, we make it more
% difficult, but not impossible, for LaTeX to break within a reference.
% The IEEE almost never breaks a reference (but they do it more often with
% technotes). You may get an underfull vbox warning around the bibliography, 
% but the final result will be much more like what the IEEE will publish. 
% MDS 11/2000
\ifCLASSOPTIONtechnote\sloppy\clubpenalty4000\widowpenalty4000\interlinepenalty100%
\else\sloppy\clubpenalty4000\widowpenalty4000\interlinepenalty500\fi%
    \sfcode`\.=1000\relax}
\let\endthebibliography=\endlist




% TITLE PAGE COMMANDS
% 
% 
% \IEEEmembership is used to produce the sublargesize italic font used to indicate author 
% IEEE membership. compsoc uses a large size sans slant font
\def\IEEEmembership#1{{\@IEEEnotcompsoconly{\sublargesize}\normalfont\@IEEEcompsoconly{\sffamily}\textit{#1}}}
 

% \IEEEauthorrefmark{} produces a footnote type symbol to indicate author affiliation.
% When given an argument of 1 to 9, \IEEEauthorrefmark{} follows the standard LaTeX footnote
% symbol sequence convention. However, for arguments 10 and above, \IEEEauthorrefmark{} 
% reverts to using lower case roman numerals, so it cannot overflow. Do note that you 
% cannot use \footnotemark[] in place of \IEEEauthorrefmark{} within \author as the footnote
% symbols will have been turned off to prevent \thanks from creating footnote marks.
% \IEEEauthorrefmark{} produces a symbol that appears to LaTeX as having zero vertical
% height - this allows for a more compact line packing, but the user must ensure that
% the interline spacing is large enough to prevent \IEEEauthorrefmark{} from colliding
% with the text above.
% V1.7 make this a robust command
% V1.8 transmag uses an arabic author affiliation symbol
\ifCLASSOPTIONtransmag
\DeclareRobustCommand*{\IEEEauthorrefmark}[1]{\raisebox{0pt}[0pt][0pt]{\textsuperscript{\footnotesize #1}}}
\else
\DeclareRobustCommand*{\IEEEauthorrefmark}[1]{\raisebox{0pt}[0pt][0pt]{\textsuperscript{\footnotesize\ensuremath{\ifcase#1\or *\or \dagger\or \ddagger\or%
    \mathsection\or \mathparagraph\or \|\or **\or \dagger\dagger%
    \or \ddagger\ddagger \else\textsuperscript{\expandafter\romannumeral#1}\fi}}}}
\fi


% FONT CONTROLS AND SPACINGS FOR CONFERENCE MODE AUTHOR NAME AND AFFILIATION BLOCKS
% 
% The default font styles for the author name and affiliation blocks (confmode)
\def\@IEEEauthorblockNstyle{\normalfont\@IEEEcompsocnotconfonly{\sffamily}\sublargesize}
\def\@IEEEauthorblockAstyle{\normalfont\@IEEEcompsocnotconfonly{\sffamily}\@IEEEcompsocconfonly{\itshape}\normalsize}
% The default if the user does not use an author block
\def\@IEEEauthordefaulttextstyle{\normalfont\@IEEEcompsocnotconfonly{\sffamily}\sublargesize}

% adjustment spacing from title (or special paper notice) to author name blocks (confmode)
% can be negative
\def\@IEEEauthorblockconfadjspace{-0.25em}
% compsoc conferences need more space here
\@IEEEcompsocconfonly{\def\@IEEEauthorblockconfadjspace{0.75\@IEEEnormalsizeunitybaselineskip}}

% spacing between name and affiliation blocks (confmode)
% This can be negative.
% The IEEE doesn't want any added spacing here, but I will leave these
% controls in place in case they ever change their mind.
% Personally, I like 0.75ex.
%\def\@IEEEauthorblockNtopspace{0.75ex}
%\def\@IEEEauthorblockAtopspace{0.75ex}
\def\@IEEEauthorblockNtopspace{0.0ex}
\def\@IEEEauthorblockAtopspace{0.0ex}
\ifCLASSOPTIONtransmag
% transmag uses one line of space above first affiliation block
\def\@IEEEauthorblockAtopspace{1\@IEEEnormalsizeunitybaselineskip}
\fi

% baseline spacing within name and affiliation blocks (confmode)
% must be positive, spacings below certain values will make 
% the position of line of text sensitive to the contents of the
% line above it i.e., whether or not the prior line has descenders, 
% subscripts, etc. For this reason it is a good idea to keep
% these above 2.6ex
\def\@IEEEauthorblockNinterlinespace{2.6ex}
\def\@IEEEauthorblockAinterlinespace{2.75ex}

% This tracks the required strut size.
% See the \@IEEEauthorhalign command for the actual default value used.
\def\@IEEEauthorblockXinterlinespace{2.7ex}

% variables to retain font size and style across groups
% values given here have no effect as they will be overwritten later
\gdef\@IEEESAVESTATEfontsize{10}
\gdef\@IEEESAVESTATEfontbaselineskip{12}
\gdef\@IEEESAVESTATEfontencoding{OT1}
\gdef\@IEEESAVESTATEfontfamily{ptm}
\gdef\@IEEESAVESTATEfontseries{m}
\gdef\@IEEESAVESTATEfontshape{n}

% saves the current font attributes
\def\@IEEEcurfontSAVE{\global\let\@IEEESAVESTATEfontsize\f@size%
\global\let\@IEEESAVESTATEfontbaselineskip\f@baselineskip%
\global\let\@IEEESAVESTATEfontencoding\f@encoding%
\global\let\@IEEESAVESTATEfontfamily\f@family%
\global\let\@IEEESAVESTATEfontseries\f@series%
\global\let\@IEEESAVESTATEfontshape\f@shape}

% restores the saved font attributes
\def\@IEEEcurfontRESTORE{\fontsize{\@IEEESAVESTATEfontsize}{\@IEEESAVESTATEfontbaselineskip}%
\fontencoding{\@IEEESAVESTATEfontencoding}%
\fontfamily{\@IEEESAVESTATEfontfamily}%
\fontseries{\@IEEESAVESTATEfontseries}%
\fontshape{\@IEEESAVESTATEfontshape}%
\selectfont}


% variable to indicate if the current block is the first block in the column
\newif\if@IEEEprevauthorblockincol   \@IEEEprevauthorblockincolfalse


% the command places a strut with height and depth = \@IEEEauthorblockXinterlinespace
% we use this technique to have complete manual control over the spacing of the lines
% within the halign environment.
% We set the below baseline portion at 30%, the above
% baseline portion at 70% of the total length.
% Responds to changes in the document's \baselinestretch
\def\@IEEEauthorstrutrule{\@IEEEtrantmpdimenA\@IEEEauthorblockXinterlinespace%
\@IEEEtrantmpdimenA=\baselinestretch\@IEEEtrantmpdimenA%
\rule[-0.3\@IEEEtrantmpdimenA]{0pt}{\@IEEEtrantmpdimenA}}


% blocks to hold the authors' names and affilations. 
% Makes formatting easy for conferences
%
% use real definitions in conference mode
% name block
\def\IEEEauthorblockN#1{\relax\@IEEEauthorblockNstyle% set the default text style
\gdef\@IEEEauthorblockXinterlinespace{0pt}% disable strut for spacer row
% the \expandafter hides the \cr in conditional tex, see the array.sty docs
% for details, probably not needed here as the \cr is in a macro
% do a spacer row if needed
\if@IEEEprevauthorblockincol\expandafter\@IEEEauthorblockNtopspaceline\fi
\global\@IEEEprevauthorblockincoltrue% we now have a block in this column
%restore the correct strut value
\gdef\@IEEEauthorblockXinterlinespace{\@IEEEauthorblockNinterlinespace}%
% input the author names
#1%
% end the row if the user did not already
\crcr}
% spacer row for names
\def\@IEEEauthorblockNtopspaceline{\cr\noalign{\vskip\@IEEEauthorblockNtopspace}}
%
% affiliation block
\def\IEEEauthorblockA#1{\relax\@IEEEauthorblockAstyle% set the default text style
\gdef\@IEEEauthorblockXinterlinespace{0pt}%disable strut for spacer row
% the \expandafter hides the \cr in conditional tex, see the array.sty docs
% for details, probably not needed here as the \cr is in a macro
% do a spacer row if needed
\if@IEEEprevauthorblockincol\expandafter\@IEEEauthorblockAtopspaceline\fi
\global\@IEEEprevauthorblockincoltrue% we now have a block in this column
%restore the correct strut value
\gdef\@IEEEauthorblockXinterlinespace{\@IEEEauthorblockAinterlinespace}%
% input the author affiliations
#1%
% end the row if the user did not already
\crcr
% V1.8 transmag does not use any additional affiliation spacing after the first author
\ifCLASSOPTIONtransmag\gdef\@IEEEauthorblockAtopspace{0pt}\fi}

% spacer row for affiliations
\def\@IEEEauthorblockAtopspaceline{\cr\noalign{\vskip\@IEEEauthorblockAtopspace}}


% allow papers to compile even if author blocks are used in modes other
% than conference or peerreviewca. For such cases, we provide dummy blocks.
\ifCLASSOPTIONconference
\else
   \ifCLASSOPTIONpeerreviewca\else
      % not conference, peerreviewca or transmag mode
      \ifCLASSOPTIONtransmag\else
         \def\IEEEauthorblockN#1{#1}%
         \def\IEEEauthorblockA#1{#1}%
      \fi
   \fi
\fi



% we provide our own halign so as not to have to depend on tabular
\def\@IEEEauthorhalign{\@IEEEauthordefaulttextstyle% default text style
   \lineskip=0pt\relax% disable line spacing
   \lineskiplimit=0pt\relax%
   \baselineskip=0pt\relax%
   \@IEEEcurfontSAVE% save the current font
   \mathsurround\z@\relax% no extra spacing around math
   \let\\\@IEEEauthorhaligncr% replace newline with halign friendly one
   \tabskip=0pt\relax% no column spacing
   \everycr{}% ensure no problems here
   \@IEEEprevauthorblockincolfalse% no author blocks yet
   \def\@IEEEauthorblockXinterlinespace{2.7ex}% default interline space
   \vtop\bgroup%vtop box
   \halign\bgroup&\relax\hfil\@IEEEcurfontRESTORE\relax ##\relax
   \hfil\@IEEEcurfontSAVE\@IEEEauthorstrutrule\cr}

% ensure last line, exit from halign, close vbox
\def\end@IEEEauthorhalign{\crcr\egroup\egroup}

% handle bogus star form
\def\@IEEEauthorhaligncr{{\ifnum0=`}\fi\@ifstar{\@@IEEEauthorhaligncr}{\@@IEEEauthorhaligncr}}

% test and setup the optional argument to \\[]
\def\@@IEEEauthorhaligncr{\@testopt\@@@IEEEauthorhaligncr\z@skip}

% end the line and do the optional spacer
\def\@@@IEEEauthorhaligncr[#1]{\ifnum0=`{\fi}\cr\noalign{\vskip#1\relax}}



% flag to prevent multiple \and warning messages
\newif\if@IEEEWARNand
\@IEEEWARNandtrue

% if in conference or peerreviewca modes, we support the use of \and as \author is a
% tabular environment, otherwise we warn the user that \and is invalid
% outside of conference or peerreviewca modes.
\def\and{\relax} % provide a bogus \and that we will then override

\renewcommand{\and}[1][\relax]{\if@IEEEWARNand\typeout{** WARNING: \noexpand\and is valid only
                               when in conference or peerreviewca}\typeout{modes (line \the\inputlineno).}\fi\global\@IEEEWARNandfalse}

\ifCLASSOPTIONconference%
\renewcommand{\and}[1][\hfill]{\end{@IEEEauthorhalign}#1\begin{@IEEEauthorhalign}}%
\fi
\ifCLASSOPTIONpeerreviewca
\renewcommand{\and}[1][\hfill]{\end{@IEEEauthorhalign}#1\begin{@IEEEauthorhalign}}%
\fi
% V1.8 transmag uses conference author format
\ifCLASSOPTIONtransmag
\renewcommand{\and}[1][\hfill]{\end{@IEEEauthorhalign}#1\begin{@IEEEauthorhalign}}%
\fi

% page clearing command
% based on LaTeX2e's \cleardoublepage, but allows different page styles
% for the inserted blank pages
\def\@IEEEcleardoublepage#1{\clearpage\if@twoside\ifodd\c@page\else
\hbox{}\thispagestyle{#1}\newpage\if@twocolumn\hbox{}\thispagestyle{#1}\newpage\fi\fi\fi}

% V1.8b hooks to allow adjustment of space above title
\def\IEEEtitletopspace{0.5\baselineskip}
% an added extra amount to allow for adjustment/offset
\def\IEEEtitletopspaceextra{0pt}

% user command to invoke the title page
\def\maketitle{\par%
  \begingroup%
  \normalfont%
  \def\thefootnote{}%  the \thanks{} mark type is empty
  \def\footnotemark{}% and kill space from \thanks within author
  \let\@makefnmark\relax% V1.7, must *really* kill footnotemark to remove all \textsuperscript spacing as well.
  \footnotesize%       equal spacing between thanks lines
  \footnotesep 0.7\baselineskip%see global setting of \footnotesep for more info
  % V1.7 disable \thanks note indention for compsoc
  \@IEEEcompsoconly{\long\def\@makefntext##1{\parindent 1em\noindent\hbox{\@makefnmark}##1}}%
  \normalsize%
  \ifCLASSOPTIONpeerreview
     \newpage\global\@topnum\z@ \@maketitle\@IEEEstatictitlevskip\@IEEEaftertitletext%
     \thispagestyle{IEEEpeerreviewcoverpagestyle}\@thanks%
  \else
     \if@twocolumn%
        \ifCLASSOPTIONtechnote%
           \newpage\global\@topnum\z@ \@maketitle\@IEEEstatictitlevskip\@IEEEaftertitletext%
        \else
           \twocolumn[{\IEEEquantizevspace{\@maketitle}[\IEEEquantizedisabletitlecmds]{0pt}[-\topskip]{\baselineskip}{\@IEEENORMtitlevspace}{\@IEEEMINtitlevspace}\@IEEEaftertitletext}]%
        \fi
     \else
        \newpage\global\@topnum\z@ \@maketitle\@IEEEstatictitlevskip\@IEEEaftertitletext%
     \fi
     \thispagestyle{IEEEtitlepagestyle}\@thanks%
  \fi
  % pullup page for pubid if used.
  \if@IEEEusingpubid
     \enlargethispage{-\@IEEEpubidpullup}%
  \fi 
  \endgroup
  \setcounter{footnote}{0}\let\maketitle\relax\let\@maketitle\relax
  \gdef\@thanks{}%
  % v1.6b do not clear these as we will need the title again for peer review papers
  % \gdef\@author{}\gdef\@title{}%
  \let\thanks\relax}


% V1.8 parbox to format \@IEEEtitleabstractindextext
\long\def\@IEEEtitleabstractindextextbox#1{\parbox{1\textwidth}{#1}}
% V1.8 compsoc is partial width
\ifCLASSOPTIONcompsoc
% comparison with proofs suggests it's in the range of 92.1-92.3%
\long\def\@IEEEtitleabstractindextextbox#1{\parbox{0.922\textwidth}{\@IEEEcompsocnotconfonly{\rightskip\@flushglue\leftskip\z@skip}#1}}
\fi

% formats the Title, authors names, affiliations and special paper notice
% THIS IS A CONTROLLED SPACING COMMAND! Do not allow blank lines or unintentional
% spaces to enter the definition - use % at the end of each line
\def\@maketitle{\newpage
\bgroup\par\vskip\IEEEtitletopspace\vskip\IEEEtitletopspaceextra\centering%
\ifCLASSOPTIONtechnote% technotes, V1.8a abstract and index terms are not treated differently for compsoc technotes
   {\bfseries\large\@IEEEcompsoconly{\Large\sffamily}\@title\par}\vskip 1.3em{\lineskip .5em\@IEEEcompsoconly{\large\sffamily}\@author
   \@IEEEspecialpapernotice\par}\relax
\else% not a technote
   \vskip0.2em{\Huge\ifCLASSOPTIONtransmag\bfseries\LARGE\fi\@IEEEcompsoconly{\sffamily}\@IEEEcompsocconfonly{\normalfont\normalsize\vskip 2\@IEEEnormalsizeunitybaselineskip
   \bfseries\Large}\@IEEEcompsocnotconfonly{\vskip 0.75\@IEEEnormalsizeunitybaselineskip}\@title\par}\relax
   \@IEEEcompsocnotconfonly{\vskip 0.5\@IEEEnormalsizeunitybaselineskip}\vskip1.0em\par%
   % V1.6 handle \author differently if in conference mode
   \ifCLASSOPTIONconference%
      {\@IEEEspecialpapernotice\mbox{}\vskip\@IEEEauthorblockconfadjspace%
       \mbox{}\hfill\begin{@IEEEauthorhalign}\@author\end{@IEEEauthorhalign}\hfill\mbox{}\par}\relax
   \else% peerreviewca, peerreview or journal
      \ifCLASSOPTIONpeerreviewca
         % peerreviewca handles author names just like conference mode
         {\@IEEEcompsoconly{\sffamily}\@IEEEspecialpapernotice\mbox{}\vskip\@IEEEauthorblockconfadjspace%
          \mbox{}\hfill\begin{@IEEEauthorhalign}\@author\end{@IEEEauthorhalign}\hfill\mbox{}\par
          {\@IEEEcompsoconly{\vskip 1.5em\relax
           \@IEEEtitleabstractindextextbox{\@IEEEtitleabstractindextext}\par\noindent\hfill
           \IEEEcompsocdiamondline\hfill\hbox{}\par}}}\relax
      \else% journal, peerreview or transmag
         \ifCLASSOPTIONtransmag
            % transmag also handles author names just like conference mode
            % it also uses \@IEEEtitleabstractindextex, but with one line less
            % space above, and one more below
           {\@IEEEspecialpapernotice\mbox{}\vskip\@IEEEauthorblockconfadjspace%
            \mbox{}\hfill\begin{@IEEEauthorhalign}\@author\end{@IEEEauthorhalign}\hfill\mbox{}\par
           {\vspace{0.5\baselineskip}\relax\@IEEEtitleabstractindextextbox{\@IEEEtitleabstractindextext}\vspace{-1\baselineskip}\par}}\relax
         \else% journal or peerreview
           {\lineskip.5em\@IEEEcompsoconly{\sffamily}\sublargesize\@author\@IEEEspecialpapernotice\par
           {\@IEEEcompsoconly{\vskip 1.5em\relax
            \@IEEEtitleabstractindextextbox{\@IEEEtitleabstractindextext}\par\noindent\hfill
            \IEEEcompsocdiamondline\hfill\hbox{}\par}}}\relax
         \fi
      \fi
   \fi
\fi\par\addvspace{0.5\baselineskip}\egroup}


% V1.7 Computer Society "diamond line" which follows index terms for nonconference papers
% V1.8a full width diamond line for single column use
\def\@IEEEcompsocdiamondlinei{\vrule depth 0pt height 0.5pt width 4cm\nobreak\hspace{7.5pt}\nobreak
\raisebox{-3.5pt}{\fontfamily{pzd}\fontencoding{U}\fontseries{m}\fontshape{n}\fontsize{11}{12}\selectfont\char70}\nobreak
\hspace{7.5pt}\nobreak\vrule depth 0pt height 0.5pt width 4cm\relax}
% V1.8a narrower width diamond line for double column use
\def\@IEEEcompsocdiamondlineii{\vrule depth 0pt height 0.5pt width 2.5cm\nobreak\hspace{7.5pt}\nobreak
\raisebox{-3.5pt}{\fontfamily{pzd}\fontencoding{U}\fontseries{m}\fontshape{n}\fontsize{11}{12}\selectfont\char70}\nobreak
\hspace{7.5pt}\nobreak\vrule depth 0pt height 0.5pt width 2.5cm\relax}
% V1.8a bare core without rules to base a last resort on for very narrow linewidths
\def\@IEEEcompsocdiamondlineiii{\mbox{}\nobreak\hspace{7.5pt}\nobreak
\raisebox{-3.5pt}{\fontfamily{pzd}\fontencoding{U}\fontseries{m}\fontshape{n}\fontsize{11}{12}\selectfont\char70}\nobreak
\hspace{7.5pt}\nobreak\mbox{}\relax}

% V1.8a allow \IEEEcompsocdiamondline to adjust for different linewidths.
% Use \@IEEEcompsocdiamondlinei if its width is less than 0.66\linewidth (0.487 nominal for single column)
% if not, fall back to \@IEEEcompsocdiamondlineii if its width is less than 0.75\linewidth (0.659 nominal for double column)
% if all else fails, try to make a custom diamondline based on the abnormally narrow linewidth
\def\IEEEcompsocdiamondline{\settowidth{\@IEEEtrantmpdimenA}{\@IEEEcompsocdiamondlinei}\relax
\ifdim\@IEEEtrantmpdimenA<0.66\linewidth\relax\@IEEEcompsocdiamondlinei\relax
\else
\settowidth{\@IEEEtrantmpdimenA}{\@IEEEcompsocdiamondlineii}\relax
\ifdim\@IEEEtrantmpdimenA<0.75\linewidth\relax\@IEEEcompsocdiamondlineii\relax
\else
\settowidth{\@IEEEtrantmpdimenA}{\@IEEEcompsocdiamondlineiii}\relax
\@IEEEtrantmpdimenB=\linewidth\relax
\addtolength{\@IEEEtrantmpdimenB}{-1\@IEEEtrantmpdimenA}\relax
\vrule depth 0pt height 0.5pt width 0.33\@IEEEtrantmpdimenB\@IEEEcompsocdiamondlineiii\vrule depth 0pt height 0.5pt width 0.33\@IEEEtrantmpdimenB\relax
\fi\fi}


% V1.7 standard LateX2e \thanks, but with \itshape under compsoc. Also make it a \long\def
% We also need to trigger the one-shot footnote rule
\def\@IEEEtriggeroneshotfootnoterule{\global\@IEEEenableoneshotfootnoteruletrue}


\long\def\thanks#1{\footnotemark
    \protected@xdef\@thanks{\@thanks
        \protect\footnotetext[\the\c@footnote]{\@IEEEcompsoconly{\itshape
        \protect\@IEEEtriggeroneshotfootnoterule\relax}\ignorespaces#1}}}
\let\@thanks\@empty


% V1.7 allow \author to contain \par's. This is needed to allow \thanks to contain \par.
\long\def\author#1{\gdef\@author{#1}}


% in addition to setting up IEEEitemize, we need to remove a baselineskip space above and
% below it because \list's \pars introduce blank lines because of the footnote struts.
\def\@IEEEsetupcompsocitemizelist{\def\labelitemi{$\bullet$}%
\setlength{\IEEElabelindent}{0pt}\setlength{\labelsep}{1.2em}\setlength{\parskip}{0pt}%
\setlength{\partopsep}{0pt}\setlength{\topsep}{0.5\baselineskip}\vspace{-1\baselineskip}\relax}


% flag for fake non-compsoc \IEEEcompsocthanksitem - prevents line break on very first item
\newif\if@IEEEbreakcompsocthanksitem \@IEEEbreakcompsocthanksitemfalse

\ifCLASSOPTIONcompsoc
% V1.7 compsoc bullet item \thanks
% also, we need to redefine this to destroy the argument in \IEEEquantizevspace
\long\def\IEEEcompsocitemizethanks#1{\relax\@IEEEbreakcompsocthanksitemfalse\footnotemark
    \protected@xdef\@thanks{\@thanks
        \protect\footnotetext[\the\c@footnote]{\itshape\protect\@IEEEtriggeroneshotfootnoterule
        {\let\IEEEiedlistdecl\relax\protect\begin{IEEEitemize}[\protect\@IEEEsetupcompsocitemizelist]\ignorespaces#1\relax
        \protect\end{IEEEitemize}}\protect\vspace{-1\baselineskip}}}}
\DeclareRobustCommand*{\IEEEcompsocthanksitem}{\item}
\else
% non-compsoc, allow for dual compilation via rerouting to normal \thanks
\long\def\IEEEcompsocitemizethanks#1{\thanks{#1}}
% redirect to "pseudo-par" \hfil\break\indent after swallowing [] from \IEEEcompsocthanksitem[]
\DeclareRobustCommand{\IEEEcompsocthanksitem}{\@ifnextchar [{\@IEEEthanksswallowoptionalarg}%
{\@IEEEthanksswallowoptionalarg[\relax]}}
% be sure and break only after first item, be sure and ignore spaces after optional argument
\def\@IEEEthanksswallowoptionalarg[#1]{\relax\if@IEEEbreakcompsocthanksitem\hfil\break
\indent\fi\@IEEEbreakcompsocthanksitemtrue\ignorespaces}
\fi


% V1.6b define the \IEEEpeerreviewmaketitle as needed
\ifCLASSOPTIONpeerreview
\def\IEEEpeerreviewmaketitle{\@IEEEcleardoublepage{empty}%
\ifCLASSOPTIONtwocolumn
\twocolumn[{\IEEEquantizevspace{\@IEEEpeerreviewmaketitle}[\IEEEquantizedisabletitlecmds]{0pt}[-\topskip]{\baselineskip}{\@IEEENORMtitlevspace}{\@IEEEMINtitlevspace}}]
\else
\newpage\@IEEEpeerreviewmaketitle\@IEEEstatictitlevskip
\fi
\thispagestyle{IEEEtitlepagestyle}}
\else
% \IEEEpeerreviewmaketitle does nothing if peer review option has not been selected
\def\IEEEpeerreviewmaketitle{\relax}
\fi

% peerreview formats the repeated title like the title in journal papers.
\def\@IEEEpeerreviewmaketitle{\bgroup\par\addvspace{0.5\baselineskip}\centering\@IEEEcompsoconly{\sffamily}%
\normalfont\normalsize\vskip0.2em{\Huge\@title\par}\vskip1.0em\par
\par\addvspace{0.5\baselineskip}\egroup}



% V1.6 
% this is a static rubber spacer between the title/authors and the main text
% used for single column text, or when the title appears in the first column
% of two column text (technotes). 
\def\@IEEEstatictitlevskip{{\normalfont\normalsize
% adjust spacing to next text
% v1.6b handle peer review papers
\ifCLASSOPTIONpeerreview
% for peer review papers, the same value is used for both title pages
% regardless of the other paper modes
   \vskip 1\baselineskip plus 0.375\baselineskip minus 0.1875\baselineskip
\else
   \ifCLASSOPTIONconference% conference
      \vskip 1\baselineskip plus 0.375\baselineskip minus 0.1875\baselineskip%
   \else%
      \ifCLASSOPTIONtechnote% technote
         \vskip 1\baselineskip plus 0.375\baselineskip minus 0.1875\baselineskip%
      \else% journal uses more space
         \vskip 2.5\baselineskip plus 0.75\baselineskip minus 0.375\baselineskip%
      \fi
   \fi
\fi}}


% set the nominal and minimum values for the quantized title spacer
% the quantization algorithm will not allow the spacer size to
% become less than \@IEEEMINtitlevspace - instead it will be lengthened
% default to journal values
\def\@IEEENORMtitlevspace{2.5\baselineskip}
\def\@IEEEMINtitlevspace{2\baselineskip}
% conferences and technotes need tighter spacing
\ifCLASSOPTIONconference% conference
  \def\@IEEENORMtitlevspace{1\baselineskip}
  \def\@IEEEMINtitlevspace{0.75\baselineskip}
\fi
\ifCLASSOPTIONtechnote% technote
  \def\@IEEENORMtitlevspace{1\baselineskip}
  \def\@IEEEMINtitlevspace{0.75\baselineskip}
\fi


% V1.8a
\def\IEEEquantizevspace{\begingroup\@ifstar{\@IEEEquantizevspacestarformtrue\@IEEEquantizevspace}{\@IEEEquantizevspacestarformfalse\@IEEEquantizevspace}}
% \IEEEquantizevspace[output dimen register]{object}[object decl]
%                    {top baselineskip}
%                    [offset][prevdepth][lineskip limit][lineskip]
%                    {unit height}{nominal vspace}{minimum vspace}
%
% Calculates and creates the vspace needed to make the combined height with
% the given object an integer multiple of the given unit height. This command
% is more general than the older \@IEEEdynamictitlevspace it replaces.
%
% The star form has no effect at present, but is reserved for future use.
%
% If the optional argument [output dimen register] is given, the calculated
% vspace height is stored in the given output dimen (or skip) register
% and no other action is taken, otherwise the object followed by a vspace*
% of the appropriate height is evaluated/output.
%
% The optional object decl (declarations) is code that is evaluated just
% before the object's height is evaluated. Its intented purpose is to allow
% for the alteration or disabling of code within the object during internal
% height evaluation (e.g., \long\def\thanks#1{\relax} ).
% This special code is not invoked if/when the object is rendered at the end.
%
% The nominal vspace is the target value of the added vspace and the minimum
% vspace is the lower allowed limit. The vspacer will be the value that achieves
% integral overall height, in terms of the given unit height, that is closest
% to the nominal vspace and that is not less than the specified minimum vspace.
%
% The line spacing algorithm of TeX is somewhat involved and requires special
% care with regard to the first line of a vertical list (which is indicated
% when \prevdepth is -1000pt or less). top baselineskip specifies the
% baselineskip or topskip used prior to the object. If the height of the
% first line of the object is greater than the given top baselineskip, then
% the top baselineskip is subtracted from the height of the first line and
% that difference is considered along with the rest of the object height
% (because the object will be shifted down by an amount = 
% top line height - top baselineskip). Otherwise, the height of the first line
% of the object is ignored as far as the calculations are concerned.
% This algorithm is adequate for objects that appear at the top of a page
% (e.g., titles) where \topskip spacing is used.
%
% However, as explained on page 78 of the TeXbook, interline spacing is more
% complex when \baselineskip is being used (indicated by \prevdepth > 
% -1000pt). The four optional parameters offset, prevdepth, lineskip limit and
% lineskip are assumed to be equal to be 0pt, \prevdepth, \lineskiplimit and
% \lineskip, respectively, if they are omitted.
%
% The prevdepth is the depth of the line before the object, the lineskip limit
% specifies how close the top of the object can come to the bottom of the
% previous line before \baselineskip is ignored and \lineskip is inserted
% between the object and the line above it. Lineskip does not come into
% play unless the first line of the object is high enough to "get too close"
% (as specified by lineskiplimit) to the line before it. The the prevdepth,
% lineskip limit, and lineskip optional parameters are not needed for the
% first object/line on a page (i.e., prevdepth <= -1000pt) where the simplier
% \topskip spacing rules are in effect.
%
% Offset is a manual adjustment that is added to the height calculations of
% object irrespective of the value of \prevdepth. It is useful when the top
% baselineskip will result in a noninteger unit height object placement even
% if the object itself has integral height. e.g., a footnotesize baselineskip
% is used before the object, thus an offset of, say -3pt, can be given as a
% correction.

% Common combinations of these parameters include:
%
% top baselineskip:   (and default values for offset, prevdepth, etc.)
% \topskip            % for objects that appear at the top of a page
% \maxdimen           % always ignore the height of the top line
% 0pt                 % always consider any positive height of the top line
%
% for objects to appear inline in normal text:
% top baselineskip = \baselineskip
%
% set prevdepth = -1000pt and top baselineskip = 0pt to consider the
% overall height of the object without any other external skip
% consideration

\newif\if@IEEEquantizevspacestarform       % flag to indicate star form
\newif\if@IEEEquantizevspaceuseoutdimenreg % flag to indicate output dimen register is to be used
% Use our own private registers because the object could contain a
% structure that uses the existing tmp scratch pad registers
\newdimen\@IEEEquantizeheightA
\newdimen\@IEEEquantizeheightB
\newdimen\@IEEEquantizeheightC
\newdimen\@IEEEquantizeprevdepth % need to save this early as can change
\newcount\@IEEEquantizemultiple
\newbox\@IEEEquantizeboxA


\def\@IEEEquantizevspace{\@ifnextchar [{\@IEEEquantizevspaceuseoutdimenregtrue\@@IEEEquantizevspace}{\@IEEEquantizevspaceuseoutdimenregfalse\@@IEEEquantizevspace[]}}


\long\def\@@IEEEquantizevspace[#1]#2{\relax
% acquire and store
% #1 optional output dimen register
% #2 object
\edef\@IEEEquantizeoutdimenreg{#1}\relax
% allow for object specifications that contain parameters
\@IEEEtrantmptoksA={#2}\relax
\long\edef\@IEEEquantizeobject{\the\@IEEEtrantmptoksA}\relax
\@ifnextchar [{\@@@IEEEquantizevspace}{\@@@IEEEquantizevspace[\relax]}}

\long\def\@@@IEEEquantizevspace[#1]#2{\relax
% acquire and store
% [#1] optional object decl, is \relax if not given by user
% #2 top baselineskip
% allow for object decl specifications that have parameters
\@IEEEtrantmptoksA={#1}\relax
\long\edef\@IEEEquantizeobjectdecl{\the\@IEEEtrantmptoksA}\relax
\edef\@IEEEquantizetopbaselineskip{#2}\ivIEEEquantizevspace}

% acquire optional argument set and store
% [offset][prevdepth][lineskip limit][lineskip]
\def\ivIEEEquantizevspace{\@ifnextchar [{\@vIEEEquantizevspace}{\@vIEEEquantizevspace[0pt]}}
\def\@vIEEEquantizevspace[#1]{\edef\@IEEEquantizeoffset{#1}\@ifnextchar [{\@viIEEEquantizevspace}{\@viIEEEquantizevspace[\prevdepth]}}
\def\@viIEEEquantizevspace[#1]{\@IEEEquantizeprevdepth=#1\relax\@ifnextchar [{\@viiIEEEquantizevspace}{\@viiIEEEquantizevspace[\lineskiplimit]}}
\def\@viiIEEEquantizevspace[#1]{\edef\@IEEEquantizelineskiplimit{#1}\@ifnextchar [{\@viiiIEEEquantizevspace}{\@viiiIEEEquantizevspace[\lineskip]}}
\def\@viiiIEEEquantizevspace[#1]{\edef\@IEEEquantizelineskip{#1}\@ixIEEEquantizevspace}

% main routine
\def\@ixIEEEquantizevspace#1#2#3{\relax
\edef\@IEEEquantizeunitheight{#1}\relax
\edef\@IEEEquantizenomvspace{#2}\relax
\edef\@IEEEquantizeminvspace{#3}\relax
% \@IEEEquantizeoutdimenreg
% \@IEEEquantizeobject
% \@IEEEquantizeobjectdecl
% \@IEEEquantizetopbaselineskip
% \@IEEEquantizeoffset
% \@IEEEquantizeprevdepth
% \@IEEEquantizelineskiplimit
% \@IEEEquantizelineskip
% \@IEEEquantizeunitheight
% \@IEEEquantizenomvspace
% \@IEEEquantizeminvspace
% get overall height of object
\setbox\@IEEEquantizeboxA\vbox{\begingroup\@IEEEquantizeobjectdecl\@IEEEquantizeobject\relax\endgroup}\relax
\@IEEEquantizeheightA\ht\@IEEEquantizeboxA\relax
% get height of first line of object
\setbox\@IEEEquantizeboxA\vtop{\begingroup\@IEEEquantizeobjectdecl\@IEEEquantizeobject\relax\endgroup}\relax
\@IEEEquantizeheightB\ht\@IEEEquantizeboxA\relax
\ifdim\@IEEEquantizeprevdepth>-1000pt\relax % prevdepth > -1000pf means full baselineskip\lineskip rules in effect
% lineskip spacing rule takes effect if height of top line > baselineskip - prevdepth - lineskiplimit, 
% otherwise the baselineskip rule is in effect and the height of the first line does not matter at all.
\@IEEEquantizeheightC=\@IEEEquantizetopbaselineskip\relax
\advance\@IEEEquantizeheightC-\@IEEEquantizeprevdepth\relax
\advance\@IEEEquantizeheightC-\@IEEEquantizelineskiplimit\relax % this works even though \@IEEEquantizelineskiplimit is a macro because TeX allows --10pt notation
\ifdim\@IEEEquantizeheightB>\@IEEEquantizeheightC\relax
% lineskip spacing rule is in effect i.e., the object is going to be shifted down relative to the
% baselineskip set position by its top line height (already a part of the total height) + prevdepth + lineskip - baselineskip
\advance\@IEEEquantizeheightA\@IEEEquantizeprevdepth\relax
\advance\@IEEEquantizeheightA\@IEEEquantizelineskip\relax
\advance\@IEEEquantizeheightA-\@IEEEquantizetopbaselineskip\relax
\else
% height of first line <= \@IEEEquantizetopbaselineskip - \@IEEEquantizeprevdepth - \@IEEEquantizelineskiplimit
% standard baselineskip rules are in effect, so don't consider height of first line
\advance\@IEEEquantizeheightA-\@IEEEquantizeheightB\relax
\fi
%
\else % prevdepth <= -1000pt, simplier \topskip type rules in effect
\ifdim\@IEEEquantizeheightB>\@IEEEquantizetopbaselineskip
% height of top line (already included in the total height) in excess of
% baselineskip is the amount it will be downshifted
\advance\@IEEEquantizeheightA-\@IEEEquantizetopbaselineskip\relax
\else
% height of first line is irrelevant, remove it
\advance\@IEEEquantizeheightA-\@IEEEquantizeheightB\relax
\fi
\fi % prevdepth <= -1000pt
%
% adjust height for any manual offset
\advance\@IEEEquantizeheightA\@IEEEquantizeoffset\relax
% add in nominal spacer
\advance\@IEEEquantizeheightA\@IEEEquantizenomvspace\relax
% check for nonzero unitheight
\@IEEEquantizeheightB=\@IEEEquantizeunitheight\relax
\ifnum\@IEEEquantizeheightB=0\relax
\@IEEEclspkgerror{IEEEquantizevspace unit height cannot be zero. Assuming 10pt.}%
{Division by zero is not allowed.}
\@IEEEquantizeheightB=10pt\relax
\fi
% get integer number of lines
\@IEEEquantizemultiple=\@IEEEquantizeheightA\relax
\divide\@IEEEquantizemultiple\@IEEEquantizeheightB\relax
% set A to contain the excess height over the \@IEEEquantizemultiple of lines
% A = height - multiple*unitheight
\@IEEEquantizeheightC\@IEEEquantizeheightB\relax
\multiply\@IEEEquantizeheightC\@IEEEquantizemultiple\relax
\advance\@IEEEquantizeheightA-\@IEEEquantizeheightC\relax
% set B to contain the height short of \@IEEEquantizemultiple+1 of lines
% B = unitheight - A
\advance\@IEEEquantizeheightB-\@IEEEquantizeheightA\relax
% choose A or B based on which is closer
\@IEEEquantizeheightC\@IEEEquantizenomvspace\relax
\ifdim\@IEEEquantizeheightA<\@IEEEquantizeheightB\relax
% C = nomvspace - A, go with lower
\advance\@IEEEquantizeheightC-\@IEEEquantizeheightA\relax
\else
% C = nomvspace + B, go with upper
\advance\@IEEEquantizeheightC\@IEEEquantizeheightB\relax
\fi
% if violate lower bound, use next integer bound
\ifdim\@IEEEquantizeheightC<\@IEEEquantizeminvspace\relax
% A + B = unitheight
\advance\@IEEEquantizeheightC\@IEEEquantizeheightA\relax
\advance\@IEEEquantizeheightC\@IEEEquantizeheightB\relax
\fi
% export object and spacer outside of group
\global\let\@IEEEquantizeobjectout\@IEEEquantizeobject\relax
\global\@IEEEquantizeheightC\@IEEEquantizeheightC\relax
\endgroup
\if@IEEEquantizevspaceuseoutdimenreg
\@IEEEquantizeoutdimenreg=\@IEEEquantizeheightC\relax
\else
\@IEEEquantizeobjectout\relax
\vskip\@IEEEquantizeheightC\relax
\fi}


% user command to disable all global assignments, possible use within object decl
\def\IEEEquantizedisableglobal{\let\global\relax
\let\gdef\def
\let\xdef\edef}
% user command to allow for the disabling of \thanks and other commands, possible use within object decl
\def\IEEEquantizedisabletitlecmds{\long\def\thanks##1{\relax}\relax
\long\def\IEEEcompsocitemizethanks##1{\relax}\def\newpage{\relax}}





% V1.6
% we allow the user access to the last part of the title area
% useful in emergencies such as when a different spacing is needed
% This text is NOT compensated for in the dynamic sizer.
\let\@IEEEaftertitletext=\relax
\long\def\IEEEaftertitletext#1{\def\@IEEEaftertitletext{#1}}


% V1.7 provide a way for users to enter abstract and keywords
% into the onecolumn title are. This text is compensated for
% in the dynamic sizer.
\let\@IEEEtitleabstractindextext=\relax
\long\def\IEEEtitleabstractindextext#1{\def\@IEEEtitleabstractindextext{#1}}

% V1.7 provide a way for users to get the \@IEEEtitleabstractindextext if
% not in compsoc or transmag journal mode - this way abstract and keywords
% can still be placed in their conventional position if not in those modes.
\def\IEEEdisplaynontitleabstractindextext{%
% display for all conference formats
\ifCLASSOPTIONconference\@IEEEtitleabstractindextext\relax
\else% non-conferences
  % V1.8a display for all technotes
  \ifCLASSOPTIONtechnote\@IEEEtitleabstractindextext\relax
  % V1.8a add diamond line after abstract and index terms for compsoc technotes
  \@IEEEcompsoconly{\noindent\hfill\IEEEcompsocdiamondline\hfill\hbox{}\par}\relax
  \else % non-conferences and non-technotes
    \ifCLASSOPTIONcompsoc% display if not compsoc and not transmag
    \else
      \ifCLASSOPTIONtransmag
      \else% not compsoc journal nor transmag journal
         \@IEEEtitleabstractindextext\relax
      \fi
    \fi
  \fi
\fi}


% command to allow alteration of baselinestretch, but only if the current
% baselineskip is unity. Used to tweak the compsoc abstract and keywords line spacing.
\def\@IEEEtweakunitybaselinestretch#1{{\def\baselinestretch{1}\selectfont
\global\@tempskipa\baselineskip}\ifnum\@tempskipa=\baselineskip%
\def\baselinestretch{#1}\selectfont\fi\relax}


% abstract and keywords are in \small, except 
% for 9pt docs in which they are in \footnotesize
% Because 9pt docs use an 8pt footnotesize, \small
% becomes a rather awkward 8.5pt
\def\@IEEEabskeysecsize{\small}
\ifx\CLASSOPTIONpt\@IEEEptsizenine
 \def\@IEEEabskeysecsize{\footnotesize}
\fi

% compsoc journals use \footnotesize, compsoc conferences use normalsize
\@IEEEcompsoconly{\def\@IEEEabskeysecsize{\footnotesize}}
\@IEEEcompsocconfonly{\def\@IEEEabskeysecsize{\small}}


% V1.6 have abstract and keywords strip leading spaces, pars and newlines
% so that spacing is more tightly controlled.
\def\abstract{\normalfont
    \if@twocolumn
      \@IEEEabskeysecsize\bfseries\textit{\abstractname}---\relax
    \else
      \bgroup\par\addvspace{0.5\baselineskip}\centering\vspace{-1.78ex}\@IEEEabskeysecsize\textbf{\abstractname}\par\addvspace{0.5\baselineskip}\egroup\quotation\@IEEEabskeysecsize
    \fi\@IEEEgobbleleadPARNLSP}
% V1.6 The IEEE wants only 1 pica from end of abstract to introduction heading when in 
% conference mode (the heading already has this much above it)
\def\endabstract{\relax\ifCLASSOPTIONconference\vspace{0ex}\else\vspace{1.34ex}\fi\par\if@twocolumn\else\endquotation\fi
    \normalfont\normalsize}

\def\IEEEkeywords{\normalfont
    \if@twocolumn
      \@IEEEabskeysecsize\bfseries\textit{\IEEEkeywordsname}---\relax
    \else
      \bgroup\par\addvspace{0.5\baselineskip}\centering\@IEEEabskeysecsize\textbf{\IEEEkeywordsname}\par\addvspace{0.5\baselineskip}\egroup\quotation\@IEEEabskeysecsize
    \fi\@IEEEgobbleleadPARNLSP}
\def\endIEEEkeywords{\relax\ifCLASSOPTIONtechnote\vspace{1.34ex}\else\vspace{0.67ex}\fi
    \par\if@twocolumn\else\endquotation\fi%
    \normalfont\normalsize}

% V1.7 compsoc keywords index terms
\ifCLASSOPTIONcompsoc
  \ifCLASSOPTIONconference% compsoc conference
\def\abstract{\normalfont\@IEEEtweakunitybaselinestretch{1.15}\bfseries
    \if@twocolumn
      \@IEEEabskeysecsize\noindent\textit{\abstractname}---\relax
    \else
      \bgroup\par\addvspace{0.5\baselineskip}\centering\vspace{-1.78ex}\@IEEEabskeysecsize\textbf{\abstractname}\par\addvspace{0.5\baselineskip}\egroup\quotation\@IEEEabskeysecsize%
    \fi\@IEEEgobbleleadPARNLSP}
\def\IEEEkeywords{\normalfont\@IEEEtweakunitybaselinestretch{1.15}\bfseries
    \if@twocolumn
      \@IEEEabskeysecsize\vskip 0.5\baselineskip plus 0.25\baselineskip minus 0.25\baselineskip\noindent
      \textit{\IEEEkeywordsname}---\relax
    \else
      \bgroup\par\addvspace{0.5\baselineskip}\centering\@IEEEabskeysecsize\textbf{\IEEEkeywordsname}\par\addvspace{0.5\baselineskip}\egroup\quotation\@IEEEabskeysecsize%
    \fi\@IEEEgobbleleadPARNLSP}
  \else% compsoc not conference
\def\abstract{\normalfont\@IEEEtweakunitybaselinestretch{1.15}\sffamily
    \if@twocolumn
      \@IEEEabskeysecsize\noindent\textbf{\abstractname}---\relax
    \else
      \bgroup\par\addvspace{0.5\baselineskip}\centering\vspace{-1.78ex}\@IEEEabskeysecsize\textbf{\abstractname}\par\addvspace{0.5\baselineskip}\egroup\quotation\@IEEEabskeysecsize%
    \fi\@IEEEgobbleleadPARNLSP}
\def\IEEEkeywords{\normalfont\@IEEEtweakunitybaselinestretch{1.15}\sffamily
    \if@twocolumn
      \@IEEEabskeysecsize\vskip 0.5\baselineskip plus 0.25\baselineskip minus 0.25\baselineskip\noindent
      \textbf{\IEEEkeywordsname}---\relax
    \else
      \bgroup\par\addvspace{0.5\baselineskip}\centering\@IEEEabskeysecsize\textbf{\IEEEkeywordsname}\par\addvspace{0.5\baselineskip}\egroup\quotation\@IEEEabskeysecsize%
    \fi\@IEEEgobbleleadPARNLSP}
  \fi
\fi

% V1.8 transmag keywords index terms
% no abstract name, use indentation
\ifCLASSOPTIONtransmag
\def\abstract{\normalfont\parindent 1em\relax
    \if@twocolumn
      \@IEEEabskeysecsize\bfseries\indent
    \else
      \bgroup\par\addvspace{0.5\baselineskip}\centering\vspace{-1.78ex}\@IEEEabskeysecsize
      \textbf{\abstractname}\par\addvspace{0.5\baselineskip}\egroup\quotation\@IEEEabskeysecsize
    \fi\@IEEEgobbleleadPARNLSP}

\def\IEEEkeywords{\normalfont\parindent 1em\relax
    \if@twocolumn
      \@IEEEabskeysecsize\vspace{1\baselineskip}\bfseries\indent\textit{\IEEEkeywordsname}---\relax
    \else
      \bgroup\par\vspace{1\baselineskip}\centering\@IEEEabskeysecsize
      \textbf{\IEEEkeywordsname}\par\addvspace{0.5\baselineskip}\egroup\quotation\@IEEEabskeysecsize
    \fi\@IEEEgobbleleadPARNLSP}
\fi



% gobbles all leading \, \\ and \par, upon finding first token that
% is not a \ , \\ or a \par, it ceases and returns that token
% 
% used to strip leading \, \\ and \par from the input
% so that such things in the beginning of an environment will not
% affect the formatting of the text
\long\def\@IEEEgobbleleadPARNLSP#1{\let\@IEEEswallowthistoken=0%
\let\@IEEEgobbleleadPARNLSPtoken#1%
\let\@IEEEgobbleleadPARtoken=\par%
\let\@IEEEgobbleleadNLtoken=\\%
\let\@IEEEgobbleleadSPtoken=\ %
\def\@IEEEgobbleleadSPMACRO{\ }%
\ifx\@IEEEgobbleleadPARNLSPtoken\@IEEEgobbleleadPARtoken%
\let\@IEEEswallowthistoken=1%
\fi%
\ifx\@IEEEgobbleleadPARNLSPtoken\@IEEEgobbleleadNLtoken%
\let\@IEEEswallowthistoken=1%
\fi%
\ifx\@IEEEgobbleleadPARNLSPtoken\@IEEEgobbleleadSPtoken%
\let\@IEEEswallowthistoken=1%
\fi%
% a control space will come in as a macro
% when it is the last one on a line
\ifx\@IEEEgobbleleadPARNLSPtoken\@IEEEgobbleleadSPMACRO%
\let\@IEEEswallowthistoken=1%
\fi%
% if we have to swallow this token, do so and taste the next one
% else spit it out and stop gobbling
\ifx\@IEEEswallowthistoken 1\let\@IEEEnextgobbleleadPARNLSP=\@IEEEgobbleleadPARNLSP\else%
\let\@IEEEnextgobbleleadPARNLSP=#1\fi%
\@IEEEnextgobbleleadPARNLSP}%




% TITLING OF SECTIONS
\def\@IEEEsectpunct{:\ \,}  % Punctuation after run-in section heading  (headings which are
                            % part of the paragraphs), need little bit more than a single space
                            % spacing from section number to title
% compsoc conferences use regular period/space punctuation
\ifCLASSOPTIONcompsoc
\ifCLASSOPTIONconference
\def\@IEEEsectpunct{.\ }
\fi\fi


\def\@seccntformat#1{\csname the#1dis\endcsname\hskip 0.5em\relax}

\ifCLASSOPTIONcompsoc
% compsoc journals need extra spacing
\ifCLASSOPTIONconference\else
\def\@seccntformat#1{\csname the#1dis\endcsname\hskip 1em\relax}
\fi\fi

%v1.7 put {} after #6 to allow for some types of user font control
%and use \@@par rather than \par
\def\@sect#1#2#3#4#5#6[#7]#8{%
  \ifnum #2>\c@secnumdepth
     \let\@svsec\@empty
  \else
     \refstepcounter{#1}%
     % load section label and spacer into \@svsec
     \protected@edef\@svsec{\@seccntformat{#1}\relax}%
  \fi%
  \@tempskipa #5\relax
  \ifdim \@tempskipa>\z@% tempskipa determines whether is treated as a high
     \begingroup #6{\relax% or low level heading
      \noindent % subsections are NOT indented
       % print top level headings. \@svsec is label, #8 is heading title
       % The IEEE does not block indent the section title text, it flows like normal
       {\hskip #3\relax\@svsec}{\interlinepenalty \@M #8\@@par}}%
     \endgroup
     \addcontentsline{toc}{#1}{\ifnum #2>\c@secnumdepth\relax\else
               \protect\numberline{\csname the#1\endcsname}\fi#7}%
  \else % printout low level headings
     % svsechd seems to swallow the trailing space, protect it with \mbox{}
     % got rid of sectionmark stuff
     \def\@svsechd{#6{\hskip #3\relax\@svsec #8\@IEEEsectpunct\mbox{}}%
     \addcontentsline{toc}{#1}{\ifnum #2>\c@secnumdepth\relax\else
               \protect\numberline{\csname the#1\endcsname}\fi#7}}%
  \fi%skip down
  \@xsect{#5}}


% section* handler
%v1.7 put {} after #4 to allow for some types of user font control
%and use \@@par rather than \par
\def\@ssect#1#2#3#4#5{\@tempskipa #3\relax
  \ifdim \@tempskipa>\z@
     %\begingroup #4\@hangfrom{\hskip #1}{\interlinepenalty \@M #5\par}\endgroup
     % The IEEE does not block indent the section title text, it flows like normal
     \begingroup \noindent #4{\relax{\hskip #1}{\interlinepenalty \@M #5\@@par}}\endgroup
  % svsechd swallows the trailing space, protect it with \mbox{}
  \else \def\@svsechd{#4{\hskip #1\relax #5\@IEEEsectpunct\mbox{}}}\fi
  \@xsect{#3}}


%% SECTION heading spacing and font
%%
% arguments are: #1 - sectiontype name
% (for \@sect)   #2 - section level
%                #3 - section heading indent
%                #4 - top separation (absolute value used, neg indicates not to indent main text)
%                     If negative, make stretch parts negative too!
%                #5 - (absolute value used) positive: bottom separation after heading,
%                      negative: amount to indent main text after heading
%                Both #4 and #5 negative means to indent main text and use negative top separation
%                #6 - font control
% You've got to have \normalfont\normalsize in the font specs below to prevent
% trouble when you do something like:
% \section{Note}{\ttfamily TT-TEXT} is known to ... 
% The IEEE sometimes REALLY stretches the area before a section
% heading by up to about 0.5in. However, it may not be a good
% idea to let LaTeX have quite this much rubber.
\ifCLASSOPTIONconference%
% The IEEE wants section heading spacing to decrease for conference mode
\def\section{\@startsection{section}{1}{\z@}{1.5ex plus 1.5ex minus 0.5ex}%
{0.7ex plus 1ex minus 0ex}{\normalfont\normalsize\centering\scshape}}%
\def\subsection{\@startsection{subsection}{2}{\z@}{1.5ex plus 1.5ex minus 0.5ex}%
{0.7ex plus .5ex minus 0ex}{\normalfont\normalsize\itshape}}%
\else % for journals
\def\section{\@startsection{section}{1}{\z@}{3.0ex plus 1.5ex minus 1.5ex}% V1.6 3.0ex from 3.5ex
{0.7ex plus 1ex minus 0ex}{\normalfont\normalsize\centering\scshape}}%
\def\subsection{\@startsection{subsection}{2}{\z@}{3.5ex plus 1.5ex minus 1.5ex}%
{0.7ex plus .5ex minus 0ex}{\normalfont\normalsize\itshape}}%
\fi

% for both journals and conferences
% decided to put in a little rubber above the section, might help somebody
\def\subsubsection{\@startsection{subsubsection}{3}{\parindent}{0ex plus 0.1ex minus 0.1ex}%
{0ex}{\normalfont\normalsize\itshape}}%
\def\paragraph{\@startsection{paragraph}{4}{2\parindent}{0ex plus 0.1ex minus 0.1ex}%
{0ex}{\normalfont\normalsize\itshape}}%


% compsoc
\ifCLASSOPTIONcompsoc
\ifCLASSOPTIONconference
% compsoc conference
\def\section{\@startsection{section}{1}{\z@}{1\baselineskip plus 0.25\baselineskip minus 0.25\baselineskip}%
{1\baselineskip plus 0.25\baselineskip minus 0.25\baselineskip}{\normalfont\large\bfseries}}%
\def\subsection{\@startsection{subsection}{2}{\z@}{1\baselineskip plus 0.25\baselineskip minus 0.25\baselineskip}%
{1\baselineskip plus 0.25\baselineskip minus 0.25\baselineskip}{\normalfont\sublargesize\bfseries}}%
\def\subsubsection{\@startsection{subsubsection}{3}{\z@}{1\baselineskip plus 0.25\baselineskip minus 0.25\baselineskip}%
{0ex}{\normalfont\normalsize\bfseries}}%
\def\paragraph{\@startsection{paragraph}{4}{2\parindent}{0ex plus 0.1ex minus 0.1ex}%
{0ex}{\normalfont\normalsize}}%
\else% compsoc journals
% use negative top separation as compsoc journals do not indent paragraphs after section titles
\def\section{\@startsection{section}{1}{\z@}{-3.5ex plus -2ex minus -1.5ex}%
{0.7ex plus 1ex minus 0ex}{\normalfont\sublargesize\sffamily\bfseries\scshape}}%
% Note that subsection and smaller may not be correct for the Computer Society,
% I have to look up an example.
\def\subsection{\@startsection{subsection}{2}{\z@}{-3.5ex plus -1.5ex minus -1.5ex}%
{0.7ex plus .5ex minus 0ex}{\normalfont\normalsize\sffamily\bfseries}}%
\def\subsubsection{\@startsection{subsubsection}{3}{\z@}{-2.5ex plus -1ex minus -1ex}%
{0.5ex plus 0.5ex minus 0ex}{\normalfont\normalsize\sffamily\itshape}}%
\def\paragraph{\@startsection{paragraph}{4}{2\parindent}{-0ex plus -0.1ex minus -0.1ex}%
{0ex}{\normalfont\normalsize}}%
\fi\fi

% transmag
\ifCLASSOPTIONtransmag
\def\subsection{\@startsection{subsection}{2}{0.75\parindent}{3.5ex plus 1.5ex minus 1.5ex}%
{0.7ex plus .5ex minus 0ex}{\normalfont\normalsize\itshape}}%
\def\subsubsection{\@startsection{subsubsection}{3}{1.25\parindent}{0.1ex plus 0.1ex minus 0.1ex}%
{0.1ex}{\normalfont\normalsize\itshape}}%
\fi


% V1.8a provide for a raised line Introduction section for use with Computer
% Society papers. We have to remove any spacing glue after the section
% heading and then remove the blank line for the new paragraph after it.
% LaTeX's section handler alters \everypar and we need to propogate those
% changes outside of the \parbox lest there be spacing problems at the top
% of the next section.
\def\IEEEraisesectionheading#1{\noindent\raisebox{1.5\baselineskip}[0pt][0pt]{\parbox[b]{\columnwidth}{#1\unskip\global\everypar=\everypar}}\vspace{-1\baselineskip}\vspace{-\parskip}\par}



%% ENVIRONMENTS
% "box" symbols at end of proofs
\def\IEEEQEDclosed{\mbox{\rule[0pt]{1.3ex}{1.3ex}}} % for a filled box
% V1.6 some journals use an open box instead that will just fit around a closed one
\def\IEEEQEDopen{{\setlength{\fboxsep}{0pt}\setlength{\fboxrule}{0.2pt}\fbox{\rule[0pt]{0pt}{1.3ex}\rule[0pt]{1.3ex}{0pt}}}}
\ifCLASSOPTIONcompsoc
\def\IEEEQED{\IEEEQEDopen}   % default to open for compsoc
\else
\def\IEEEQED{\IEEEQEDclosed} % otherwise default to closed
\fi

%V1.8 flag to indicate if QED symbol is to be shown
\newif\if@IEEEQEDshow  \@IEEEQEDshowtrue
\def\IEEEproofindentspace{2\parindent}% V1.8 allow user to change indentation amount if desired
% v1.7 name change to avoid namespace collision with amsthm. Also add support
% for an optional argument.
\def\IEEEproof{\@ifnextchar[{\@IEEEproof}{\@IEEEproof[\IEEEproofname]}}
\def\@IEEEproof[#1]{\@IEEEQEDshowtrue\par\noindent\hspace{\IEEEproofindentspace}{\itshape #1: }}
\def\endIEEEproof{\if@IEEEQEDshow\hspace*{\fill}\nobreakspace\IEEEQED\fi\par}
% qedhere for equation environments, similar to AMS \qedhere
\def\IEEEQEDhereeqn{\global\@IEEEQEDshowfalse\eqno\let\eqno\relax\let\leqno\relax
                    \let\veqno\relax\hbox{\IEEEQED}}
% IEEE style qedhere for IEEEeqnarray and other environments
\def\IEEEQEDhere{\global\@IEEEQEDshowfalse\IEEEQED}
% command to disable QED at end of IEEEproof
\def\IEEEQEDoff{\global\@IEEEQEDshowfalse}


%\itemindent is set to \z@ by list, so define new temporary variable
\newdimen\@IEEEtmpitemindent

\ifCLASSOPTIONcompsoc
% V1.8a compsoc uses bold theorem titles, a period instead of a colon, vertical spacing, and hanging indentation
% V1.8 allow long theorem names to break across lines.
% Thanks to Miquel Payaro for reporting this.
\def\@begintheorem#1#2{\@IEEEtmpitemindent\itemindent\relax
    \topsep 0.2\@IEEEnormalsizeunitybaselineskip plus 0.26\@IEEEnormalsizeunitybaselineskip minus 0.05\@IEEEnormalsizeunitybaselineskip
    \rmfamily\trivlist\hangindent\parindent%
    \item[]\textit{\bfseries\noindent #1\ #2.} \itemindent\@IEEEtmpitemindent\relax}
\def\@opargbegintheorem#1#2#3{\@IEEEtmpitemindent\itemindent\relax
\topsep 0.2\@IEEEnormalsizeunitybaselineskip plus 0.26\@IEEEnormalsizeunitybaselineskip minus 0.05\@IEEEnormalsizeunitybaselineskip
\rmfamily\trivlist\hangindent\parindent%
% V1.6 The IEEE is back to using () around theorem names which are also in italics
% Thanks to Christian Peel for reporting this.
    \item[]\textit{\bfseries\noindent #1\ #2\ (#3).} \itemindent\@IEEEtmpitemindent\relax}
% V1.7 remove bogus \unskip that caused equations in theorems to collide with
% lines below.
\def\@endtheorem{\endtrivlist\vskip 0.25\@IEEEnormalsizeunitybaselineskip plus 0.26\@IEEEnormalsizeunitybaselineskip minus 0.05\@IEEEnormalsizeunitybaselineskip}
\else
%
% noncompsoc
% 
% V1.8 allow long theorem names to break across lines.
% Thanks to Miquel Payaro for reporting this.
\def\@begintheorem#1#2{\@IEEEtmpitemindent\itemindent\relax\topsep 0pt\rmfamily\trivlist%
    \item[]\textit{\indent #1\ #2:} \itemindent\@IEEEtmpitemindent\relax}
\def\@opargbegintheorem#1#2#3{\@IEEEtmpitemindent\itemindent\relax\topsep 0pt\rmfamily \trivlist%
% V1.6 The IEEE is back to using () around theorem names which are also in italics
% Thanks to Christian Peel for reporting this.
    \item[]\textit{\indent #1\ #2\ (#3):} \itemindent\@IEEEtmpitemindent\relax}
% V1.7 remove bogus \unskip that caused equations in theorems to collide with
% lines below.
\def\@endtheorem{\endtrivlist}
\fi



% V1.6
% display command for the section the theorem is in - so that \thesection
% is not used as this will be in Roman numerals when we want arabic.
% LaTeX2e uses \def\@thmcounter#1{\noexpand\arabic{#1}} for the theorem number
% (second part) display and \def\@thmcountersep{.} as a separator.
% V1.7 intercept calls to the section counter and reroute to \@IEEEthmcounterinsection
% to allow \appendix(ices} to override as needed.
%
% special handler for sections, allows appendix(ices) to override
\gdef\@IEEEthmcounterinsection#1{\arabic{#1}}
% string macro
\edef\@IEEEstringsection{section}

% redefine the #1#2[#3] form of newtheorem to use a hook to \@IEEEthmcounterinsection
% if section in_counter is used
\def\@xnthm#1#2[#3]{%
  \expandafter\@ifdefinable\csname #1\endcsname
    {\@definecounter{#1}\@newctr{#1}[#3]%
     \edef\@IEEEstringtmp{#3}
     \ifx\@IEEEstringtmp\@IEEEstringsection
     \expandafter\xdef\csname the#1\endcsname{%
     \noexpand\@IEEEthmcounterinsection{#3}\@thmcountersep
          \@thmcounter{#1}}%
     \else
     \expandafter\xdef\csname the#1\endcsname{%
       \expandafter\noexpand\csname the#3\endcsname \@thmcountersep
          \@thmcounter{#1}}%
     \fi
     \global\@namedef{#1}{\@thm{#1}{#2}}%
     \global\@namedef{end#1}{\@endtheorem}}}



%% SET UP THE DEFAULT PAGESTYLE
\pagestyle{headings}
\pagenumbering{arabic}

% normally the page counter starts at 1
\setcounter{page}{1}
% however, for peerreview the cover sheet is page 0 or page -1
% (for duplex printing)
\ifCLASSOPTIONpeerreview
   \if@twoside
      \setcounter{page}{-1}
   \else
      \setcounter{page}{0}
   \fi
\fi

% standard book class behavior - let bottom line float up and down as
% needed when single sided
\ifCLASSOPTIONtwoside\else\raggedbottom\fi
% if two column - turn on twocolumn, allow word spacings to stretch more and
% enforce a rigid position for the last lines
\ifCLASSOPTIONtwocolumn
% the peer review option delays invoking twocolumn
   \ifCLASSOPTIONpeerreview\else
      \twocolumn
   \fi
\sloppy 
\flushbottom
\fi




% \APPENDIX and \APPENDICES definitions

% This is the \@ifmtarg command from the LaTeX ifmtarg package
% by Peter Wilson (CUA) and Donald Arseneau
% \@ifmtarg is used to determine if an argument to a command
% is present or not.
% For instance:
% \@ifmtarg{#1}{\typeout{empty}}{\typeout{has something}}
% \@ifmtarg is used with our redefined \section command if
% \appendices is invoked.
% The command \section will behave slightly differently depending
% on whether the user specifies a title: 
% \section{My appendix title}
% or not:
% \section{}
% This way, we can eliminate the blank lines where the title
% would be, and the unneeded : after Appendix in the table of
% contents 
\begingroup
\catcode`\Q=3
\long\gdef\@ifmtarg#1{\@xifmtarg#1QQ\@secondoftwo\@firstoftwo\@nil}
\long\gdef\@xifmtarg#1#2Q#3#4#5\@nil{#4}
\endgroup
% end of \@ifmtarg defs


% V1.7
% command that allows the one time saving of the original definition
% of section to \@IEEEappendixsavesection for \appendix or \appendices 
% we don't save \section here as it may be redefined later by other
% packages (hyperref.sty, etc.)
\def\@IEEEsaveoriginalsectiononce{\let\@IEEEappendixsavesection\section
\let\@IEEEsaveoriginalsectiononce\relax}

% neat trick to grab and process the argument from \section{argument}
% we process differently if the user invoked \section{} with no
% argument (title)
% note we reroute the call to the old \section*
\def\@IEEEprocessthesectionargument#1{%
\@ifmtarg{#1}{%
\@IEEEappendixsavesection*{\appendixname\nobreakspace\thesectiondis}%
\addcontentsline{toc}{section}{\appendixname\nobreakspace\thesection}}{%
\@IEEEappendixsavesection*{\appendixname\nobreakspace\thesectiondis\\* #1}%
\addcontentsline{toc}{section}{\appendixname\nobreakspace\thesection: #1}}}

% we use this if the user calls \section{} after
% \appendix-- which has no meaning. So, we ignore the
% command and its argument. Then, warn the user.
\def\@IEEEdestroythesectionargument#1{\typeout{** WARNING: Ignoring useless
\protect\section\space in Appendix (line \the\inputlineno).}}


% remember \thesection forms will be displayed in \ref calls
% and in the Table of Contents.
% The \sectiondis form is used in the actual heading itself

% appendix command for one single appendix
% normally has no heading. However, if you want a 
% heading, you can do so via the optional argument:
% \appendix[Optional Heading]
\def\appendix{\relax}
\renewcommand{\appendix}[1][]{\@IEEEsaveoriginalsectiononce\par
    % v1.6 keep hyperref's identifiers unique
    \gdef\theHsection{Appendix.A}%
    % v1.6 adjust hyperref's string name for the section
    \xdef\Hy@chapapp{appendix}%
    \setcounter{section}{0}%
    \setcounter{subsection}{0}%
    \setcounter{subsubsection}{0}%
    \setcounter{paragraph}{0}%
    \gdef\thesection{A}%
    \gdef\thesectiondis{}% 
    \gdef\thesubsection{\Alph{subsection}}%
    \gdef\@IEEEthmcounterinsection##1{A}
    \refstepcounter{section}% update the \ref counter
    \@ifmtarg{#1}{\@IEEEappendixsavesection*{\appendixname}%
                  \addcontentsline{toc}{section}{\appendixname}}{%
             \@IEEEappendixsavesection*{\appendixname\nobreakspace\\* #1}%
             \addcontentsline{toc}{section}{\appendixname: #1}}%
    % redefine \section command for appendix
    % leave \section* as is
    \def\section{\@ifstar{\@IEEEappendixsavesection*}{%
                    \@IEEEdestroythesectionargument}}% throw out the argument
                                                     % of the normal form
}



% appendices command for multiple appendices
% user then calls \section with an argument (possibly empty) to
% declare the individual appendices
\def\appendices{\@IEEEsaveoriginalsectiononce\par
    % v1.6 keep hyperref's identifiers unique
    \gdef\theHsection{Appendix.\Alph{section}}%
    % v1.6 adjust hyperref's string name for the section
    \xdef\Hy@chapapp{appendix}%
    \setcounter{section}{-1}% we want \refstepcounter to use section 0
    \setcounter{subsection}{0}%
    \setcounter{subsubsection}{0}%
    \setcounter{paragraph}{0}%
    \ifCLASSOPTIONromanappendices%
    \gdef\thesection{\Roman{section}}%
    \gdef\thesectiondis{\Roman{section}}%
    \@IEEEcompsocconfonly{\gdef\thesectiondis{\Roman{section}.}}%
    \gdef\@IEEEthmcounterinsection##1{A\arabic{##1}}
    \else%
    \gdef\thesection{\Alph{section}}%
    \gdef\thesectiondis{\Alph{section}}%
    \@IEEEcompsocconfonly{\gdef\thesectiondis{\Alph{section}.}}%
    \gdef\@IEEEthmcounterinsection##1{\Alph{##1}}
    \fi%
    \refstepcounter{section}% update the \ref counter
    \setcounter{section}{0}% NEXT \section will be the FIRST appendix
    % redefine \section command for appendices
    % leave \section* as is
    \def\section{\@ifstar{\@IEEEappendixsavesection*}{% process the *-form
                    \refstepcounter{section}% or is a new section so,
                    \@IEEEprocessthesectionargument}}% process the argument 
                                                 % of the normal form
}



% V1.7 compoc uses nonbold drop cap and small caps word style
\ifCLASSOPTIONcompsoc
  \def\IEEEPARstartFONTSTYLE{\mdseries}
  \def\IEEEPARstartWORDFONTSTYLE{\scshape}
  \def\IEEEPARstartWORDCAPSTYLE{\relax}
\fi
%
%
% \IEEEPARstart
% Definition for the big two line drop cap letter at the beginning of the
% first paragraph of journal papers. The first argument is the first letter
% of the first word, the second argument is the remaining letters of the
% first word which will be rendered in upper case.
% In V1.6 this has been completely rewritten to:
% 
% 1. no longer have problems when the user begins an environment
%    within the paragraph that uses \IEEEPARstart.
% 2. auto-detect and use the current font family
% 3. revise handling of the space at the end of the first word so that
%    interword glue will now work as normal.
% 4. produce correctly aligned edges for the (two) indented lines.
% 
% We generalize things via control macros - playing with these is fun too.
% 
% V1.7 added more control macros to make it easy for IEEEtrantools.sty users
% to change the font style.
% 
% the number of lines that are indented to clear it
% may need to increase if using decenders
\providecommand{\IEEEPARstartDROPLINES}{2}
% minimum number of lines left on a page to allow a \@IEEEPARstart
% Does not take into consideration rubber shrink, so it tends to
% be overly cautious
\providecommand{\IEEEPARstartMINPAGELINES}{2}
% V1.7 the height of the drop cap is adjusted to match the height of this text
% in the current font (when \IEEEPARstart is called).
\providecommand{\IEEEPARstartHEIGHTTEXT}{T}
% the depth the letter is lowered below the baseline
% the height (and size) of the letter is determined by the sum
% of this value and the height of the \IEEEPARstartHEIGHTTEXT in the current
% font. It is a good idea to set this value in terms of the baselineskip
% so that it can respond to changes therein.
\providecommand{\IEEEPARstartDROPDEPTH}{1.1\baselineskip}
% V1.7 the font the drop cap will be rendered in,
% can take zero or one argument.
\providecommand{\IEEEPARstartFONTSTYLE}{\bfseries}
% V1.7 any additional, non-font related commands needed to modify
% the drop cap letter, can take zero or one argument.
\providecommand{\IEEEPARstartCAPSTYLE}{\MakeUppercase}
% V1.7 the font that will be used to render the rest of the word,
% can take zero or one argument.
\providecommand{\IEEEPARstartWORDFONTSTYLE}{\relax}
% V1.7 any additional, non-font related commands needed to modify
% the rest of the word, can take zero or one argument.
\providecommand{\IEEEPARstartWORDCAPSTYLE}{\MakeUppercase}
% This is the horizontal separation distance from the drop letter to the main text.
% Lengths that depend on the font (e.g., ex, em, etc.) will be referenced
% to the font that is active when \IEEEPARstart is called. 
\providecommand{\IEEEPARstartSEP}{0.15em}
% V1.7 horizontal offset applied to the left of the drop cap.
\providecommand{\IEEEPARstartHOFFSET}{0em}
% V1.7 Italic correction command applied at the end of the drop cap.
\providecommand{\IEEEPARstartITLCORRECT}{\/}

% width of the letter output, set globally. Can be used in \IEEEPARstartSEP
% or \IEEEPARstartHOFFSET, but not the height lengths.
\newdimen\IEEEPARstartletwidth
\IEEEPARstartletwidth 0pt\relax

% definition of \IEEEPARstart
% THIS IS A CONTROLLED SPACING AREA, DO NOT ALLOW SPACES WITHIN THESE LINES
% 
% The token \@IEEEPARstartfont will be globally defined after the first use
% of \IEEEPARstart and will be a font command which creates the big letter
% The first argument is the first letter of the first word and the second
% argument is the rest of the first word(s).
\def\IEEEPARstart#1#2{\par{%
% if this page does not have enough space, break it and lets start
% on a new one
\@IEEEtranneedspace{\IEEEPARstartMINPAGELINES\baselineskip}{\relax}%
% V1.7 move this up here in case user uses \textbf for \IEEEPARstartFONTSTYLE
% which uses command \leavevmode which causes an unwanted \indent to be issued
\noindent
% calculate the desired height of the big letter
% it extends from the top of \IEEEPARstartHEIGHTTEXT in the current font
% down to \IEEEPARstartDROPDEPTH below the current baseline
\settoheight{\@IEEEtrantmpdimenA}{\IEEEPARstartHEIGHTTEXT}%
\addtolength{\@IEEEtrantmpdimenA}{\IEEEPARstartDROPDEPTH}%
% extract the name of the current font in bold
% and place it in \@IEEEPARstartFONTNAME
\def\@IEEEPARstartGETFIRSTWORD##1 ##2\relax{##1}%
{\IEEEPARstartFONTSTYLE{\selectfont\edef\@IEEEPARstartFONTNAMESPACE{\fontname\font\space}%
\xdef\@IEEEPARstartFONTNAME{\expandafter\@IEEEPARstartGETFIRSTWORD\@IEEEPARstartFONTNAMESPACE\relax}}}%
% define a font based on this name with a point size equal to the desired
% height of the drop letter
\font\@IEEEPARstartsubfont\@IEEEPARstartFONTNAME\space at \@IEEEtrantmpdimenA\relax%
% save this value as a counter (integer) value (sp points)
\@IEEEtrantmpcountA=\@IEEEtrantmpdimenA%
% now get the height of the actual letter produced by this font size
\settoheight{\@IEEEtrantmpdimenB}{\@IEEEPARstartsubfont\IEEEPARstartCAPSTYLE{#1}}%
% If something bogus happens like the first argument is empty or the
% current font is strange, do not allow a zero height.
\ifdim\@IEEEtrantmpdimenB=0pt\relax%
\typeout{** WARNING: IEEEPARstart drop letter has zero height! (line \the\inputlineno)}%
\typeout{ Forcing the drop letter font size to 10pt.}%
\@IEEEtrantmpdimenB=10pt%
\fi%
% and store it as a counter
\@IEEEtrantmpcountB=\@IEEEtrantmpdimenB%
% Since a font size doesn't exactly correspond to the height of the capital
% letters in that font, the actual height of the letter, \@IEEEtrantmpcountB,
% will be less than that desired, \@IEEEtrantmpcountA
% we need to raise the font size, \@IEEEtrantmpdimenA 
% by \@IEEEtrantmpcountA / \@IEEEtrantmpcountB
% But, TeX doesn't have floating point division, so we have to use integer
% division. Hence the use of the counters.
% We need to reduce the denominator so that the loss of the remainder will
% have minimal affect on the accuracy of the result
\divide\@IEEEtrantmpcountB by 200%
\divide\@IEEEtrantmpcountA by \@IEEEtrantmpcountB%
% Then reequalize things when we use TeX's ability to multiply by
% floating point values
\@IEEEtrantmpdimenB=0.005\@IEEEtrantmpdimenA%
\multiply\@IEEEtrantmpdimenB by \@IEEEtrantmpcountA%
% \@IEEEPARstartfont is globaly set to the calculated font of the big letter
% We need to carry this out of the local calculation area to to create the
% big letter.
\global\font\@IEEEPARstartfont\@IEEEPARstartFONTNAME\space at \@IEEEtrantmpdimenB%
% Now set \@IEEEtrantmpdimenA to the width of the big letter
% We need to carry this out of the local calculation area to set the
% hanging indent
\settowidth{\global\@IEEEtrantmpdimenA}{\@IEEEPARstartfont
\IEEEPARstartCAPSTYLE{#1\IEEEPARstartITLCORRECT}}}%
% end of the isolated calculation environment
\global\IEEEPARstartletwidth\@IEEEtrantmpdimenA\relax%
% add in the extra clearance we want
\advance\@IEEEtrantmpdimenA by \IEEEPARstartSEP\relax%
% add in the optional offset
\advance\@IEEEtrantmpdimenA by \IEEEPARstartHOFFSET\relax%
% V1.7 don't allow negative offsets to produce negative hanging indents
\@IEEEtrantmpdimenB\@IEEEtrantmpdimenA
\ifnum\@IEEEtrantmpdimenB < 0 \@IEEEtrantmpdimenB 0pt\fi
% \@IEEEtrantmpdimenA has the width of the big letter plus the
% separation space and \@IEEEPARstartfont is the font we need to use
% Now, we make the letter and issue the hanging indent command
% The letter is placed in a box of zero width and height so that other
% text won't be displaced by it.
\hangindent\@IEEEtrantmpdimenB\hangafter=-\IEEEPARstartDROPLINES%
\makebox[0pt][l]{\hspace{-\@IEEEtrantmpdimenA}%
\raisebox{-\IEEEPARstartDROPDEPTH}[0pt][0pt]{\hspace{\IEEEPARstartHOFFSET}%
\@IEEEPARstartfont\IEEEPARstartCAPSTYLE{#1\IEEEPARstartITLCORRECT}%
\hspace{\IEEEPARstartSEP}}}%
{\IEEEPARstartWORDFONTSTYLE{\IEEEPARstartWORDCAPSTYLE{\selectfont#2}}}}




% determines if the space remaining on a given page is equal to or greater
% than the specified space of argument one
% if not, execute argument two (only if the remaining space is greater than zero)
% and issue a \newpage
% 
% example: \@IEEEtranneedspace{2in}{\vfill}
% 
% Does not take into consideration rubber shrinkage, so it tends to
% be overly cautious
% Based on an example posted by Donald Arseneau
% Note this macro uses \@IEEEtrantmpdimenB internally for calculations,
% so DO NOT PASS \@IEEEtrantmpdimenB to this routine
% if you need a dimen register, import with \@IEEEtrantmpdimenA instead
\def\@IEEEtranneedspace#1#2{\penalty-100\begingroup%shield temp variable
\@IEEEtrantmpdimenB\pagegoal\advance\@IEEEtrantmpdimenB-\pagetotal% space left
\ifdim #1>\@IEEEtrantmpdimenB\relax% not enough space left
\ifdim\@IEEEtrantmpdimenB>\z@\relax #2\fi%
\newpage%
\fi\endgroup}



% IEEEbiography ENVIRONMENT
% Allows user to enter biography leaving place for picture (adapts to font size)
% As of V1.5, a new optional argument allows you to have a real graphic!
% V1.5 and later also fixes the "colliding biographies" which could happen when a 
% biography's text was shorter than the space for the photo.
% MDS 7/2001
% V1.6 prevent multiple biographies from making multiple TOC entries
\newif\if@IEEEbiographyTOCentrynotmade
\global\@IEEEbiographyTOCentrynotmadetrue

% biography counter so hyperref can jump directly to the biographies
% and not just the previous section
\newcounter{IEEEbiography}
\setcounter{IEEEbiography}{0}

% photo area size
\def\@IEEEBIOphotowidth{1.0in}    % width of the biography photo area
\def\@IEEEBIOphotodepth{1.25in}   % depth (height) of the biography photo area
% area cleared for photo
\def\@IEEEBIOhangwidth{1.14in}    % width cleared for the biography photo area
\def\@IEEEBIOhangdepth{1.25in}    % depth cleared for the biography photo area
                                  % actual depth will be a multiple of 
                                  % \baselineskip, rounded up
\def\@IEEEBIOskipN{4\baselineskip}% nominal value of the vskip above the biography

\newenvironment{IEEEbiography}[2][]{\normalfont\@IEEEcompsoconly{\sffamily}\footnotesize%
\unitlength 1in\parskip=0pt\par\parindent 1em\interlinepenalty500%
% we need enough space to support the hanging indent
% the nominal value of the spacer
% and one extra line for good measure
\@IEEEtrantmpdimenA=\@IEEEBIOhangdepth%
\advance\@IEEEtrantmpdimenA by \@IEEEBIOskipN%
\advance\@IEEEtrantmpdimenA by 1\baselineskip%
% if this page does not have enough space, break it and lets start
% with a new one
\@IEEEtranneedspace{\@IEEEtrantmpdimenA}{\relax}%
% nominal spacer can strech, not shrink use 1fil so user can out stretch with \vfill
\vskip \@IEEEBIOskipN plus 1fil minus 0\baselineskip%
% the default box for where the photo goes
\def\@IEEEtempbiographybox{{\setlength{\fboxsep}{0pt}\framebox{%
\begin{minipage}[b][\@IEEEBIOphotodepth][c]{\@IEEEBIOphotowidth}\centering PLACE\\ PHOTO\\ HERE \end{minipage}}}}%
%
% detect if the optional argument was supplied, this requires the
% \@ifmtarg command as defined in the appendix section above
% and if so, override the default box with what they want
\@ifmtarg{#1}{\relax}{\def\@IEEEtempbiographybox{\mbox{\begin{minipage}[b][\@IEEEBIOphotodepth][c]{\@IEEEBIOphotowidth}%
\centering%
#1%
\end{minipage}}}}% end if optional argument supplied
% Make an entry into the table of contents only if we have not done so before
\if@IEEEbiographyTOCentrynotmade%
% link labels to the biography counter so hyperref will jump
% to the biography, not the previous section
\setcounter{IEEEbiography}{-1}%
\refstepcounter{IEEEbiography}%
\addcontentsline{toc}{section}{Biographies}%
\global\@IEEEbiographyTOCentrynotmadefalse%
\fi%
% one more biography
\refstepcounter{IEEEbiography}%
% Make an entry for this name into the table of contents 
\addcontentsline{toc}{subsection}{#2}%
% V1.6 properly handle if a new paragraph should occur while the
% hanging indent is still active. Do this by redefining \par so
% that it will not start a new paragraph. (But it will appear to the
% user as if it did.) Also, strip any leading pars, newlines, or spaces.
\let\@IEEEBIOORGparCMD=\par% save the original \par command
\edef\par{\hfil\break\indent}% the new \par will not be a "real" \par
\settoheight{\@IEEEtrantmpdimenA}{\@IEEEtempbiographybox}% get height of biography box
\@IEEEtrantmpdimenB=\@IEEEBIOhangdepth%
\@IEEEtrantmpcountA=\@IEEEtrantmpdimenB% countA has the hang depth
\divide\@IEEEtrantmpcountA by \baselineskip%  calculates lines needed to produce the hang depth
\advance\@IEEEtrantmpcountA by 1% ensure we overestimate
% set the hanging indent
\hangindent\@IEEEBIOhangwidth%
\hangafter-\@IEEEtrantmpcountA%
% reference the top of the photo area to the top of a capital T
\settoheight{\@IEEEtrantmpdimenB}{\mbox{T}}%
% set the photo box, give it zero width and height so as not to disturb anything
\noindent\makebox[0pt][l]{\hspace{-\@IEEEBIOhangwidth}\raisebox{\@IEEEtrantmpdimenB}[0pt][0pt]{%
\raisebox{-\@IEEEBIOphotodepth}[0pt][0pt]{\@IEEEtempbiographybox}}}%
% now place the author name and begin the bio text
\noindent\textbf{#2\ }\@IEEEgobbleleadPARNLSP}{\relax\let\par=\@IEEEBIOORGparCMD\par%
% 7/2001 V1.5 detect when the biography text is shorter than the photo area
% and pad the unused area - preventing a collision from the next biography entry
% MDS
\ifnum \prevgraf <\@IEEEtrantmpcountA\relax% detect when the biography text is shorter than the photo
    \advance\@IEEEtrantmpcountA by -\prevgraf% calculate how many lines we need to pad
    \advance\@IEEEtrantmpcountA by -1\relax% we compensate for the fact that we indented an extra line
    \@IEEEtrantmpdimenA=\baselineskip% calculate the length of the padding
    \multiply\@IEEEtrantmpdimenA by \@IEEEtrantmpcountA%
    \noindent\rule{0pt}{\@IEEEtrantmpdimenA}% insert an invisible support strut
\fi%
\par\normalfont}



% V1.6
% added biography without a photo environment
\newenvironment{IEEEbiographynophoto}[1]{%
% Make an entry into the table of contents only if we have not done so before
\if@IEEEbiographyTOCentrynotmade%
% link labels to the biography counter so hyperref will jump
% to the biography, not the previous section
\setcounter{IEEEbiography}{-1}%
\refstepcounter{IEEEbiography}%
\addcontentsline{toc}{section}{Biographies}%
\global\@IEEEbiographyTOCentrynotmadefalse%
\fi%
% one more biography
\refstepcounter{IEEEbiography}%
% Make an entry for this name into the table of contents 
\addcontentsline{toc}{subsection}{#1}%
\normalfont\@IEEEcompsoconly{\sffamily}\footnotesize\interlinepenalty500%
\vskip 4\baselineskip plus 1fil minus 0\baselineskip%
\parskip=0pt\par%
\noindent\textbf{#1\ }\@IEEEgobbleleadPARNLSP}{\relax\par\normalfont}


% provide the user with some old font commands
% got this from article.cls
\DeclareOldFontCommand{\rm}{\normalfont\rmfamily}{\mathrm}
\DeclareOldFontCommand{\sf}{\normalfont\sffamily}{\mathsf}
\DeclareOldFontCommand{\tt}{\normalfont\ttfamily}{\mathtt}
\DeclareOldFontCommand{\bf}{\normalfont\bfseries}{\mathbf}
\DeclareOldFontCommand{\it}{\normalfont\itshape}{\mathit}
\DeclareOldFontCommand{\sl}{\normalfont\slshape}{\@nomath\sl}
\DeclareOldFontCommand{\sc}{\normalfont\scshape}{\@nomath\sc}
\DeclareRobustCommand*\cal{\@fontswitch\relax\mathcal}
\DeclareRobustCommand*\mit{\@fontswitch\relax\mathnormal}


% SPECIAL PAPER NOTICE COMMANDS
% 
% holds the special notice text
\def\@IEEEspecialpapernotice{\relax}
 
% for special papers, like invited papers, the user can do:
% \IEEEspecialpapernotice{(Invited Paper)} before \maketitle
\def\IEEEspecialpapernotice#1{\ifCLASSOPTIONconference%
\def\@IEEEspecialpapernotice{{\sublargesize\textit{#1}\vspace*{1em}}}%
\else%
\def\@IEEEspecialpapernotice{{\\*[1.5ex]\sublargesize\textit{#1}}\vspace*{-2ex}}%
\fi}




% PUBLISHER ID COMMANDS
% to insert a publisher's ID footer
% V1.6 \IEEEpubid has been changed so that the change in page size and style
% occurs in \maketitle. \IEEEpubid must now be issued prior to \maketitle
% use \IEEEpubidadjcol as before - in the second column of the title page
% These changes allow \maketitle to take the reduced page height into
% consideration when dynamically setting the space between the author 
% names and the maintext.
%
% the amount the main text is pulled up to make room for the
% publisher's ID footer
% The IEEE uses about 1.3\baselineskip for journals, 
% dynamic title spacing will clean up the fraction
\def\@IEEEpubidpullup{1.3\baselineskip}
\ifCLASSOPTIONtechnote
% for technotes it must be an integer of baselineskip as there can be no
% dynamic title spacing for two column mode technotes (the title is in the
% in first column) and we should maintain an integer number of lines in the
% second column
% There are some examples (such as older issues of "Transactions on
% Information Theory") in which the IEEE really pulls the text off the ID for
% technotes - about 0.55in (or 4\baselineskip). We'll use 2\baselineskip
% and call it even.
\def\@IEEEpubidpullup{2\baselineskip}
\fi

% V1.7 compsoc does not use a pullup
\ifCLASSOPTIONcompsoc
\def\@IEEEpubidpullup{0pt}
\fi

% holds the ID text
\def\@IEEEpubid{\relax}

% flag so \maketitle can tell if \IEEEpubid was called
\newif\if@IEEEusingpubid
\global\@IEEEusingpubidfalse
% issue this command in the page to have the ID at the bottom
% V1.6 use before \maketitle
\def\IEEEpubid#1{\def\@IEEEpubid{#1}\global\@IEEEusingpubidtrue}


% command which will pull up (shorten) the column it is executed in
% to make room for the publisher ID. Place in the second column of
% the title page when using \IEEEpubid
% Is smart enough not to do anything when in single column text or
% if the user hasn't called \IEEEpubid
% currently needed in for the second column of a page with the
% publisher ID. If not needed in future releases, please provide this
% command and define it as \relax for backward compatibility
% v1.6b do not allow command to operate if the peer review option has been 
% selected because \IEEEpubidadjcol will not be on the cover page.
% V1.7 do nothing if compsoc
\def\IEEEpubidadjcol{\ifCLASSOPTIONcompsoc\else\ifCLASSOPTIONpeerreview\else
\if@twocolumn\if@IEEEusingpubid\enlargethispage{-\@IEEEpubidpullup}\fi\fi\fi\fi}

% Special thanks to Peter Wilson, Daniel Luecking, and the other
% gurus at comp.text.tex, for helping me to understand how best to
% implement the IEEEpubid command in LaTeX.



%% Lockout some commands under various conditions

% general purpose bit bucket
\newsavebox{\@IEEEtranrubishbin}

% flags to prevent multiple warning messages
\newif\if@IEEEWARNthanks
\newif\if@IEEEWARNIEEEPARstart
\newif\if@IEEEWARNIEEEbiography
\newif\if@IEEEWARNIEEEbiographynophoto
\newif\if@IEEEWARNIEEEpubid
\newif\if@IEEEWARNIEEEpubidadjcol
\newif\if@IEEEWARNIEEEmembership
\newif\if@IEEEWARNIEEEaftertitletext
\@IEEEWARNthankstrue
\@IEEEWARNIEEEPARstarttrue
\@IEEEWARNIEEEbiographytrue
\@IEEEWARNIEEEbiographynophototrue
\@IEEEWARNIEEEpubidtrue
\@IEEEWARNIEEEpubidadjcoltrue
\@IEEEWARNIEEEmembershiptrue
\@IEEEWARNIEEEaftertitletexttrue


%% Lockout some commands when in various modes, but allow them to be restored if needed
%%
% save commands which might be locked out
% so that the user can later restore them if needed
\let\@IEEESAVECMDthanks\thanks
\let\@IEEESAVECMDIEEEPARstart\IEEEPARstart
\let\@IEEESAVECMDIEEEbiography\IEEEbiography
\let\@IEEESAVECMDendIEEEbiography\endIEEEbiography
\let\@IEEESAVECMDIEEEbiographynophoto\IEEEbiographynophoto
\let\@IEEESAVECMDendIEEEbiographynophoto\endIEEEbiographynophoto
\let\@IEEESAVECMDIEEEpubid\IEEEpubid
\let\@IEEESAVECMDIEEEpubidadjcol\IEEEpubidadjcol
\let\@IEEESAVECMDIEEEmembership\IEEEmembership
\let\@IEEESAVECMDIEEEaftertitletext\IEEEaftertitletext


% disable \IEEEPARstart when in draft mode
% This may have originally been done because the pre-V1.6 drop letter
% algorithm had problems with a non-unity baselinestretch
% At any rate, it seems too formal to have a drop letter in a draft
% paper.
\ifCLASSOPTIONdraftcls
\def\IEEEPARstart#1#2{#1#2\if@IEEEWARNIEEEPARstart\typeout{** ATTENTION: \noexpand\IEEEPARstart
 is disabled in draft mode (line \the\inputlineno).}\fi\global\@IEEEWARNIEEEPARstartfalse}
\fi
% and for technotes
\ifCLASSOPTIONtechnote
\def\IEEEPARstart#1#2{#1#2\if@IEEEWARNIEEEPARstart\typeout{** WARNING: \noexpand\IEEEPARstart
 is locked out for technotes (line \the\inputlineno).}\fi\global\@IEEEWARNIEEEPARstartfalse}
\fi


% lockout unneeded commands when in conference mode
\ifCLASSOPTIONconference
% when locked out, \thanks, \IEEEbiography, \IEEEbiographynophoto, \IEEEpubid,
% \IEEEmembership and \IEEEaftertitletext will all swallow their given text. 
% \IEEEPARstart will output a normal character instead
% warn the user about these commands only once to prevent the console screen
% from filling up with redundant messages
\def\thanks#1{\if@IEEEWARNthanks\typeout{** WARNING: \noexpand\thanks
 is locked out when in conference mode (line \the\inputlineno).}\fi\global\@IEEEWARNthanksfalse}
\def\IEEEPARstart#1#2{#1#2\if@IEEEWARNIEEEPARstart\typeout{** WARNING: \noexpand\IEEEPARstart
 is locked out when in conference mode (line \the\inputlineno).}\fi\global\@IEEEWARNIEEEPARstartfalse}


% LaTeX treats environments and commands with optional arguments differently.
% the actual ("internal") command is stored as \\commandname 
% (accessed via \csname\string\commandname\endcsname )
% the "external" command \commandname is a macro with code to determine
% whether or not the optional argument is presented and to provide the 
% default if it is absent. So, in order to save and restore such a command
% we would have to save and restore \\commandname as well. But, if LaTeX
% ever changes the way it names the internal names, the trick would break.
% Instead let us just define a new environment so that the internal
% name can be left undisturbed.
\newenvironment{@IEEEbogusbiography}[2][]{\if@IEEEWARNIEEEbiography\typeout{** WARNING: \noexpand\IEEEbiography
 is locked out when in conference mode (line \the\inputlineno).}\fi\global\@IEEEWARNIEEEbiographyfalse%
\setbox\@IEEEtranrubishbin\vbox\bgroup}{\egroup\relax}
% and make biography point to our bogus biography
\let\IEEEbiography=\@IEEEbogusbiography
\let\endIEEEbiography=\end@IEEEbogusbiography

\renewenvironment{IEEEbiographynophoto}[1]{\if@IEEEWARNIEEEbiographynophoto\typeout{** WARNING: \noexpand\IEEEbiographynophoto
 is locked out when in conference mode (line \the\inputlineno).}\fi\global\@IEEEWARNIEEEbiographynophotofalse%
\setbox\@IEEEtranrubishbin\vbox\bgroup}{\egroup\relax}

\def\IEEEpubid#1{\if@IEEEWARNIEEEpubid\typeout{** WARNING: \noexpand\IEEEpubid 
 is locked out when in conference mode (line \the\inputlineno).}\fi\global\@IEEEWARNIEEEpubidfalse}
\def\IEEEpubidadjcol{\if@IEEEWARNIEEEpubidadjcol\typeout{** WARNING: \noexpand\IEEEpubidadjcol
 is locked out when in conference mode (line \the\inputlineno).}\fi\global\@IEEEWARNIEEEpubidadjcolfalse}
\def\IEEEmembership#1{\if@IEEEWARNIEEEmembership\typeout{** WARNING: \noexpand\IEEEmembership
 is locked out when in conference mode (line \the\inputlineno).}\fi\global\@IEEEWARNIEEEmembershipfalse}
\def\IEEEaftertitletext#1{\if@IEEEWARNIEEEaftertitletext\typeout{** WARNING: \noexpand\IEEEaftertitletext
 is locked out when in conference mode (line \the\inputlineno).}\fi\global\@IEEEWARNIEEEaftertitletextfalse}
\fi


% provide a way to restore the commands that are locked out
\def\IEEEoverridecommandlockouts{%
\typeout{** ATTENTION: Overriding command lockouts (line \the\inputlineno).}%
\let\thanks\@IEEESAVECMDthanks%
\let\IEEEPARstart\@IEEESAVECMDIEEEPARstart%
\let\IEEEbiography\@IEEESAVECMDIEEEbiography%
\let\endIEEEbiography\@IEEESAVECMDendIEEEbiography%
\let\IEEEbiographynophoto\@IEEESAVECMDIEEEbiographynophoto%
\let\endIEEEbiographynophoto\@IEEESAVECMDendIEEEbiographynophoto%
\let\IEEEpubid\@IEEESAVECMDIEEEpubid%
\let\IEEEpubidadjcol\@IEEESAVECMDIEEEpubidadjcol%
\let\IEEEmembership\@IEEESAVECMDIEEEmembership%
\let\IEEEaftertitletext\@IEEESAVECMDIEEEaftertitletext}



% need a backslash character for typeout output
{\catcode`\|=0 \catcode`\\=12
|xdef|@IEEEbackslash{\}}


% hook to allow easy disabling of all legacy warnings
\def\@IEEElegacywarn#1#2{\typeout{** ATTENTION: \@IEEEbackslash #1 is deprecated (line \the\inputlineno).
Use \@IEEEbackslash #2 instead.}}


% provide some legacy IEEEtran commands
\def\IEEEcompsoctitleabstractindextext{\@IEEElegacywarn{IEEEcompsoctitleabstractindextext}{IEEEtitleabstractindextext}\IEEEtitleabstractindextext}
\def\IEEEdisplaynotcompsoctitleabstractindextext{\@IEEElegacywarn{IEEEdisplaynotcompsoctitleabstractindextext}{IEEEdisplaynontitleabstractindextext}\IEEEdisplaynontitleabstractindextext}
% provide some legacy IEEEtran environments


% V1.8a no more support for these legacy commands
%\def\authorblockA{\@IEEElegacywarn{authorblockA}{IEEEauthorblockA}\IEEEauthorblockA}
%\def\authorblockN{\@IEEElegacywarn{authorblockN}{IEEEauthorblockN}\IEEEauthorblockN}
%\def\authorrefmark{\@IEEElegacywarn{authorrefmark}{IEEEauthorrefmark}\IEEEauthorrefmark}
%\def\PARstart{\@IEEElegacywarn{PARstart}{IEEEPARstart}\IEEEPARstart}
%\def\pubid{\@IEEElegacywarn{pubid}{IEEEpubid}\IEEEpubid}
%\def\pubidadjcol{\@IEEElegacywarn{pubidadjcol}{IEEEpubidadjcol}\IEEEpubidadjcol}
%\def\specialpapernotice{\@IEEElegacywarn{specialpapernotice}{IEEEspecialpapernotice}\IEEEspecialpapernotice}
% and environments
%\def\keywords{\@IEEElegacywarn{keywords}{IEEEkeywords}\IEEEkeywords}
%\def\endkeywords{\endIEEEkeywords}
% V1.8 no more support for legacy IED list commands
%\let\labelindent\IEEElabelindent
%\def\calcleftmargin{\@IEEElegacywarn{calcleftmargin}{IEEEcalcleftmargin}\IEEEcalcleftmargin}
%\def\setlabelwidth{\@IEEElegacywarn{setlabelwidth}{IEEEsetlabelwidth}\IEEEsetlabelwidth}
%\def\usemathlabelsep{\@IEEElegacywarn{usemathlabelsep}{IEEEusemathlabelsep}\IEEEusemathlabelsep}
%\def\iedlabeljustifyc{\@IEEElegacywarn{iedlabeljustifyc}{IEEEiedlabeljustifyc}\IEEEiedlabeljustifyc}
%\def\iedlabeljustifyl{\@IEEElegacywarn{iedlabeljustifyl}{IEEEiedlabeljustifyl}\IEEEiedlabeljustifyl}
%\def\iedlabeljustifyr{\@IEEElegacywarn{iedlabeljustifyr}{IEEEiedlabeljustifyr}\IEEEiedlabeljustifyr}
% V1.8 no more support for QED and proof stuff
%\def\QED{\@IEEElegacywarn{QED}{IEEEQED}\IEEEQED}
%\def\QEDclosed{\@IEEElegacywarn{QEDclosed}{IEEEQEDclosed}\IEEEQEDclosed}
%\def\QEDopen{\@IEEElegacywarn{QEDopen}{IEEEQEDopen}\IEEEQEDopen}
%\AtBeginDocument{\def\proof{\@IEEElegacywarn{proof}{IEEEproof}\IEEEproof}\def\endproof{\endIEEEproof}}
% V1.8 no longer support biography or biographynophoto
%\def\biography{\@IEEElegacywarn{biography}{IEEEbiography}\IEEEbiography}
%\def\biographynophoto{\@IEEElegacywarn{biographynophoto}{IEEEbiographynophoto}\IEEEbiographynophoto}
%\def\endbiography{\endIEEEbiography}
%\def\endbiographynophoto{\endIEEEbiographynophoto}
% V1.7 and later no longer supports \overrideIEEEmargins
%\def\overrideIEEEmargins{%
%\typeout{** WARNING: \string\overrideIEEEmargins \space no longer supported (line \the\inputlineno).}%
%\typeout{** Use the \string\CLASSINPUTinnersidemargin, \string\CLASSINPUToutersidemargin \space controls instead.}}

\endinput

%%%%%%%%%%%%%%%%%%%%%%%%%%%%% End of IEEEtran.cls  %%%%%%%%%%%%%%%%%%%%%%%%%%%%
% That's all folks!
</file>

<file path="report/ref.bib">
@BOOK{DRAGON_BOOK,
    author    = "Alfred V. Aho; Monica S. Lam; Ravi Sethi; Jeffrey D. Ullman",
    title     = "Compilers. Principles, Techiniques \& Tools",
    publisher = "Addison Wesley",
    year      = "2006",
    edition   = "second"
}
@ONLINE {JFLEX,
    author = "JFlex Team",
    title  = "JFlex - The Fast Scanner Generator for Java",
    month  = "mar",
    year   = "2015",
    url    = "http://jflex.de/"
}
@MANUAL {JFLEX_MANUAL,
    title  = "JFlex User's Manual",
    author = "Gerwin Klein; Steve Rowe; Régis Décamps",
    month  = "apr",
    year   = "2015"
}
@BOOK {LANGUAGE_C,
    author    = "Brian Kernighan \& Dennis Richie",
    title     = "The C Programming Language",
    publisher = "Prentice Hall",
    year      = "1988",
    edition   = "second",
    month     = "mar"
}
@ONLINE {CUP,
    author = "Scott Hudson",
    title  = "CUP Parser Generator for Java",
    url    = "http://www.cs.princeton.edu/~appel/modern/java/CUP/"
}
@MANUAL {CUP_MANUAL,
    title  = "CUP User's Manual",
    author = "Scott E. Hudson",
    month  = "jul",
    year   = "1999"
}
@ARTICLE {COLORING,
    author  = "George, Lal \& Appel, Andrew W.",
    title   = "Iterated Register Coalescing",
    journal = "ACM Transacions on Programming Languages and Systems",
    year    = "1995",
    month   = "jul"
}
</file>

<file path="report/report.aux">
\relax 
\citation{DRAGON_BOOK}
\citation{LANGUAGE_C}
\@writefile{toc}{\contentsline {section}{\numberline {I}Introduction}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {I-A}}Mini C}{1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {\unhbox \voidb@x \hbox {I-A}1}What it does}{1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {\unhbox \voidb@x \hbox {I-A}2}What it doesn't}{2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {\unhbox \voidb@x \hbox {I-A}3}Known bugs and work to be done}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {I-B}}Structure of a Compiler}{2}}
\newlabel{sub_structure_of_a_compiler}{{\unhbox \voidb@x \hbox {I-B}}{2}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Structure of a Compiler}}{2}}
\newlabel{fig_struct_of_compilator}{{1}{2}}
\@writefile{toc}{\contentsline {section}{\numberline {II}Lexical Analyzer}{2}}
\newlabel{sec:lexical-Analizer}{{II}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {II-A}}Regular Expressions}{2}}
\newlabel{reg_expr_example}{{1}{2}}
\citation{JFLEX}
\citation{JFLEX_MANUAL}
\citation{CUP}
\citation{CUP_MANUAL}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {II-B}}Finite Automata}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {II-C}}Implementation}{3}}
\@writefile{toc}{\contentsline {section}{\numberline {III}Syntax Analyzer}{3}}
\newlabel{sub_syntax_analyzer}{{III}{3}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Syntax Tree Example}}{3}}
\newlabel{fig_syntax_tree_example}{{2}{3}}
\newlabel{2*(x+1)}{{2}{3}}
\newlabel{(2*((x)+1))}{{3}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {III-A}}Implementation}{3}}
\@writefile{lot}{\contentsline {table}{\numberline {I}{\ignorespaces Precedence}}{3}}
\newlabel{tab_precedence}{{I}{3}}
\@writefile{lot}{\contentsline {table}{\numberline {II}{\ignorespaces Grammar}}{3}}
\newlabel{tab_grammar}{{II}{3}}
\@writefile{toc}{\contentsline {section}{\numberline {IV}Semantic Analyzer}{4}}
\newlabel{sec:semantic-analyzer}{{IV}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {IV-A}}Implementation}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {IV-B}}Results}{4}}
\@writefile{toc}{\contentsline {section}{\numberline {V}Code Generation}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {V-A}}Register Transfer Language (RTL)}{4}}
\newlabel{sec:RTL}{{\unhbox \voidb@x \hbox {V-A}}{4}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {\unhbox \voidb@x \hbox {V-A}1}Implementation}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {V-B}}Explicit Transfer Language (ERTL)}{5}}
\newlabel{sec:ERTL-implementation}{{\unhbox \voidb@x \hbox {V-B}1}{5}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {\unhbox \voidb@x \hbox {V-B}1}Implementation}{5}}
\citation{COLORING}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {V-C}}Location Transfer Language (LTL)}{6}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {\unhbox \voidb@x \hbox {V-C}1}Life Duration Analysis}{6}}
\@writefile{lot}{\contentsline {table}{\numberline {III}{\ignorespaces def \& use}}{6}}
\newlabel{tab:def-and-use}{{III}{6}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {\unhbox \voidb@x \hbox {V-C}2}Interference Graph}{6}}
\newlabel{sec:coloring}{{\unhbox \voidb@x \hbox {V-C}3}{6}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {\unhbox \voidb@x \hbox {V-C}3}Coloring}{6}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {\unhbox \voidb@x \hbox {V-C}4}Implementation}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {V-D}}x86-64 Assembly Code}{7}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {\unhbox \voidb@x \hbox {V-D}1}Implementation}{7}}
\@writefile{toc}{\contentsline {section}{\numberline {VI}Conclusion}{7}}
\bibstyle{IEEEtran}
\bibdata{ref}
\bibcite{DRAGON_BOOK}{1}
\bibcite{LANGUAGE_C}{2}
\bibcite{JFLEX}{3}
\bibcite{JFLEX_MANUAL}{4}
\bibcite{CUP}{5}
\bibcite{CUP_MANUAL}{6}
\bibcite{COLORING}{7}
\@writefile{toc}{\contentsline {section}{References}{8}}
</file>

<file path="report/report.bbl">
% Generated by IEEEtran.bst, version: 1.13 (2008/09/30)
\begin{thebibliography}{1}
\providecommand{\url}[1]{#1}
\csname url@samestyle\endcsname
\providecommand{\newblock}{\relax}
\providecommand{\bibinfo}[2]{#2}
\providecommand{\BIBentrySTDinterwordspacing}{\spaceskip=0pt\relax}
\providecommand{\BIBentryALTinterwordstretchfactor}{4}
\providecommand{\BIBentryALTinterwordspacing}{\spaceskip=\fontdimen2\font plus
\BIBentryALTinterwordstretchfactor\fontdimen3\font minus
  \fontdimen4\font\relax}
\providecommand{\BIBforeignlanguage}[2]{{%
\expandafter\ifx\csname l@#1\endcsname\relax
\typeout{** WARNING: IEEEtran.bst: No hyphenation pattern has been}%
\typeout{** loaded for the language `#1'. Using the pattern for}%
\typeout{** the default language instead.}%
\else
\language=\csname l@#1\endcsname
\fi
#2}}
\providecommand{\BIBdecl}{\relax}
\BIBdecl

\bibitem{DRAGON_BOOK}
A.~V. A. M. S. L. R. S. J.~D. Ullman, \emph{Compilers. Principles, Techiniques
  \& Tools}, 2nd~ed.\hskip 1em plus 0.5em minus 0.4em\relax Addison Wesley,
  2006.

\bibitem{LANGUAGE_C}
B.~K. .~D. Richie, \emph{The C Programming Language}, 2nd~ed.\hskip 1em plus
  0.5em minus 0.4em\relax Prentice Hall, mar 1988.

\bibitem{JFLEX}
\BIBentryALTinterwordspacing
J.~Team. (2015, mar) Jflex - the fast scanner generator for java. [Online].
  Available: \url{http://jflex.de/}
\BIBentrySTDinterwordspacing

\bibitem{JFLEX_MANUAL}
G.~K. S. R.~R. Décamps, \emph{JFlex User's Manual}, apr 2015.

\bibitem{CUP}
\BIBentryALTinterwordspacing
S.~Hudson. Cup parser generator for java. [Online]. Available:
  \url{http://www.cs.princeton.edu/~appel/modern/java/CUP/}
\BIBentrySTDinterwordspacing

\bibitem{CUP_MANUAL}
S.~E. Hudson, \emph{CUP User's Manual}, jul 1999.

\bibitem{COLORING}
A.~W. George, Lal \&~Appel, ``Iterated register coalescing,'' \emph{ACM
  Transacions on Programming Languages and Systems}, jul 1995.

\end{thebibliography}
</file>

<file path="report/report.blg">
This is BibTeX, Version 0.99d (TeX Live 2015)
Capacity: max_strings=35307, hash_size=35307, hash_prime=30011
The top-level auxiliary file: report.aux
The style file: IEEEtran.bst
Reallocated singl_function (elt_size=4) to 100 items from 50.
Reallocated singl_function (elt_size=4) to 100 items from 50.
Reallocated singl_function (elt_size=4) to 100 items from 50.
Reallocated wiz_functions (elt_size=4) to 6000 items from 3000.
Reallocated singl_function (elt_size=4) to 100 items from 50.
Database file #1: ref.bib
-- IEEEtran.bst version 1.13 (2008/09/30) by Michael Shell.
-- http://www.michaelshell.org/tex/ieeetran/bibtex/
-- See the "IEEEtran_bst_HOWTO.pdf" manual for usage information.

Done.
You've used 7 entries,
            4039 wiz_defined-function locations,
            848 strings with 7903 characters,
and the built_in function-call counts, 2535 in all, are:
= -- 192
> -- 32
< -- 4
+ -- 14
- -- 7
* -- 95
:= -- 451
add.period$ -- 12
call.type$ -- 7
change.case$ -- 7
chr.to.int$ -- 12
cite$ -- 7
duplicate$ -- 218
empty$ -- 258
format.name$ -- 7
if$ -- 543
int.to.chr$ -- 0
int.to.str$ -- 7
missing$ -- 44
newline$ -- 48
num.names$ -- 7
pop$ -- 125
preamble$ -- 1
purify$ -- 0
quote$ -- 2
skip$ -- 202
stack$ -- 0
substring$ -- 11
swap$ -- 118
text.length$ -- 0
text.prefix$ -- 0
top$ -- 5
type$ -- 7
warning$ -- 0
while$ -- 7
width$ -- 8
write$ -- 77
</file>

<file path="report/report.fdb_latexmk">
# Fdb version 3
["bibtex report"] 1489920736 "report.aux" "report.bbl" "report" 1489920737
  "/usr/local/texlive/2015/texmf-dist/bibtex/bst/IEEEtran/IEEEtran.bst" 1222816716 59506 016987d9be15acf51cdd7252d40ecec2 ""
  "ref.bib" 1489918567 1322 be06435d9cfa0aca3d8914aa764bd4db ""
  "report.aux" 1489920736 4443 faeb4b5206452db6f9b49bbcf0e2a883 ""
  "report.bcf" 0 -1 0 ""
  (generated)
  "report.bbl"
["pdflatex"] 1489920736 "report.tex" "report.pdf" "report" 1489920737
  "./images/Diagram.png" 1489918567 3754 b70a49b0227c66f190c22679af08635b ""
  "./images/syntax_tree.png" 1489918567 2369 85e1537df3b79be026f8df1911ee889e ""
  "/usr/local/texlive/2015/texmf-dist/fonts/enc/dvips/base/8r.enc" 1165713224 4850 80dc9bab7f31fb78a000ccfed0e27cab ""
  "/usr/local/texlive/2015/texmf-dist/fonts/map/fontname/texfonts.map" 1272929888 3287 e6b82fe08f5336d4d5ebc73fb1152e87 ""
  "/usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmb7t.tfm" 1136768653 2172 fd0c924230362ff848a33632ed45dc23 ""
  "/usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmb8r.tfm" 1136768653 4524 6bce29db5bc272ba5f332261583fee9c ""
  "/usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmbi7t.tfm" 1136768653 2228 e564491c42a4540b5ebb710a75ff306c ""
  "/usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmbi8r.tfm" 1136768653 4480 10409ed8bab5aea9ec9a78028b763919 ""
  "/usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmr7t.tfm" 1136768653 2124 2601a75482e9426d33db523edf23570a ""
  "/usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmr8r.tfm" 1136768653 4408 25b74d011a4c66b7f212c0cc3c90061b ""
  "/usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmrc7t.tfm" 1136768653 2680 312a2d12b1f1df8ee0212e7ba1962402 ""
  "/usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmri7t.tfm" 1136768653 2288 f478fc8fed18759effb59f3dad7f3084 ""
  "/usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmri8r.tfm" 1136768653 4640 532ca3305aad10cc01d769f3f91f1029 ""
  "/usr/local/texlive/2015/texmf-dist/fonts/tfm/public/amsfonts/cmextra/cmex7.tfm" 1246382020 1004 54797486969f23fa377b128694d548df ""
  "/usr/local/texlive/2015/texmf-dist/fonts/tfm/public/amsfonts/cmextra/cmex8.tfm" 1246382020 988 bdf658c3bfc2d96d3c8b02cfc1c94c20 ""
  "/usr/local/texlive/2015/texmf-dist/fonts/tfm/public/cm/cmmi6.tfm" 1136768653 1512 f21f83efb36853c0b70002322c1ab3ad ""
  "/usr/local/texlive/2015/texmf-dist/fonts/tfm/public/cm/cmmi8.tfm" 1136768653 1520 eccf95517727cb11801f4f1aee3a21b4 ""
  "/usr/local/texlive/2015/texmf-dist/fonts/tfm/public/cm/cmr6.tfm" 1136768653 1300 b62933e007d01cfd073f79b963c01526 ""
  "/usr/local/texlive/2015/texmf-dist/fonts/tfm/public/cm/cmr8.tfm" 1136768653 1292 21c1c5bfeaebccffdb478fd231a0997d ""
  "/usr/local/texlive/2015/texmf-dist/fonts/tfm/public/cm/cmsy6.tfm" 1136768653 1116 933a60c408fc0a863a92debe84b2d294 ""
  "/usr/local/texlive/2015/texmf-dist/fonts/tfm/public/cm/cmsy8.tfm" 1136768653 1120 8b7d695260f3cff42e636090a8002094 ""
  "/usr/local/texlive/2015/texmf-dist/fonts/type1/public/amsfonts/cm/cmex10.pfb" 1248133631 30251 6afa5cb1d0204815a708a080681d4674 ""
  "/usr/local/texlive/2015/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi10.pfb" 1248133631 36299 5f9df58c2139e7edcf37c8fca4bd384d ""
  "/usr/local/texlive/2015/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi7.pfb" 1248133631 36281 c355509802a035cadc5f15869451dcee ""
  "/usr/local/texlive/2015/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi8.pfb" 1248133631 35469 70d41d2b9ea31d5d813066df7c99281c ""
  "/usr/local/texlive/2015/texmf-dist/fonts/type1/public/amsfonts/cm/cmr10.pfb" 1248133631 35752 024fb6c41858982481f6968b5fc26508 ""
  "/usr/local/texlive/2015/texmf-dist/fonts/type1/public/amsfonts/cm/cmr6.pfb" 1248133631 32734 69e00a6b65cedb993666e42eedb3d48f ""
  "/usr/local/texlive/2015/texmf-dist/fonts/type1/public/amsfonts/cm/cmr7.pfb" 1248133631 32762 224316ccc9ad3ca0423a14971cfa7fc1 ""
  "/usr/local/texlive/2015/texmf-dist/fonts/type1/public/amsfonts/cm/cmsy10.pfb" 1248133631 32569 5e5ddc8df908dea60932f3c484a54c0d ""
  "/usr/local/texlive/2015/texmf-dist/fonts/type1/public/amsfonts/cm/cmsy6.pfb" 1248133631 32587 1788b0c1c5b39540c96f5e42ccd6dae8 ""
  "/usr/local/texlive/2015/texmf-dist/fonts/type1/public/amsfonts/cm/cmsy7.pfb" 1248133631 32716 08e384dc442464e7285e891af9f45947 ""
  "/usr/local/texlive/2015/texmf-dist/fonts/type1/public/amsfonts/cm/cmsy8.pfb" 1248133631 32626 4f5c1b83753b1dd3a97d1b399a005b4b ""
  "/usr/local/texlive/2015/texmf-dist/fonts/type1/urw/times/utmb8a.pfb" 1136849748 44729 811d6c62865936705a31c797a1d5dada ""
  "/usr/local/texlive/2015/texmf-dist/fonts/type1/urw/times/utmbi8a.pfb" 1136849748 44656 0cbca70e0534538582128f6b54593cca ""
  "/usr/local/texlive/2015/texmf-dist/fonts/type1/urw/times/utmr8a.pfb" 1136849748 46026 6dab18b61c907687b520c72847215a68 ""
  "/usr/local/texlive/2015/texmf-dist/fonts/type1/urw/times/utmri8a.pfb" 1136849748 45458 a3faba884469519614ca56ba5f6b1de1 ""
  "/usr/local/texlive/2015/texmf-dist/fonts/vf/adobe/times/ptmb7t.vf" 1136768653 1372 788387fea833ef5963f4c5bffe33eb89 ""
  "/usr/local/texlive/2015/texmf-dist/fonts/vf/adobe/times/ptmbi7t.vf" 1136768653 1384 6ac0f8b839230f5d9389287365b243c0 ""
  "/usr/local/texlive/2015/texmf-dist/fonts/vf/adobe/times/ptmr7t.vf" 1136768653 1380 0ea3a3370054be6da6acd929ec569f06 ""
  "/usr/local/texlive/2015/texmf-dist/fonts/vf/adobe/times/ptmrc7t.vf" 1136768653 1948 7330aeef3af211edff3b35fb2c12a0fd ""
  "/usr/local/texlive/2015/texmf-dist/fonts/vf/adobe/times/ptmri7t.vf" 1136768653 1384 a9d8adaf491ce34e5fba99dc7bbe5f39 ""
  "/usr/local/texlive/2015/texmf-dist/tex/context/base/supp-pdf.mkii" 1337017135 71627 94eb9990bed73c364d7f53f960cc8c5b ""
  "/usr/local/texlive/2015/texmf-dist/tex/generic/oberdiek/etexcmds.sty" 1335995445 7612 c47308d923ec19888707b0f1792b326a ""
  "/usr/local/texlive/2015/texmf-dist/tex/generic/oberdiek/ifluatex.sty" 1303254447 7324 11d14f318d865f420e692d4e6c9c18c3 ""
  "/usr/local/texlive/2015/texmf-dist/tex/generic/oberdiek/ifpdf.sty" 1303254447 7140 ece2cc23d9f20e1f53975ac167f42d3e ""
  "/usr/local/texlive/2015/texmf-dist/tex/generic/oberdiek/infwarerr.sty" 1335995445 8253 3bdedc8409aa5d290a2339be6f09af03 ""
  "/usr/local/texlive/2015/texmf-dist/tex/generic/oberdiek/kvdefinekeys.sty" 1335995445 5152 387d9200f396b498d5fd679ae44ed898 ""
  "/usr/local/texlive/2015/texmf-dist/tex/generic/oberdiek/kvsetkeys.sty" 1335995445 14040 8de9f47fabc4ca3bd69b6d795e32751c ""
  "/usr/local/texlive/2015/texmf-dist/tex/generic/oberdiek/ltxcmds.sty" 1335995445 18425 775b341047ce304520cc7c11ca41392e ""
  "/usr/local/texlive/2015/texmf-dist/tex/generic/oberdiek/pdftexcmds.sty" 1335995445 19987 01cb2f3c1d21e5f05711b7fd50b17f2a ""
  "/usr/local/texlive/2015/texmf-dist/tex/latex/amscls/amsthm.sty" 1428861406 12225 3cca0d18522255979a1047206228b9d0 ""
  "/usr/local/texlive/2015/texmf-dist/tex/latex/amsmath/amsbsy.sty" 1362954379 2412 2d98314dc5be38f455f8890deeb2d091 ""
  "/usr/local/texlive/2015/texmf-dist/tex/latex/amsmath/amsgen.sty" 1362954379 4357 ad30ad08920902fc9b38caf35a3b0496 ""
  "/usr/local/texlive/2015/texmf-dist/tex/latex/amsmath/amsmath.sty" 1362954379 79178 b2e326c351e876df0e5e23df2e02441b ""
  "/usr/local/texlive/2015/texmf-dist/tex/latex/amsmath/amsopn.sty" 1362954379 4082 502152465aedb8f6a3c4b0b7c0fa8ae5 ""
  "/usr/local/texlive/2015/texmf-dist/tex/latex/amsmath/amstext.sty" 1362954379 2637 846ebe982d3549c7ede7ce135456f54a ""
  "/usr/local/texlive/2015/texmf-dist/tex/latex/cite/cite.sty" 1425427964 26218 19edeff8cdc2bcb704e8051dc55eb5a7 ""
  "/usr/local/texlive/2015/texmf-dist/tex/latex/float/float.sty" 1137110151 6749 16d2656a1984957e674b149555f1ea1d ""
  "/usr/local/texlive/2015/texmf-dist/tex/latex/graphics/graphics.sty" 1428932888 14285 20d80486c4ae98139889d8789596c967 ""
  "/usr/local/texlive/2015/texmf-dist/tex/latex/graphics/graphicx.sty" 1428932888 8125 557ab9f1bfa80d369fb45a914aa8a3b4 ""
  "/usr/local/texlive/2015/texmf-dist/tex/latex/graphics/keyval.sty" 1428932888 2594 d18d5e19aa8239cf867fa670c556d2e9 ""
  "/usr/local/texlive/2015/texmf-dist/tex/latex/graphics/trig.sty" 1428932888 3439 44bd4a1da7f27787173f2e99116b0a7f ""
  "/usr/local/texlive/2015/texmf-dist/tex/latex/latexconfig/epstopdf-sys.cfg" 1279039959 678 4792914a8f45be57bb98413425e4c7af ""
  "/usr/local/texlive/2015/texmf-dist/tex/latex/latexconfig/graphics.cfg" 1278958963 3563 d35e897cae3b8c6848f6677b73370b54 ""
  "/usr/local/texlive/2015/texmf-dist/tex/latex/listings/listings.cfg" 1410123741 1828 ddc16c1fe1b992198f2f6db76c7605a1 ""
  "/usr/local/texlive/2015/texmf-dist/tex/latex/listings/listings.sty" 1410123741 80361 986ecfb58a31c7520247f2b2ead09587 ""
  "/usr/local/texlive/2015/texmf-dist/tex/latex/listings/lstlang1.sty" 1410123741 93444 0138f333d6d5318ba4266bb8d4ee3643 ""
  "/usr/local/texlive/2015/texmf-dist/tex/latex/listings/lstmisc.sty" 1410123741 77029 f4782a67dce3ceeb4067191b5488d81d ""
  "/usr/local/texlive/2015/texmf-dist/tex/latex/oberdiek/epstopdf-base.sty" 1303254447 12029 04d7fdf76e0464c23b5aa3a727952d7c ""
  "/usr/local/texlive/2015/texmf-dist/tex/latex/oberdiek/grfext.sty" 1335995445 7075 bd0c34fbf1ae8fd1debd2a554e41b2d5 ""
  "/usr/local/texlive/2015/texmf-dist/tex/latex/oberdiek/kvoptions.sty" 1335995445 22417 c74ff4af6a1aa2b65d1924020edbbe11 ""
  "/usr/local/texlive/2015/texmf-dist/tex/latex/pdftex-def/pdftex.def" 1306616590 55368 3c8a0d99822330f2dfabc0dfb09ce897 ""
  "/usr/local/texlive/2015/texmf-dist/tex/latex/psnfss/omlptm.fd" 1137110629 577 008ea4bacb8ccf8c2a39dc94e000ef1f ""
  "/usr/local/texlive/2015/texmf-dist/tex/latex/psnfss/omsptm.fd" 1137110629 576 95c2c0baea9c719a4be29a3d4122498b ""
  "/usr/local/texlive/2015/texmf-dist/tex/latex/psnfss/ot1ptm.fd" 1137110629 961 15056f4a61917ceed3a44e4ac11fcc52 ""
  "/usr/local/texlive/2015/texmf-dist/tex/latex/tools/array.sty" 1428932888 13285 001a28447062ce32b9b4a62965626fc4 ""
  "/usr/local/texlive/2015/texmf-dist/web2c/texmf.cnf" 1428852030 31983 18aeec08f48baa3cf3508d538dd5f459 ""
  "/usr/local/texlive/2015/texmf-var/fonts/map/pdftex/updmap/pdftex.map" 1432479641 1764542 91654ba72bdb667e84ea24f076ae16d8 ""
  "/usr/local/texlive/2015/texmf-var/web2c/pdftex/pdflatex.fmt" 1464678351 3849859 e68bf1f5f082c54521c9c47b314b0cd1 ""
  "/usr/local/texlive/2015/texmf.cnf" 1432479636 577 0d611272082f3cdb8e80e09a3c69cf07 ""
  "IEEEtran.cls" 1485020491 281957 5b2e4fa15b0f7eabb840ebf67df4c0f7 ""
  "images/Diagram.png" 1489918567 3754 b70a49b0227c66f190c22679af08635b ""
  "images/syntax_tree.png" 1489918567 2369 85e1537df3b79be026f8df1911ee889e ""
  "report.aux" 1489920736 4443 faeb4b5206452db6f9b49bbcf0e2a883 ""
  "report.bbl" 1489920736 1911 7cec27b15ba60c4a6e2535cd0b5ed35c "bibtex report"
  "report.tex" 1489920734 36872 93e53155f1bab02fcc299f467e5afaad ""
  "report.toc" 1489920736 2458 5bb9f7576c8ab14f2a39055f7f9df164 ""
  (generated)
  "report.pdf"
  "report.aux"
  "report.toc"
  "report.log"
</file>

<file path="report/report.fls">
PWD /Users/philemonpoux/Desktop/Polytechnique/3ème année/PA SDE/P2/INF564/compilation/Compilation/report
INPUT /usr/local/texlive/2015/texmf.cnf
INPUT /usr/local/texlive/2015/texmf-dist/web2c/texmf.cnf
INPUT /usr/local/texlive/2015/texmf-var/web2c/pdftex/pdflatex.fmt
INPUT report.tex
OUTPUT report.log
INPUT IEEEtran.cls
INPUT IEEEtran.cls
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/psnfss/ot1ptm.fd
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/psnfss/ot1ptm.fd
INPUT /usr/local/texlive/2015/texmf-dist/fonts/map/fontname/texfonts.map
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmr7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmr7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmr7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmb7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmri7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmbi7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmr7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmb7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmri7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmbi7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmr7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmb7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmri7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmbi7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmb7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmri7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmbi7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmb7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmri7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmbi7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmr7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmb7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmri7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmbi7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmr7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmb7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmri7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmbi7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmr7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmb7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmri7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmbi7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmr7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmb7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmri7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmbi7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmr7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmb7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmri7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmbi7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/cite/cite.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/cite/cite.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/tools/array.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/tools/array.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/graphics/graphicx.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/graphics/graphicx.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/graphics/keyval.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/graphics/keyval.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/graphics/graphics.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/graphics/graphics.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/graphics/trig.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/graphics/trig.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/latexconfig/graphics.cfg
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/latexconfig/graphics.cfg
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/pdftex-def/pdftex.def
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/pdftex-def/pdftex.def
INPUT /usr/local/texlive/2015/texmf-dist/tex/generic/oberdiek/infwarerr.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/generic/oberdiek/infwarerr.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/generic/oberdiek/ltxcmds.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/generic/oberdiek/ltxcmds.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/amscls/amsthm.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/amscls/amsthm.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/amsmath/amsmath.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/amsmath/amsmath.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/amsmath/amstext.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/amsmath/amstext.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/amsmath/amsgen.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/amsmath/amsgen.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/amsmath/amsbsy.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/amsmath/amsbsy.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/amsmath/amsopn.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/amsmath/amsopn.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/listings/listings.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/listings/listings.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/listings/lstmisc.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/listings/lstmisc.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/listings/listings.cfg
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/listings/listings.cfg
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/listings/lstlang1.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/listings/lstlang1.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/float/float.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/float/float.sty
INPUT report.aux
INPUT report.aux
OUTPUT report.aux
INPUT /usr/local/texlive/2015/texmf-dist/tex/context/base/supp-pdf.mkii
INPUT /usr/local/texlive/2015/texmf-dist/tex/context/base/supp-pdf.mkii
INPUT /usr/local/texlive/2015/texmf-dist/tex/generic/oberdiek/pdftexcmds.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/generic/oberdiek/pdftexcmds.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/generic/oberdiek/ifluatex.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/generic/oberdiek/ifluatex.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/generic/oberdiek/ifpdf.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/generic/oberdiek/ifpdf.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/oberdiek/epstopdf-base.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/oberdiek/epstopdf-base.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/oberdiek/grfext.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/oberdiek/grfext.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/generic/oberdiek/kvdefinekeys.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/generic/oberdiek/kvdefinekeys.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/oberdiek/kvoptions.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/oberdiek/kvoptions.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/generic/oberdiek/kvsetkeys.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/generic/oberdiek/kvsetkeys.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/generic/oberdiek/etexcmds.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/generic/oberdiek/etexcmds.sty
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/latexconfig/epstopdf-sys.cfg
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/latexconfig/epstopdf-sys.cfg
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmrc7t.tfm
INPUT report.toc
INPUT report.toc
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/public/amsfonts/cmextra/cmex7.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/public/amsfonts/cmextra/cmex7.tfm
OUTPUT report.toc
OUTPUT report.pdf
INPUT /usr/local/texlive/2015/texmf-dist/fonts/vf/adobe/times/ptmr7t.vf
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmr8r.tfm
INPUT /usr/local/texlive/2015/texmf-var/fonts/map/pdftex/updmap/pdftex.map
INPUT /usr/local/texlive/2015/texmf-dist/fonts/vf/adobe/times/ptmr7t.vf
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmr8r.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/vf/adobe/times/ptmr7t.vf
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmr8r.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/vf/adobe/times/ptmrc7t.vf
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmr8r.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/vf/adobe/times/ptmb7t.vf
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmb8r.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/vf/adobe/times/ptmbi7t.vf
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmbi8r.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/vf/adobe/times/ptmb7t.vf
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmb8r.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/vf/adobe/times/ptmri7t.vf
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmri8r.tfm
INPUT images/Diagram.png
INPUT ./images/Diagram.png
INPUT ./images/Diagram.png
INPUT /usr/local/texlive/2015/texmf-dist/fonts/vf/adobe/times/ptmr7t.vf
INPUT images/syntax_tree.png
INPUT ./images/syntax_tree.png
INPUT ./images/syntax_tree.png
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/public/cm/cmr8.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/public/cm/cmr6.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/public/cm/cmmi8.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/public/cm/cmmi6.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/public/cm/cmsy8.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/public/cm/cmsy6.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/public/amsfonts/cmextra/cmex8.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/public/amsfonts/cmextra/cmex7.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmrc7t.tfm
INPUT /usr/local/texlive/2015/texmf-dist/fonts/vf/adobe/times/ptmrc7t.vf
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmr8r.tfm
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/psnfss/omlptm.fd
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/psnfss/omlptm.fd
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/psnfss/omsptm.fd
INPUT /usr/local/texlive/2015/texmf-dist/tex/latex/psnfss/omsptm.fd
INPUT report.bbl
INPUT report.bbl
INPUT /usr/local/texlive/2015/texmf-dist/fonts/vf/adobe/times/ptmri7t.vf
INPUT /usr/local/texlive/2015/texmf-dist/fonts/tfm/adobe/times/ptmri8r.tfm
INPUT report.aux
INPUT /usr/local/texlive/2015/texmf-dist/fonts/enc/dvips/base/8r.enc
INPUT /usr/local/texlive/2015/texmf-dist/fonts/type1/public/amsfonts/cm/cmex10.pfb
INPUT /usr/local/texlive/2015/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi10.pfb
INPUT /usr/local/texlive/2015/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi7.pfb
INPUT /usr/local/texlive/2015/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi8.pfb
INPUT /usr/local/texlive/2015/texmf-dist/fonts/type1/public/amsfonts/cm/cmr10.pfb
INPUT /usr/local/texlive/2015/texmf-dist/fonts/type1/public/amsfonts/cm/cmr6.pfb
INPUT /usr/local/texlive/2015/texmf-dist/fonts/type1/public/amsfonts/cm/cmr7.pfb
INPUT /usr/local/texlive/2015/texmf-dist/fonts/type1/public/amsfonts/cm/cmsy10.pfb
INPUT /usr/local/texlive/2015/texmf-dist/fonts/type1/public/amsfonts/cm/cmsy6.pfb
INPUT /usr/local/texlive/2015/texmf-dist/fonts/type1/public/amsfonts/cm/cmsy7.pfb
INPUT /usr/local/texlive/2015/texmf-dist/fonts/type1/public/amsfonts/cm/cmsy8.pfb
INPUT /usr/local/texlive/2015/texmf-dist/fonts/type1/urw/times/utmb8a.pfb
INPUT /usr/local/texlive/2015/texmf-dist/fonts/type1/urw/times/utmbi8a.pfb
INPUT /usr/local/texlive/2015/texmf-dist/fonts/type1/urw/times/utmr8a.pfb
INPUT /usr/local/texlive/2015/texmf-dist/fonts/type1/urw/times/utmri8a.pfb
</file>

<file path="report/report.tex">
\documentclass[conference]{IEEEtran}
\usepackage{cite}
\usepackage{array}
\usepackage{graphicx}
\usepackage{amsthm}
\usepackage{amsmath}
\usepackage{listings}	% Used to add code
\lstset{language=Java}


\usepackage{float} %used to force figures in a position
\hyphenation{op-tical net-works semi-conduc-tor}

\theoremstyle{definition}
\newtheorem{definition}{Definition}[section]

\begin{document}
\title{Building a Compilator on Java for a mini-C Programming Language}

\author{\IEEEauthorblockN{J. Agust\'{i}n Barrachina}
\IEEEauthorblockA{IEEE Student Member\\
\'{E}cole Polytechnique\\
Universit\'{e} Saclay-Paris}
\and
\IEEEauthorblockN{Phil\'{e}mon Poux}
\IEEEauthorblockA{\'{E}cole Polytechnique\\
	Universit\'{e} Saclay-Paris}}
\maketitle

\tableofcontents
\newpage

\begin{abstract}
In this project, a compilator was created to generate a x86-64 assembler code from a C fragment called mini-C.
This is a 100\% C-compatible fragment, in the sense that any Mini C program is also a C program.
\end{abstract}

\IEEEpeerreviewmaketitle

\section{Introduction}
\textit{"Optimizing compilers are so difficult to get right that we dare say that no optimizing compiler is error-free! Thus, the most important objective in writing a compiler is that it is correct"}\cite{DRAGON_BOOK}

The reader is suppose to have some basic knowledge of C and for that reason almost no explanation regarding that language will be treated in this report. For further information about C language refer to \cite{LANGUAGE_C}.

Simply stated, a Compiler is a program that can read a code written in a specific programming language and translate it into an equivalent code of another language. A fairly good analogy can be made by a translator between two different languages like Spanish and French for example.

The objective of this project is to create a compiler for a fragment of C denominated \textit{Mini C} towrds a reasonably effective code x86-64. In this project, a ".s" file will be created containing the translation between the C file to assembly. After the file is generated, the use of another compiler will be needed to produce the final output file that can be run by the computer.

General knowledge of x86-64 assembly and the functioning of processors will also be required. The concept of the stack and registers like the callee saved and the caller saved must be clear for the reader.

\subsection{Mini C}
\subsubsection{What it does}
\textit{Mini C} is a fragment of the language C which contains integers and pointers to structures. \textit{Mini C} is 100\% compatible with C in the sense that every \textit{Mini C} program is also a C program. This will enable to use a C compiler such us \textbf{gcc} to use as reference.

\textit{Mini C} can deal both with integers and structures. It can even support pointers inside structures to other structures or to the same structure in order to create lists for example. Mini is a Turing Complete language thus, despite its small structure, every single code in C can be reduced to \textit{Mini C}.

\subsubsection{What it doesn't}
%TODO: ADD STUFF NOT IMPLEMENTED.
\textit{Mini C} can deal both with integers and structures. But it doesn't work with any other types of variables such as floating point numbers or characters directly.

%The function \textit{sizeof} is not yet implemented. The compiler will %read it correctly and will know the program is correctly written but it %will not know how to translate \textit{sizeof} resulting in an %incomplete and broken assembly code.

\textit{Mini C} doesn't implement a for loop. Even though is almost the same as implementing a while loop. It was not believed to be relevant the implementation of it as an academic objective as the implementation of it will only require time but will not help in the better understanding of a compiler.
 
The "++" and "- -" commands to increase or decrease a variables value were not implemented as well.

\subsubsection{Known bugs and work to be done}
%TODO: add bugs

There was no real communication between the typer and the RTL (section \ref{sec:RTL}) generation code. For which reason, the toRLT function had to create in some cases some information already treated. This was not only working twice but also made the syntax class longer and more difficult to read. It is work for the future to create a better communication between both parts.

In the program, global structures were not yet implemented, although the code is prepared for it. In the section of code which it should be done, a throw error is prompt saying that the global structures are not yet implemented. Other uses with structures are implemented but prone to bugs as no enough debugging was made in this area. 

Although the compiler computes "$5 + 4$" directly as $9$, it will fail to do so when more complex integer operations are done like "$4 * 9 + (4 \&\& 0)$". It is to be done more optimization on this side. Jumps are also always done by the program itself and the compiler will not compute a "if(1)" as a direct jump to the section of code inside the if loop.

The Appel \& George algorithm can be applied for coloring the interference graph (section \ref{sec:coloring}) in order to achieve better registers assignments for a better optimized assembly code.

\subsection{Structure of a Compiler}\label{sub_structure_of_a_compiler}

A compiler can be divided into two parts. The \textit{analysis} (front end) and the \textit{synthesis} (back end)

The \textit{analysis} brakes the source program into constituent pieces and imposes a grammatical structure of them in order to create a intermediate representation of the source program. During this part, syntactical formation and semantical unsound is checked. The analysis also collects information about the source program and stores it in a data structure called a \textit{symbol table} which will be used by the \textit{synthesis} part.

The \textit{synthesis} part makes use of the \textit{symbol table} and the intermediate representation constructed by the analysis part and creates the target program.

A more detailed diagram of the structure can be seen in figure \ref{fig_struct_of_compilator}. Where the last part (Code Generation) correspond to the \textit{synthesis} phase and the rest are all from the \textit{analysis} phase. The diagram is longer that the one displayed, having also a converser from the assembler to the machine language and from there to the executable code. But in this project, those stages are not treated.

\begin{figure}[H]
\centering
\includegraphics[width=3cm]{images/Diagram.png}
\caption{Structure of a Compiler}
\label{fig_struct_of_compilator}
\end{figure}

\section{Lexical Analyzer} \label{sec:lexical-Analizer}
A lexical analyzer (\textit{Lexer}) is the first front-end step in compilers, matching keywords, comments, operators, etc, and generating a token stream for parsers called \textit{lexemes} consisting of a \textit{token name} and the \textit{attribute value}.
The \textit{token name} is an abstract symbol that will be used during syntax analysis, while the \textit{attribute value} is an entry in the \textit{symbol table} (discussed on \ref{sub_structure_of_a_compiler}) which will be used during the semantic analysis and the code generation.

The Lexer reads input from the programming language to compile (mini c in our case) and matches it against regular expressions and runs a corresponding action if such an expression is matched.

To make the Lexer are going to use:
\begin{itemize}
	\item Regular Expressions: To describe the lexemes
	\item Finite Automata: To recognize the expressions
\end{itemize}
\subsection{Regular Expressions}
The concept of regular expression arose in the 1950's when the American mathematician Stephen Cole Kleene formalized the description of a regular language.

A regular expression is a sequence of characters that define a search pattern. In other words, there are a conjunction of letters and digits that follow a certain rule.

Let us define \textit{letter} as any letter in the Latin alphabet and \textit{digit} any number [0-9]. Then we can define rules as follow:
\begin{equation}
0 | [1-9] (<digit>* | [])\label{reg_expr_example}
\end{equation}

Last equation \ref{reg_expr_example} is a declaration of a decimal digit. The "$|$" is a logic or, it means, either the digit is 0 or it will be another thing. If it is not only 0, the number cannot start by 0 in C syntax, so it must start with a digit different from 0, which is range from 1 to 9 (encoded as [0-9]). Secondly, this digit can be followed by either nothing (represented by: []) or by any digit for as many digits are they must be. The format $<$rule$>$* means the repetition of a rule for as many times as necessary, or no repetition at all.

% We could add another example here, for example a comment line or sth.
\subsection{Finite Automata}
A \textit{finite automata} is basically a binary graph which just say "yes" or "no" by means of a \textit{recognizer} to each possible string.

There are two different classes of automatas:
\begin{enumerate}
	\item \textit{Nondeterministic Finite Automata} (NFA)
	\item \textit{Deterministic Finite Automata} (DFA)
\end{enumerate}
The first class (NFA) have no restrictions on the labels of their edges. A symbol can label several edges out of the same state. The DFA on the other hand have for each state and symbol exactly one edge with that symbol leaving that state.
%translate to english...

\subsection{Implementation}

For the lexical analyzer, a flex library was used \cite{JFLEX}. A .flex file was created and then, by means of jflex, converted to the final java class.

Jflex lexers are based on a DFA automata. For more information about jflex library please refer to \cite{JFLEX_MANUAL}.

The work of the lexer was only to read input from the file and create new symbols (\textit{lexemes}) containing the information as explained in \ref{sec:lexical-Analizer}.

\section{Syntax Analyzer} \label{sub_syntax_analyzer}

The syntax of a programming language describes the proper form of its programs.

The \textit{syntax analyzer} or \textit{parser} uses the first component of the \textit{lexemes}, the \textit{tokens}. The \textit{parser} creates some kind of tree representation that depicts the grammatical structure of the token stream called the \textit{syntax tree}. In this tree, each node represent an operation and the children of the node represent the arguments of that operation.

\begin{figure}[H]
	\centering
	\includegraphics[width=3cm]{images/syntax_tree.png}
	\caption{Syntax Tree Example}
	\label{fig_syntax_tree_example}
\end{figure}

On figure \ref{fig_syntax_tree_example} an example of a tree representation can be seen. Many syntaxes can be the cause of that tree, for example, both \ref{(2*((x)+1))} and \ref{2*(x+1)} can be used to generate such tree.

\begin{equation}
2*(x+1)
\label{2*(x+1)}
\end{equation}

\begin{equation}
(2*((x)+1))
\label{(2*((x)+1))}
\end{equation}

\subsection{Implementation}

The Syntax Analyzer was done using CUP, a parser generator for java \cite{CUP}.

In that file, precedence where applied to each operator using the following table:
\begin{table}[H]
	\begin{center}
	\begin{tabular}{||c c||}
		\hline
		Operator & Associativity  \\ [0.5ex]
		\hline\hline
		= & right \\
		\hline
		$|$$|$ & left  \\
		\hline
		\&\& & left  \\
		\hline
		== != & left  \\
		\hline
		$<$ $<$= $>$ $>$= & left \\ [1ex]
		\hline
		+ - & left \\
		\hline
		* / & left \\
		\hline
		! -(negative) & right \\
		\hline
		-$>$ & left \\
		\hline
	\end{tabular}
	\end{center}
	\caption{Precedence} \label{tab_precedence}
\end{table}

The higher the operator is in the table, the last will it be applied. For example, the operator "=" will be applied after all the other operators have been applied. There is a very simple way to apply this table in the .cup file by simply writing the following command: precedence <associativity> <token name>. Where associativity is either left or right and the token name is the token from the \textit{lexem} created by the Lexer.

After the precedence, the following grammar was implemented (table \ref{tab_grammar}). The details on how to implement it where omitted. In order to see how to implement the following grammar in cup please refer to the user manual \cite{CUP_MANUAL}.

\begin{table}[H]
	\begin{center}
		\begin{tabular}{ | m{1.5cm} | m{6.5cm}| }
			\hline
			$<$ file $>$ & $<$ decl $>$* EOF \\
			\hline
			$<$ decl $>$ & $<$ var $>$ $|$ $<$ type $>$ $|$ $<$ funct $>$ \\
			\hline
			$<$ var $>$ & int $<$ ident $>^{+},$ ; \newline
						struct $<$ ident $>$ ( *$<$ ident $>^{+},$ ) ; \\
			\hline
			$<$ type $>$ & struct $<$ ident $>$ { $<$ var $>$* } ; \\
			\hline
			$<$ funct $>$ & int $<$ ident $>$ ( $<$ param $>^{*},$ ) $<$ bloc $>$ \newline
							struct $<$ ident $>$ * $<$ ident $>$ ($<$ param $>^{*},$) $<$ bloc $>$ \\
			\hline
			$<$ param $>$ & int $<$ ident $>$ $|$ struct $<$ ident $>$ * $<$ ident $>$ \\
			\hline
			$<$ expr $>$ & 	$<$ integer $>$ \newline
							$<$ ident $>$ \newline
							$<$ expr $>$ -$>$ $<$ ident $>$ \newline
							$<$ ident $>$ ( $<$ expr $>^{*},$ ) \newline
							! $<$ expr $>$ $|$ -$<$ expr $>$ \newline
							$<$ expr $>$ $<$ op $>$ $<$ expr $>$ \newline
							sizeof ( struct $<$ ident $>$ ) \newline
							( $<$ expr $>$ )	\\
			\hline
			$<$ op $>$ & = $|$ == $|$ != $|$ + $|$ - $|$ * $|$ / $|$ \&\& $|$ $<$ $|$ $<$= $|$ $>$ $|$ $>$= $|$ $|$$|$ \\
			\hline
			$<$ instr $>$ & ; \newline
							$<$ expr $>$; \newline
							if ( $<$ expr $>$ ) $<$ instr $>$\newline
							if ( $<$ expr $>$ ) $<$ instr $>$ else $<$ instr $>$ \newline
							while ( $<$ expr $>$ ) $<$ instr $>$ \newline
							$<$ bloc $>$ \newline
							return $<$ expr $>$; \\
			\hline
			$<$ instr $>$ & { $<$ var $>*$ $<$ instr $>*$  } \\
			\hline
		\end{tabular}
	\end{center}
	\caption{Grammar} \label{tab_grammar}
\end{table}

Where '$|$' is either one or the other is found. The '*' is as many as necessary (including none at all), while on the other hand, '+' means as many as necessary but at least one. If under any of those symbols there is a comma (',') it means there are comma indented.

As an example on how to read the table, wwe can see that within a file, one will find a list of declarations. These declarations can be either a variable  (global variables) or a structure declaration or functions. The declarations of functions have it's own parameters (or none) and a bloc in which it will be the code.
The bloc is composed by the declarations of the variables followed by instructions. The instructions are loops such as if or while or simply expressions. Expressions can be all type of C \& C ++ expressions such as integers, pointers, negation, call to functions, etc.

\section{Semantic Analyzer} \label{sec:semantic-analyzer}
\textit{"Well typed programs do not go wrong"}

The semantics of a programming language defines what each program does when executing.

A \textit{Semantic Analyzer} uses the \textit{syntax tree} and the information in the \textit{symbol table} to check the source program for semantic consistency with the language definition.

An important part of the \textit{semantic analysis} is the \textit{type checking} where it gathers type information and checks that each operator has matching operands.
An example of the type checking will be to make sure the index which whom an array is accessed is an integer and not any other incompatible type.
In a equation like \(8.0 + 4\), the type checking will make sure to convert the integer "4" into a floating point before making the operation.

The \textit{type checking} will make sure that the variables of a equation like \(e1 + e2\) are from the same type and reject the incoherent programs.
There are some languages that use \textbf{dynamic types}, which means they check they check the type of the variables dynamically. Such languages are for example PHP, Python or Lisp. On the other hand, there are also \textbf{static types} languages which is the compiler the one in charge on checking the types. For example OCaml, Java and C (which will be our case).

\subsection{Implementation}
The bigger and more critic class of the entire program was created in \textit{Syntax.java} class. An object of the class \textit{File}, created by the parser (which uses the lexer) implements a method called \textit{Typer} which takes care of what was explained in this section (\ref{sec:semantic-analyzer}).

\subsection{Results}
%TODO: something to add?
Our Typer types correctly all the good tests given beforehand. However there are still some functions that are not well implemented in the typer as far as lifespan of the variables is concerned. Indeed some tests provided such as "typing/bad/testfile-redef-4.c" are compiled but should fail. This is due to the lifespan of the local variables within the blocks. A solution could presumably be easily implemented but we had no success in trying and decided to move on forward in order to complete the project

\section{Code Generation}
In this section we will actually generate the assembly code itself. It takes as input an intermediate representation of the source program and maps it into the target language.
It is too difficult to be able to do this part in only one step. So it will actually be divided into 3 stages:
\begin{enumerate}
	\item \textit{Register Transfer Language} (RTL)
	\item \textit{Explicit Register Transfer Language} (ERTL)
	\item \textit{Location Transfer Language} (LTL)
\end{enumerate}
Each stage will be explained in their corresponding sub section.

\subsection{Register Transfer Language (RTL)} \label{sec:RTL}
For this stage we will use the \textit{syntax tree} created on \ref{sub_syntax_analyzer} in order to create what will be called as \textit{RTL tree}. We suppose that the local and global variables are already differenced and that the type of each variable recognized as it has been done in the last section.

The main objective (more precisely the first part) of the RTL is to create a set of instructions x86-64 from the operations of C.

The second phase is to create a a \textit{Register Transfer Language}. Here a \textit{Control Float Graph} (CFG) is created that will facilitate the ulterior phases and that will eliminate the distinction between statements and expressions. This RTL will create the so called pseudo registers, which are an infinite number of intermediate registers to realize operations. This registers will be converted into actual x86-64 registers in the future.

\subsubsection{Implementation}
Each file contains a list of declarations of functions (as can be seen on table \ref{tab_grammar}) that contains a bloc statement. Each function, contains a list of parameters and the list of declarations of variables.
A RTL graph is created for each function in a recursive way. As seen in table \ref{tab_grammar}, a function has a list of statements that will be converted into one or more assembler commands. For each command, a label will be created and saved into the RTL graph, the RTL graph will contain each assembly operation with a label of reference to it.

Each \textit{statement} and \textit{expression} class (declared in the syntax.java file) will have a "toRTL" method that will save it's label into the graph. The function "toRTL" will have as arguments:
\begin{itemize}
	\item \textbf{Register} Register to be used.
	\item \textbf{Exit Label} The label to which the program will go after making the current instruction.
	\item \textbf{The RTL graph which will be added} In case it is necessary to add two instructions or more which is almost always the case.
\end{itemize}
Later on, there were added some more information to the function to be able to work with variables and structures.
\begin{itemize}
	\item \textbf{Variables} Is a Map that links a string with it's register. This is used to know in which pseudo-register each variable is stored in order access it. If the variable is not there, it is supposed to be global. The Typer section will make sure the global really exists.
	\item \textbf{Struct Defintion} Is a Map between a string (the structure name) and a list of strings which are all the variables inside the structure. This is used for knowing what number to add as an offset when doing something like $p->a$
	\item \textbf{Struct Declaration} This is a Map between all structure pointers and the structure they are actually pointing. To actually compute $p->a$ first it will be necessary to use the structure declaration to know which structure is it pointing and then use the structure definition to know the offset. Because of the typer, this Maps will always contain what is is looking for, but an extra level of security was add to display an error if some variable is not in the Map.
\end{itemize}
The RTL function will return it's own label to be given to the next toRTL call in order to line up every statement and expression.

To make \textbf{condition branches}, another function will be created called "toRTLc" which will receive two label, one to be done if the expression is true, and another in order to be done in the other case. The structure will be represented as toRTLc(e, s1Label, s2Label) where 'e' will be the expression with a true or false value. s1Label will be the label to go if 'e' is true and s2Label in the other case.

In order to realize the \&\& expression, for example with the case:
"if e1 \&\& e2 do s1 else s2"
The following conversion will be done:
\[toRTLc(e1 \&\& e2, s1Label, s2Label) -> \]
\[toRTLc(e1, toRTLc(e2, s1Label, s2Label), s2Label)\]

Using a similar logic, the expression:
"if e1 $|$$|$ e2 do s1 else s2"
will be converted:
\[toRTLc(e1 || e2, s1Label, s2Label) -> \]
\[toRTLc(e1, s1Label, toRTLc(e2, s1Label, s2Label))\]

In order to make the \textbf{negative sign}, for example \(-2\), the compiler actually does the operation \(0 - 2\).

In order to make the \textbf{not operation}, for example !a. The compiler does an if statement such as:
"if a then 0 else 1".
In which case, making something like !!41 will return 1 as a result. Which is what actually happens in C code.

Some simplifications were done when doing binary operations. The compiler will compute the line:
\[ x = 4 + 5\]
as
\[x = 9\]

%TODO: maybe I can put an example done by RTL it will be interesting but I'll check that later

\subsection{Explicit Transfer Language (ERTL)}

The \textit{Explicit Register Transfer Language} is in charge of the function call conventions. Here, the first parameters are sent to a function are stored in the registers which convention dictates will be used (\%rdi, \%rsi, \%rdx, \%rcx, \%r8, \%r9) and the rest of the parameters will be stocked at in the stack. Also, it will return the result of the function in the register \%rax. It will also make sure the registers known as \textit{callee saved} are correctly saved by the function before returning to the previous function.

During this stage, some pseudo-registers will be converted to real registers.

\subsubsection{Implementation} \label{sec:ERTL-implementation}

Inside a class ERTLfile was created. The class implements a method called "createERTL" that receives an RTL class and creates an ERTLfile class from it. Each RTL has an implementation of a method called "toERTL" that returns an ERTL class. This method is used by "createERTL" to create the ERTL file in question.

Basically, the RTL graph is maintained untouched (copied into ERTL almost as it was) except for the call to a function. There is also some extra code added to the beginning and the end of the function bloc.

For calling the function, the following was added:

\begin{enumerate}
	\item Move the arguments to the input registers and to the stack if necessary. The registers used as parameters of a function were declared as "Register.parameters". The code was done so that if this is to be changed later, adding or removing registers from the parameters list, nothing must be changed outside the Registers class.
	\item Make the call to the function.
	\item Save the result from register \%rax (Again, a definition Register.result was made that applies to \%rax). Should the return register be changed, only the class \textit{Register} must be changed.
	\item Recover the parameters on the stack with a manipulation of \%rsp.
\end{enumerate}

After entering a function. Some instructions where added.

\begin{enumerate}
	\item Allocate the frame stack
	\item Save all the \textit{callee saved} registers defined in "Register.callee\_saved"
	\item Recover all the parameters from "Registers.parameters"
\end{enumerate}

Before exiting the function, some other things are done:

\begin{enumerate}
	\item Copy the result to the result register (\%rax).
	\item Recover the \textit{callee saved} registers.
	\item Deallocate the frame stack.
	\item finish with the "ret" command.
\end{enumerate}

Once applying the changes discussed, the output would be as follows. A RTL function will be printed as:

\begin{lstlisting}
#10 main[]
entry  : L15
exit   : L11
locals : [#8]
	L15: mov $42 #11 --> L14
	L14: #10 <- call fact[#11] --> L13
	L13: Mmov #10 #8 --> L12
	L12: Mmov #8 #9 --> L11
\end{lstlisting}

While the ERTL extension will now be extended to:

\begin{lstlisting}
main(0)
entry  : L32
locals : [#8]
	L32: alloc_frame --> L31
	L31: Mmov %r12 #18 --> L30
	L30: Mmov %rbx #17 --> L15
	L15: mov $42 #11 --> L14
	L14: Mmov #11 %rdi --> L29
	L29: call fact(1) --> L28
	L28: Mmov %rax #10 --> L13
	L13: Mmov #10 #8 --> L12
	L12: Mmov #8 #9 --> L27
	L27: Mmov #9 %rax --> L11
	L11: Mmov #18 %r12 --> L35
	L35: Mmov #17 %rbx --> L34
	L34: delete_frame --> L33
	L33: return
\end{lstlisting}

Note that the return statement makes it unnecessary to have an extra field to save the exit label. There is also no need to tell the function who is been called, on which register is each parameter stored as by knowing only the number of parameters it will be enough for the function to know where they are. It can be seen also that they are many calls to registers that are not needed. All label L28, L13, L12 and L27 can be removed for example. Hopefully the following parts of the code will take care of reducing that to a more effective code.

\subsection{Location Transfer Language (LTL)}

The Location Transfer Language is the final stage before the actual production of the assembly code which will assign all the other pseudo-register to actual available registers and add, when needed, the rest of the register to the stack.

In the Location Transfer part, all the register are re-written using allocatable ones and if there is no need to do the actual operation, like for example in a case like "mov r1 r1", it will be replaced with a "goto L", where L is the label of the next operation.

To make the LTL graph, previous stages are needed. Which will be explained by what follows.

\subsubsection{Life Duration Analysis}

The definition of an \textit{alive variable} is as follows:

\theoremstyle{definition}
\begin{definition}{Alive Variable}
	A variable is said to be alive at a given breakpoint of the program if the value it contains is susceptible to be used in a future point of the execution code.
\end{definition}

Some other definitions will be needed to make:

\theoremstyle{definition}
\begin{definition}{def(I)}
	Defined as the set of variables defined by the instruction 'I'
\end{definition}
\theoremstyle{definition}
\begin{definition}{use(I)}
	Defined as the set of variables used by the instruction 'I'
\end{definition}

Here there are some examples of "def" and "use" registers for some simple commands:

\begin{table}[H]
	\begin{center}
		\begin{tabular}{||c | c | c||}
			\hline
			Instruction & def & use  \\ [0.5ex]
			\hline\hline
			mov n r & \{r\} &   $\emptyset$ \\
			\hline
			mov r x & $\emptyset$ & \{r\} \\
			\hline
			load n(r1) r2 & \{r2\} & \{r2\} \\
			\hline
			store r1 n(r2) & $\emptyset$ & \{r1, r2\} \\
			\hline
		\end{tabular}
	\end{center}
	\caption{def \& use} \label{tab:def-and-use}
\end{table}

Having defined that, we are going to make two more definitions:

\theoremstyle{definition}
\begin{definition}{in(I)}
	Defined as the set of variables alive at the moment of the call of instruction 'I'
\end{definition}
\theoremstyle{definition}
\begin{definition}{in(I)}
	Defined as the set of variables alive at the moment of exit from the instruction 'I'
\end{definition}

We can generate two equations for these new definitions as follows:

\begin{align*}
	\left\{
	\begin{array}{cl}
		in(I) & = use(I) \cup (out(I) \setminus def(I)) \\
		out(I) & = \cup_{s \in succ(I)}in(s) \\
	\end{array}
	\right.
\end{align*}

The algorithm is applied by recursion and iterates until the smallest fixed point. We actually implemented the Kildall algorithm that is not as costly as this naive algorithm that, in the wors cases, is of complexity $\mathcal{O}(N^4)$ where $N$ is the number of vertices. The Kildall algorithm only recomputes values that have changed and do not iterate over the whole table each time. We used a stack to store the vertices that had changed and had to be recomputed and in order not to add them twice we implemented a HashMap \textit{labelsInStack}.
%TODO: do you want to say something here?

\subsubsection{Interference Graph}

An interference graph is created using the information obtained by the \textit{Life Duration Analysis}.

\theoremstyle{definition}
\begin{definition}{Interference}
	Two variables are said to interfere if they cannot use the same register or memory location.
\end{definition}

The interference graph is it's a non oriented one that contains all the variables with two types of connections, \textit{interference} or \textit{preference}.

If we go back to the example given on \ref{sec:ERTL-implementation} which contained the ERTL result of a simple function. In this case, all registers \%rax, r10, r8 and r9 should connect with themselves in order to be able to remove all the "mov" commands.

\subsubsection{Coloring} \label{sec:coloring}

In this stage, the actual allocatable registers are mapped with the pseudo-registers so that all registers left are actually the ones being used in the assembly code. This section could be seen as actually coloring the interference graph, where each color is an actual allocatable register.

One of the best's algorithms to implement this stage is the one from George and Appel \cite{COLORING}. However this code was not applied in the code, but a simpler one was made.

\subsubsection{Implementation}

Each section described (Life Duration, Interference Graph and Coloring) was implemented with different classes each in the java files Arcs.java, Liveness.java and Coloring.java.

For the \textbf{Life Duration Analysis}, each ERTL class will implement both "use" and "def" functions which will give a set of \textit{Registers} defined for each ERTL command.
The Kildall algorithm was then applied.

To create the \textbf{interference graph} the following logic was applied. For every instruction that defines a variable $v$  which the alive variables in "out" are \(w_{1}, ..., w_{n}\):
\begin{itemize}
	\item For the instruction mov $w$ $v$, we add interference between $v$ and all $w_{i}$ different from $w$. And we add the preference between $v$ and $w$.
	\item For every other instruction we add the interference between $v$ and all $w_{i}$ with \(i \in [1, ..., n]\)
\end{itemize}

For \textbf{Coloring} the interference graph, first a "possible" registers list was made for each pseudo-register with all the possible allocatable registers that could be used for that pseudo-register. After the list was made, some iterations were made to assign all the pseudo-registers by the following functions (and in that order).

\begin{enumerate}
	\item \textit{onlyOnePossiblity} In this function, every register with one and only one possibility was assigned to that register only if that same register appeared as a preferred one.
	\item \textit{onlyOnePossibility2} In this function, every register with one and only one possibility was assigned to that register regardless if that same register appeared as a preferred one.
	\item \textit{preferredOne} In this function, every register was assigned to a possible register if that register appeared as a preferred one.
	\item \textit{preferredPseudo} In this function, if the preferred register is a pseudo-register (not listed in the possible register list), it checks if that register (the preferred one) has already been assigned to a allocatable register and, if that allocatable register is not in the interference, it assigns it to himself.
	\item \textit{assignTheRest} In here the registers were assigned to whatever register possible left.
	\item \textit{spillRegisters} If there are register left without possibilities just stack them.
\end{enumerate}

The reason why 1 and 2 are not made together was because if two registers say r1 and r2 have only one option and they interfere with each other, then one of those will be forced be stored in the stack. If one of those register however, has the option as preferred while the other doesn't, then that register will not be chosen as the one stored on the stack.

Each ERTL subclass applies "toLTL" method. Equivalent as the RTL application of "toERTL", the LTL graph is created using the color graph created. In this section, every register is directly replaced with the register contained in the color graph. If the replacement of it makes the operation meaningless, then the operation is replaced by a "goto" command. The allocate and deallocate stack frame can now be replaced by the actual number or by a "goto" if that number is empty.

IN the following code we can see how the example shown in \ref{sec:ERTL-implementation} is presented in the LTL graph.

\begin{lstlisting}
main()
entry  : L32
	L32: goto L31
	L31: goto L30
	L30: goto L15
	L15: mov $42 %rdi --> L14
	L14: goto L29
	L29: call fact --> L28
	L28: goto L13
	L13: goto L12
	L12: goto L27
	L27: goto L11
	L11: goto L35
	L35: goto L34
	L34: goto L33
	L33: return
\end{lstlisting}

We can see that almost all the "mov" functions as well as the allocate and deallocate frame were replaced by the "goto" function.
As stated before, all registers \%rax, r10, r8 and r9 were mapped to the same colors so that all the "mov" operations on labels L28, L13, L12 and L27 were replaced by "goto".

\subsection{x86-64 Assembly Code}
\subsubsection{Implementation}
Finally, the final assembly code was generated from the LTL graph. This was done by something called \textit{Linearization} which visits the LTL graph creating the code.
Labels are created when visiting each for a second time. That means that a "goto L" will not generate the L label by it's own. The code on the label L will be put where the operation "goto L" was placed and L will be added to a visited list. If another operation "goto L" appears, then there it will be replaced by a "jmp L" only in that case.
Two functions mutually recursive are created to make the \textit{Linearization}.

\begin{enumerate}
	\item \textbf{lin} Giving a certain label, lin created the code if the label was not yet visited. If not it creates a jmp to that label, marking that label as needed (so that it is actually added to the file).
	\item \textbf{instr} Done by the visitor, this generates the code by a given label without checking any condition.
\end{enumerate}

An example on how the recursion is done will be as follows.
\begin{lstlisting}
instr(L1 : mov n d -> L) :=
		produce L1 : mov n d
		call lin(L)
\end{lstlisting}

For branching cases, special care will be taken to choose in which order to apply lin for both labels to make sure that, if possible, only one jump is needed. Both the conditional jump and the forced jump implementation will try to be avoided.

\section{Conclusion}

The implementation of a compiler proved to be very time consuming and very difficult to debug. Following the lectures and faithfully as possible proved to be the most efficient tool for debugging and making the correct implementation of the code.

It is a personal pride having been able to implement a working compiler although with bugs and incomplete in some aspects. The general knowledge of how to do it and the theory of how the compiler work were correctly assimilated.

% use section* for acknowledgment
%\section*{Acknowledgment}

% Bibliography
\newpage
\IEEEtriggeratref{8}
\bibliographystyle{IEEEtran}
\bibliography{ref}

\end{document}
</file>

<file path="report/report.toc">
\contentsline {section}{\numberline {I}Introduction}{1}
\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {I-A}}Mini C}{1}
\contentsline {subsubsection}{\numberline {\unhbox \voidb@x \hbox {I-A}1}What it does}{1}
\contentsline {subsubsection}{\numberline {\unhbox \voidb@x \hbox {I-A}2}What it doesn't}{2}
\contentsline {subsubsection}{\numberline {\unhbox \voidb@x \hbox {I-A}3}Known bugs and work to be done}{2}
\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {I-B}}Structure of a Compiler}{2}
\contentsline {section}{\numberline {II}Lexical Analyzer}{2}
\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {II-A}}Regular Expressions}{2}
\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {II-B}}Finite Automata}{3}
\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {II-C}}Implementation}{3}
\contentsline {section}{\numberline {III}Syntax Analyzer}{3}
\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {III-A}}Implementation}{3}
\contentsline {section}{\numberline {IV}Semantic Analyzer}{4}
\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {IV-A}}Implementation}{4}
\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {IV-B}}Results}{4}
\contentsline {section}{\numberline {V}Code Generation}{4}
\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {V-A}}Register Transfer Language (RTL)}{4}
\contentsline {subsubsection}{\numberline {\unhbox \voidb@x \hbox {V-A}1}Implementation}{4}
\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {V-B}}Explicit Transfer Language (ERTL)}{5}
\contentsline {subsubsection}{\numberline {\unhbox \voidb@x \hbox {V-B}1}Implementation}{5}
\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {V-C}}Location Transfer Language (LTL)}{6}
\contentsline {subsubsection}{\numberline {\unhbox \voidb@x \hbox {V-C}1}Life Duration Analysis}{6}
\contentsline {subsubsection}{\numberline {\unhbox \voidb@x \hbox {V-C}2}Interference Graph}{6}
\contentsline {subsubsection}{\numberline {\unhbox \voidb@x \hbox {V-C}3}Coloring}{6}
\contentsline {subsubsection}{\numberline {\unhbox \voidb@x \hbox {V-C}4}Implementation}{6}
\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {V-D}}x86-64 Assembly Code}{7}
\contentsline {subsubsection}{\numberline {\unhbox \voidb@x \hbox {V-D}1}Implementation}{7}
\contentsline {section}{\numberline {VI}Conclusion}{7}
\contentsline {section}{References}{8}
</file>

<file path="src/mini_c/Arcs.java">
package mini_c;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.function.Function;

class Arcs {
    Set<Register> prefs = new HashSet<>();
    Set<Register> intfs = new HashSet<>();
}

class Interference {
    Map<Register, Arcs> graph;

    Interference(Liveness lg) {
        graph = new HashMap<>();
        // Add preference
        for ( Map.Entry<Label, LiveInfo> l : lg.info.entrySet()) {  // For every label in ERTL
            LiveInfo li = l.getValue();
            if ( (li.instr instanceof ERmbinop) && ( ((ERmbinop)li.instr).m == Mbinop.Mmov)) { // Mmov v w
                Register w = ((ERmbinop)li.instr).r1;   //get both registers involved
                Register v = ((ERmbinop)li.instr).r2;
                Arcs arcsv = new Arcs();
                Arcs arcsw = new Arcs();
                if (graph.get(v) != null) { arcsv = graph.get(v); }
                if (graph.get(w) != null) { arcsw = graph.get(w); }
                arcsw.prefs.add(v);
                arcsv.prefs.add(w);
                graph.put(v, arcsv);
                graph.put(w, arcsw);
            }
        }
        //Add interference
        // (I don't remember why I did this separatelly but there must be a reason... And it there is none then I'm too afraid to change it now)
        for ( Map.Entry<Label, LiveInfo> l : lg.info.entrySet()) {  // For every label in ERTL
            LiveInfo li = l.getValue();
            if ( (li.instr instanceof ERmbinop) && ( ((ERmbinop)li.instr).m == Mbinop.Mmov)) { // Mmov v w
                Register w = ((ERmbinop)li.instr).r1;
                Register v = ((ERmbinop)li.instr).r2;
                Arcs arcsv = graph.get(v);
                for ( Register r : li.outs) {       // for all the other registers in out
                    if ( (r != w) && (r != v) ) {   // that are not v or w obviously
                        arcsv.intfs.add(r);         // Add as interference
                        graph.putIfAbsent(r, new Arcs());
                        graph.get(r).intfs.add(v);  // For both
                    }
                }
            }
            else {
                Register v = li.instr.getR();
                if (v != null) {
                    graph.putIfAbsent(v, new Arcs());       // Make sure I have it
                    Arcs arcsv = graph.get(v);
                    Register w = li.instr.getConflict();    // Does the ERTL has a conflict of registers?
                    if ( w != null) {   //
                        /* Maybe this is not necessary and I'm adding conflicts that should not be there
                        * This is not explained in the polycopie or the lectures but thinking about it I think this should be here
                        * If not I'm just adding interference which will make the final code less efficient in the worst case scenario
                        * But it will work anyway. */
                        arcsv.intfs.add(w);         // Add as interference
                        graph.putIfAbsent(w, new Arcs());   // Make sure w is in the graph
                        graph.get(w).intfs.add(v);  // For both
                    }
                    for ( Register r : li.outs) {       // for all the other registers in out
                        if ( (r != v) ) {               // that is not v obviously
                            graph.putIfAbsent(r, new Arcs());
                            arcsv.intfs.add(r);         // Add as interference
                            graph.get(r).intfs.add(v);  // For both
                        }
                    }
                }
            }
        }
    }

    void print() {
        System.out.println("interference:");
        for (Register r: graph.keySet()) {
            Arcs a = graph.get(r);
            System.out.println("  " + r + " pref=" + a.prefs + " intf=" + a.intfs);
        }
    }
}
</file>

<file path="src/mini_c/Coloring.java">
package mini_c;

import java.util.*;

import static mini_c.Register.allocatable;

/**
 * Created by NEGU on 3/11/2017.
 */
class Coloring {
    Map<Register, Operand> colors = new HashMap<>();
    private Map<Register, Set<Register>> todo = new HashMap<>();
    int nlocals = 0;                                    // nombre d'emplacements sur la pile

    Coloring(Interference ig) {
        /* Make a list of all the registers to be assigned */
        for ( Map.Entry<Register, Arcs> i : ig.graph.entrySet() ) { // Get every register
            Register r = i.getKey();
            if (!allocatable.contains(r)) {                         // If it's a pseudo Register
                Set<Register> posibleColors = new HashSet<>();
                for ( Register allocatReg : allocatable ) {             // Add as possible colors every allocatable
                    if ( ! i.getValue().intfs.contains(allocatReg)) {   // that it's not in the interference
                        posibleColors.add(allocatReg);
                    }
                }
                todo.put(r, posibleColors);
            }
        }
        //printTodoList();
        do {} while (onlyOnePossibility(ig)); // Do this until I have no only one posibility left
        do {} while (onlyOnePossibility2(ig));
        do {} while (preferredOne(ig));
        do {} while (preferredPseudo(ig));
        do {} while (assignTheRest(ig));
        spillRegisters();
        if (!todo.isEmpty()) { throw new Error("The todolist is still not empty"); }
    }

    /* This function checks from all the registers, if they have only one posible option and if that option is the prefered */
    private boolean onlyOnePossibility(Interference ig) {
        for (Map.Entry<Register, Set<Register>> tl : todo.entrySet()) { // go for every register in the todolist
            if (tl.getValue().size() == 1) {                    // If it has only one posible color
                Iterator<Register> iterator = tl.getValue().iterator();
                Register onlyPossible = iterator.next();         // The only posible color
                if ( ig.graph.get(tl.getKey()).prefs.contains(onlyPossible) ){ // Only one option and it's the prefered! good!
                    return addColour(tl.getKey(), onlyPossible, ig);
                }
             }
        }
        return false; // I have checked everyone and no one has only one possible that equals the prefered
    }
    /* This function checks from all the registers, if they have only one posible option */
    private boolean onlyOnePossibility2(Interference ig) {
        for (Map.Entry<Register, Set<Register>> tl : todo.entrySet()) { // go for every register in the todolist
            if (tl.getValue().size() == 1) {                    // If it has only one possible color
                Iterator<Register> iterator = tl.getValue().iterator();
                Register onlyPossible = iterator.next();         // The only possible color
                return addColour(tl.getKey(), onlyPossible, ig);                    // Let's try again to be sure there is not another one.
            }
        }
        return false; // I have checked everyone and no one has only one possible that equals the preferred
    }
    /* Check if the preferred is on the possibility list */
    private boolean preferredOne(Interference ig) {
        for (Map.Entry<Register, Set<Register>> tl : todo.entrySet()) { // go for every register in the todolist
            for ( Register preferredRegister : ig.graph.get(tl.getKey()).prefs ) {   // For every preferred register (Only one most of the time right?)
                if (tl.getValue().contains(preferredRegister)) { // If the preferred is possible
                    return addColour(tl.getKey(), preferredRegister, ig);
                }
            }
        }
        return false;
    }
    /* Similar to preferedOne but this time it checks if the prefered one is a pseudo-register */
    private boolean preferredPseudo(Interference ig) {
        for (Map.Entry<Register, Set<Register>> tl : todo.entrySet()) { // go for every register in the todolist
            for ( Register preferredRegister : ig.graph.get(tl.getKey()).prefs ) {
                if (!todo.containsKey(preferredRegister) && !ig.graph.get(tl.getKey()).intfs.contains(preferredRegister)) {
                    if (!ig.graph.get(tl.getKey()).intfs.contains(((Reg) colors.get(preferredRegister)).r)) {
                        removeRegisterAsOption(((Reg) colors.get(preferredRegister)).r, ig.graph.get(tl.getKey()).intfs);
                        colors.put(tl.getKey(), colors.get(preferredRegister));
                        todo.remove(tl.getKey());
                        addInterference(((Reg) colors.get(preferredRegister)).r, ig.graph.get(tl.getKey()).intfs, ig);
                        return true;
                    }
                }
            }
        }
        return false;
    }
    /* Ok, just do the rest of the list with whatever they can */
    private boolean assignTheRest(Interference ig) {
        for (Map.Entry<Register, Set<Register>> tl : todo.entrySet()) { // go for every register in the todolist
           if ( !tl.getValue().isEmpty() ) {    // if I have a possibility
               Iterator<Register> iterator = tl.getValue().iterator();
               Register possible = iterator.next();              // Get that possibility
               return addColour(tl.getKey(), possible, ig);
           }
        }
        return false;
    }
    /* Spill the others */
    private void spillRegisters() {
        // TODO: nlocals can actually be only used here right? instead of global? check is it's the case
        for (Map.Entry<Register, Set<Register>> tl : todo.entrySet()) { // For every register still in here
            if ( !tl.getValue().isEmpty() ) { throw new Error("Wanted to spill one that still has possibilities"); }
            Operand operand = new Spilled(nlocals);
            colors.put(tl.getKey(), operand);
            todo.remove(tl.getKey());
            nlocals++;
        }
    }

    /* Assigns a real Register to a pseudo register and delete it from the todolist*/
    private boolean addColour(Register pseudoRegister, Register realRegister, Interference interference) {
        Operand operand = new Reg(realRegister);    // Create the register
        colors.put(pseudoRegister, operand);       // get it to the colored graph
        removeRegisterAsOption(realRegister, interference.graph.get(pseudoRegister).intfs); // Remove the new register from the interferences
        todo.remove(pseudoRegister);       // remove it from the todolist
        return true;                    // Let's try again to be sure there is not another one.
    }
    private void removeRegisterAsOption(Register toBeRemoved, Set<Register> fromHere) {
        if (fromHere.isEmpty()) { return; }
        for ( Register r : fromHere) { // for all the registers interferences
            if (todo.containsKey(r)) {
                todo.get(r).remove(toBeRemoved);
            }
        }
    }
    private void addInterference(Register toBeAdded, Set<Register> fromHere, Interference interference) {
        if (fromHere.isEmpty()) { return; }
        for ( Register r : fromHere) { // for all the registers interferences
            interference.graph.get(r).intfs.add(toBeAdded);
            System.out.println("Register " + toBeAdded.toString() + " was added to an interference for " + r);
        }
    }

    public Operand get(Register register) {
        if (allocatable.contains(register)) { return new Reg(register); }
        else { return colors.get(register); }
    }

    void print() {
        System.out.println("coloring output:");
        for (Register r: colors.keySet()) {
            Operand o = colors.get(r);
            System.out.println("  " + r + " --> " + o);
        }
    }
    void printTodoList() {
        for (Map.Entry<Register, Set<Register>> tl : todo.entrySet()) {
            String key = tl.getKey().toString();
            String value = " -> ";
            for (Register r : tl.getValue()) {
                value += ( " " + r.toString() + ";");
            }
            System.out.println(key + value);
        }
    }
}
</file>

<file path="src/mini_c/ERTL.java">
package mini_c;

/** Explicit Register Transfer Language (ERTL) */

import java.util.*;

import static java.lang.Integer.max;
import static mini_c.Mbinop.Mmov;
import static mini_c.Register.*;

/** instruction ERTL */

/** les mêmes que dans RTL */

abstract class ERTL {
  abstract void accept(ERTLVisitor v);
  abstract Label[] succ();

  abstract Set<Register> def();
  abstract Set<Register> use();

  protected static Set<Register> emptySet = new HashSet<>();
  protected static Set<Register> singleton(Register r) { Set<Register> s = new HashSet<>(); s.add(r); return s; }
  protected static Set<Register> pair(Register r1, Register r2) { Set<Register> s = singleton(r1); s.add(r2); return s; }

  abstract Register getR();
  Register getConflict() { return null; }

  abstract void toLTL(LTLgraph lg, Coloring coloring, Label key, int n, int m);
}

class ERconst extends ERTL {
  public int i;
  public Register r;
  public Label l;
  ERconst(int i, Register r, Label l) { this.i = i; this.r = r; this.l = l; }
  void accept(ERTLVisitor v) { v.visit(this); }
  public String toString() { return "mov $" + i + " " + r + " --> " + l; }
  Label[] succ() { return new Label[] { l }; }
  @Override Set<Register> def() { return singleton(r); }
  @Override Set<Register> use() { return emptySet; }
  @Override Register getR() { return r; }
  @Override void toLTL(LTLgraph lg, Coloring coloring, Label key, int formals, int m) {
    Lconst lconst = new Lconst(this.i, coloring.get(r), l);
    lg.put(key, lconst);
  }
}

class ERaccess_global extends ERTL {
  public String s;
  public Register r;
  public Label l;
  ERaccess_global(String s, Register r, Label l) { this.s = s; this.r = r; this.l = l;  }
  void accept(ERTLVisitor v) { v.visit(this); }
  public String toString() { return "mov " + s + " " + r + " --> " + l; }
  Label[] succ() { return new Label[] { l }; }
  @Override Set<Register> def() { return singleton(r); }
  @Override Set<Register> use() { return emptySet; }
  @Override Register getR() { return r; }
  @Override void toLTL(LTLgraph lg, Coloring coloring, Label key, int formals, int m) {
    Operand o = coloring.get(this.r);
    if ( o instanceof Reg) {  // color(r) is a physic register
      Laccess_global laccess_global = new Laccess_global(this.s, ((Reg) o).r, this.l);
      lg.put(key, laccess_global);
    }
    else { // color(r) is in the pile
      /* L2 : mov %rbp n(%rsp) */
      Lmbinop lmbinop = new Lmbinop(Mmov, new Reg(tmp1), o, this.l);
      Label L2 = lg.add(lmbinop);
      /* L1 : mov x %rsp */
      Laccess_global laccess_global = new Laccess_global(this.s, tmp1, L2);
      lg.put(key, laccess_global);
    }
  }
}

class ERassign_global extends ERTL {
  public Register r;
  public String s;
  public Label l;
  ERassign_global(Register r, String s, Label l) { this.r = r; this.s = s; this.l = l;  }
  void accept(ERTLVisitor v) { v.visit(this); }
  public String toString() { return "mov " + r + " " + s + " --> " + l; }
  Label[] succ() { return new Label[] { l }; }
  @Override Set<Register> def() { return emptySet; }
  @Override Set<Register> use() { return singleton(r); }
  @Override Register getR() { return null; }
  @Override void toLTL(LTLgraph lg, Coloring coloring, Label key, int formals, int m) {
    Operand o = coloring.get(this.r);
    if ( o instanceof Reg) {  // color(r) is a physic register
      Lassign_global lassign_global = new Lassign_global(((Reg) o).r, this.s, this.l);
      lg.put(key, lassign_global);
    }
    else { // color(r) is in the pile
      /* L2 : mov %rbp n */
      Lassign_global lassign_global = new Lassign_global(tmp1, this.s, this.l);
      Label L2 = lg.add(lassign_global);
      /* L1 : mov n(%rsp) %rbp */
      Lmbinop lmbinop = new Lmbinop( Mmov, o, new Reg(tmp1), L2);
      lg.put(key, lmbinop);
    }
  }
}

class ERload extends ERTL {
  public Register r1;
  public int i;
  public Register r2;
  public Label l;
  ERload(Register r1, int i, Register r2, Label l) { this.r1 = r1;
    this.i = i; this.r2 = r2; this.l = l;  }
  void accept(ERTLVisitor v) { v.visit(this); }
  public String toString() { return "mov " + i + "(" + r1 + ") " + r2 + " --> " + l; }
  Label[] succ() { return new Label[] { l }; }
  @Override Set<Register> def() { return singleton(r2); }
  @Override Set<Register> use() { return singleton(r1); }
  @Override Register getR() { return r2; }
  @Override Register getConflict() { return r1; }
  @Override void toLTL(LTLgraph lg, Coloring coloring, Label key, int formals, int m) {
    Operand o1 = coloring.get(this.r1);
    Operand o2 = coloring.get(this.r2);
    if ( (o1 instanceof Reg) && (o2 instanceof Reg) ) { // Ideal case <3 two registers
      Lload lload = new Lload(((Reg) o1).r, this.i, ((Reg) o2).r, this.l);
      lg.put(key, lload);
    }
    else if ( (o1 instanceof Spilled) && (o2 instanceof Spilled) ) { // Worst case -.- two pill
      Lload lload = new Lload(tmp1, this.i, tmp2, this.l);
      Label L3 = lg.add(lload);
      Lmbinop lmbinop = new Lmbinop(Mmov, o2, new Reg(tmp2), L3);
      Label L2 = lg.add(lmbinop);
      lmbinop = new Lmbinop(Mmov, o1, new Reg(tmp1), L2);
      lg.put(key, lmbinop);
    }
    else {  // only one is on the pile
      if ( o1 instanceof Spilled ) {
        /* L2 : store rbp n(r2) */
        Lload lload = new Lload(tmp1, this.i, ((Reg)o2).r, this.l);
        Label L2 = lg.add(lload);
        /* L1 : mov n(rsp) rbp */
        Lmbinop lmbinop = new Lmbinop(Mmov, o1, new Reg(tmp1), L2);
        lg.put(key, lmbinop);
      }
      else if ( o2 instanceof Spilled) { // not necessary the else if but I think it's more clear
        /* L2 : store r1 n(r11) */
        Lload lload = new Lload( ((Reg)o1).r, this.i, tmp2, this.l);
        Label L2 = lg.add(lload);
        /* L1 : mov n(rsp) r11 */
        Lmbinop lmbinop = new Lmbinop(Mmov, o2, new Reg(tmp2), L2);
        lg.put(key, lmbinop);
      }
    }
  }
}

class ERstore extends ERTL {
  public Register r1;
  public Register r2;
  public int i;
  public Label l;
  ERstore(Register r1, Register r2, int i, Label l) { this.r1 = r1;
    this.r2 = r2; this.i = i; this.l = l;  }
  void accept(ERTLVisitor v) { v.visit(this); }
  public String toString() { return "mov " + r1 + " " + i + "(" + r2 + ") " + " --> " + l; }
  Label[] succ() { return new Label[] { l }; }
  @Override Set<Register> def() { return emptySet; }
  @Override Set<Register> use() { return pair(r1, r2); }
  @Override Register getR() { return r2; }
  @Override Register getConflict() { return r1; }
  @Override void toLTL(LTLgraph lg, Coloring coloring, Label key, int formals, int m) {
    Operand o1 = coloring.get(this.r1);
    Operand o2 = coloring.get(this.r2);
    if ( (o1 instanceof Reg) && (o2 instanceof Reg) ) { // Ideal case <3 two registers
      Lstore lstore = new Lstore(((Reg) o1).r, ((Reg) o2).r, this.i, this.l);
      lg.put(key, lstore);
    }
    else if ( (o1 instanceof Spilled) && (o2 instanceof Spilled)) { // Worst case -.- two pill
      Lstore lstore = new Lstore(tmp1, tmp2, this.i, this.l);
      Label L3 = lg.add(lstore);
      Lmbinop lmbinop = new Lmbinop(Mmov, o2, new Reg(tmp2), L3);
      Label L2 = lg.add(lmbinop);
      lmbinop = new Lmbinop(Mmov, o1, new Reg(tmp1), L2);
      lg.put(key, lmbinop);
    }
    else {  // only one is on the pile
      if ( o1 instanceof Spilled ) {
        /* L2 : store rbp n(r2) */
        Lstore lstore = new Lstore(tmp1, ((Reg)o2).r, this.i, this.l);
        Label L2 = lg.add(lstore);
        /* L1 : mov n(rsp) rbp */
        Lmbinop lmbinop = new Lmbinop(Mmov, o1, new Reg(tmp1), L2);
        lg.put(key, lmbinop);
      }
      else if ( o2 instanceof Spilled) { // not necessary the else if but I think it's more clear
        /* L2 : store r1 n(r11) */
        Lstore lstore = new Lstore( ((Reg)o1).r, tmp2, this.i, this.l);
        Label L2 = lg.add(lstore);
        /* L1 : mov n(rsp) r11 */
        Lmbinop lmbinop = new Lmbinop(Mmov, o2, new Reg(tmp2), L2);
        lg.put(key, lmbinop);
      }
    }
  }
}

class ERmunop extends ERTL {
  public Munop m;
  public Register r;
  public Label l;
  ERmunop(Munop m, Register r, Label l) { this.m = m; this.r = r; this.l = l; }
  void accept(ERTLVisitor v) { v.visit(this); }
  public String toString() { return m + " " + r + " --> " + l; }
  Label[] succ() { return new Label[] { l }; }
  @Override Set<Register> def() { return singleton(r); }
  @Override Set<Register> use() { return singleton(r); }
  @Override Register getR() { return r; }
  @Override void toLTL(LTLgraph lg, Coloring coloring, Label key, int formals, int m) {
    if ( (this.m instanceof Maddi) && ((Maddi)this.m).n == 0 ) {  // I'm adding 0... so just skip this step
      Lgoto lgoto = new Lgoto(this.l);
      lg.put(key, lgoto);
    }
    else {
      Lmunop lmunop = new Lmunop(this.m, coloring.get(this.r), this.l);
      lg.put(key, lmunop);
    }
  }
}

class ERmbinop extends ERTL {
  public Mbinop m;
  public Register r1;
  public Register r2;
  public Label l;
  ERmbinop(Mbinop m, Register r1, Register r2, Label l) { this.m = m; this.r1 = r1; this.r2 = r2; this.l = l;  }
  void accept(ERTLVisitor v) { v.visit(this); }
  public String toString() { return m + " " + r1 + " " + r2 + " --> " + l; }
  Label[] succ() { return new Label[] { l }; }
  @Override Set<Register> def() { 
    if (m == Mbinop.Mdiv) {
      assert (r2.equals(Register.rax));
      return pair(Register.rax, Register.rdx);
    }
    else { return singleton(r2); }
  }
  @Override Set<Register> use() {
    if (m == Mbinop.Mdiv) { return pair(Register.rax, r1); }
    else if (m == Mmov) { return singleton(r1); }
    else { return pair(r1, r2); }
  }
  @Override Register getR() { return r2; }
  @Override Register getConflict() { return r1; }
  @Override void toLTL(LTLgraph lg, Coloring coloring, Label key, int formals, int m) {
    Operand o1 = coloring.get(r1);
    Operand o2 = coloring.get(r2);
    if (o2 == null) { throw new Error("register " + r2.toString() + " returned null. Means it is not on coloring class. Maybe a problem with Coloring or Liveness"); }
    if (o1 == null) { throw new Error("register " + r1.toString() + " returned null. Means it is not on coloring class. Maybe a problem with Coloring or Liveness"); }
    switch (this.m) {
      case Mmov:
        if (o1.equals(o2)) { // mov r r
          Lgoto lgoto = new Lgoto(this.l);
          lg.put(key, lgoto);
          return;
        }
      case Mmul: // x86-64 imul need the second argument to be a physical register
        if (o2 instanceof Spilled) {
          /* L2 : imul r1 rbp -> L */
          Lmbinop lmbinop = new Lmbinop(this.m, o1, new Reg(tmp1), this.l);
          Label L2 = lg.add(lmbinop);
          /* L1 : mov r2 rbp -> L2 */
          lmbinop = new Lmbinop(Mmov, o2, new Reg(tmp1), L2);
          lg.put(key, lmbinop);
          return;
        }
      default:
        if (o1 instanceof Spilled && o2 instanceof Spilled) { // binary operations can't have both registers on memory!
          /* L2 : imul r1 rbp -> L */
          Lmbinop lmbinop = new Lmbinop(this.m, o1, new Reg(tmp1), this.l);
          Label L2 = lg.add(lmbinop);
          /* L1 : mov r2 rbp -> L2 */
          lmbinop = new Lmbinop(Mmov, o2, new Reg(tmp1), L2);
          lg.put(key, lmbinop);
        } else {  // Rest of the cases.
          Lmbinop lmbinop = new Lmbinop(this.m, o1, o2, this.l);
          lg.put(key, lmbinop);
        }
    }
  }
}

class ERmubranch extends ERTL {
  public Mubranch m;
  public Register r;
  public Label l1;
  public Label l2;
  ERmubranch(Mubranch m, Register r, Label l1, Label l2) { this.m = m; this.r = r; this.l1 = l1; this.l2 = l2;  }
  void accept(ERTLVisitor v) { v.visit(this); }
  public String toString() { return m + " " + r + " --> " + l1 + ", " + l2; }
  Label[] succ() { return new Label[] { l1, l2 }; }
  @Override Set<Register> def() { return emptySet; }
  @Override Set<Register> use() { return singleton(r); }
  @Override Register getR() { return r; }
  @Override void toLTL(LTLgraph lg, Coloring coloring, Label key, int formals, int m) {
    Operand o = coloring.get(this.r);
    if (o instanceof Reg) {
      Lmubranch lmubranch = new Lmubranch(this.m, ((Reg) o).r, this.l1, this.l2);
      lg.put(key, lmubranch);
    }
    else {
      Lmubranch lmubranch = new Lmubranch(this.m, tmp1, this.l1, this.l2);
      Label L2 = lg.add(lmubranch);
      Lmbinop lmbinop = new Lmbinop(Mmov, o, new Reg(tmp1), L2);
      lg.put(key, lmbinop);
    }
  }
}

class ERmbbranch extends ERTL {
  public Mbbranch m;
  public Register r1;
  public Register r2;
  public Label l1;
  public Label l2;
  ERmbbranch(Mbbranch m, Register r1, Register r2, Label l1, Label l2) {
    this.m = m; this.r1 = r1; this.r2 = r2; this.l1 = l1; this.l2 = l2;  }
  void accept(ERTLVisitor v) { v.visit(this); }
  public String toString() { return m + " " + r1 + " " + r2 + " --> " + l1 + ", " + l2; }
  Label[] succ() { return new Label[] { l1, l2 }; }
  @Override Set<Register> def() { return emptySet; }
  @Override Set<Register> use() { return pair(r1, r2); }
  @Override Register getR() { return r2; }
  @Override Register getConflict() { return r1; }
  @Override void toLTL(LTLgraph lg, Coloring coloring, Label key, int formals, int m) {
    Operand o1 = coloring.get(this.r1);
    Operand o2 = coloring.get(this.r2);
    if ( (o1 instanceof Reg) && (o2 instanceof Reg) ) { // Ideal case <3 two registers
      Lmbbranch lmbbranch = new Lmbbranch(this.m, ((Reg) o1).r, ((Reg) o2).r, this.l1, this.l2);
      lg.put(key, lmbbranch);
    }
    else if ( (o1 instanceof Spilled) && (o2 instanceof Spilled) ) { // Worst case -.- two pill
      Lmbbranch lmbbranch = new Lmbbranch(this.m, tmp1, tmp2, this.l1, this.l2);
      Label L3 = lg.add(lmbbranch);
      Lmbinop lmbinop = new Lmbinop(Mmov, o2, new Reg(tmp2), L3);
      Label L2 = lg.add(lmbinop);
      lmbinop = new Lmbinop(Mmov, o1, new Reg(tmp1), L2);
      lg.put(key, lmbinop);
    }
    else {  // only one is on the pile
      if ( o1 instanceof Spilled ) {
        /* L2 : store rbp n(r2) */
        Lmbbranch lmbbranch = new Lmbbranch(this.m , tmp1, ((Reg)o2).r, this.l1, this.l2);
        Label L2 = lg.add(lmbbranch);
        /* L1 : mov n(rsp) rbp */
        Lmbinop lmbinop = new Lmbinop(Mmov, o1, new Reg(tmp1), L2);
        lg.put(key, lmbinop);
      }
      else if ( o2 instanceof Spilled) { // not necessary the else if but I think it's more clear
        /* L2 : store r1 n(r11) */
        Lmbbranch lmbbranch = new Lmbbranch( this.m, ((Reg)o1).r, tmp2, this.l1, this.l2);
        Label L2 = lg.add(lmbbranch);
        /* L1 : mov n(rsp) r11 */
        Lmbinop lmbinop = new Lmbinop(Mmov, o2, new Reg(tmp2), L2);
        lg.put(key, lmbinop);
      }
    }
  }
}

class ERgoto extends ERTL {
  public Label l;
  ERgoto(Label l) { this.l = l;  }
  void accept(ERTLVisitor v) { v.visit(this); }
  public String toString() { return "goto " + l; }
  Label[] succ() { return new Label[] { l }; }
  @Override Set<Register> def() { return emptySet; }
  @Override Set<Register> use() { return emptySet; }
  @Override Register getR() { return null; }
  @Override void toLTL(LTLgraph lg, Coloring coloring, Label key, int formals, int m) {
    Lgoto lgoto = new Lgoto(this.l);
    lg.put(key, lgoto);
  }
}

/** modifiée */
class ERcall extends ERTL {
  public String s;
  public int i;
  public Label l;
  ERcall(String s, int i, Label l) { this.s = s; this.i = i; this.l = l;  }
  void accept(ERTLVisitor v) { v.visit(this); }
  public String toString() { return "call " + s + "(" + i + ") --> " + l; }
  Label[] succ() { return new Label[] { l }; }
  @Override Set<Register> def() { return new HashSet<>(Register.caller_save); }
  @Override Set<Register> use() {
    Set<Register> s = new HashSet<>();
    int k = i;
    assert (k <= Register.parameters.size());
    for (Register r: Register.parameters) {
      if (k-- == 0) break;
      s.add(r);
    }
    return s;
  }
  @Override Register getR() { return null; }
  @Override void toLTL(LTLgraph lg, Coloring coloring, Label key, int formals, int m) {
    // Now I don't have anymore the number of parameters because I no longer need them
    Lcall lcall = new Lcall(this.s, this.l);
    lg.put(key, lcall);
  }
}

/** nouvelles instructions */

class ERalloc_frame extends ERTL {
  public Label l;
  ERalloc_frame(Label l) { this.l = l;  }
  void accept(ERTLVisitor v) { v.visit(this); }
  public String toString() { return "alloc_frame --> " + l; }
  Label[] succ() { return new Label[] { l }; }
  @Override Set<Register> def() { return emptySet; }
  @Override Set<Register> use() { return emptySet; }
  @Override Register getR() { return null; }
  @Override void toLTL(LTLgraph lg, Coloring coloring, Label key, int n, int m) {
    if ( m == 0 ) {  // I'm adding 0... so just skip this step
      Lgoto lgoto = new Lgoto(this.l);
      lg.put(key, lgoto);
    }
    else {
      Lmunop lmunop = new Lmunop(new Maddi(-8 * m), new Reg(rsp), this.l);
      lg.put(key, lmunop);
    }
  }
}

class ERdelete_frame extends ERTL {
  public Label l;
  ERdelete_frame(Label l) { this.l = l;  }
  void accept(ERTLVisitor v) { v.visit(this); }
  public String toString() { return "delete_frame --> " + l; }
  Label[] succ() { return new Label[] { l }; }
  @Override Set<Register> def() { return emptySet; }
  @Override Set<Register> use() { return emptySet; }
  @Override Register getR() { return null; }

  @Override
  void toLTL(LTLgraph lg, Coloring coloring, Label key, int formals, int m) {
    if ( m == 0 ) {  // I'm adding 0... so just skip this step
      Lgoto lgoto = new Lgoto(this.l);
      lg.put(key, lgoto);
    }
    else {
      Lmunop lmunop = new Lmunop(new Maddi(8 * m), new Reg(rsp), this.l);
      lg.put(key, lmunop);
    }
  }
}

class ERget_param extends ERTL {
  public int i;
  public Register r;
  public Label l;
  ERget_param(int i, Register r, Label l) { this.i = i; this.r = r; this.l = l;  }
  void accept(ERTLVisitor v) { v.visit(this); }
  public String toString() { return "mov stack(" + i + ") --> " + l; }
  Label[] succ() { return new Label[] { l }; }
  @Override Set<Register> def() { return singleton(r); }
  @Override Set<Register> use() { return emptySet; }
  @Override Register getR() { return r; }
  @Override void toLTL(LTLgraph lg, Coloring coloring, Label key, int n, int m) {
    int s = 8 * (1 + max(0, n - parameters.size()) + m);
    Spilled o1 = new Spilled(this.i + s);
    Operand o2 = coloring.get(this.r);
    if ( o2 instanceof Reg ) {
      Lmbinop lmbinop = new Lmbinop(Mmov, o1, o2, this.l);
      lg.put(key, lmbinop);
    }
    else if (o2 instanceof Spilled) {  // The if is unnecessary but I think is more clear
      /* L2 : Mmov rbp n(rsp) -> L */
      Lmbinop lmbinop = new Lmbinop(Mmov, new Reg(tmp1), o2, this.l);
      Label L2 = lg.add(lmbinop);
      /* L1 : Mmov k(rsp) rbp -> L2 */
      lmbinop = new Lmbinop(Mmov, o1, new Reg(tmp1), L2);
      lg.put(key, lmbinop);
    }
  }
}

class ERpush_param extends ERTL {
  public Register r;
  public Label l;
  ERpush_param(Register r, Label l) { this.r = r; this.l = l;  }
  void accept(ERTLVisitor v) { v.visit(this); }
  public String toString() { return "push " + r + " --> " + l; }
  Label[] succ() { return new Label[] { l }; }
  @Override Set<Register> def() { return emptySet; }
  @Override Set<Register> use() { return singleton(r); }
  @Override Register getR() { return r; }
  @Override void toLTL(LTLgraph lg, Coloring coloring, Label key, int formals, int m) {
    Lpush_param lpush_param = new Lpush_param(coloring.get(this.r), this.l);
    lg.put(key, lpush_param);
  }
}

class ERreturn extends ERTL {
  ERreturn() {  }
  void accept(ERTLVisitor v) { v.visit(this); }
  public String toString() { return "return"; }
  Label[] succ() { return new Label[] { }; }
  @Override Set<Register> def() { return emptySet; }
  @Override Set<Register> use() {
    Set<Register> s = new HashSet<>(Register.callee_saved);
    s.add(Register.rax);
    return s;
  }
  @Override Register getR() { return null; }
  @Override
  void toLTL(LTLgraph lg, Coloring coloring, Label key, int formals, int m) {
    Lreturn lreturn = new Lreturn();
    lg.put(key, lreturn);
  }
}

/** une fonction ERTL */

class ERTLfun {
  /** nom de la fonction */
  public String name;
  /** nombre total d'arguments */
  public int formals;
  /** ensemble des variables locales */
  public Set<Register> locals;
  /** point d'entrée dans le graphe */
  public Label entry;
  /** le graphe de flot de contrôle */
  public ERTLgraph body;
  /** Duration of life variable */
  public Liveness info;
  /** Interference */
  private Interference interference;
  /** Color map */
  public Coloring coloring;
  /** backup registers for callee_saved (and to know where they are) */
  private LinkedList<Register> backUpReg;
  
  ERTLfun(String name, int formals) { this.name = name; this.formals = formals; this.locals = new HashSet<>(); }
  void accept(ERTLVisitor v) { v.visit(this); }

  /** pour débugger */
  void print() {
    System.out.println("== ERTL =========================");
    System.out.println(name + "(" + formals + ")");
    System.out.println("  entry  : " + entry);
    System.out.println("  locals : " + locals);
    body.printWithLife(new HashSet<>(), this.entry, this.info);
    if (interference != null) { interference.print(); }
    if (coloring != null ) { coloring.print(); }
  }

  void createFun(RTLfun rfun) {
    backUpReg = new LinkedList<>();
    this.locals = rfun.locals;
    this.body = new ERTLgraph();
    for (Map.Entry<Label, RTL> rtl : rfun.body.graph.entrySet()) {  // RTL -> ERTL
      this.body.put(rtl.getKey(), rtl.getValue().toERTL(rfun.exit, this.body));
    }
    startERTLGraph(rfun.entry, rfun.formals);   // Add the begining of the function call
    returnERTLGraph(rfun.exit);   // Add the end of the function call
    createLiveness();             // create Live
    createInterference();         // Interference
    createColormap();             // Colorate
  }
  /* Make the start of the function */
  private void startERTLGraph(Label current, List<Register> formals) {
    int i = 0;
    for (Iterator<Register> it = formals.iterator(); it.hasNext(); i++) {
      if (i < parameters.size()) { // Get the first arguments in registers
        ERmbinop erb = new ERmbinop(Mmov, parameters.get(i), it.next(), current);
        current = this.body.add(erb);
      }
      else { // The other arguments in the pile
        ERget_param getPam = new ERget_param((i - parameters.size()), it.next(), current);
        current = this.body.add(getPam);
      }
    }
    for ( i = 0 ; i < callee_saved.size(); i++ ) { // for every input
      backUpReg.add(new Register());
      ERmbinop er = new ERmbinop(Mmov, callee_saved.get(i), this.backUpReg.get(i), current);
      current = this.body.add(er);
    }
    ERalloc_frame alloc = new ERalloc_frame(current);
    current = new Label();
    this.body.put(current, alloc);
    this.entry = current;
  }
  /* Make the return part. This function will take an already done graph and add the part for the return */
  private void returnERTLGraph(Label exit) {
    ERreturn eRreturn = new ERreturn();
    Label current = this.body.add(eRreturn);
    ERdelete_frame del = new ERdelete_frame(current);
    if (  callee_saved.size() == 0 ) {
      System.out.println("Warning: Check the Registers class, there are no callee saved");
      this.body.put(exit, del);
    }
    else { current = this.body.add(del); } // Normally this case should happen
    for ( int i = 0 ; i < callee_saved.size(); i++ ) {
      ERmbinop er2 = new ERmbinop(Mmov, this.backUpReg.get(i), callee_saved.get(i), current);
      if ( i == (callee_saved.size() - 1) ) { // The last one should go to exit kind of.
        this.body.put(exit, er2);
      }
      else { current = this.body.add(er2); }
    }
  }
  private void createLiveness() { info = new Liveness(this.body); }
  private void createInterference() {
    if (info == null) { throw new Error("to create interference, info must be created"); }
    interference = new Interference(info);
  }
  private void createColormap() {
    if ( interference == null) { throw new Error("To create colormap, the interference must first be done"); }
    coloring = new Coloring(interference);
  }
}

class ERTLfile {
  LinkedList<String> gvars;
  LinkedList<ERTLfun> funs;
  ERTLfile() {
    this.gvars = new LinkedList<>();
    this.funs = new LinkedList<>();
  }
  void accept(ERTLVisitor v) { v.visit(this); }

  void convertRTLfile(RTLfile rtLfile) {
    this.gvars = rtLfile.gvars;
    for (RTLfun rtlfun : rtLfile.funs) { // for every function in ERTLfun
      ERTLfun ertlfun = new ERTLfun(rtlfun.name, rtlfun.formals.size()); // Create a RTLfun
      ertlfun.createFun(rtlfun);
      this.funs.add(ertlfun);
    }
  }
  /** pour débugger */
  void print() {
    for (ERTLfun fun: this.funs)
      fun.print();
  }
}

/** graphe de flot de contrôle (d'une fonction)
 * 
 * c'est un dictionnaire qui associe une instruction de type RTL
 * à une étiquette de type Label
 */
class ERTLgraph {
  Map<Label, ERTL> graph = new HashMap<Label, ERTL>();

  /** ajoute une nouvelle instruction dans le graphe
    * et renvoie son étiquette */
  Label add(ERTL instr) {
    Label l = new Label();
    graph.put(l, instr);
    return l;
  }
  
  void put(Label l, ERTL instr) {
    graph.put(l, instr);
  }
  
  // imprime le graphe par un parcours en profondeur
  private void print(Set<Label> visited, Label l) {
    if (visited.contains(l)) return;
    visited.add(l);
    ERTL r = this.graph.get(l);
    if (r == null) return; // c'est le cas pour exit
    System.out.println("  " + String.format("%3s", l) + ": " + r );
    for (Label s: r.succ()) print(visited, s);
  }
  void printWithLife(Set<Label> visited, Label l, Liveness info) {
    if (visited.contains(l)) return;
    visited.add(l);
    ERTL r = this.graph.get(l);
    if (r == null) return; // c'est le cas pour exit
    System.out.println("  " + String.format("%3s", l) + ": " + r + info.info.get(l) );
    for (Label s: r.succ()) printWithLife(visited, s, info);
  }
  /* imprime le graphe (pour debugger) */
  void print(Label entry) {
    print(new HashSet<Label>(), entry);
  }
}

interface ERTLVisitor {
  public void visit(ERconst o);
  public void visit(ERaccess_global o);
  public void visit(ERassign_global o);
  public void visit(ERload o);
  public void visit(ERstore o);
  public void visit(ERmunop o);
  public void visit(ERmbinop o);
  public void visit(ERmubranch o);
  public void visit(ERmbbranch o);
  public void visit(ERgoto o);
  public void visit(ERcall o);
  public void visit(ERalloc_frame o);
  public void visit(ERdelete_frame o);
  public void visit(ERget_param o);
  public void visit(ERpush_param o);
  public void visit(ERreturn o);
  public void visit(ERTLfun o);
  public void visit(ERTLfile o);
  }

class EmptyERTLERTLVisitor implements ERTLVisitor {
  public void visit(ERconst o) {}
  public void visit(ERaccess_global o) {}
  public void visit(ERassign_global o) {}
  public void visit(ERload o) {}
  public void visit(ERstore o) {}
  public void visit(ERmunop o) {}
  public void visit(ERmbinop o) {}
  public void visit(ERmubranch o) {}
  public void visit(ERmbbranch o) {}
  public void visit(ERgoto o) {}
  public void visit(ERcall o) {}
  public void visit(ERalloc_frame o) {}
  public void visit(ERdelete_frame o) {}
  public void visit(ERget_param o) {}
  public void visit(ERpush_param o) {}
  public void visit(ERreturn o) {}
  public void visit(ERTLfun o) {}
  public void visit(ERTLfile o) {}
  }
</file>

<file path="src/mini_c/flex+cup.bat">
jflex Lexer.flex
java -jar "C:\JavaTools\jflex-1.6.1\lib\java-cup-11a.jar" -parser Parser Parser.cup
pause
</file>

<file path="src/mini_c/Label.java">
package mini_c;

/** étiquette */
public class Label {
	
	private static int next = 0; // Creates a counter
	
	final String name;
	
	Label() {
		next++;
		this.name = "L" + next; 	// Labels variables like L1, L2, L..., Ln
	}
	
	@Override
	public int hashCode() {
		return this.name.hashCode();
	}
	@Override
	public boolean equals(Object o) {
		Register that = (Register)o;
		return this.name.equals(that.name);
	}
	@Override
	public String toString() {
		return this.name;
	}

}
</file>

<file path="src/mini_c/lex.yy.c">
#line 3 "lex.yy.c"

#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 5
#define YY_FLEX_SUBMINOR_VERSION 37
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */
#include <stdio.h>
#include <string.h>
#include <errno.h>
#include <stdlib.h>

/* end standard C headers. */

/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS 1
#endif

#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#endif /* ! C99 */

#endif /* ! FLEXINT_H */

#ifdef __cplusplus

/* The "const" storage-class-modifier is valid. */
#define YY_USE_CONST

#else	/* ! __cplusplus */

/* C99 requires __STDC__ to be defined as 1. */
#if defined (__STDC__)

#define YY_USE_CONST

#endif	/* defined (__STDC__) */
#endif	/* ! __cplusplus */

#ifdef YY_USE_CONST
#define yyconst const
#else
#define yyconst
#endif

/* Returned upon end-of-file. */
#define YY_NULL 0

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */
#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN (yy_start) = 1 + 2 *

/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START (((yy_start) - 1) / 2)
#define YYSTATE YY_START

/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)

/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart(yyin  )

#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#define YY_BUF_SIZE 16384
#endif

/* The state buf must be large enough to hold one state per character in the main buffer.
 */
#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef size_t yy_size_t;
#endif

extern yy_size_t yyleng;

extern FILE *yyin, *yyout;

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2

    #define YY_LESS_LINENO(n)
    
/* Return all but the first "n" matched characters back to the input stream. */
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = (yy_hold_char); \
		YY_RESTORE_YY_MORE_OFFSET \
		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )

#define unput(c) yyunput( c, (yytext_ptr)  )

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{
	FILE *yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	yy_size_t yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	yy_size_t yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */
    
	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* Stack of input buffers. */
static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */
static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */
static YY_BUFFER_STATE * yy_buffer_stack = 0; /**< Stack as an array. */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */
#define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
                          : NULL)

/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */
#define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]

/* yy_hold_char holds the character lost when yytext is formed. */
static char yy_hold_char;
static yy_size_t yy_n_chars;		/* number of characters read into yy_ch_buf */
yy_size_t yyleng;

/* Points to current character in buffer. */
static char *yy_c_buf_p = (char *) 0;
static int yy_init = 0;		/* whether we need to initialize */
static int yy_start = 0;	/* start state number */

/* Flag which is used to allow yywrap()'s to do buffer switches
 * instead of setting up a fresh yyin.  A bit of a hack ...
 */
static int yy_did_buffer_switch_on_eof;

void yyrestart (FILE *input_file  );
void yy_switch_to_buffer (YY_BUFFER_STATE new_buffer  );
YY_BUFFER_STATE yy_create_buffer (FILE *file,int size  );
void yy_delete_buffer (YY_BUFFER_STATE b  );
void yy_flush_buffer (YY_BUFFER_STATE b  );
void yypush_buffer_state (YY_BUFFER_STATE new_buffer  );
void yypop_buffer_state (void );

static void yyensure_buffer_stack (void );
static void yy_load_buffer_state (void );
static void yy_init_buffer (YY_BUFFER_STATE b,FILE *file  );

#define YY_FLUSH_BUFFER yy_flush_buffer(YY_CURRENT_BUFFER )

YY_BUFFER_STATE yy_scan_buffer (char *base,yy_size_t size  );
YY_BUFFER_STATE yy_scan_string (yyconst char *yy_str  );
YY_BUFFER_STATE yy_scan_bytes (yyconst char *bytes,yy_size_t len  );

void *yyalloc (yy_size_t  );
void *yyrealloc (void *,yy_size_t  );
void yyfree (void *  );

#define yy_new_buffer yy_create_buffer

#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){ \
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer(yyin,YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
	}

#define yy_set_bol(at_bol) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){\
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer(yyin,YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	}

#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* Begin user sect3 */

typedef unsigned char YY_CHAR;

FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;

typedef int yy_state_type;

extern int yylineno;

int yylineno = 1;

extern char *yytext;
#define yytext_ptr yytext

static yy_state_type yy_get_previous_state (void );
static yy_state_type yy_try_NUL_trans (yy_state_type current_state  );
static int yy_get_next_buffer (void );
static void yy_fatal_error (yyconst char msg[]  );

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	(yytext_ptr) = yy_bp; \
	yyleng = (size_t) (yy_cp - yy_bp); \
	(yy_hold_char) = *yy_cp; \
	*yy_cp = '\0'; \
	(yy_c_buf_p) = yy_cp;

#define YY_NUM_RULES 15
#define YY_END_OF_BUFFER 16
/* This struct is not used in this scanner,
   but its presence is necessary. */
struct yy_trans_info
	{
	flex_int32_t yy_verify;
	flex_int32_t yy_nxt;
	};
static yyconst flex_int16_t yy_accept[109] =
    {   0,
        0,    0,   16,   15,   15,   15,   15,   15,   15,   15,
       15,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    3,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    5,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    1,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    6,    0,    0,    0,    0,    0,   10,
        0,   12,    0,    0,    0,    2,    0,    0,    0,    0,
        0,    0,    4,    0,    0,   11,    0,    9,    0,    0,

        0,   13,    8,    7,    0,    0,   14,    0
    } ;

static yyconst flex_int32_t yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    2,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        3,    1,    1,    1,    1,    4,    5,    1,    1,    1,
        1,    6,    7,    1,    1,    1,    1,    1,    8,    1,
        1,    1,    9,    1,    1,    1,   10,    1,    1,    1,
        1,    1,    1,    1,   11,    1,   12,   13,   14,   15,

       16,   17,   18,   19,   20,    1,   21,   22,   23,   24,
       25,   26,    1,   27,   28,   29,   30,    1,   31,   32,
       33,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1
    } ;

static yyconst flex_int32_t yy_meta[34] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1
    } ;

static yyconst flex_int16_t yy_base[110] =
    {   0,
        0,    9,  119,  120,    4,   96,   98,  100,    5,  101,
       95,    0,   93,   88,   78,   85,   97,   76,   91,   77,
       76,   84,   91,   80,   75,   76,   79,   76,   83,   69,
       84,   70,   77,   80,   62,   62,   59,   73,   71,   72,
       69,   63,   71,   62,   52,   62,   57,   62,   49,   53,
       59,  120,   49,   41,   67,   57,   46,   49,   52,   56,
       57,  120,   41,   51,   48,   33,   36,   31,   30,   41,
       30,   36,   29,  120,   24,   37,   33,   28,   34,  120,
       29,  120,   24,   35,   28,  120,   18,   21,   16,   26,
       12,   26,  120,   14,   22,  120,    9,  120,   19,    2,

        8,  120,  120,  120,    2,    0,  120,  120,    0
    } ;

static yyconst flex_int16_t yy_def[110] =
    {   0,
      109,  109,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,

      108,  108,  108,  108,  108,  108,  108,    0,  108
    } ;

static yyconst flex_int16_t yy_nxt[154] =
    {   0,
        4,    5,  107,    6,    7,    8,    9,   10,  108,   11,
        5,  108,    6,    7,    8,    9,   10,   12,   11,   19,
      108,   23,  108,  108,   24,   13,  108,  108,   20,   25,
      106,  105,  104,   14,  103,  102,   15,  101,  100,   99,
       98,   97,   96,   95,   94,   93,   92,   91,   90,   89,
       88,   87,   86,   85,   84,   83,   82,   81,   80,   79,
       78,   77,   76,   75,   74,   73,   72,   71,   70,   69,
       68,   67,   66,   65,   64,   63,   62,   61,   60,   59,
       58,   57,   56,   55,   54,   53,   52,   51,   50,   49,
       48,   47,   46,   45,   44,   43,   42,   41,   40,   39,

       38,   37,   36,   35,   34,   33,   32,   31,   30,   29,
       28,   27,   26,   22,   21,   18,   17,   16,  108,    3,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108
    } ;

static yyconst flex_int16_t yy_chk[154] =
    {   0,
      109,    1,  106,    1,    1,    1,    1,    1,    0,    1,
        2,    0,    2,    2,    2,    2,    2,    5,    2,    9,
        0,   12,    0,    0,   12,    5,    0,    0,    9,   12,
      105,  101,  100,    5,   99,   97,    5,   95,   94,   92,
       91,   90,   89,   88,   87,   85,   84,   83,   81,   79,
       78,   77,   76,   75,   73,   72,   71,   70,   69,   68,
       67,   66,   65,   64,   63,   61,   60,   59,   58,   57,
       56,   55,   54,   53,   51,   50,   49,   48,   47,   46,
       45,   44,   43,   42,   41,   40,   39,   38,   37,   36,
       35,   34,   33,   32,   31,   30,   29,   28,   27,   26,

       25,   24,   23,   22,   21,   20,   19,   18,   17,   16,
       15,   14,   13,   11,   10,    8,    7,    6,    3,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108
    } ;

static yy_state_type yy_last_accepting_state;
static char *yy_last_accepting_cpos;

extern int yy_flex_debug;
int yy_flex_debug = 0;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
char *yytext;
#line 1 "Lexer.flex"
#line 518 "lex.yy.c"

#define INITIAL 0

#ifndef YY_NO_UNISTD_H
/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
#include <unistd.h>
#endif

#ifndef YY_EXTRA_TYPE
#define YY_EXTRA_TYPE void *
#endif

static int yy_init_globals (void );

/* Accessor methods to globals.
   These are made visible to non-reentrant scanners for convenience. */

int yylex_destroy (void );

int yyget_debug (void );

void yyset_debug (int debug_flag  );

YY_EXTRA_TYPE yyget_extra (void );

void yyset_extra (YY_EXTRA_TYPE user_defined  );

FILE *yyget_in (void );

void yyset_in  (FILE * in_str  );

FILE *yyget_out (void );

void yyset_out  (FILE * out_str  );

yy_size_t yyget_leng (void );

char *yyget_text (void );

int yyget_lineno (void );

void yyset_lineno (int line_number  );

/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifndef YY_SKIP_YYWRAP
#ifdef __cplusplus
extern "C" int yywrap (void );
#else
extern int yywrap (void );
#endif
#endif

    static void yyunput (int c,char *buf_ptr  );
    
#ifndef yytext_ptr
static void yy_flex_strncpy (char *,yyconst char *,int );
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * );
#endif

#ifndef YY_NO_INPUT

#ifdef __cplusplus
static int yyinput (void );
#else
static int input (void );
#endif

#endif

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#define YY_READ_BUF_SIZE 8192
#endif

/* Copy whatever the last rule matched to the standard output. */
#ifndef ECHO
/* This used to be an fputs(), but since the string might contain NUL's,
 * we now use fwrite().
 */
#define ECHO do { if (fwrite( yytext, yyleng, 1, yyout )) {} } while (0)
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
		{ \
		int c = '*'; \
		size_t n; \
		for ( n = 0; n < max_size && \
			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
			buf[n] = (char) c; \
		if ( c == '\n' ) \
			buf[n++] = (char) c; \
		if ( c == EOF && ferror( yyin ) ) \
			YY_FATAL_ERROR( "input in flex scanner failed" ); \
		result = n; \
		} \
	else \
		{ \
		errno=0; \
		while ( (result = fread(buf, 1, max_size, yyin))==0 && ferror(yyin)) \
			{ \
			if( errno != EINTR) \
				{ \
				YY_FATAL_ERROR( "input in flex scanner failed" ); \
				break; \
				} \
			errno=0; \
			clearerr(yyin); \
			} \
		}\
\

#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
#define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
#endif

/* end tables serialization structures and prototypes */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1

extern int yylex (void);

#define YY_DECL int yylex (void)
#endif /* !YY_DECL */

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK break;
#endif

#define YY_RULE_SETUP \
	YY_USER_ACTION

/** The main scanner function which does all the work.
 */
YY_DECL
{
	register yy_state_type yy_current_state;
	register char *yy_cp, *yy_bp;
	register int yy_act;
    
#line 5 "Lexer.flex"


#line 703 "lex.yy.c"

	if ( !(yy_init) )
		{
		(yy_init) = 1;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! (yy_start) )
			(yy_start) = 1;	/* first start state */

		if ( ! yyin )
			yyin = stdin;

		if ( ! yyout )
			yyout = stdout;

		if ( ! YY_CURRENT_BUFFER ) {
			yyensure_buffer_stack ();
			YY_CURRENT_BUFFER_LVALUE =
				yy_create_buffer(yyin,YY_BUF_SIZE );
		}

		yy_load_buffer_state( );
		}

	while ( 1 )		/* loops until end-of-file is reached */
		{
		yy_cp = (yy_c_buf_p);

		/* Support of yytext. */
		*yy_cp = (yy_hold_char);

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = (yy_start);
yy_match:
		do
			{
			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
			if ( yy_accept[yy_current_state] )
				{
				(yy_last_accepting_state) = yy_current_state;
				(yy_last_accepting_cpos) = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 109 )
					yy_c = yy_meta[(unsigned int) yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			++yy_cp;
			}
		while ( yy_base[yy_current_state] != 120 );

yy_find_action:
		yy_act = yy_accept[yy_current_state];
		if ( yy_act == 0 )
			{ /* have to back up */
			yy_cp = (yy_last_accepting_cpos);
			yy_current_state = (yy_last_accepting_state);
			yy_act = yy_accept[yy_current_state];
			}

		YY_DO_BEFORE_ACTION;

do_action:	/* This label is used only to access EOF actions. */

		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = (yy_hold_char);
			yy_cp = (yy_last_accepting_cpos);
			yy_current_state = (yy_last_accepting_state);
			goto yy_find_action;

case 1:
YY_RULE_SETUP
#line 7 "Lexer.flex"
Lexer
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 8 "Lexer.flex"
/* The characters are unicode */
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 9 "Lexer.flex"
/* Syntax analyser with cup (Parser part) */
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 10 "Lexer.flex"
/* ? */
	YY_BREAK
case 5:
YY_RULE_SETUP
#line 11 "Lexer.flex"
/* Decompose by line */
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 12 "Lexer.flex"
/* Decompose by column */
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 13 "Lexer.flex"
Exception
	YY_BREAK
/* Can throw exceptions */

	/* No need for preamble in JAVA */

case 8:
YY_RULE_SETUP
#line 20 "Lexer.flex"
= [ \t\r\n]+
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 21 "Lexer.flex"
= ("0") ([0-7])+
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 22 "Lexer.flex"
= ("0x") ([0-9a-fA-f])+
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 23 "Lexer.flex"
= ("'") ([:jletter:] | [:digit:]) ("'")
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 24 "Lexer.flex"
= (0 | [1-9]\d* ) | {Character}      // If it starts by 0 but has more stuff after, then it's not a decimal Int
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 25 "Lexer.flex"
= ([:jletter:] | [_]) ([:jletter:] | [:digit:] | [_] )*      
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 26 "Lexer.flex"
[/][*][^*]*[*]+([^*/][^*]*[*]+)*[/]
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 28 "Lexer.flex"
ECHO;
	YY_BREAK
#line 865 "lex.yy.c"
case YY_STATE_EOF(INITIAL):
	yyterminate();

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = (yy_hold_char);
		YY_RESTORE_YY_MORE_OFFSET

		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state(  );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = (yytext_ptr) + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++(yy_c_buf_p);
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
				yy_cp = (yy_c_buf_p);
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer(  ) )
			{
			case EOB_ACT_END_OF_FILE:
				{
				(yy_did_buffer_switch_on_eof) = 0;

				if ( yywrap( ) )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				(yy_c_buf_p) =
					(yytext_ptr) + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				(yy_c_buf_p) =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
} /* end of yylex */

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
static int yy_get_next_buffer (void)
{
    	register char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	register char *source = (yytext_ptr);
	register int number_to_move, i;
	int ret_val;

	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr)) - 1;

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;

	else
		{
			yy_size_t num_to_read =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = YY_CURRENT_BUFFER_LVALUE;

			int yy_c_buf_p_offset =
				(int) ((yy_c_buf_p) - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				yy_size_t new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					yyrealloc((void *) b->yy_ch_buf,b->yy_buf_size + 2  );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = 0;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			(yy_c_buf_p) = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
						number_to_move - 1;

			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			(yy_n_chars), num_to_read );

		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	if ( (yy_n_chars) == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart(yyin  );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	if ((yy_size_t) ((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
		/* Extend the array by 50%, plus the number we really need. */
		yy_size_t new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size  );
		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
	}

	(yy_n_chars) += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;

	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

    static yy_state_type yy_get_previous_state (void)
{
	register yy_state_type yy_current_state;
	register char *yy_cp;
    
	yy_current_state = (yy_start);

	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
		{
		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		if ( yy_accept[yy_current_state] )
			{
			(yy_last_accepting_state) = yy_current_state;
			(yy_last_accepting_cpos) = yy_cp;
			}
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 109 )
				yy_c = yy_meta[(unsigned int) yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
{
	register int yy_is_jam;
    	register char *yy_cp = (yy_c_buf_p);

	register YY_CHAR yy_c = 1;
	if ( yy_accept[yy_current_state] )
		{
		(yy_last_accepting_state) = yy_current_state;
		(yy_last_accepting_cpos) = yy_cp;
		}
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 109 )
			yy_c = yy_meta[(unsigned int) yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
	yy_is_jam = (yy_current_state == 108);

		return yy_is_jam ? 0 : yy_current_state;
}

    static void yyunput (int c, register char * yy_bp )
{
	register char *yy_cp;
    
    yy_cp = (yy_c_buf_p);

	/* undo effects of setting up yytext */
	*yy_cp = (yy_hold_char);

	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		register yy_size_t number_to_move = (yy_n_chars) + 2;
		register char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
		register char *source =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];

		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;

		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;

	(yytext_ptr) = yy_bp;
	(yy_hold_char) = *yy_cp;
	(yy_c_buf_p) = yy_cp;
}

#ifndef YY_NO_INPUT
#ifdef __cplusplus
    static int yyinput (void)
#else
    static int input  (void)
#endif

{
	int c;
    
	*(yy_c_buf_p) = (yy_hold_char);

	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			/* This was really a NUL. */
			*(yy_c_buf_p) = '\0';

		else
			{ /* need more input */
			yy_size_t offset = (yy_c_buf_p) - (yytext_ptr);
			++(yy_c_buf_p);

			switch ( yy_get_next_buffer(  ) )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart(yyin );

					/*FALLTHROUGH*/

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap( ) )
						return EOF;

					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					(yy_c_buf_p) = (yytext_ptr) + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
	*(yy_c_buf_p) = '\0';	/* preserve yytext */
	(yy_hold_char) = *++(yy_c_buf_p);

	return c;
}
#endif	/* ifndef YY_NO_INPUT */

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * 
 * @note This function does not reset the start condition to @c INITIAL .
 */
    void yyrestart  (FILE * input_file )
{
    
	if ( ! YY_CURRENT_BUFFER ){
        yyensure_buffer_stack ();
		YY_CURRENT_BUFFER_LVALUE =
            yy_create_buffer(yyin,YY_BUF_SIZE );
	}

	yy_init_buffer(YY_CURRENT_BUFFER,input_file );
	yy_load_buffer_state( );
}

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * 
 */
    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
{
    
	/* TODO. We should be able to replace this entire function body
	 * with
	 *		yypop_buffer_state();
	 *		yypush_buffer_state(new_buffer);
     */
	yyensure_buffer_stack ();
	if ( YY_CURRENT_BUFFER == new_buffer )
		return;

	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	yy_load_buffer_state( );

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	(yy_did_buffer_switch_on_eof) = 1;
}

static void yy_load_buffer_state  (void)
{
    	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
	(yy_hold_char) = *(yy_c_buf_p);
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * 
 * @return the allocated buffer state.
 */
    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )
{
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) yyalloc(b->yy_buf_size + 2  );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer(b,file );

	return b;
}

/** Destroy the buffer.
 * @param b a buffer created with yy_create_buffer()
 * 
 */
    void yy_delete_buffer (YY_BUFFER_STATE  b )
{
    
	if ( ! b )
		return;

	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		yyfree((void *) b->yy_ch_buf  );

	yyfree((void *) b  );
}

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a yyrestart() or at EOF.
 */
    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )

{
	int oerrno = errno;
    
	yy_flush_buffer(b );

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then yy_init_buffer was _probably_
     * called from yyrestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != YY_CURRENT_BUFFER){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

        b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
    
	errno = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * 
 */
    void yy_flush_buffer (YY_BUFFER_STATE  b )
{
    	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == YY_CURRENT_BUFFER )
		yy_load_buffer_state( );
}

/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *  
 */
void yypush_buffer_state (YY_BUFFER_STATE new_buffer )
{
    	if (new_buffer == NULL)
		return;

	yyensure_buffer_stack();

	/* This block is copied from yy_switch_to_buffer. */
	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (YY_CURRENT_BUFFER)
		(yy_buffer_stack_top)++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from yy_switch_to_buffer. */
	yy_load_buffer_state( );
	(yy_did_buffer_switch_on_eof) = 1;
}

/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *  
 */
void yypop_buffer_state (void)
{
    	if (!YY_CURRENT_BUFFER)
		return;

	yy_delete_buffer(YY_CURRENT_BUFFER );
	YY_CURRENT_BUFFER_LVALUE = NULL;
	if ((yy_buffer_stack_top) > 0)
		--(yy_buffer_stack_top);

	if (YY_CURRENT_BUFFER) {
		yy_load_buffer_state( );
		(yy_did_buffer_switch_on_eof) = 1;
	}
}

/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
static void yyensure_buffer_stack (void)
{
	yy_size_t num_to_alloc;
    
	if (!(yy_buffer_stack)) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
		num_to_alloc = 1;
		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
								  
		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
				
		(yy_buffer_stack_max) = num_to_alloc;
		(yy_buffer_stack_top) = 0;
		return;
	}

	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){

		/* Increase the buffer to prepare for a possible push. */
		int grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = (yy_buffer_stack_max) + grow_size;
		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
								((yy_buffer_stack),
								num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		/* zero only the new slots.*/
		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
		(yy_buffer_stack_max) = num_to_alloc;
	}
}

/** Setup the input buffer state to scan directly from a user-specified character buffer.
 * @param base the character buffer
 * @param size the size in bytes of the character buffer
 * 
 * @return the newly allocated buffer state object. 
 */
YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )
{
	YY_BUFFER_STATE b;
    
	if ( size < 2 ||
	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
	     base[size-1] != YY_END_OF_BUFFER_CHAR )
		/* They forgot to leave room for the EOB's. */
		return 0;

	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );

	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
	b->yy_buf_pos = b->yy_ch_buf = base;
	b->yy_is_our_buffer = 0;
	b->yy_input_file = 0;
	b->yy_n_chars = b->yy_buf_size;
	b->yy_is_interactive = 0;
	b->yy_at_bol = 1;
	b->yy_fill_buffer = 0;
	b->yy_buffer_status = YY_BUFFER_NEW;

	yy_switch_to_buffer(b  );

	return b;
}

/** Setup the input buffer state to scan a string. The next call to yylex() will
 * scan from a @e copy of @a str.
 * @param yystr a NUL-terminated string to scan
 * 
 * @return the newly allocated buffer state object.
 * @note If you want to scan bytes that may contain NUL values, then use
 *       yy_scan_bytes() instead.
 */
YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )
{
    
	return yy_scan_bytes(yystr,strlen(yystr) );
}

/** Setup the input buffer state to scan the given bytes. The next call to yylex() will
 * scan from a @e copy of @a bytes.
 * @param yybytes the byte buffer to scan
 * @param _yybytes_len the number of bytes in the buffer pointed to by @a bytes.
 * 
 * @return the newly allocated buffer state object.
 */
YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len )
{
	YY_BUFFER_STATE b;
	char *buf;
	yy_size_t n;
	int i;
    
	/* Get memory for full buffer, including space for trailing EOB's. */
	n = _yybytes_len + 2;
	buf = (char *) yyalloc(n  );
	if ( ! buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );

	for ( i = 0; i < _yybytes_len; ++i )
		buf[i] = yybytes[i];

	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;

	b = yy_scan_buffer(buf,n );
	if ( ! b )
		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );

	/* It's okay to grow etc. this buffer, and we should throw it
	 * away when we're done.
	 */
	b->yy_is_our_buffer = 1;

	return b;
}

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

static void yy_fatal_error (yyconst char* msg )
{
    	(void) fprintf( stderr, "%s\n", msg );
	exit( YY_EXIT_FAILURE );
}

/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		yytext[yyleng] = (yy_hold_char); \
		(yy_c_buf_p) = yytext + yyless_macro_arg; \
		(yy_hold_char) = *(yy_c_buf_p); \
		*(yy_c_buf_p) = '\0'; \
		yyleng = yyless_macro_arg; \
		} \
	while ( 0 )

/* Accessor  methods (get/set functions) to struct members. */

/** Get the current line number.
 * 
 */
int yyget_lineno  (void)
{
        
    return yylineno;
}

/** Get the input stream.
 * 
 */
FILE *yyget_in  (void)
{
        return yyin;
}

/** Get the output stream.
 * 
 */
FILE *yyget_out  (void)
{
        return yyout;
}

/** Get the length of the current token.
 * 
 */
yy_size_t yyget_leng  (void)
{
        return yyleng;
}

/** Get the current token.
 * 
 */

char *yyget_text  (void)
{
        return yytext;
}

/** Set the current line number.
 * @param line_number
 * 
 */
void yyset_lineno (int  line_number )
{
    
    yylineno = line_number;
}

/** Set the input stream. This does not discard the current
 * input buffer.
 * @param in_str A readable stream.
 * 
 * @see yy_switch_to_buffer
 */
void yyset_in (FILE *  in_str )
{
        yyin = in_str ;
}

void yyset_out (FILE *  out_str )
{
        yyout = out_str ;
}

int yyget_debug  (void)
{
        return yy_flex_debug;
}

void yyset_debug (int  bdebug )
{
        yy_flex_debug = bdebug ;
}

static int yy_init_globals (void)
{
        /* Initialization is the same as for the non-reentrant scanner.
     * This function is called from yylex_destroy(), so don't allocate here.
     */

    (yy_buffer_stack) = 0;
    (yy_buffer_stack_top) = 0;
    (yy_buffer_stack_max) = 0;
    (yy_c_buf_p) = (char *) 0;
    (yy_init) = 0;
    (yy_start) = 0;

/* Defined in main.c */
#ifdef YY_STDINIT
    yyin = stdin;
    yyout = stdout;
#else
    yyin = (FILE *) 0;
    yyout = (FILE *) 0;
#endif

    /* For future reference: Set errno on error, since we are called by
     * yylex_init()
     */
    return 0;
}

/* yylex_destroy is for both reentrant and non-reentrant scanners. */
int yylex_destroy  (void)
{
    
    /* Pop the buffer stack, destroying each element. */
	while(YY_CURRENT_BUFFER){
		yy_delete_buffer(YY_CURRENT_BUFFER  );
		YY_CURRENT_BUFFER_LVALUE = NULL;
		yypop_buffer_state();
	}

	/* Destroy the stack itself. */
	yyfree((yy_buffer_stack) );
	(yy_buffer_stack) = NULL;

    /* Reset the globals. This is important in a non-reentrant scanner so the next time
     * yylex() is called, initialization will occur. */
    yy_init_globals( );

    return 0;
}

/*
 * Internal utility routines.
 */

#ifndef yytext_ptr
static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )
{
	register int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
}
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * s )
{
	register int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
}
#endif

void *yyalloc (yy_size_t  size )
{
	return (void *) malloc( size );
}

void *yyrealloc  (void * ptr, yy_size_t  size )
{
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return (void *) realloc( (char *) ptr, size );
}

void yyfree (void * ptr )
{
	free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
}

#define YYTABLES_NAME "yytables"

#line 28 "Lexer.flex"


<YYINITIAL> {
	/* Operators */
	"=" { return new Symbol(EQUAL, yyline, yycolumn); }
	"==" 
		{ return new Symbol(CMP, yyline, yycolumn, Binop.Beqeq); }
	"!="
		{ return new Symbol(CMP, yyline, yycolumn, Binop.Bneq); }
	"<"
		{ return new Symbol(CMP, yyline, yycolumn, Binop.Blt); }
	"<="
		{ return new Symbol(CMP, yyline, yycolumn, Binop.Ble); }
	">"
		{ return new Symbol(CMP, yyline, yycolumn, Binop.Bgt); }
	">="
		{ return new Symbol(CMP, yyline, yycolumn, Binop.Bge); }
	"+"
		{ return new Symbol(PLUS, yyline, yycolumn); }
	"-"
		{ return new Symbol(MINUS, yyline, yycolumn); }
	"*"
		{ return new Symbol(TIMES, yyline, yycolumn); }
	"/"
		{ return new Symbol(DIV, yyline, yycolumn); }
	"&&"
		{ return new Symbol(AND, yyline, yycolumn); }
	"||"
		{ return new Symbol(OR, yyline, yycolumn); }
	"!"
		{ return new Symbol(NOT, yyline, yycolumn); }
    "->"
        { return new Symbol(ARROW, yyline, yycolumn); }
        /* Comments */
    "//".* // Normal comment
        { /* DO NOTHING */ }
    {BlockComment}
        { /* DO NOTHING */ }
	/* loops */
	"if"
    	    { return new Symbol(IF); }
	"else"
	    { return new Symbol(ELSE); }
	"while"
	    { return new Symbol(WHILE); }
	// TODO: make the for, why not?
	/* More stuff */
	"("	{ return new Symbol(LPAR, yyline, yycolumn); }
	")"	{ return new Symbol(RPAR, yyline, yycolumn); }
	"{"
		{ return new Symbol(LB, yyline, yycolumn); }
	"}"	{ return new Symbol(RB, yyline, yycolumn); }
	";"	{ return new Symbol(SEMICOLON, yyline, yycolumn);}
	"," { return new Symbol(COMMA, yyline, yycolumn);}
	/* Fixed Words */
	"return"
		{ return new Symbol(RETURN, yyline, yycolumn); }
	"int"
		{ return new Symbol(INT, yyline, yycolumn); }
	"struct"
	    { return new Symbol(STRUCT, yyline, yycolumn); }
	"sizeof"
	    { return new Symbol(SIZEOF, yyline, yycolumn); }
    /* Ints, chars & spaces */
	{Integer}
		{ return new Symbol(CST, yyline, yycolumn, new Constant(Integer.parseInt(yytext()))); }
	{Hex_int}
	    { return new Symbol(CST, yyline, yycolumn, new Constant(Integer.decode(yytext()))); }
	{Octal_int}
    	{ return new Symbol(CST, yyline, yycolumn, new Constant(Integer.parseInt(yytext(), 8))); }
	{Identifier}
		{ return new Symbol(IDENT, yyline, yycolumn, yytext()); }
	{WhiteSpace}
		{ /* DO NOTHING */ }
	.	{ throw new Exception(String.format("Error in line %d, column %d: illegal character '%s'\n", yyline, yycolumn, yytext())); }
}
</file>

<file path="src/mini_c/Lexer.flex">
package mini_c;

import java_cup.runtime.*;
import static mini_c.sym.*;

%%

%class Lexer
%unicode			/* The characters are unicode */
%cup				/* Syntax analyser with cup (Parser part) */
%cupdebug			/* ? */
%line				/* Decompose by line */
%column				/* Decompose by column */
%yylexthrow Exception
		/* Can throw exceptions */

%{
	/* No need for preamble in JAVA */
%}

WhiteSpace	= [ \t\r\n]+
Octal_int   = ("0") ([0-7])+
Hex_int     = ("0x") ([0-9a-fA-f])+
Character   = ("'") [^\\'\"] ("'")
Integer		= ( 0 | [1-9] [0-9]* )     // If it starts by 0 but has more stuff after, then it's not a decimal Int
Identifier	= ([:jletter:] | [_]) ([:jletter:] | [:digit:] | [_] )*      
BlockComment= [/][*][^*]*[*]+([^*/][^*]*[*]+)*[/]

%%
<YYINITIAL> {
	/* Operators */
	"=" { return new Symbol(EQUAL, yyline, yycolumn); }
	"==" 
		{ return new Symbol(CMP, yyline, yycolumn, Binop.Beqeq); }
	"!="
		{ return new Symbol(CMP, yyline, yycolumn, Binop.Bneq); }
	"<"
		{ return new Symbol(CMP, yyline, yycolumn, Binop.Blt); }
	"<="
		{ return new Symbol(CMP, yyline, yycolumn, Binop.Ble); }
	">"
		{ return new Symbol(CMP, yyline, yycolumn, Binop.Bgt); }
	">="
		{ return new Symbol(CMP, yyline, yycolumn, Binop.Bge); }
	"+"
		{ return new Symbol(PLUS, yyline, yycolumn); }
	"-"
		{ return new Symbol(MINUS, yyline, yycolumn); }
	"*"
		{ return new Symbol(TIMES, yyline, yycolumn); }
	"/"
		{ return new Symbol(DIV, yyline, yycolumn); }
	"&&"
		{ return new Symbol(AND, yyline, yycolumn, Binop.Band); }
	"||"
		{ return new Symbol(OR, yyline, yycolumn, Binop.Band); }
	"!"
		{ return new Symbol(NOT, yyline, yycolumn); }
    "->"
        { return new Symbol(ARROW, yyline, yycolumn); }
        /* Comments */
    "//".* // Normal comment
        { /* DO NOTHING */ }
    {BlockComment}
        { /* DO NOTHING */ }
	/* loops */
	"if"
    	    { return new Symbol(IF); }
	"else"
	    { return new Symbol(ELSE); }
	"while"
	    { return new Symbol(WHILE); }
	// TODO: make the for, why not?
	/* More stuff */
	"("	{ return new Symbol(LPAR, yyline, yycolumn); }
	")"	{ return new Symbol(RPAR, yyline, yycolumn); }
	"{"
		{ return new Symbol(LB, yyline, yycolumn); }
	"}"	{ return new Symbol(RB, yyline, yycolumn); }
	";"	{ return new Symbol(SEMICOLON, yyline, yycolumn);}
	"," { return new Symbol(COMMA, yyline, yycolumn);}
	/* Fixed Words */
	"return"
		{ return new Symbol(RETURN, yyline, yycolumn); }
	"int"
		{ return new Symbol(INT, yyline, yycolumn); }
	"struct"
	    { return new Symbol(STRUCT, yyline, yycolumn); }
	"sizeof"
	    { return new Symbol(SIZEOF, yyline, yycolumn); }
    /* Ints, chars & spaces */
	{Integer}
		{ return new Symbol(CST, yyline, yycolumn, new Constant(Integer.parseInt(yytext()))); }
	{Character}
		{ return new Symbol(CST, yyline, yycolumn, new Constant(yytext().charAt(1))); }
	{Hex_int}
	    { return new Symbol(CST, yyline, yycolumn, new Constant(Integer.decode(yytext()))); }
	{Octal_int}
    	{ return new Symbol(CST, yyline, yycolumn, new Constant(Integer.parseInt(yytext(), 8))); }
	{Identifier}
		{ return new Symbol(IDENT, yyline, yycolumn, yytext()); }
	{WhiteSpace}
		{ /* DO NOTHING */ }
	.	{ throw new Exception(String.format("Error in line %d, column %d: illegal character '%s'\n", yyline, yycolumn, yytext())); }
}
</file>

<file path="src/mini_c/Lexer.java">
/* The following code was generated by JFlex 1.4.3 on 2/8/17 12:34 PM */

package mini_c;

import java_cup.runtime.*;
import static mini_c.sym.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 2/8/17 12:34 PM from the specification file
 * <tt>Lexer.flex</tt>
 */
class Lexer implements java_cup.runtime.Scanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\1\1\27\2\0\1\1\22\0\1\1\1\20\1\7\1\0"+
    "\1\12\1\0\1\25\1\6\1\37\1\40\1\16\1\23\1\44\1\24"+
    "\1\0\1\15\1\2\7\3\2\11\1\0\1\43\1\21\1\17\1\22"+
    "\2\0\32\13\1\5\1\10\2\5\1\13\1\5\2\13\1\51\1\13"+
    "\1\32\1\31\1\12\1\36\1\30\2\12\1\33\1\12\1\50\1\53"+
    "\2\12\1\45\1\34\1\46\1\47\1\12\1\35\1\4\1\12\1\52"+
    "\1\41\1\26\1\42\44\0\4\12\4\0\1\12\12\0\1\12\4\0"+
    "\1\12\5\0\27\12\1\0\37\12\1\0\u01ca\12\4\0\14\12\16\0"+
    "\5\12\7\0\1\12\1\0\1\12\201\0\5\12\1\0\2\12\2\0"+
    "\4\12\10\0\1\12\1\0\3\12\1\0\1\12\1\0\24\12\1\0"+
    "\123\12\1\0\213\12\10\0\236\12\11\0\46\12\2\0\1\12\7\0"+
    "\47\12\7\0\1\12\100\0\33\12\5\0\3\12\30\0\1\12\24\0"+
    "\53\12\25\0\12\14\4\0\2\12\1\0\143\12\1\0\1\12\17\0"+
    "\2\12\7\0\2\12\12\14\3\12\2\0\1\12\20\0\1\12\1\0"+
    "\36\12\35\0\131\12\13\0\1\12\16\0\12\14\41\12\11\0\2\12"+
    "\4\0\1\12\5\0\26\12\4\0\1\12\11\0\1\12\3\0\1\12"+
    "\27\0\31\12\107\0\1\12\1\0\13\12\127\0\66\12\3\0\1\12"+
    "\22\0\1\12\7\0\12\12\4\0\12\14\1\0\7\12\1\0\7\12"+
    "\5\0\10\12\2\0\2\12\2\0\26\12\1\0\7\12\1\0\1\12"+
    "\3\0\4\12\3\0\1\12\20\0\1\12\15\0\2\12\1\0\3\12"+
    "\4\0\12\14\4\12\7\0\1\12\11\0\6\12\4\0\2\12\2\0"+
    "\26\12\1\0\7\12\1\0\2\12\1\0\2\12\1\0\2\12\37\0"+
    "\4\12\1\0\1\12\7\0\12\14\2\0\3\12\20\0\11\12\1\0"+
    "\3\12\1\0\26\12\1\0\7\12\1\0\2\12\1\0\5\12\3\0"+
    "\1\12\22\0\1\12\17\0\2\12\4\0\12\14\1\0\1\12\23\0"+
    "\10\12\2\0\2\12\2\0\26\12\1\0\7\12\1\0\2\12\1\0"+
    "\5\12\3\0\1\12\36\0\2\12\1\0\3\12\4\0\12\14\1\0"+
    "\1\12\21\0\1\12\1\0\6\12\3\0\3\12\1\0\4\12\3\0"+
    "\2\12\1\0\1\12\1\0\2\12\3\0\2\12\3\0\3\12\3\0"+
    "\14\12\26\0\1\12\25\0\12\14\11\0\1\12\13\0\10\12\1\0"+
    "\3\12\1\0\27\12\1\0\12\12\1\0\5\12\3\0\1\12\32\0"+
    "\2\12\6\0\2\12\4\0\12\14\25\0\10\12\1\0\3\12\1\0"+
    "\27\12\1\0\12\12\1\0\5\12\3\0\1\12\40\0\1\12\1\0"+
    "\2\12\4\0\12\14\1\0\2\12\22\0\10\12\1\0\3\12\1\0"+
    "\51\12\2\0\1\12\20\0\1\12\21\0\2\12\4\0\12\14\12\0"+
    "\6\12\5\0\22\12\3\0\30\12\1\0\11\12\1\0\1\12\2\0"+
    "\7\12\72\0\60\12\1\0\2\12\13\0\10\12\11\0\12\14\47\0"+
    "\2\12\1\0\1\12\2\0\2\12\1\0\1\12\2\0\1\12\6\0"+
    "\4\12\1\0\7\12\1\0\3\12\1\0\1\12\1\0\1\12\2\0"+
    "\2\12\1\0\4\12\1\0\2\12\11\0\1\12\2\0\5\12\1\0"+
    "\1\12\11\0\12\14\2\0\4\12\40\0\1\12\37\0\12\14\26\0"+
    "\10\12\1\0\44\12\33\0\5\12\163\0\53\12\24\0\1\12\12\14"+
    "\6\0\6\12\4\0\4\12\3\0\1\12\3\0\2\12\7\0\3\12"+
    "\4\0\15\12\14\0\1\12\1\0\12\14\6\0\46\12\1\0\1\12"+
    "\5\0\1\12\2\0\53\12\1\0\u014d\12\1\0\4\12\2\0\7\12"+
    "\1\0\1\12\1\0\4\12\2\0\51\12\1\0\4\12\2\0\41\12"+
    "\1\0\4\12\2\0\7\12\1\0\1\12\1\0\4\12\2\0\17\12"+
    "\1\0\71\12\1\0\4\12\2\0\103\12\45\0\20\12\20\0\125\12"+
    "\14\0\u026c\12\2\0\21\12\1\0\32\12\5\0\113\12\3\0\3\12"+
    "\17\0\15\12\1\0\4\12\16\0\22\12\16\0\22\12\16\0\15\12"+
    "\1\0\3\12\17\0\64\12\43\0\1\12\3\0\2\12\3\0\12\14"+
    "\46\0\12\14\6\0\130\12\10\0\51\12\1\0\1\12\5\0\106\12"+
    "\12\0\35\12\51\0\12\14\36\12\2\0\5\12\13\0\54\12\25\0"+
    "\7\12\10\0\12\14\46\0\27\12\11\0\65\12\53\0\12\14\6\0"+
    "\12\14\15\0\1\12\135\0\57\12\21\0\7\12\4\0\12\14\51\0"+
    "\36\12\15\0\2\12\12\14\54\12\32\0\44\12\34\0\12\14\3\0"+
    "\3\12\12\14\44\12\153\0\4\12\1\0\4\12\3\0\2\12\11\0"+
    "\300\12\100\0\u0116\12\2\0\6\12\2\0\46\12\2\0\6\12\2\0"+
    "\10\12\1\0\1\12\1\0\1\12\1\0\1\12\1\0\37\12\2\0"+
    "\65\12\1\0\7\12\1\0\1\12\3\0\3\12\1\0\7\12\3\0"+
    "\4\12\2\0\6\12\4\0\15\12\5\0\3\12\1\0\7\12\102\0"+
    "\2\12\23\0\1\12\34\0\1\12\15\0\1\12\20\0\15\12\3\0"+
    "\33\12\107\0\1\12\4\0\1\12\2\0\12\12\1\0\1\12\3\0"+
    "\5\12\6\0\1\12\1\0\1\12\1\0\1\12\1\0\4\12\1\0"+
    "\13\12\2\0\4\12\5\0\5\12\4\0\1\12\21\0\51\12\u0a77\0"+
    "\57\12\1\0\57\12\1\0\205\12\6\0\4\12\3\0\2\12\14\0"+
    "\46\12\1\0\1\12\5\0\1\12\2\0\70\12\7\0\1\12\20\0"+
    "\27\12\11\0\7\12\1\0\7\12\1\0\7\12\1\0\7\12\1\0"+
    "\7\12\1\0\7\12\1\0\7\12\1\0\7\12\120\0\1\12\u01d5\0"+
    "\3\12\31\0\11\12\7\0\5\12\2\0\5\12\4\0\126\12\6\0"+
    "\3\12\1\0\132\12\1\0\4\12\5\0\51\12\3\0\136\12\21\0"+
    "\33\12\65\0\20\12\u0200\0\u19b6\12\112\0\u51cd\12\63\0\u048d\12\103\0"+
    "\56\12\2\0\u010d\12\3\0\20\12\12\14\2\12\24\0\57\12\20\0"+
    "\31\12\10\0\120\12\47\0\11\12\2\0\147\12\2\0\4\12\1\0"+
    "\4\12\14\0\13\12\115\0\12\12\1\0\3\12\1\0\4\12\1\0"+
    "\27\12\25\0\1\12\7\0\64\12\16\0\62\12\34\0\12\14\30\0"+
    "\6\12\3\0\1\12\4\0\12\14\34\12\12\0\27\12\31\0\35\12"+
    "\7\0\57\12\34\0\1\12\12\14\46\0\51\12\27\0\3\12\1\0"+
    "\10\12\4\0\12\14\6\0\27\12\3\0\1\12\5\0\60\12\1\0"+
    "\1\12\3\0\2\12\2\0\5\12\2\0\1\12\1\0\1\12\30\0"+
    "\3\12\2\0\13\12\7\0\3\12\14\0\6\12\2\0\6\12\2\0"+
    "\6\12\11\0\7\12\1\0\7\12\221\0\43\12\15\0\12\14\6\0"+
    "\u2ba4\12\14\0\27\12\4\0\61\12\u2104\0\u016e\12\2\0\152\12\46\0"+
    "\7\12\14\0\5\12\5\0\1\12\1\0\12\12\1\0\15\12\1\0"+
    "\5\12\1\0\1\12\1\0\2\12\1\0\2\12\1\0\154\12\41\0"+
    "\u016b\12\22\0\100\12\2\0\66\12\50\0\15\12\66\0\2\12\30\0"+
    "\3\12\31\0\1\12\6\0\5\12\1\0\207\12\7\0\1\12\13\0"+
    "\12\14\7\0\32\12\4\0\1\12\1\0\32\12\13\0\131\12\3\0"+
    "\6\12\2\0\6\12\2\0\6\12\2\0\3\12\3\0\2\12\3\0"+
    "\2\12\31\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\2\3\1\4\1\1\1\5\1\6"+
    "\1\7\1\10\1\11\1\12\1\13\1\14\2\1\4\4"+
    "\1\15\1\16\1\17\1\20\1\21\1\22\1\4\1\23"+
    "\2\0\1\2\1\0\1\24\1\25\1\26\1\27\1\30"+
    "\1\31\1\32\1\33\6\4\1\34\1\35\1\0\1\36"+
    "\5\4\1\2\1\37\6\4\1\40\1\4\1\41\1\42"+
    "\1\43";

  private static int [] zzUnpackAction() {
    int [] result = new int[69];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\54\0\130\0\204\0\260\0\334\0\u0108\0\u0134"+
    "\0\54\0\u0160\0\u018c\0\u01b8\0\u01e4\0\54\0\u0210\0\u023c"+
    "\0\u0268\0\u0294\0\u02c0\0\u02ec\0\u0318\0\54\0\54\0\54"+
    "\0\54\0\54\0\54\0\u0344\0\u0370\0\u039c\0\u03c8\0\u03f4"+
    "\0\u0420\0\54\0\54\0\54\0\54\0\54\0\54\0\54"+
    "\0\334\0\u044c\0\u0478\0\u04a4\0\u04d0\0\u04fc\0\u0528\0\u039c"+
    "\0\54\0\u0554\0\334\0\u0580\0\u05ac\0\u05d8\0\u0604\0\u0630"+
    "\0\54\0\334\0\u065c\0\u0688\0\u06b4\0\u06e0\0\u070c\0\u0738"+
    "\0\334\0\u0764\0\334\0\334\0\334";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[69];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\2\1\7\2\2"+
    "\1\5\2\6\1\2\1\10\1\11\1\12\1\13\1\14"+
    "\1\15\1\16\1\17\1\20\1\21\1\3\1\22\1\6"+
    "\1\23\1\6\1\24\1\25\1\6\1\26\1\27\1\30"+
    "\1\31\1\32\1\33\1\34\6\6\55\0\1\3\25\0"+
    "\1\3\26\0\2\35\1\36\51\0\2\5\5\0\1\5"+
    "\44\0\3\6\4\0\4\6\13\0\7\6\6\0\7\6"+
    "\6\37\3\0\43\37\15\0\1\40\1\41\54\0\1\42"+
    "\53\0\1\43\53\0\1\44\53\0\1\45\56\0\1\46"+
    "\56\0\1\47\54\0\1\50\27\0\3\6\4\0\4\6"+
    "\13\0\1\6\1\51\5\6\6\0\3\6\1\52\3\6"+
    "\2\0\3\6\4\0\4\6\13\0\3\6\1\53\3\6"+
    "\6\0\7\6\2\0\3\6\4\0\4\6\13\0\1\54"+
    "\6\6\6\0\1\6\1\55\5\6\2\0\3\6\4\0"+
    "\4\6\13\0\6\6\1\56\6\0\7\6\2\0\3\6"+
    "\4\0\4\6\13\0\2\6\1\57\4\6\6\0\7\6"+
    "\2\0\2\35\52\0\2\60\1\0\1\60\2\0\2\60"+
    "\1\0\1\60\15\0\2\60\16\0\1\60\10\0\1\61"+
    "\45\0\27\40\1\0\24\40\16\41\1\62\35\41\2\0"+
    "\3\6\4\0\4\6\13\0\7\6\6\0\1\6\1\63"+
    "\5\6\2\0\3\6\4\0\4\6\13\0\4\6\1\64"+
    "\2\6\6\0\7\6\2\0\3\6\4\0\4\6\13\0"+
    "\7\6\6\0\5\6\1\65\1\6\2\0\3\6\4\0"+
    "\4\6\13\0\7\6\6\0\1\66\6\6\2\0\3\6"+
    "\4\0\4\6\13\0\1\67\6\6\6\0\7\6\2\0"+
    "\3\6\4\0\4\6\13\0\7\6\6\0\1\6\1\70"+
    "\5\6\15\41\1\71\1\62\35\41\2\0\3\6\4\0"+
    "\4\6\13\0\2\6\1\72\4\6\6\0\7\6\2\0"+
    "\3\6\4\0\4\6\13\0\2\6\1\73\4\6\6\0"+
    "\7\6\2\0\3\6\4\0\4\6\13\0\7\6\6\0"+
    "\2\6\1\74\4\6\2\0\3\6\4\0\4\6\13\0"+
    "\3\6\1\75\3\6\6\0\7\6\2\0\3\6\4\0"+
    "\4\6\13\0\7\6\6\0\2\6\1\76\4\6\2\0"+
    "\3\6\4\0\4\6\13\0\7\6\6\0\6\6\1\77"+
    "\2\0\3\6\4\0\4\6\13\0\7\6\6\0\4\6"+
    "\1\100\2\6\2\0\3\6\4\0\4\6\13\0\2\6"+
    "\1\101\4\6\6\0\7\6\2\0\3\6\4\0\4\6"+
    "\13\0\7\6\6\0\1\102\6\6\2\0\3\6\4\0"+
    "\4\6\13\0\1\6\1\103\5\6\6\0\7\6\2\0"+
    "\3\6\4\0\4\6\13\0\7\6\6\0\1\6\1\104"+
    "\5\6\2\0\3\6\4\0\4\6\13\0\7\6\6\0"+
    "\3\6\1\105\3\6";

  private static int [] zzUnpackTrans() {
    int [] result = new int[1936];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\6\1\1\11\4\1\1\11\7\1\6\11"+
    "\2\1\2\0\1\1\1\0\7\11\10\1\1\11\1\0"+
    "\6\1\1\11\14\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[69];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
	/* No need for preamble in JAVA */


  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  Lexer(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 1784) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
      yyclose();
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public java_cup.runtime.Symbol next_token() throws java.io.IOException, Exception {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      for (zzCurrentPosL = zzStartRead; zzCurrentPosL < zzMarkedPosL;
                                                             zzCurrentPosL++) {
        switch (zzBufferL[zzCurrentPosL]) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn++;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 35: 
          { return new Symbol(RETURN, yyline, yycolumn);
          }
        case 36: break;
        case 27: 
          { return new Symbol(IF);
          }
        case 37: break;
        case 26: 
          { return new Symbol(OR, yyline, yycolumn);
          }
        case 38: break;
        case 18: 
          { return new Symbol(COMMA, yyline, yycolumn);
          }
        case 39: break;
        case 16: 
          { return new Symbol(RB, yyline, yycolumn);
          }
        case 40: break;
        case 10: 
          { return new Symbol(CMP, yyline, yycolumn, Binop.Bgt);
          }
        case 41: break;
        case 7: 
          { return new Symbol(EQUAL, yyline, yycolumn);
          }
        case 42: break;
        case 4: 
          { return new Symbol(IDENT, yyline, yycolumn, yytext());
          }
        case 43: break;
        case 15: 
          { return new Symbol(LB, yyline, yycolumn);
          }
        case 44: break;
        case 28: 
          { return new Symbol(CST, yyline, yycolumn, new Constant(Integer.decode(yytext())));
          }
        case 45: break;
        case 19: 
          { return new Symbol(CST, yyline, yycolumn, new Constant(Integer.parseInt(yytext(), 8)));
          }
        case 46: break;
        case 1: 
          { throw new Exception(String.format("Error in line %d, column %d: illegal character '%s'\n", yyline, yycolumn, yytext()));
          }
        case 47: break;
        case 3: 
          { return new Symbol(CST, yyline, yycolumn, new Constant(Integer.parseInt(yytext())));
          }
        case 48: break;
        case 33: 
          { return new Symbol(SIZEOF, yyline, yycolumn);
          }
        case 49: break;
        case 6: 
          { return new Symbol(TIMES, yyline, yycolumn);
          }
        case 50: break;
        case 30: 
          { return new Symbol(INT, yyline, yycolumn);
          }
        case 51: break;
        case 14: 
          { return new Symbol(RPAR, yyline, yycolumn);
          }
        case 52: break;
        case 31: 
          { return new Symbol(ELSE);
          }
        case 53: break;
        case 21: 
          { return new Symbol(CMP, yyline, yycolumn, Binop.Bneq);
          }
        case 54: break;
        case 29: 
          { return new Symbol(CST, yyline, yycolumn, new Constant(yytext().charAt(1)));
          }
        case 55: break;
        case 12: 
          { return new Symbol(MINUS, yyline, yycolumn);
          }
        case 56: break;
        case 22: 
          { return new Symbol(CMP, yyline, yycolumn, Binop.Ble);
          }
        case 57: break;
        case 20: 
          { return new Symbol(CMP, yyline, yycolumn, Binop.Beqeq);
          }
        case 58: break;
        case 32: 
          { return new Symbol(WHILE);
          }
        case 59: break;
        case 8: 
          { return new Symbol(NOT, yyline, yycolumn);
          }
        case 60: break;
        case 34: 
          { return new Symbol(STRUCT, yyline, yycolumn);
          }
        case 61: break;
        case 24: 
          { return new Symbol(ARROW, yyline, yycolumn);
          }
        case 62: break;
        case 23: 
          { return new Symbol(CMP, yyline, yycolumn, Binop.Bge);
          }
        case 63: break;
        case 13: 
          { return new Symbol(LPAR, yyline, yycolumn);
          }
        case 64: break;
        case 11: 
          { return new Symbol(PLUS, yyline, yycolumn);
          }
        case 65: break;
        case 17: 
          { return new Symbol(SEMICOLON, yyline, yycolumn);
          }
        case 66: break;
        case 5: 
          { return new Symbol(DIV, yyline, yycolumn);
          }
        case 67: break;
        case 9: 
          { return new Symbol(CMP, yyline, yycolumn, Binop.Blt);
          }
        case 68: break;
        case 2: 
          { /* DO NOTHING */
          }
        case 69: break;
        case 25: 
          { return new Symbol(AND, yyline, yycolumn);
          }
        case 70: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            zzDoEOF();
              { return new java_cup.runtime.Symbol(sym.EOF); }
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }

  /**
   * Converts an int token code into the name of the
   * token by reflection on the cup symbol class/interface sym
   *
   * This code was contributed by Karl Meissner <meissnersd@yahoo.com>
   */
  private String getTokenName(int token) {
    try {
      java.lang.reflect.Field [] classFields = sym.class.getFields();
      for (int i = 0; i < classFields.length; i++) {
        if (classFields[i].getInt(null) == token) {
          return classFields[i].getName();
        }
      }
    } catch (Exception e) {
      e.printStackTrace(System.err);
    }

    return "UNKNOWN TOKEN";
  }

  /**
   * Same as next_token but also prints the token to standard out
   * for debugging.
   *
   * This code was contributed by Karl Meissner <meissnersd@yahoo.com>
   */
  public java_cup.runtime.Symbol debug_next_token() throws java.io.IOException, Exception {
    java_cup.runtime.Symbol s = next_token();
    System.out.println( "line:" + (yyline+1) + " col:" + (yycolumn+1) + " --"+ yytext() + "--" + getTokenName(s.sym) + "--");
    return s;
  }

  /**
   * Runs the scanner on input files.
   *
   * This main method is the debugging routine for the scanner.
   * It prints debugging information about each returned token to
   * System.out until the end of file is reached, or an error occured.
   *
   * @param argv   the command line, contains the filenames to run
   *               the scanner on.
   */
  public static void main(String argv[]) {
    if (argv.length == 0) {
      System.out.println("Usage : java Lexer <inputfile>");
    }
    else {
      for (int i = 0; i < argv.length; i++) {
        Lexer scanner = null;
        try {
          scanner = new Lexer( new java.io.FileReader(argv[i]) );
          while ( !scanner.zzAtEOF ) scanner.debug_next_token();
        }
        catch (java.io.FileNotFoundException e) {
          System.out.println("File not found : \""+argv[i]+"\"");
        }
        catch (java.io.IOException e) {
          System.out.println("IO error scanning file \""+argv[i]+"\"");
          System.out.println(e);
        }
        catch (Exception e) {
          System.out.println("Unexpected exception:");
          e.printStackTrace();
        }
      }
    }
  }


}
</file>

<file path="src/mini_c/Lexer.java~">
/* The following code was generated by JFlex 1.4.3 on 2/8/17 12:29 PM */

package mini_c;

import java_cup.runtime.*;
import static mini_c.sym.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 2/8/17 12:29 PM from the specification file
 * <tt>Lexer.flex</tt>
 */
class Lexer implements java_cup.runtime.Scanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\1\1\25\2\0\1\1\22\0\1\1\1\16\2\0\1\7"+
    "\1\0\1\23\1\6\1\35\1\36\1\14\1\21\1\42\1\22\1\0"+
    "\1\13\1\2\7\3\2\12\1\0\1\41\1\17\1\15\1\20\2\0"+
    "\32\10\4\5\1\10\1\5\2\10\1\47\1\10\1\30\1\27\1\7"+
    "\1\34\1\26\2\7\1\31\1\7\1\46\1\51\2\7\1\43\1\32"+
    "\1\44\1\45\1\7\1\33\1\4\1\7\1\50\1\37\1\24\1\40"+
    "\44\0\4\7\4\0\1\7\12\0\1\7\4\0\1\7\5\0\27\7"+
    "\1\0\37\7\1\0\u01ca\7\4\0\14\7\16\0\5\7\7\0\1\7"+
    "\1\0\1\7\201\0\5\7\1\0\2\7\2\0\4\7\10\0\1\7"+
    "\1\0\3\7\1\0\1\7\1\0\24\7\1\0\123\7\1\0\213\7"+
    "\10\0\236\7\11\0\46\7\2\0\1\7\7\0\47\7\7\0\1\7"+
    "\100\0\33\7\5\0\3\7\30\0\1\7\24\0\53\7\25\0\12\11"+
    "\4\0\2\7\1\0\143\7\1\0\1\7\17\0\2\7\7\0\2\7"+
    "\12\11\3\7\2\0\1\7\20\0\1\7\1\0\36\7\35\0\131\7"+
    "\13\0\1\7\16\0\12\11\41\7\11\0\2\7\4\0\1\7\5\0"+
    "\26\7\4\0\1\7\11\0\1\7\3\0\1\7\27\0\31\7\107\0"+
    "\1\7\1\0\13\7\127\0\66\7\3\0\1\7\22\0\1\7\7\0"+
    "\12\7\4\0\12\11\1\0\7\7\1\0\7\7\5\0\10\7\2\0"+
    "\2\7\2\0\26\7\1\0\7\7\1\0\1\7\3\0\4\7\3\0"+
    "\1\7\20\0\1\7\15\0\2\7\1\0\3\7\4\0\12\11\4\7"+
    "\7\0\1\7\11\0\6\7\4\0\2\7\2\0\26\7\1\0\7\7"+
    "\1\0\2\7\1\0\2\7\1\0\2\7\37\0\4\7\1\0\1\7"+
    "\7\0\12\11\2\0\3\7\20\0\11\7\1\0\3\7\1\0\26\7"+
    "\1\0\7\7\1\0\2\7\1\0\5\7\3\0\1\7\22\0\1\7"+
    "\17\0\2\7\4\0\12\11\1\0\1\7\23\0\10\7\2\0\2\7"+
    "\2\0\26\7\1\0\7\7\1\0\2\7\1\0\5\7\3\0\1\7"+
    "\36\0\2\7\1\0\3\7\4\0\12\11\1\0\1\7\21\0\1\7"+
    "\1\0\6\7\3\0\3\7\1\0\4\7\3\0\2\7\1\0\1\7"+
    "\1\0\2\7\3\0\2\7\3\0\3\7\3\0\14\7\26\0\1\7"+
    "\25\0\12\11\11\0\1\7\13\0\10\7\1\0\3\7\1\0\27\7"+
    "\1\0\12\7\1\0\5\7\3\0\1\7\32\0\2\7\6\0\2\7"+
    "\4\0\12\11\25\0\10\7\1\0\3\7\1\0\27\7\1\0\12\7"+
    "\1\0\5\7\3\0\1\7\40\0\1\7\1\0\2\7\4\0\12\11"+
    "\1\0\2\7\22\0\10\7\1\0\3\7\1\0\51\7\2\0\1\7"+
    "\20\0\1\7\21\0\2\7\4\0\12\11\12\0\6\7\5\0\22\7"+
    "\3\0\30\7\1\0\11\7\1\0\1\7\2\0\7\7\72\0\60\7"+
    "\1\0\2\7\13\0\10\7\11\0\12\11\47\0\2\7\1\0\1\7"+
    "\2\0\2\7\1\0\1\7\2\0\1\7\6\0\4\7\1\0\7\7"+
    "\1\0\3\7\1\0\1\7\1\0\1\7\2\0\2\7\1\0\4\7"+
    "\1\0\2\7\11\0\1\7\2\0\5\7\1\0\1\7\11\0\12\11"+
    "\2\0\4\7\40\0\1\7\37\0\12\11\26\0\10\7\1\0\44\7"+
    "\33\0\5\7\163\0\53\7\24\0\1\7\12\11\6\0\6\7\4\0"+
    "\4\7\3\0\1\7\3\0\2\7\7\0\3\7\4\0\15\7\14\0"+
    "\1\7\1\0\12\11\6\0\46\7\1\0\1\7\5\0\1\7\2\0"+
    "\53\7\1\0\u014d\7\1\0\4\7\2\0\7\7\1\0\1\7\1\0"+
    "\4\7\2\0\51\7\1\0\4\7\2\0\41\7\1\0\4\7\2\0"+
    "\7\7\1\0\1\7\1\0\4\7\2\0\17\7\1\0\71\7\1\0"+
    "\4\7\2\0\103\7\45\0\20\7\20\0\125\7\14\0\u026c\7\2\0"+
    "\21\7\1\0\32\7\5\0\113\7\3\0\3\7\17\0\15\7\1\0"+
    "\4\7\16\0\22\7\16\0\22\7\16\0\15\7\1\0\3\7\17\0"+
    "\64\7\43\0\1\7\3\0\2\7\3\0\12\11\46\0\12\11\6\0"+
    "\130\7\10\0\51\7\1\0\1\7\5\0\106\7\12\0\35\7\51\0"+
    "\12\11\36\7\2\0\5\7\13\0\54\7\25\0\7\7\10\0\12\11"+
    "\46\0\27\7\11\0\65\7\53\0\12\11\6\0\12\11\15\0\1\7"+
    "\135\0\57\7\21\0\7\7\4\0\12\11\51\0\36\7\15\0\2\7"+
    "\12\11\54\7\32\0\44\7\34\0\12\11\3\0\3\7\12\11\44\7"+
    "\153\0\4\7\1\0\4\7\3\0\2\7\11\0\300\7\100\0\u0116\7"+
    "\2\0\6\7\2\0\46\7\2\0\6\7\2\0\10\7\1\0\1\7"+
    "\1\0\1\7\1\0\1\7\1\0\37\7\2\0\65\7\1\0\7\7"+
    "\1\0\1\7\3\0\3\7\1\0\7\7\3\0\4\7\2\0\6\7"+
    "\4\0\15\7\5\0\3\7\1\0\7\7\102\0\2\7\23\0\1\7"+
    "\34\0\1\7\15\0\1\7\20\0\15\7\3\0\33\7\107\0\1\7"+
    "\4\0\1\7\2\0\12\7\1\0\1\7\3\0\5\7\6\0\1\7"+
    "\1\0\1\7\1\0\1\7\1\0\4\7\1\0\13\7\2\0\4\7"+
    "\5\0\5\7\4\0\1\7\21\0\51\7\u0a77\0\57\7\1\0\57\7"+
    "\1\0\205\7\6\0\4\7\3\0\2\7\14\0\46\7\1\0\1\7"+
    "\5\0\1\7\2\0\70\7\7\0\1\7\20\0\27\7\11\0\7\7"+
    "\1\0\7\7\1\0\7\7\1\0\7\7\1\0\7\7\1\0\7\7"+
    "\1\0\7\7\1\0\7\7\120\0\1\7\u01d5\0\3\7\31\0\11\7"+
    "\7\0\5\7\2\0\5\7\4\0\126\7\6\0\3\7\1\0\132\7"+
    "\1\0\4\7\5\0\51\7\3\0\136\7\21\0\33\7\65\0\20\7"+
    "\u0200\0\u19b6\7\112\0\u51cd\7\63\0\u048d\7\103\0\56\7\2\0\u010d\7"+
    "\3\0\20\7\12\11\2\7\24\0\57\7\20\0\31\7\10\0\120\7"+
    "\47\0\11\7\2\0\147\7\2\0\4\7\1\0\4\7\14\0\13\7"+
    "\115\0\12\7\1\0\3\7\1\0\4\7\1\0\27\7\25\0\1\7"+
    "\7\0\64\7\16\0\62\7\34\0\12\11\30\0\6\7\3\0\1\7"+
    "\4\0\12\11\34\7\12\0\27\7\31\0\35\7\7\0\57\7\34\0"+
    "\1\7\12\11\46\0\51\7\27\0\3\7\1\0\10\7\4\0\12\11"+
    "\6\0\27\7\3\0\1\7\5\0\60\7\1\0\1\7\3\0\2\7"+
    "\2\0\5\7\2\0\1\7\1\0\1\7\30\0\3\7\2\0\13\7"+
    "\7\0\3\7\14\0\6\7\2\0\6\7\2\0\6\7\11\0\7\7"+
    "\1\0\7\7\221\0\43\7\15\0\12\11\6\0\u2ba4\7\14\0\27\7"+
    "\4\0\61\7\u2104\0\u016e\7\2\0\152\7\46\0\7\7\14\0\5\7"+
    "\5\0\1\7\1\0\12\7\1\0\15\7\1\0\5\7\1\0\1\7"+
    "\1\0\2\7\1\0\2\7\1\0\154\7\41\0\u016b\7\22\0\100\7"+
    "\2\0\66\7\50\0\15\7\66\0\2\7\30\0\3\7\31\0\1\7"+
    "\6\0\5\7\1\0\207\7\7\0\1\7\13\0\12\11\7\0\32\7"+
    "\4\0\1\7\1\0\32\7\13\0\131\7\3\0\6\7\2\0\6\7"+
    "\2\0\6\7\2\0\3\7\3\0\2\7\3\0\2\7\31\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\2\3\1\4\1\1\1\5\1\6"+
    "\1\7\1\10\1\11\1\12\1\13\1\14\2\1\4\4"+
    "\1\15\1\16\1\17\1\20\1\21\1\22\1\4\1\23"+
    "\2\0\1\2\1\0\1\24\1\25\1\26\1\27\1\30"+
    "\1\31\1\32\1\33\6\4\1\34\1\35\1\0\1\36"+
    "\5\4\1\2\1\37\6\4\1\40\1\4\1\41\1\42"+
    "\1\43";

  private static int [] zzUnpackAction() {
    int [] result = new int[69];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\52\0\124\0\176\0\250\0\322\0\374\0\u0126"+
    "\0\52\0\u0150\0\u017a\0\u01a4\0\u01ce\0\52\0\u01f8\0\u0222"+
    "\0\u024c\0\u0276\0\u02a0\0\u02ca\0\u02f4\0\52\0\52\0\52"+
    "\0\52\0\52\0\52\0\u031e\0\u0348\0\u0372\0\u039c\0\u03c6"+
    "\0\u03f0\0\52\0\52\0\52\0\52\0\52\0\52\0\52"+
    "\0\322\0\u041a\0\u0444\0\u046e\0\u0498\0\u04c2\0\u04ec\0\u0372"+
    "\0\52\0\u0516\0\322\0\u0540\0\u056a\0\u0594\0\u05be\0\u05e8"+
    "\0\52\0\322\0\u0612\0\u063c\0\u0666\0\u0690\0\u06ba\0\u06e4"+
    "\0\322\0\u070e\0\322\0\322\0\322";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[69];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\2\1\7\2\6"+
    "\1\2\1\5\1\10\1\11\1\12\1\13\1\14\1\15"+
    "\1\16\1\17\1\20\1\21\1\3\1\22\1\6\1\23"+
    "\1\6\1\24\1\25\1\6\1\26\1\27\1\30\1\31"+
    "\1\32\1\33\1\34\6\6\53\0\1\3\23\0\1\3"+
    "\26\0\2\35\1\36\47\0\2\5\6\0\1\5\41\0"+
    "\3\6\2\0\4\6\13\0\7\6\6\0\7\6\2\0"+
    "\3\37\2\0\4\37\13\0\7\37\6\0\7\37\13\0"+
    "\1\40\1\41\52\0\1\42\51\0\1\43\51\0\1\44"+
    "\51\0\1\45\54\0\1\46\54\0\1\47\52\0\1\50"+
    "\27\0\3\6\2\0\4\6\13\0\1\6\1\51\5\6"+
    "\6\0\3\6\1\52\3\6\2\0\3\6\2\0\4\6"+
    "\13\0\3\6\1\53\3\6\6\0\7\6\2\0\3\6"+
    "\2\0\4\6\13\0\1\54\6\6\6\0\1\6\1\55"+
    "\5\6\2\0\3\6\2\0\4\6\13\0\6\6\1\56"+
    "\6\0\7\6\2\0\3\6\2\0\4\6\13\0\2\6"+
    "\1\57\4\6\6\0\7\6\2\0\2\35\50\0\2\60"+
    "\1\0\1\60\2\0\1\60\1\0\1\60\14\0\2\60"+
    "\16\0\1\60\10\0\1\61\43\0\25\40\1\0\24\40"+
    "\14\41\1\62\35\41\2\0\3\6\2\0\4\6\13\0"+
    "\7\6\6\0\1\6\1\63\5\6\2\0\3\6\2\0"+
    "\4\6\13\0\4\6\1\64\2\6\6\0\7\6\2\0"+
    "\3\6\2\0\4\6\13\0\7\6\6\0\5\6\1\65"+
    "\1\6\2\0\3\6\2\0\4\6\13\0\7\6\6\0"+
    "\1\66\6\6\2\0\3\6\2\0\4\6\13\0\1\67"+
    "\6\6\6\0\7\6\2\0\3\6\2\0\4\6\13\0"+
    "\7\6\6\0\1\6\1\70\5\6\13\41\1\71\1\62"+
    "\35\41\2\0\3\6\2\0\4\6\13\0\2\6\1\72"+
    "\4\6\6\0\7\6\2\0\3\6\2\0\4\6\13\0"+
    "\2\6\1\73\4\6\6\0\7\6\2\0\3\6\2\0"+
    "\4\6\13\0\7\6\6\0\2\6\1\74\4\6\2\0"+
    "\3\6\2\0\4\6\13\0\3\6\1\75\3\6\6\0"+
    "\7\6\2\0\3\6\2\0\4\6\13\0\7\6\6\0"+
    "\2\6\1\76\4\6\2\0\3\6\2\0\4\6\13\0"+
    "\7\6\6\0\6\6\1\77\2\0\3\6\2\0\4\6"+
    "\13\0\7\6\6\0\4\6\1\100\2\6\2\0\3\6"+
    "\2\0\4\6\13\0\2\6\1\101\4\6\6\0\7\6"+
    "\2\0\3\6\2\0\4\6\13\0\7\6\6\0\1\102"+
    "\6\6\2\0\3\6\2\0\4\6\13\0\1\6\1\103"+
    "\5\6\6\0\7\6\2\0\3\6\2\0\4\6\13\0"+
    "\7\6\6\0\1\6\1\104\5\6\2\0\3\6\2\0"+
    "\4\6\13\0\7\6\6\0\3\6\1\105\3\6";

  private static int [] zzUnpackTrans() {
    int [] result = new int[1848];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\6\1\1\11\4\1\1\11\7\1\6\11"+
    "\2\1\2\0\1\1\1\0\7\11\10\1\1\11\1\0"+
    "\6\1\1\11\14\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[69];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
	/* No need for preamble in JAVA */


  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  Lexer(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 1778) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
      yyclose();
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public java_cup.runtime.Symbol next_token() throws java.io.IOException, Exception {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      for (zzCurrentPosL = zzStartRead; zzCurrentPosL < zzMarkedPosL;
                                                             zzCurrentPosL++) {
        switch (zzBufferL[zzCurrentPosL]) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn++;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 35: 
          { return new Symbol(RETURN, yyline, yycolumn);
          }
        case 36: break;
        case 27: 
          { return new Symbol(IF);
          }
        case 37: break;
        case 26: 
          { return new Symbol(OR, yyline, yycolumn);
          }
        case 38: break;
        case 18: 
          { return new Symbol(COMMA, yyline, yycolumn);
          }
        case 39: break;
        case 16: 
          { return new Symbol(RB, yyline, yycolumn);
          }
        case 40: break;
        case 10: 
          { return new Symbol(CMP, yyline, yycolumn, Binop.Bgt);
          }
        case 41: break;
        case 7: 
          { return new Symbol(EQUAL, yyline, yycolumn);
          }
        case 42: break;
        case 4: 
          { return new Symbol(IDENT, yyline, yycolumn, yytext());
          }
        case 43: break;
        case 15: 
          { return new Symbol(LB, yyline, yycolumn);
          }
        case 44: break;
        case 28: 
          { return new Symbol(CST, yyline, yycolumn, new Constant(Integer.decode(yytext())));
          }
        case 45: break;
        case 19: 
          { return new Symbol(CST, yyline, yycolumn, new Constant(Integer.parseInt(yytext(), 8)));
          }
        case 46: break;
        case 1: 
          { throw new Exception(String.format("Error in line %d, column %d: illegal character '%s'\n", yyline, yycolumn, yytext()));
          }
        case 47: break;
        case 3: 
          { return new Symbol(CST, yyline, yycolumn, new Constant(Integer.parseInt(yytext())));
          }
        case 48: break;
        case 33: 
          { return new Symbol(SIZEOF, yyline, yycolumn);
          }
        case 49: break;
        case 6: 
          { return new Symbol(TIMES, yyline, yycolumn);
          }
        case 50: break;
        case 30: 
          { return new Symbol(INT, yyline, yycolumn);
          }
        case 51: break;
        case 14: 
          { return new Symbol(RPAR, yyline, yycolumn);
          }
        case 52: break;
        case 31: 
          { return new Symbol(ELSE);
          }
        case 53: break;
        case 21: 
          { return new Symbol(CMP, yyline, yycolumn, Binop.Bneq);
          }
        case 54: break;
        case 29: 
          { return new Symbol(CST, yyline, yycolumn, new Constant(yytext().charAt(1)));
          }
        case 55: break;
        case 12: 
          { return new Symbol(MINUS, yyline, yycolumn);
          }
        case 56: break;
        case 22: 
          { return new Symbol(CMP, yyline, yycolumn, Binop.Ble);
          }
        case 57: break;
        case 20: 
          { return new Symbol(CMP, yyline, yycolumn, Binop.Beqeq);
          }
        case 58: break;
        case 32: 
          { return new Symbol(WHILE);
          }
        case 59: break;
        case 8: 
          { return new Symbol(NOT, yyline, yycolumn);
          }
        case 60: break;
        case 34: 
          { return new Symbol(STRUCT, yyline, yycolumn);
          }
        case 61: break;
        case 24: 
          { return new Symbol(ARROW, yyline, yycolumn);
          }
        case 62: break;
        case 23: 
          { return new Symbol(CMP, yyline, yycolumn, Binop.Bge);
          }
        case 63: break;
        case 13: 
          { return new Symbol(LPAR, yyline, yycolumn);
          }
        case 64: break;
        case 11: 
          { return new Symbol(PLUS, yyline, yycolumn);
          }
        case 65: break;
        case 17: 
          { return new Symbol(SEMICOLON, yyline, yycolumn);
          }
        case 66: break;
        case 5: 
          { return new Symbol(DIV, yyline, yycolumn);
          }
        case 67: break;
        case 9: 
          { return new Symbol(CMP, yyline, yycolumn, Binop.Blt);
          }
        case 68: break;
        case 2: 
          { /* DO NOTHING */
          }
        case 69: break;
        case 25: 
          { return new Symbol(AND, yyline, yycolumn);
          }
        case 70: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            zzDoEOF();
              { return new java_cup.runtime.Symbol(sym.EOF); }
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }

  /**
   * Converts an int token code into the name of the
   * token by reflection on the cup symbol class/interface sym
   *
   * This code was contributed by Karl Meissner <meissnersd@yahoo.com>
   */
  private String getTokenName(int token) {
    try {
      java.lang.reflect.Field [] classFields = sym.class.getFields();
      for (int i = 0; i < classFields.length; i++) {
        if (classFields[i].getInt(null) == token) {
          return classFields[i].getName();
        }
      }
    } catch (Exception e) {
      e.printStackTrace(System.err);
    }

    return "UNKNOWN TOKEN";
  }

  /**
   * Same as next_token but also prints the token to standard out
   * for debugging.
   *
   * This code was contributed by Karl Meissner <meissnersd@yahoo.com>
   */
  public java_cup.runtime.Symbol debug_next_token() throws java.io.IOException, Exception {
    java_cup.runtime.Symbol s = next_token();
    System.out.println( "line:" + (yyline+1) + " col:" + (yycolumn+1) + " --"+ yytext() + "--" + getTokenName(s.sym) + "--");
    return s;
  }

  /**
   * Runs the scanner on input files.
   *
   * This main method is the debugging routine for the scanner.
   * It prints debugging information about each returned token to
   * System.out until the end of file is reached, or an error occured.
   *
   * @param argv   the command line, contains the filenames to run
   *               the scanner on.
   */
  public static void main(String argv[]) {
    if (argv.length == 0) {
      System.out.println("Usage : java Lexer <inputfile>");
    }
    else {
      for (int i = 0; i < argv.length; i++) {
        Lexer scanner = null;
        try {
          scanner = new Lexer( new java.io.FileReader(argv[i]) );
          while ( !scanner.zzAtEOF ) scanner.debug_next_token();
        }
        catch (java.io.FileNotFoundException e) {
          System.out.println("File not found : \""+argv[i]+"\"");
        }
        catch (java.io.IOException e) {
          System.out.println("IO error scanning file \""+argv[i]+"\"");
          System.out.println(e);
        }
        catch (Exception e) {
          System.out.println("Unexpected exception:");
          e.printStackTrace();
        }
      }
    }
  }


}
</file>

<file path="src/mini_c/Lin.java">
package mini_c;

import java.util.HashSet;
import java.util.Map;

/*
 * Created by NEGU on 3/12/2017.
 */
class Lin implements LTLVisitor {
    private LTLgraph cfg;           // graphe en cours de traduction
    private X86_64 asm;             // code en cours de construction
    private HashSet<Label> visited; // instructions déjà traduites

    Lin() {
        asm = new X86_64();
        visited = new HashSet<>();
        asm.globl("main");
    }
    /* LTL to asm*/
    void translateFunction(LTLfun f) {
        cfg = f.body;
        asm.label(f.name);
        lin(f.entry);
    }

    private void lin(Label l) {
        if (visited.contains(l)) {
            asm.needLabel(l);
            asm.jmp(l.name);
        } else {
            visited.add(l);
            asm.label(l);
            cfg.graph.get(l).accept(this);
        }
    }
    /** Instructions */
    @Override public void visit(Laccess_global o) {
        asm.movq(o.s, o.r.toString());
        lin(o.l);
    }
    @Override public void visit(Lassign_global o) {
        asm.movq(o.r.toString(), o.s);
        lin(o.l);
    }
    @Override public void visit(Lload o) {
        asm.movq(o.i + "(" + o.r1 + ") ", o.r2.toString());
        lin(o.l);
    }
    @Override public void visit(Lstore o) {
        asm.movq(o.r1.toString(), o.i + "(" + o.r2 + ") ");
        lin(o.l);
    }
    @Override public void visit(Lmubranch o) {
        if (!visited.contains(o.l2) || visited.contains(o.l1)) {  // If l2 is not yet produced or if both are
            if (o.m instanceof Mjz) {
                asm.jz(o.l1.toString());
            } else if (o.m instanceof Mjnz) {
                asm.jnz(o.l1.toString());
            } else if (o.m instanceof Mjlei) {
                asm.jle(o.l1.toString());
            } else if (o.m instanceof Mjgi) { // the if is unnecessary but I find it more clear
                asm.jg(o.l1.toString());
            }
            if (!visited.contains(o.l2)) {  // case l2 is not visited yet
                asm.needLabel(o.l1); // TODO: not sayed by the lecture but it makes no sense not to add it.
                lin(o.l2);
                lin(o.l1);
            }
            else {  // case l1 & l2 were visited
                asm.jmp(o.l2.toString());
            }
        }
        else if (!visited.contains(o.l1) ) {
            if (o.m instanceof Mjz) {
                asm.jnz(o.l2.toString());
            } else if (o.m instanceof Mjnz) {
                asm.jz(o.l2.toString());
            } else if (o.m instanceof Mjlei) {
                asm.jg(o.l2.toString());
            } else if (o.m instanceof Mjgi) { // the if is unnecessary but I find it more clear
                asm.jle(o.l2.toString());
            }
            lin(o.l1);
            lin(o.l2);
        }
    }
    @Override public void visit(Lmbbranch o) {
        Label L2 = o.l1;
        Label L3 = o.l2;
        if (!visited.contains(L3) || visited.contains(L2) ) {
            asm.cmpq(o.r1.toString(), o.r2.toString());
            switch (o.m) {
                case Mjl:
                    asm.jl(L2.toString());
                    break;
                case Mjle:
                    asm.jle(L2.toString());
                    break;
                case Mjeqeq:
                    asm.je(L2.toString());
                    break;
                case Mjneq:
                    asm.jne(L2.toString());
                    break;
                case Mjg:
                    asm.jg(L2.toString());
                    break;
                case Mjge:
                    asm.jge(L2.toString());
            }
            if (!visited.contains(L3)) {
                asm.needLabel(o.l1); // TODO: not sayed by the lecture but it makes no sense not to add it.
                lin(L3);
                lin(L2);
            }
            else {
                asm.jmp(L3.toString());
            }
        }
        else {
            switch (o.m) {
                case Mjl:
                    asm.jge(L3.toString());
                    break;
                case Mjle:
                    asm.jg(L3.toString());
                    break;
                case Mjeqeq:
                    asm.jne(L3.toString());
                    break;
                case Mjneq:
                    asm.je(L3.toString());
                    break;
                case Mjg:
                    asm.jle(L3.toString());
                    break;
                case Mjge:
                    asm.jl(L3.toString());
            }
            asm.needLabel(L3);
            lin(L2);
            lin(L3);
        }
    }
    @Override public void visit(Lgoto o) {
        /* L1 : goto -> L2 */
        if(visited.contains(o.l)) {
            asm.jmp(o.l.toString());
        }
        // TODO: it says "produire l'etiquette L1" but I don't know what it means. Possible bug then here
        lin(o.l);
    }
    @Override public void visit(Lreturn o) {
        asm.ret();
    }
    @Override public void visit(Lconst o) {
        asm.movq(o.i, o.o.toString());
        lin(o.l);
    }
    @Override public void visit(Lmunop o) {
        if (o.m instanceof Maddi) {
            asm.addq( "$" + Integer.toString(((Maddi) o.m).n), o.o.toString());
        }
        else if (o.m instanceof Msetei) {
            asm.sete(o.m.toString() + " " + o.o.toString());
        }
        else if (o.m instanceof Msetnei) {
            asm.setne(o.m.toString() + " " + o.o.toString());
        }
        lin(o.l);
    }
    @Override public void visit(Lmbinop o) {
        switch (o.m) {
            case Mmov:
                asm.movq(o.o1.toString(), o.o2.toString());
                break;
            case Madd:
                System.out.println("Here I am with: " + o.o1.toString() + o.o2.toString());
                asm.addq(o.o1.toString(), o.o2.toString());
                break;
            case Msub:
                asm.subq(o.o1.toString(), o.o2.toString());
                break;
            case Mmul:
                asm.imulq(o.o1.toString(), o.o2.toString());
                break;
            case Mdiv:
                // I don't know what to do here. div has only one register input. How does it work? I changed to 2 reg. Hope is ok
                asm.idivq(o.o1.toString(), o.o2.toString());
                break;
            case Mand:
                asm.andq(o.o1.toString(), o.o2.toString());
                break;
            case Mor:
                asm.orq(o.o1.toString(), o.o2.toString());
                break;
            default:
                throw new Error("Still todo because I don't know what to do with the rest. operation " + o.m.toString());
        }
        lin(o.l);
    }
    @Override public void visit(Lpush_param o) {
        asm.pushq(o.o.toString());
    }
    @Override public void visit(Lcall o) {
        asm.call(o.s);
        lin(o.l);
    }
    @Override public void visit(LTLfun o) {
        // TODO: mmm here? shall I do something? the code is working so I guess not
    }
    @Override public void visit(LTLfile o) {
        // TODO: mmm here? shall I do something? the code is working so I guess not
    }

    X86_64 getAsm(){ return asm; }
    void addGlobal(String x) {
        asm.dlabel(x);
    }
}
</file>

<file path="src/mini_c/Liveness.java">
package mini_c;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.Stack;

class Liveness {
	Map<Label, LiveInfo> info;

	Liveness(ERTLgraph g) { // hoping that this is Kildall
		info = new HashMap<>();
		HashMap<Label, Boolean> labelsInStack = new HashMap<Label, Boolean>();
		Stack<Label> stack = new Stack<Label>();
		Label truc = new Label();

		for (Label l : g.graph.keySet()) {
			LiveInfo liveInfo = new LiveInfo();
			stack.push(l);
			labelsInStack.put(l, true);

			ERTL ertl = g.graph.get(l);
			liveInfo.defs = ertl.def();
			liveInfo.uses = ertl.use();
			liveInfo.succ = ertl.succ();
			liveInfo.instr = ertl;

			liveInfo.outs = new HashSet<>();
			liveInfo.ins = new HashSet<>();

			this.info.put(l, liveInfo);

		}

		boolean finish;
		while (!stack.empty()) {
			Label current = stack.pop();
			labelsInStack.put(current, false);

			LiveInfo liveInfo = this.info.get(current);

			int old_in = liveInfo.ins.size();

			// updating the out
			for (Label label : liveInfo.succ) {
					liveInfo.outs.addAll(this.info.get(label).ins);
			}

			// updating the in
			liveInfo.ins.clear();
			liveInfo.ins.addAll(liveInfo.uses);
			for (Register r : liveInfo.outs) {
				if (!liveInfo.defs.contains(r)) {
					liveInfo.ins.add(r);
				}
			}
			// on teste si old_in et in sont égaux
			
			finish = old_in < liveInfo.ins.size();

			// for each pred we add it to the stack
			if (finish) {
				for (Label l1 : g.graph.keySet()) {
					boolean isSux = false;
					Label[] sux = info.get(l1).succ;
					for (int j = 0; j < sux.length; j++) {
						if (sux[j].name.equals(current.name)) {
							isSux = true;
						}
					}
					if (isSux && !labelsInStack.get(l1)) {
						stack.push(l1);
						labelsInStack.put(l1, true);
					}
				}
			}

		}

	}

	private void print(Set<Label> visited, Label l) {
		if (visited.contains(l))
			return;
		visited.add(l);
		LiveInfo li = this.info.get(l);
		System.out.println("  " + String.format("%3s", l) + ": " + li);
		for (Label s : li.succ)
			print(visited, s);
	}

	void print(Label entry) {
		print(new HashSet<>(), entry);
	}

	@Override
	public boolean equals(Object o) {
		Liveness that = (Liveness) o;
		for (Map.Entry<Label, LiveInfo> liveInfo : this.info.entrySet()) {
			if (!liveInfo.getValue().equals(that.info.get(liveInfo.getKey()))) {
				return false;
			}
		}
		return true;
	}
}

class LiveInfo {
	ERTL instr;
	Label[] succ; // successeurs
	Set<Label> pred; // prédécesseurs
	Set<Register> defs; // définitions
	Set<Register> uses; // utilisations
	Set<Register> ins; // variables vivantes en entrée
	Set<Register> outs; // variables vivantes en sortie

	@Override
	public String toString() {
		return " def = " + this.defs + " use = " + this.uses + " in = " + ins + " out = " + outs;
	}

	@Override
	public boolean equals(Object o) {
		LiveInfo that = (LiveInfo) o;
		if (that == null) {
			return false;
		}
		// TODO: I yet not check instr or pred
		if (!this.defs.equals(that.defs)) {
			return false;
		}
		if (!this.uses.equals(that.uses)) {
			return false;
		}
		if (!this.ins.equals(that.ins)) {
			return false;
		}
		if (!this.outs.equals(that.outs)) {
			return false;
		}
		return true;
	}
}
</file>

<file path="src/mini_c/LTL.java">
package mini_c;

/** Location Transfer Language (LTL) */

import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.Map;
import java.util.Set;

import static java.lang.Integer.max;
import static mini_c.Register.parameters;

/** une opérande = un registre ou un emplacement de pile
 *  (résultat de l'allocation de registres) */
abstract class Operand {}
/** une opérande qui est un emplacement de pile */
class Spilled extends Operand {
  int n; /** position par rapport à %rsp */
  
  Spilled(int n) { this.n = n; }
  
  @Override
  public String toString() { return n + "(%rsp)"; }
  
  @Override
  public boolean equals(Object that) {
    if (that instanceof Reg) return false;
    return ((Spilled)that).n == this.n;
  }
}
/** une opérande qui est un registre (physique) */
class Reg extends Operand {
  Register r;

  Reg(Register r) { this.r = r; }
  
  @Override
  public String toString() { return r.toString(); }
  
  @Override
  public boolean equals(Object that) {
    if (that instanceof Spilled) return false;
    return ((Reg)that).r.equals(this.r);
  }
}

/** instruction LTL */
abstract class LTL {
  abstract void accept(LTLVisitor v);
  abstract Label[] succ();
}

/** les mêmes que dans ERTL */
class Laccess_global extends LTL {
  public String s;
  public Register r;
  public Label l;
  Laccess_global(String s, Register r, Label l) { this.s = s; this.r = r; this.l = l;  }
  void accept(LTLVisitor v) { v.visit(this); }
  public String toString() { return "mov " + s + " " + r + " --> " + l; }
  Label[] succ() { return new Label[] { l }; }
}

class Lassign_global extends LTL {
  public Register r;
  public String s;
  public Label l;
  Lassign_global(Register r, String s, Label l) { this.r = r; this.s = s;
    this.l = l;  }
  void accept(LTLVisitor v) { v.visit(this); }
  public String toString() { return "mov " + r + " " + s + " --> " + l; }
  Label[] succ() { return new Label[] { l }; }
}

class Lload extends LTL {
  public Register r1;
  public int i;
  public Register r2;
  public Label l;
  Lload(Register r1, int i, Register r2, Label l) { this.r1 = r1; this.i = i; this.r2 = r2; this.l = l;  }
  void accept(LTLVisitor v) { v.visit(this); }
  public String toString() { return "mov " + i + "(" + r1 + ") " + r2 + " --> " + l; }
  Label[] succ() { return new Label[] { l }; }
}

class Lstore extends LTL {
  public Register r1;
  public Register r2;
  public int i;
  public Label l;
  Lstore(Register r1, Register r2, int i, Label l) { this.r1 = r1;
    this.r2 = r2; this.i = i; this.l = l;  }
  void accept(LTLVisitor v) { v.visit(this); }
  public String toString() { return "mov " + r1 + " " + i + "(" + r2 + ") " + " --> " + l; }
  Label[] succ() { return new Label[] { l }; }
}

class Lmubranch extends LTL {
  public Mubranch m;
  public Register r;
  public Label l1;
  public Label l2;
  Lmubranch(Mubranch m, Register r, Label l1, Label l2) { this.m = m;
    this.r = r; this.l1 = l1; this.l2 = l2;  }
  void accept(LTLVisitor v) { v.visit(this); }
  public String toString() { return m + " " + r + " --> " + l1 + ", " + l2; }
  Label[] succ() { return new Label[] { l1, l2 }; }
}

class Lmbbranch extends LTL {
  public Mbbranch m;
  public Register r1;
  public Register r2;
  public Label l1;
  public Label l2;
  Lmbbranch(Mbbranch m, Register r1, Register r2, Label l1, Label l2) {
    this.m = m; this.r1 = r1; this.r2 = r2; this.l1 = l1; this.l2 = l2;  }
  void accept(LTLVisitor v) { v.visit(this); }
  public String toString() { return m + " " + r1 + " " + r2 + " --> " + l1 + ", " + l2; }
  Label[] succ() { return new Label[] { l1, l2 }; }
}

class Lgoto extends LTL {
  public Label l;
  Lgoto(Label l) { this.l = l;  }
  void accept(LTLVisitor v) { v.visit(this); }
  public String toString() { return "goto " + l; }
  Label[] succ() { return new Label[] { l }; }
}

class Lreturn extends LTL {
  Lreturn() {  }
  void accept(LTLVisitor v) { v.visit(this); }
  public String toString() { return "return"; }
  Label[] succ() { return new Label[] { }; }
}

/** les mêmes que dans ERTL, mais avec Operand à la place de Register */
class Lconst extends LTL {
  public int i;
  public Operand o;
  public Label l;
  Lconst(int i, Operand o, Label l) { this.i = i; this.o = o; this.l = l;  }
  void accept(LTLVisitor v) { v.visit(this); }
  public String toString() { return "mov $" + i + " " + o + " --> " + l; }
  Label[] succ() { return new Label[] { l }; }
}

class Lmunop extends LTL {
  public Munop m;
  public Operand o;
  public Label l;
  Lmunop(Munop m, Operand o, Label l) { this.m = m; this.o = o; this.l = l; }
  void accept(LTLVisitor v) { v.visit(this); }
  public String toString() { return m + " " + o + " --> " + l; }
  Label[] succ() { return new Label[] { l }; }
}

class Lmbinop extends LTL {
  public Mbinop m;
  public Operand o1;
  public Operand o2;
  public Label l;
  Lmbinop(Mbinop m, Operand o1, Operand o2, Label l) { this.m = m; this.o1 = o1; this.o2 = o2; this.l = l;  }
  void accept(LTLVisitor v) { v.visit(this); }
  public String toString() { return m + " " + o1 + " " + o2 + " --> " + l; }
  Label[] succ() { return new Label[] { l }; }
}

class Lpush_param extends LTL {
  public Operand o;
  public Label l;
  Lpush_param(Operand o, Label l) { this.o = o; this.l = l;  }
  void accept(LTLVisitor v) { v.visit(this); }
  public String toString() { return "push " + o + " --> " + l; }
  Label[] succ() { return new Label[] { l }; }
}

/** légèrement modifiée */
class Lcall extends LTL {
  public String s;
  public Label l;
  Lcall(String s, Label l) { this.s = s; this.l = l;  }
  void accept(LTLVisitor v) { v.visit(this); }
  public String toString() { return "call " + s + " --> " + l; }
  Label[] succ() { return new Label[] { l }; }
}

/** une fonction LTL */
class LTLfun {
  /** nom de la fonction */
  public String name;
  /** point d'entrée dans le graphe */
  public Label entry;
  /** le graphe de flot de contrôle */
  public LTLgraph body;
  
  LTLfun(String name) {
    this.name = name;
  }
  void accept(LTLVisitor v) { v.visit(this); }

  void createFun(ERTLfun efun) {
    this.entry = efun.entry;
    this.body = new LTLgraph();
    for (Map.Entry<Label, ERTL> e : efun.body.graph.entrySet()) {
      e.getValue().toLTL(this.body, efun.coloring, e.getKey(), efun.formals, max(efun.locals.size() - parameters.size(), 0));
    }
  }
  /** pour débugger */
  void print() {
    System.out.println("== LTL ==========================");
    System.out.println(name + "()");
    System.out.println("  entry  : " + entry);
    body.print(entry);
  }
}

class LTLfile {
  LinkedList<String> gvars;
  LinkedList<LTLfun> funs;
  LTLfile() {
    this.gvars = new LinkedList<String>();
    this.funs = new LinkedList<LTLfun>();
  }
  void accept(LTLVisitor v) { v.visit(this); }
  
  /** pour débugger */
  void print() {
    for (LTLfun fun: this.funs)
      fun.print();
  }

  void convertERTLfile(ERTLfile ertLfile) {
    this.gvars = ertLfile.gvars;
    for (ERTLfun ertlfun : ertLfile.funs) {     // for every function in ERTLfun
      LTLfun ltlfun = new LTLfun(ertlfun.name); // Create a RTLfun
      ltlfun.createFun(ertlfun);
      this.funs.add(ltlfun);
    }
  }

  X86_64 linearize() {
    Lin lin = new Lin();
    for (String x : gvars) {
      lin.addGlobal(x);
    }
    for (LTLfun f : this.funs) {
      lin.translateFunction(f);
    }
    return lin.getAsm();
  }
}

/** graphe de flot de contrôle (d'une fonction)
 * 
 * c'est un dictionnaire qui associe une instruction de type RTL
 * à une étiquette de type Label
 */
class LTLgraph {
  Map<Label, LTL> graph = new HashMap<Label, LTL>();
  
  /** ajoute une nouvelle instruction dans le graphe
    * et renvoie son étiquette */
  Label add(LTL instr) {
    Label l = new Label();
    graph.put(l, instr);
    return l;
  }
  
  void put(Label l, LTL instr) {
    graph.put(l, instr);
  }
  
  // imprime le graphe par un parcours en profondeur
  private void print(Set<Label> visited, Label l) {
    if (visited.contains(l)) return;
    visited.add(l);
    LTL r = this.graph.get(l);
    if (r == null) return; // c'est le cas pour exit
    System.out.println("  " + String.format("%3s", l) + ": " + r);
    for (Label s: r.succ()) print(visited, s);
  }
  
  /** imprime le graphe (pour debugger) */
  void print(Label entry) {
    print(new HashSet<Label>(), entry);
  }
}

interface LTLVisitor {
  public void visit(Laccess_global o);
  public void visit(Lassign_global o);
  public void visit(Lload o);
  public void visit(Lstore o);
  public void visit(Lmubranch o);
  public void visit(Lmbbranch o);
  public void visit(Lgoto o);
  public void visit(Lreturn o);
  public void visit(Lconst o);
  public void visit(Lmunop o);
  public void visit(Lmbinop o);
  public void visit(Lpush_param o);
  public void visit(Lcall o);
  public void visit(LTLfun o);
  public void visit(LTLfile o);
}

class EmptyLTLVisitor implements LTLVisitor {
  public void visit(Laccess_global o) {}
  public void visit(Lassign_global o) {}
  public void visit(Lload o) {}
  public void visit(Lstore o) {}
  public void visit(Lmubranch o) {}
  public void visit(Lmbbranch o) {}
  public void visit(Lgoto o) {}
  public void visit(Lreturn o) {}
  public void visit(Lconst o) {}
  public void visit(Lmunop o) {}
  public void visit(Lmbinop o) {}
  public void visit(Lpush_param o) {}
  public void visit(Lcall o) {}
  public void visit(LTLfun o) {}
  public void visit(LTLfile o) {}
  }
</file>

<file path="src/mini_c/Main.java">
package mini_c;

// TODO: check if there are error's which could say the line and that

public class Main {

	public static void main(String[] args) throws Exception {
		String file = "test.c";
		for (String s: args) {
			if (s.equals("--parse-only"))
				;
			else if (s.equals("--type-only"))
				;
			else
				file = s;
		}
		java.io.Reader reader = new java.io.FileReader(file);
		Lexer lexer = new Lexer(reader);
		Parser parser = new Parser(lexer);
		File f = (File) parser.parse().value;
		/** Typer */
		f.Typer();
		/** RTL */
		RTLfile rfile= f.toRTL();
		/** ERTL */
		ERTLfile erFile = new ERTLfile();
		erFile.convertRTLfile(rfile);
		erFile.print();
		/** LTL */
		LTLfile ltlfile = new LTLfile();
		ltlfile.convertERTLfile(erFile);
		ltlfile.print();
		/** asm */
		X86_64 asm = ltlfile.linearize();
		asm.print();
		String[] parts = file.split("\\.");
		String asmCode = parts[0];
		asm.printToFile(asmCode + ".s");
	}
}

/* Typical code you don't want to delete in case it is usefull later but you never use it
		for (Def d: f.l)
			//Interp.functions.put(d.f, d);
		try {
			f.s.accept(new Interp());
		} catch (Error e) {
			System.out.println("error: " + e.toString());
			System.exit(1);
		}*/
</file>

<file path="src/mini_c/Ops.java">
package mini_c;

/* Opérations x86-64 utilisées pendant la sélection d'instructions */

/** opération x86-64 unaire */
abstract class Munop {}
class Maddi extends Munop { // Add integer
	int n;
	Maddi(int n) { this.n = n;}
	public String toString() { return "add $" + n; } 
}
class Msetei extends Munop {	// Set if equal (result == 0 ?)
	int n;
	Msetei(int n) { this.n = n;}
	public String toString() { return "sete $" + n; } 
}
class Msetnei extends Munop {	// Set if not equal
	int n;
	Msetnei(int n) { this.n = n;}
	public String toString() { return "setne $" + n; } 
}

/** opération x86-64 binaire */
enum Mbinop {
  Mmov
, Madd
, Msub
, Mmul
, Mdiv
, Msete
, Msetne
, Msetl
, Msetle
, Msetg
, Msetge
	, Mand
	, Mor
}

/** opération x86-64 de branchement (unaire) */
abstract class Mubranch {} 
class Mjz extends Mubranch {
	public String toString() { return "jz"; } 	
}
/* TODO: not yet implemented */
class Mjnz extends Mubranch {
	public String toString() { return "jnz"; } 	
}
class Mjlei  extends Mubranch {
	int n;
	Mjlei(int n) { this.n = n;}
	public String toString() { return "jle $" + n; } 	
}
class Mjgi extends Mubranch {
	int n;
	Mjgi(int n) { this.n = n;}
	public String toString() { return "jg $" + n; } 	
}

/** opération x86-64 de branchement (binaire) */
enum Mbbranch {
  	Mjl
	, Mjle
	, Mjeqeq
	, Mjneq
	, Mjg
	, Mjge
}
</file>

<file path="src/mini_c/Parser.cup">
package mini_c;

import java_cup.runtime.*;
import java.util.*;

terminal String IDENT;
terminal Constant CST;
terminal Binop CMP;
terminal    IF, ELSE, WHILE,
            INT, RETURN, STRUCT, SIZEOF,
            LPAR, RPAR, RB, LB, SEMICOLON, COMMA,
            EQUAL, PLUS, MINUS, DIV, TIMES, AND, OR, NOT, ARROW;
terminal    NEG;

non terminal File file;
non terminal Declarations   declarations;
non terminal Decl_function  decl_function;
non terminal Decl_variable  decl_variable;
non terminal Decl_struct    decl_struct;
non terminal Param param;
non terminal Expr expr;
non terminal Stmt stmt;
non terminal Sblock block;
non terminal LinkedList<Declarations> list_decl;
non terminal LinkedList<Stmt> list_stmt;
non terminal LinkedList<String> nonempty_list_comma_ident;
non terminal LinkedList<Param> list_comma_param;
non terminal LinkedList<Decl_variable> list_decl_variable;
non terminal LinkedList<Expr> list_comma_expr;
non terminal LinkedList<String> nonempty_list_times_comma_list;

precedence right EQUAL;
precedence left OR;
precedence left AND;
precedence nonassoc CMP;
precedence left PLUS, MINUS;
precedence left TIMES, DIV;
precedence right NOT, NEG;
precedence left ARROW;

precedence nonassoc ELSE;

start with file;

file ::=
  list_decl:l
    {: RESULT = new File(l); :}
;
    /* Declarations */
declarations ::=
    decl_variable:d
    {: RESULT = d; :}
| decl_struct:d
    {: RESULT = d; :}
| decl_function:d
    {: RESULT = d; :}
;

decl_variable ::=
  INT nonempty_list_comma_ident:x SEMICOLON
    {: RESULT = new Decl_variable(x); :}
| STRUCT IDENT:s nonempty_list_times_comma_list:l SEMICOLON
    {: RESULT = new Decl_variable(s, l); :}
;

decl_struct ::=
  STRUCT IDENT:s LB list_decl_variable:l RB SEMICOLON
    {: RESULT = new Decl_struct(s, l); :}
;

decl_function ::=
  INT IDENT:f LPAR list_comma_param:l RPAR block:b 	// of the syntax: int f(x, y, z, ...) { v s }
  	{: RESULT = new Decl_function(f, l, b, "int"); :}
| STRUCT IDENT TIMES IDENT:f LPAR list_comma_param:l RPAR block:b
    {: RESULT = new Decl_function(f, l, b, "w<w<struct"); :}
;
/* Param, expr & stmt */
param ::=
 INT IDENT:x
    {: RESULT = new Param(new Evar(x)); :}
| STRUCT IDENT:s TIMES IDENT:x
    {: RESULT = new Param(new Evar(x), s); :}
;

expr ::=
  CST:c
    {: RESULT = new Ecst(c); :}
| IDENT:x
    {: RESULT = new Evar(x); :}
| IDENT:f LPAR list_comma_expr:l RPAR // Call a function
    {: RESULT = new Ecall(f, l); :}
| MINUS expr:e
	{: RESULT =  new Eunop(Unop.Uneg, e); :}
	%prec NEG
| NOT expr:e
	{: RESULT =  new Eunop(Unop.Unot, e); :}
| expr:e ARROW IDENT:x
    {: RESULT = new Ebinop(Binop.Bobj, e, new Evar(x)); :}
| expr:e1 EQUAL expr:e2
    {: RESULT =  new Ebinop(Binop.Beq, e1, e2); :}
| expr:e1 CMP:c expr:e2
	{: RESULT = new Ebinop(c, e1, e2); :}
| expr:e1 PLUS expr:e2
    {: RESULT = new Ebinop(Binop.Badd, e1, e2); :}
| expr:e1 MINUS expr:e2
    {: RESULT = new Ebinop(Binop.Bsub, e1, e2); :}
| expr:e1 TIMES expr:e2
    {: RESULT = new Ebinop(Binop.Bmul, e1, e2); :}
| expr:e1 DIV expr:e2
	{: RESULT = new Ebinop(Binop.Bdiv, e1, e2); :}
| expr:e1 AND expr:e2
    {: RESULT = new Ebinop(Binop.Band, e1, e2); :}
| expr:e1 OR expr:e2
    {: RESULT = new Ebinop(Binop.Bor, e1, e2); :}
| LPAR expr:e RPAR
    {: RESULT = e; :}
| SIZEOF LPAR STRUCT IDENT:s RPAR
    {: RESULT = new Sizeof(s); :}
;

stmt ::=
  RETURN expr:e SEMICOLON
	{: RESULT = new Sreturn(e); :}
| expr:e SEMICOLON
	{: RESULT = new Seval(e); :}
| SEMICOLON
    {: RESULT = null; :}
| IF LPAR expr:e RPAR stmt:s1 ELSE stmt:s2
    {: RESULT = new Sif(e, s1, s2); :}
| IF LPAR expr:e RPAR stmt:s
	{: RESULT = new Sif(e, s); :}
| WHILE LPAR expr:e RPAR stmt:s
    {: RESULT = new Swhile(e, s);  :}
| block:b
	{: RESULT = b; :}
;

block ::=
  LB list_decl_variable:v list_stmt:s RB
	{: RESULT = new Sblock(s, v); :}
;

    /* Lists */
list_decl ::=
  declarations:d list_decl:l
   {: l.addFirst(d); RESULT = l; :}
|
   {: RESULT = new LinkedList<Declarations>(); :}
;

list_stmt ::=
  stmt:s list_stmt:l
   {: l.addFirst(s); RESULT = l; :}
|
   {: RESULT = new LinkedList<Stmt>(); :}
;

list_decl_variable ::=
  decl_variable:d list_decl_variable:l
    {: l.addFirst(d); RESULT = l; :}
|
    {: RESULT = new LinkedList<Decl_variable>(); :}
;

nonempty_list_comma_ident ::=
  IDENT:x COMMA nonempty_list_comma_ident:l
   {: l.addFirst(x); RESULT = l; :}
| IDENT:x
   {: LinkedList<String> l = new LinkedList<String>();
      l.add(x); RESULT = l; :}
;

nonempty_list_times_comma_list ::=
  TIMES IDENT:x COMMA nonempty_list_times_comma_list:l
    {: l.addFirst(x); RESULT = l; :}
| TIMES IDENT:x
   {: LinkedList<String> l = new LinkedList<String>();
      l.add(x); RESULT = l; :}
;

list_comma_param ::=
  param:x COMMA list_comma_param:l
   {: l.addFirst(x); RESULT = l; :}
| param:x
   {: LinkedList<Param> l = new LinkedList<Param>();
      l.add(x); RESULT = l; :}
|
   {: RESULT = new LinkedList<Param>(); :}
;

list_comma_expr ::=
  expr:e COMMA list_comma_expr:l
   {: l.addFirst(e); RESULT = l; :}
| expr:e
   {: LinkedList<Expr> l = new LinkedList<Expr>();
      l.add(e); RESULT = l; :}
|
   {: RESULT = new LinkedList<Expr>(); :}
;
</file>

<file path="src/mini_c/Parser.java">
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Wed Mar 15 11:14:33 CET 2017
//----------------------------------------------------

package mini_c;

import java_cup.runtime.*;
import java.util.*;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Wed Mar 15 11:14:33 CET 2017
  */
public class Parser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Parser() {super();}

  /** Constructor which sets the default scanner. */
  public Parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\064\000\002\002\004\000\002\002\003\000\002\003" +
    "\003\000\002\003\003\000\002\003\003\000\002\005\005" +
    "\000\002\005\006\000\002\006\010\000\002\004\010\000" +
    "\002\004\012\000\002\007\004\000\002\007\006\000\002" +
    "\010\003\000\002\010\003\000\002\010\006\000\002\010" +
    "\004\000\002\010\004\000\002\010\005\000\002\010\005" +
    "\000\002\010\005\000\002\010\005\000\002\010\005\000" +
    "\002\010\005\000\002\010\005\000\002\010\005\000\002" +
    "\010\005\000\002\010\005\000\002\010\007\000\002\011" +
    "\005\000\002\011\004\000\002\011\003\000\002\011\011" +
    "\000\002\011\007\000\002\011\007\000\002\011\003\000" +
    "\002\012\006\000\002\013\004\000\002\013\002\000\002" +
    "\014\004\000\002\014\002\000\002\017\004\000\002\017" +
    "\002\000\002\015\005\000\002\015\003\000\002\021\006" +
    "\000\002\021\004\000\002\016\005\000\002\016\003\000" +
    "\002\016\002\000\002\020\005\000\002\020\003\000\002" +
    "\020\002" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\163\000\010\002\uffdc\012\013\014\010\001\002\000" +
    "\010\002\ufffe\012\ufffe\014\ufffe\001\002\000\010\002\ufffd" +
    "\012\ufffd\014\ufffd\001\002\000\004\002\165\001\002\000" +
    "\010\002\uffff\012\uffff\014\uffff\001\002\000\004\004\152" +
    "\001\002\000\010\002\uffdc\012\013\014\010\001\002\000" +
    "\004\002\000\001\002\000\004\004\015\001\002\000\004" +
    "\022\150\001\002\000\010\016\017\022\uffd6\023\016\001" +
    "\002\000\004\004\036\001\002\000\010\012\023\014\020" +
    "\017\uffd1\001\002\000\004\004\144\001\002\000\004\017" +
    "\027\001\002\000\006\017\uffd2\023\025\001\002\000\004" +
    "\004\024\001\002\000\006\017\ufff7\023\ufff7\001\002\000" +
    "\010\012\023\014\020\017\uffd1\001\002\000\004\017\uffd3" +
    "\001\002\000\004\021\030\001\002\000\036\004\uffd8\005" +
    "\uffd8\007\uffd8\011\uffd8\012\035\013\uffd8\014\033\015\uffd8" +
    "\016\uffd8\020\uffd8\021\uffd8\022\uffd8\026\uffd8\033\uffd8\001" +
    "\002\000\010\002\ufff9\012\ufff9\014\ufff9\001\002\000\036" +
    "\004\uffd8\005\uffd8\007\uffd8\011\uffd8\012\035\013\uffd8\014" +
    "\033\015\uffd8\016\uffd8\020\uffd8\021\uffd8\022\uffd8\026\uffd8" +
    "\033\uffd8\001\002\000\004\004\134\001\002\000\032\004" +
    "\042\005\037\007\047\011\041\013\054\015\043\016\046" +
    "\020\uffda\021\030\022\050\026\040\033\051\001\002\000" +
    "\004\004\036\001\002\000\006\022\uffd6\023\016\001\002" +
    "\000\032\006\ufff5\017\ufff5\022\ufff5\023\ufff5\024\ufff5\025" +
    "\ufff5\026\ufff5\027\ufff5\030\ufff5\031\ufff5\032\ufff5\034\ufff5" +
    "\001\002\000\016\004\042\005\037\015\043\016\046\026" +
    "\040\033\051\001\002\000\004\016\127\001\002\000\034" +
    "\006\ufff4\016\121\017\ufff4\022\ufff4\023\ufff4\024\ufff4\025" +
    "\ufff4\026\ufff4\027\ufff4\030\ufff4\031\ufff4\032\ufff4\034\ufff4" +
    "\001\002\000\004\016\115\001\002\000\032\004\042\005" +
    "\037\007\047\011\041\013\054\015\043\016\046\020\uffda" +
    "\021\030\022\050\026\040\033\051\001\002\000\034\004" +
    "\uffdf\005\uffdf\007\uffdf\010\uffdf\011\uffdf\013\uffdf\015\uffdf" +
    "\016\uffdf\020\uffdf\021\uffdf\022\uffdf\026\uffdf\033\uffdf\001" +
    "\002\000\016\004\042\005\037\015\043\016\046\026\040" +
    "\033\051\001\002\000\004\016\104\001\002\000\034\004" +
    "\uffe3\005\uffe3\007\uffe3\010\uffe3\011\uffe3\013\uffe3\015\uffe3" +
    "\016\uffe3\020\uffe3\021\uffe3\022\uffe3\026\uffe3\033\uffe3\001" +
    "\002\000\016\004\042\005\037\015\043\016\046\026\040" +
    "\033\051\001\002\000\026\006\060\022\102\024\061\025" +
    "\062\026\056\027\064\030\066\031\057\032\067\034\063" +
    "\001\002\000\004\020\101\001\002\000\016\004\042\005" +
    "\037\015\043\016\046\026\040\033\051\001\002\000\026" +
    "\006\060\022\065\024\061\025\062\026\056\027\064\030" +
    "\066\031\057\032\067\034\063\001\002\000\016\004\042" +
    "\005\037\015\043\016\046\026\040\033\051\001\002\000" +
    "\016\004\042\005\037\015\043\016\046\026\040\033\051" +
    "\001\002\000\016\004\042\005\037\015\043\016\046\026" +
    "\040\033\051\001\002\000\016\004\042\005\037\015\043" +
    "\016\046\026\040\033\051\001\002\000\016\004\042\005" +
    "\037\015\043\016\046\026\040\033\051\001\002\000\004" +
    "\004\073\001\002\000\016\004\042\005\037\015\043\016" +
    "\046\026\040\033\051\001\002\000\034\004\uffe5\005\uffe5" +
    "\007\uffe5\010\uffe5\011\uffe5\013\uffe5\015\uffe5\016\uffe5\020" +
    "\uffe5\021\uffe5\022\uffe5\026\uffe5\033\uffe5\001\002\000\016" +
    "\004\042\005\037\015\043\016\046\026\040\033\051\001" +
    "\002\000\016\004\042\005\037\015\043\016\046\026\040" +
    "\033\051\001\002\000\032\006\060\017\uffe8\022\uffe8\023" +
    "\uffe8\024\uffe8\025\062\026\056\027\064\030\066\031\057" +
    "\032\uffe8\034\063\001\002\000\032\006\uffeb\017\uffeb\022" +
    "\uffeb\023\uffeb\024\uffeb\025\uffeb\026\uffeb\027\uffeb\030\uffeb" +
    "\031\uffeb\032\uffeb\034\063\001\002\000\032\006\uffea\017" +
    "\uffea\022\uffea\023\uffea\024\uffea\025\uffea\026\uffea\027\uffea" +
    "\030\uffea\031\uffea\032\uffea\034\063\001\002\000\032\006" +
    "\ufff0\017\ufff0\022\ufff0\023\ufff0\024\ufff0\025\ufff0\026\ufff0" +
    "\027\ufff0\030\ufff0\031\ufff0\032\ufff0\034\ufff0\001\002\000" +
    "\032\006\uffed\017\uffed\022\uffed\023\uffed\024\uffed\025\uffed" +
    "\026\uffed\027\064\030\066\031\uffed\032\uffed\034\063\001" +
    "\002\000\032\006\060\017\uffef\022\uffef\023\uffef\024\061" +
    "\025\062\026\056\027\064\030\066\031\057\032\067\034" +
    "\063\001\002\000\030\017\uffee\022\uffee\023\uffee\024\uffee" +
    "\025\062\026\056\027\064\030\066\031\uffee\032\uffee\034" +
    "\063\001\002\000\032\006\060\017\uffe9\022\uffe9\023\uffe9" +
    "\024\uffe9\025\062\026\056\027\064\030\066\031\uffe9\032" +
    "\uffe9\034\063\001\002\000\032\006\uffec\017\uffec\022\uffec" +
    "\023\uffec\024\uffec\025\uffec\026\uffec\027\064\030\066\031" +
    "\uffec\032\uffec\034\063\001\002\000\042\002\uffde\004\uffde" +
    "\005\uffde\007\uffde\010\uffde\011\uffde\012\uffde\013\uffde\014" +
    "\uffde\015\uffde\016\uffde\020\uffde\021\uffde\022\uffde\026\uffde" +
    "\033\uffde\001\002\000\034\004\uffe4\005\uffe4\007\uffe4\010" +
    "\uffe4\011\uffe4\013\uffe4\015\uffe4\016\uffe4\020\uffe4\021\uffe4" +
    "\022\uffe4\026\uffe4\033\uffe4\001\002\000\032\006\ufff1\017" +
    "\ufff1\022\ufff1\023\ufff1\024\ufff1\025\ufff1\026\ufff1\027\ufff1" +
    "\030\ufff1\031\ufff1\032\ufff1\034\063\001\002\000\016\004" +
    "\042\005\037\015\043\016\046\026\040\033\051\001\002" +
    "\000\026\006\060\017\106\024\061\025\062\026\056\027" +
    "\064\030\066\031\057\032\067\034\063\001\002\000\030" +
    "\004\042\005\037\007\047\011\041\013\054\015\043\016" +
    "\046\021\030\022\050\026\040\033\051\001\002\000\034" +
    "\004\uffe1\005\uffe1\007\uffe1\010\110\011\uffe1\013\uffe1\015" +
    "\uffe1\016\uffe1\020\uffe1\021\uffe1\022\uffe1\026\uffe1\033\uffe1" +
    "\001\002\000\030\004\042\005\037\007\047\011\041\013" +
    "\054\015\043\016\046\021\030\022\050\026\040\033\051" +
    "\001\002\000\034\004\uffe2\005\uffe2\007\uffe2\010\uffe2\011" +
    "\uffe2\013\uffe2\015\uffe2\016\uffe2\020\uffe2\021\uffe2\022\uffe2" +
    "\026\uffe2\033\uffe2\001\002\000\026\006\060\017\113\024" +
    "\061\025\062\026\056\027\064\030\066\031\057\032\067" +
    "\034\063\001\002\000\032\006\uffe7\017\uffe7\022\uffe7\023" +
    "\uffe7\024\uffe7\025\uffe7\026\uffe7\027\uffe7\030\uffe7\031\uffe7" +
    "\032\uffe7\034\uffe7\001\002\000\004\020\uffdb\001\002\000" +
    "\004\014\116\001\002\000\004\004\117\001\002\000\004" +
    "\017\120\001\002\000\032\006\uffe6\017\uffe6\022\uffe6\023" +
    "\uffe6\024\uffe6\025\uffe6\026\uffe6\027\uffe6\030\uffe6\031\uffe6" +
    "\032\uffe6\034\uffe6\001\002\000\020\004\042\005\037\015" +
    "\043\016\046\017\uffce\026\040\033\051\001\002\000\004" +
    "\017\126\001\002\000\030\006\060\017\uffcf\023\124\024" +
    "\061\025\062\026\056\027\064\030\066\031\057\032\067" +
    "\034\063\001\002\000\020\004\042\005\037\015\043\016" +
    "\046\017\uffce\026\040\033\051\001\002\000\004\017\uffd0" +
    "\001\002\000\032\006\ufff3\017\ufff3\022\ufff3\023\ufff3\024" +
    "\ufff3\025\ufff3\026\ufff3\027\ufff3\030\ufff3\031\ufff3\032\ufff3" +
    "\034\ufff3\001\002\000\016\004\042\005\037\015\043\016" +
    "\046\026\040\033\051\001\002\000\026\006\060\017\131" +
    "\024\061\025\062\026\056\027\064\030\066\031\057\032" +
    "\067\034\063\001\002\000\030\004\042\005\037\007\047" +
    "\011\041\013\054\015\043\016\046\021\030\022\050\026" +
    "\040\033\051\001\002\000\034\004\uffe0\005\uffe0\007\uffe0" +
    "\010\uffe0\011\uffe0\013\uffe0\015\uffe0\016\uffe0\020\uffe0\021" +
    "\uffe0\022\uffe0\026\uffe0\033\uffe0\001\002\000\032\006\ufff2" +
    "\017\ufff2\022\ufff2\023\ufff2\024\ufff2\025\ufff2\026\ufff2\027" +
    "\ufff2\030\ufff2\031\ufff2\032\ufff2\034\063\001\002\000\004" +
    "\030\136\001\002\000\004\022\142\001\002\000\004\004" +
    "\137\001\002\000\006\022\uffd4\023\140\001\002\000\004" +
    "\030\136\001\002\000\004\022\uffd5\001\002\000\040\002" +
    "\ufffb\004\ufffb\005\ufffb\007\ufffb\011\ufffb\012\ufffb\013\ufffb" +
    "\014\ufffb\015\ufffb\016\ufffb\020\ufffb\021\ufffb\022\ufffb\026" +
    "\ufffb\033\ufffb\001\002\000\032\004\uffd9\005\uffd9\007\uffd9" +
    "\011\uffd9\013\uffd9\015\uffd9\016\uffd9\020\uffd9\021\uffd9\022" +
    "\uffd9\026\uffd9\033\uffd9\001\002\000\004\030\145\001\002" +
    "\000\004\004\146\001\002\000\006\017\ufff6\023\ufff6\001" +
    "\002\000\004\022\uffd7\001\002\000\040\002\ufffc\004\ufffc" +
    "\005\ufffc\007\ufffc\011\ufffc\012\ufffc\013\ufffc\014\ufffc\015" +
    "\ufffc\016\ufffc\020\ufffc\021\ufffc\022\ufffc\026\ufffc\033\ufffc" +
    "\001\002\000\004\002\uffdd\001\002\000\006\021\153\030" +
    "\154\001\002\000\010\012\035\014\033\020\uffd8\001\002" +
    "\000\004\004\155\001\002\000\010\016\156\022\uffd4\023" +
    "\140\001\002\000\010\012\023\014\020\017\uffd1\001\002" +
    "\000\004\017\160\001\002\000\004\021\030\001\002\000" +
    "\010\002\ufff8\012\ufff8\014\ufff8\001\002\000\004\020\163" +
    "\001\002\000\004\022\164\001\002\000\010\002\ufffa\012" +
    "\ufffa\014\ufffa\001\002\000\004\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\163\000\016\002\005\003\010\004\004\005\006\006" +
    "\003\013\011\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\014\003\010\004\004\005\006\006\003\013\150\001\001" +
    "\000\002\001\001\000\004\015\013\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\015\146\001\001\000\006" +
    "\007\021\016\020\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\007\021\016\025\001\001\000\002\001\001\000" +
    "\004\012\030\001\001\000\006\005\031\017\033\001\001" +
    "\000\002\001\001\000\006\005\031\017\142\001\001\000" +
    "\002\001\001\000\012\010\051\011\043\012\044\014\052" +
    "\001\001\000\004\015\013\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\010\132\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\010\051\011" +
    "\043\012\044\014\113\001\001\000\002\001\001\000\004" +
    "\010\111\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\010\102\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\010\054\001\001\000\002\001\001\000\004\010" +
    "\077\001\001\000\004\010\076\001\001\000\004\010\075" +
    "\001\001\000\004\010\074\001\001\000\004\010\073\001" +
    "\001\000\002\001\001\000\004\010\071\001\001\000\002" +
    "\001\001\000\004\010\070\001\001\000\004\010\067\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\010" +
    "\104\001\001\000\002\001\001\000\010\010\051\011\106" +
    "\012\044\001\001\000\002\001\001\000\010\010\051\011" +
    "\110\012\044\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\010\122\020\121\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\010\122\020\124\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\010\127\001\001\000\002\001" +
    "\001\000\010\010\051\011\131\012\044\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\021\134\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\021\140\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\021\134\001\001\000\006\005\031\017\161" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\007" +
    "\021\016\156\001\001\000\002\001\001\000\004\012\160" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Parser$actions {
  private final Parser parser;

  /** Constructor */
  CUP$Parser$actions(Parser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Parser$do_action(
    int                        CUP$Parser$act_num,
    java_cup.runtime.lr_parser CUP$Parser$parser,
    java.util.Stack            CUP$Parser$stack,
    int                        CUP$Parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Parser$result;

      /* select the action based on the action number */
      switch (CUP$Parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // list_comma_expr ::= 
            {
              LinkedList<Expr> RESULT =null;
		 RESULT = new LinkedList<Expr>(); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("list_comma_expr",14, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // list_comma_expr ::= expr 
            {
              LinkedList<Expr> RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 LinkedList<Expr> l = new LinkedList<Expr>();
      l.add(e); RESULT = l; 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("list_comma_expr",14, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // list_comma_expr ::= expr COMMA list_comma_expr 
            {
              LinkedList<Expr> RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		LinkedList<Expr> l = (LinkedList<Expr>)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 l.addFirst(e); RESULT = l; 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("list_comma_expr",14, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // list_comma_param ::= 
            {
              LinkedList<Param> RESULT =null;
		 RESULT = new LinkedList<Param>(); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("list_comma_param",12, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // list_comma_param ::= param 
            {
              LinkedList<Param> RESULT =null;
		int xleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int xright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Param x = (Param)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 LinkedList<Param> l = new LinkedList<Param>();
      l.add(x); RESULT = l; 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("list_comma_param",12, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // list_comma_param ::= param COMMA list_comma_param 
            {
              LinkedList<Param> RESULT =null;
		int xleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Param x = (Param)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		LinkedList<Param> l = (LinkedList<Param>)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 l.addFirst(x); RESULT = l; 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("list_comma_param",12, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // nonempty_list_times_comma_list ::= TIMES IDENT 
            {
              LinkedList<String> RESULT =null;
		int xleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int xright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		String x = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 LinkedList<String> l = new LinkedList<String>();
      l.add(x); RESULT = l; 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("nonempty_list_times_comma_list",15, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // nonempty_list_times_comma_list ::= TIMES IDENT COMMA nonempty_list_times_comma_list 
            {
              LinkedList<String> RESULT =null;
		int xleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		String x = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		LinkedList<String> l = (LinkedList<String>)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 l.addFirst(x); RESULT = l; 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("nonempty_list_times_comma_list",15, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // nonempty_list_comma_ident ::= IDENT 
            {
              LinkedList<String> RESULT =null;
		int xleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int xright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		String x = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 LinkedList<String> l = new LinkedList<String>();
      l.add(x); RESULT = l; 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("nonempty_list_comma_ident",11, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // nonempty_list_comma_ident ::= IDENT COMMA nonempty_list_comma_ident 
            {
              LinkedList<String> RESULT =null;
		int xleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		String x = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		LinkedList<String> l = (LinkedList<String>)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 l.addFirst(x); RESULT = l; 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("nonempty_list_comma_ident",11, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // list_decl_variable ::= 
            {
              LinkedList<Decl_variable> RESULT =null;
		 RESULT = new LinkedList<Decl_variable>(); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("list_decl_variable",13, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // list_decl_variable ::= decl_variable list_decl_variable 
            {
              LinkedList<Decl_variable> RESULT =null;
		int dleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int dright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Decl_variable d = (Decl_variable)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		LinkedList<Decl_variable> l = (LinkedList<Decl_variable>)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 l.addFirst(d); RESULT = l; 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("list_decl_variable",13, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // list_stmt ::= 
            {
              LinkedList<Stmt> RESULT =null;
		 RESULT = new LinkedList<Stmt>(); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("list_stmt",10, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // list_stmt ::= stmt list_stmt 
            {
              LinkedList<Stmt> RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Stmt s = (Stmt)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		LinkedList<Stmt> l = (LinkedList<Stmt>)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 l.addFirst(s); RESULT = l; 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("list_stmt",10, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // list_decl ::= 
            {
              LinkedList<Declarations> RESULT =null;
		 RESULT = new LinkedList<Declarations>(); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("list_decl",9, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // list_decl ::= declarations list_decl 
            {
              LinkedList<Declarations> RESULT =null;
		int dleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int dright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Declarations d = (Declarations)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		LinkedList<Declarations> l = (LinkedList<Declarations>)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 l.addFirst(d); RESULT = l; 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("list_decl",9, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // block ::= LB list_decl_variable list_stmt RB 
            {
              Sblock RESULT =null;
		int vleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		LinkedList<Decl_variable> v = (LinkedList<Decl_variable>)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int sleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		LinkedList<Stmt> s = (LinkedList<Stmt>)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		 RESULT = new Sblock(s, v); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("block",8, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // stmt ::= block 
            {
              Stmt RESULT =null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Sblock b = (Sblock)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT = b; 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("stmt",7, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // stmt ::= WHILE LPAR expr RPAR stmt 
            {
              Stmt RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int sleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Stmt s = (Stmt)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT = new Swhile(e, s);  
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("stmt",7, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // stmt ::= IF LPAR expr RPAR stmt 
            {
              Stmt RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int sleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Stmt s = (Stmt)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT = new Sif(e, s); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("stmt",7, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // stmt ::= IF LPAR expr RPAR stmt ELSE stmt 
            {
              Stmt RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-4)).value;
		int s1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int s1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Stmt s1 = (Stmt)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int s2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int s2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Stmt s2 = (Stmt)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT = new Sif(e, s1, s2); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("stmt",7, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // stmt ::= SEMICOLON 
            {
              Stmt RESULT =null;
		 RESULT = null; 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("stmt",7, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // stmt ::= expr SEMICOLON 
            {
              Stmt RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		 RESULT = new Seval(e); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("stmt",7, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // stmt ::= RETURN expr SEMICOLON 
            {
              Stmt RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		 RESULT = new Sreturn(e); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("stmt",7, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // expr ::= SIZEOF LPAR STRUCT IDENT RPAR 
            {
              Expr RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		String s = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		 RESULT = new Sizeof(s); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("expr",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // expr ::= LPAR expr RPAR 
            {
              Expr RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		 RESULT = e; 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("expr",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // expr ::= expr OR expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Bor, e1, e2); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("expr",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // expr ::= expr AND expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Band, e1, e2); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("expr",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // expr ::= expr DIV expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Bdiv, e1, e2); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("expr",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // expr ::= expr TIMES expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Bmul, e1, e2); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("expr",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // expr ::= expr MINUS expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Bsub, e1, e2); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("expr",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // expr ::= expr PLUS expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Badd, e1, e2); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("expr",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // expr ::= expr CMP expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Binop c = (Binop)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT = new Ebinop(c, e1, e2); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("expr",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // expr ::= expr EQUAL expr 
            {
              Expr RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Expr e1 = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Expr e2 = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT =  new Ebinop(Binop.Beq, e1, e2); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("expr",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // expr ::= expr ARROW IDENT 
            {
              Expr RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int xleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int xright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		String x = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT = new Ebinop(Binop.Bobj, e, new Evar(x)); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("expr",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // expr ::= NOT expr 
            {
              Expr RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT =  new Eunop(Unop.Unot, e); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("expr",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // expr ::= MINUS expr 
            {
              Expr RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Expr e = (Expr)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT =  new Eunop(Unop.Uneg, e); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("expr",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // expr ::= IDENT LPAR list_comma_expr RPAR 
            {
              Expr RESULT =null;
		int fleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int fright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		String f = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		LinkedList<Expr> l = (LinkedList<Expr>)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		 RESULT = new Ecall(f, l); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("expr",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // expr ::= IDENT 
            {
              Expr RESULT =null;
		int xleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int xright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		String x = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT = new Evar(x); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("expr",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // expr ::= CST 
            {
              Expr RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Constant c = (Constant)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT = new Ecst(c); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("expr",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // param ::= STRUCT IDENT TIMES IDENT 
            {
              Param RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		String s = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int xleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int xright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		String x = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT = new Param(new Evar(x), s); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("param",5, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // param ::= INT IDENT 
            {
              Param RESULT =null;
		int xleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int xright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		String x = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT = new Param(new Evar(x)); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("param",5, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // decl_function ::= STRUCT IDENT TIMES IDENT LPAR list_comma_param RPAR block 
            {
              Decl_function RESULT =null;
		int fleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)).left;
		int fright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)).right;
		String f = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-4)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		LinkedList<Param> l = (LinkedList<Param>)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Sblock b = (Sblock)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT = new Decl_function(f, l, b, "w<w<struct"); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("decl_function",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // decl_function ::= INT IDENT LPAR list_comma_param RPAR block 
            {
              Decl_function RESULT =null;
		int fleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)).left;
		int fright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)).right;
		String f = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-4)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		LinkedList<Param> l = (LinkedList<Param>)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Sblock b = (Sblock)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT = new Decl_function(f, l, b, "int"); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("decl_function",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // decl_struct ::= STRUCT IDENT LB list_decl_variable RB SEMICOLON 
            {
              Decl_struct RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)).right;
		String s = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-4)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		LinkedList<Decl_variable> l = (LinkedList<Decl_variable>)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		 RESULT = new Decl_struct(s, l); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("decl_struct",4, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // decl_variable ::= STRUCT IDENT nonempty_list_times_comma_list SEMICOLON 
            {
              Decl_variable RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		String s = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		LinkedList<String> l = (LinkedList<String>)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		 RESULT = new Decl_variable(s, l); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("decl_variable",3, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // decl_variable ::= INT nonempty_list_comma_ident SEMICOLON 
            {
              Decl_variable RESULT =null;
		int xleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		LinkedList<String> x = (LinkedList<String>)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		 RESULT = new Decl_variable(x); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("decl_variable",3, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // declarations ::= decl_function 
            {
              Declarations RESULT =null;
		int dleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int dright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Decl_function d = (Decl_function)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT = d; 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("declarations",1, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // declarations ::= decl_struct 
            {
              Declarations RESULT =null;
		int dleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int dright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Decl_struct d = (Decl_struct)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT = d; 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("declarations",1, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // declarations ::= decl_variable 
            {
              Declarations RESULT =null;
		int dleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int dright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Decl_variable d = (Decl_variable)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT = d; 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("declarations",1, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // file ::= list_decl 
            {
              File RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		LinkedList<Declarations> l = (LinkedList<Declarations>)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT = new File(l); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("file",0, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= file EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		File start_val = (File)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		RESULT = start_val;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Parser$parser.done_parsing();
          return CUP$Parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}
</file>

<file path="src/mini_c/Register.java">
package mini_c;

import java.util.LinkedList;
import java.util.List;

/** registre (physique ou pseudo-registres) */
public class Register {

	private static int next = 0;
	
	final String name;
	
	/** renvoie un pseudo-registre frais */ 
	Register() {
		next++;
		this.name = "#" + next;
	}
	
	/** s'agit-il d'un pseudo-registre ? */ 
	boolean isPseudo() {
		return this.name.charAt(0) == '#';
	}
	/** s'agit-il d'un registre physique ? */ 
	boolean isHW() {
		return !this.isPseudo();
	}
	
	@Override
	public int hashCode() {
		return this.name.hashCode();
	}
	@Override
	public boolean equals(Object o) {
		Register that = (Register)o;
		return this.name.equals(that.name);
	}
	@Override
	public String toString() {
		return this.name;
	}
		
	private Register(String name) { this.name = name; }
	
	static final Register rax = new Register("%rax");
	static final Register result = rax;
	
	static final Register rdi = new Register("%rdi");
	static final Register rsi = new Register("%rsi");
	static final Register rdx = new Register("%rdx");
	static final Register rcx = new Register("%rcx");
	static final Register r8  = new Register("%r8");
	static final Register r9  = new Register("%r9");

	static final List<Register> parameters = new LinkedList<Register>();
	static {
		parameters.add(rdi); parameters.add(rsi); parameters.add(rdx);
		parameters.add(rcx); parameters.add(r8); parameters.add(r9);
	}
	
	static final Register r10 = new Register("%r10");
	static final List<Register> caller_save = new LinkedList<Register>();
	static { caller_save.add(rax); caller_save.add(r10);
		for (Register r: parameters) caller_save.add(r); // All parameters too
	}

	static final Register rbx = new Register("%rbx");
	static final Register r12 = new Register("%r12");
//	static final Register r13 = new Register("%r13");
//	static final Register r14 = new Register("%r14");
//	static final Register r15 = new Register("%r15");

	static final List<Register> callee_saved = new LinkedList<Register>();
	static {
		callee_saved.add(rbx); callee_saved.add(r12);
		// callee_save.add(r13); callee_save.add(r14); callee_save.add(r15);
	}

	/** ensemble des registres participant à l'allocation de registres */
	static final List<Register> allocatable = new LinkedList<Register>(); //Basically all the registers
	static {
		for (Register r: caller_save) allocatable.add(r);
		for (Register r: callee_saved) allocatable.add(r);
	}
	
	static final Register rsp = new Register("%rsp");
	static final Register tmp1 = new Register("%rbp");
	static final Register tmp2 = new Register("%r11");
}
</file>

<file path="src/mini_c/RTL.java">
package mini_c;

/* Register Transfer Language (RTL) */

import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;

import static mini_c.Mbinop.Mmov;
import static mini_c.Register.parameters;
import static mini_c.Register.rax;
import static mini_c.Register.result;

/** instruction RTL */

abstract class RTL {
  abstract void accept(RTLVisitor v);
  abstract Label[] succ();
  abstract ERTL toERTL(Label exit, ERTLgraph body);
}

/** charge une constante dans un registre */
class Rconst extends RTL {
  int i;
  Register r;
  Label l;
  Rconst(int i, Register r, Label l) { this.i = i; this.r = r; this.l = l;  }
  void accept(RTLVisitor v) { v.visit(this); }
  public String toString() { return "mov $" + i + " " + r + " --> " + l; }
  Label[] succ() { return new Label[] { l }; }

  @Override
  ERTL toERTL(Label exit, ERTLgraph body) {
    if (exit == l) {
      /*ERgoto ergoto = new ERgoto(exit);
      Label L2 = body.add(ergoto);*/
      return new ERconst(this.i, result, this.l);
    } // This will make it ERTL have rax if it's a return instruction!
    else { return new ERconst(this.i, this.r, this.l); }
  }
}

/** lit dans une variable globale */
class Raccess_global extends RTL {
  // TODO: when I do x = 54 it takes 2 instructions.
  String s;
  Register r;
  Label l;

  Raccess_global(String s, Register r, Label l) { this.s = s; this.r = r; this.l = l;  }

  void accept(RTLVisitor v) { v.visit(this); }
  public String toString() { return "mov " + s + " " + r + " --> " + l; }
  Label[] succ() { return new Label[] { l }; }

  @Override
  ERTL toERTL(Label exit, ERTLgraph body) {
    if (exit == l) {
      /*ERgoto ergoto = new ERgoto(exit);
      Label L2 = body.add(ergoto);*/
      return new ERaccess_global(this.s, result, this.l);
    }
    else { return new ERaccess_global(this.s, this.r, this.l); }
  }
}

/** écrit une variable globale */
class Rassign_global extends RTL {
  Register r;
  String s;
  Label l;

  Rassign_global(Register r, String s, Label l) { this.r = r; this.s = s; this.l = l;  }

  void accept(RTLVisitor v) { v.visit(this); }
  public String toString() { return "mov " + r + " " + s + " --> " + l; }
  Label[] succ() { return new Label[] { l }; }

  @Override
  ERTL toERTL(Label exit, ERTLgraph body) {
    if (exit == l) {
      ERaccess_global eRaccess_global = new ERaccess_global(this.s, rax, this.l); // Case return x = 6 will return nothing in rax if I don't do this.
      Label L2 = body.add(eRaccess_global);
      return new ERassign_global(this.r, this.s, L2);
    }
    else { return new ERassign_global(this.r, this.s, this.l); }
  }
}

/** instruction mov i(r1), r2 */
class Rload extends RTL {
  Register r1;
  int i;
  Register r2;
  Label l;

  Rload(Register r1, Register r2, int i, Label l) {
	this.r1 = r1; this.i = i;
    this.r2 = r2; this.l = l;
  }

  void accept(RTLVisitor v) { v.visit(this); }
  public String toString() { return "mov " + i + "(" + r1 + ") " + r2 + " --> " + l; }
  Label[] succ() { return new Label[] { l }; }

  @Override
  ERTL toERTL(Label exit, ERTLgraph body) {
    if (exit == l) {
      /*ERgoto ergoto = new ERgoto(exit);
      Label L2 = body.add(ergoto);*/
      return new ERload(this.r1, this.i, result, this.l);
    }
    else { return new ERload(this.r1, this.i, this.r2, this.l); }
  }
}

/** instruction mov r1, i(r2) */
class Rstore extends RTL {
  Register r1;
  Register r2;
  int i;
  Label l;

  Rstore(Register r1, Register r2, int i, Label l) { this.r1 = r1; this.r2 = r2; this.i = i; this.l = l;  }

  void accept(RTLVisitor v) { v.visit(this); }
  public String toString() { return "mov " + r1 + " " + i + "(" + r2 + ") " + " --> " + l; }
  Label[] succ() { return new Label[] { l }; }

  @Override
  ERTL toERTL(Label exit, ERTLgraph body) {
    if (exit == l) {
      /*ERgoto ergoto = new ERgoto(exit);
      Label L2 = body.add(ergoto);*/
      return new ERstore(this.r1, this.r2, this.i, this.l);
    } //TODO: case return r->i = expr; in which case I return expr == r1. So move r1 to rax.
    else { return new ERstore(this.r1, this.r2, this.i, this.l); }
  }
}

/** instruction x86-64 unaire */
class Rmunop extends RTL {
  Munop m;
  Register r;
  Label l;

  Rmunop(Munop m, Register r, Label l) { this.m = m; this.r = r; this.l = l; }

  void accept(RTLVisitor v) { v.visit(this); }
  public String toString() { return m + " " + r + " --> " + l; }
  Label[] succ() { return new Label[] { l }; }

  @Override
  ERTL toERTL(Label exit, ERTLgraph body) {
    if (exit == l) {
      /*ERgoto ergoto = new ERgoto(exit);
      Label L2 = body.add(ergoto);*/
      return new ERmunop(this.m, result, this.l);
    }
    else { return new ERmunop(this.m, this.r, this.l); }
  }
}

/** instruction x86-64 binaire */
class Rmbinop extends RTL {
  Mbinop m;
  Register r1;
  Register r2;
  Label l;

  Rmbinop(Mbinop m, Register r1, Register r2, Label l) { this.m = m; this.r1 = r1; this.r2 = r2; this.l = l;  }

  void accept(RTLVisitor v) { v.visit(this); }
  public String toString() { return m + " " + r1 + " " + r2 + " --> " + l; }
  Label[] succ() { return new Label[] { l }; }

  @Override
  ERTL toERTL(Label exit, ERTLgraph body) {
    if (exit == l) {
      ERmbinop eRmbinop = new ERmbinop(Mmov, this.r2, result, this.l);
      Label L2 = body.add(eRmbinop);
      return new ERmbinop(this.m, this.r1, this.r2, L2);
    }
    else { return new ERmbinop(this.m, this.r1, this.r2, this.l); }
  }
}

/** instruction x86-64 de branchement (unaire) */
class Rmubranch extends RTL {
  Mubranch m;
  Register r;
  Label l1;
  Label l2;

  Rmubranch(Mubranch m, Register r, Label l1, Label l2) { this.m = m; this.r = r; this.l1 = l1; this.l2 = l2;  }

  void accept(RTLVisitor v) { v.visit(this); }
  public String toString() { return m + " " + r + " --> " + l1 + ", " + l2; }
  Label[] succ() { return new Label[] { l1, l2 }; }

  @Override
  ERTL toERTL(Label exit, ERTLgraph body) {
    if ( (exit == l1) || (exit == l2) ) { throw new Error("I have no idea how I got here"); } // The fastest way to exit from a brunch is to put a return after, and that will give me another ERTL.
    else { return new ERmubranch(this.m, this.r, this.l1, this.l2); }
  }
}

/** instruction x86-64 de branchement (binaire) */
class Rmbbranch extends RTL {
  Mbbranch m;
  Register r1;
  Register r2;
  Label l1;
  Label l2;

  Rmbbranch(Mbbranch m, Register r1, Register r2, Label l1, Label l2) {
    this.m = m; this.r1 = r1; this.r2 = r2; this.l1 = l1; this.l2 = l2;
  }

  void accept(RTLVisitor v) { v.visit(this); }
  public String toString() { return m + " " + r1 + " " + r2 + " --> " + l1 + ", " + l2; }
  Label[] succ() { return new Label[] { l1, l2 }; }

  @Override
  ERTL toERTL(Label exit, ERTLgraph body) {
    if ( (exit == l1) || (exit == l2) ) { throw new Error("I have no idea how I got here"); } // The fastest way to exit from a brunch is to put a return after, and that will give me another ERTL.
    else { return new ERmbbranch(this.m, this.r1, this.r2, this.l1, this.l2); }
  }
}

/** appel de fonction */
class Rcall extends RTL {
  Register r;
  String s;
  List<Register> rl;
  Label l;

  Rcall(Register r, String s, List<Register> rl, Label l) {
    this.r = r;
    this.s = s;
    this.rl = rl;
    this.l = l;
  }

  void accept(RTLVisitor v) {
    v.visit(this);
  }

  public String toString() {
    return r + " <- call " + s + rl + " --> " + l;
  }

  Label[] succ() {
    return new Label[]{l};
  }

  @Override
  ERTL toERTL(Label exit, ERTLgraph body) {
    Label L = this.l;
    // 4. pull if there was a push
    if (this.rl.size() > parameters.size()) { // if I have more parameters than registers available
      Maddi maddi = new Maddi(8 * (this.rl.size() - parameters.size()));
      ERmunop ermunop = new ERmunop(maddi, Register.rsp, L);
      L = body.add(ermunop);
      for (int i = 0; i < this.rl.size() - parameters.size(); i++) {
        ERload erload = new ERload(Register.rsp, i * 8, new Register(), L);
        L = body.add(erload);
      }
    }
    // 3. Get the result to %rax
    //r = result;
    ERmbinop erb = new ERmbinop(Mmov, result, r, L);
    L = body.add(erb);
    // 2. Call the function
    ERcall eRcall = new ERcall(this.s, this.rl.size(), L);
    if (this.rl.size() > 0) { L = body.add(eRcall); }
    else { return eRcall; }
    // 1. save the parameters to send
    for (int i = 0; i < this.rl.size(); i++) {
      if (i < parameters.size()) {    // Using size instead of hardcoding a 6 to make it more general and prone to changes in code
        r = parameters.get(i);        // The first arguments in registers (
        ERmbinop eRmbinop = new ERmbinop(Mmov, this.rl.get(i), r, L);
        if ((i == rl.size() - 1) && (rl.size() <= parameters.size())) {
          return eRmbinop;
        } else {
          L = body.add(eRmbinop);
        }
      } else { // The other arguments in the pile
        r = new Register();
        ERpush_param pushPam = new ERpush_param(r, L);
        Label L1 = body.add(pushPam);
        ERmbinop eRmbinop = new ERmbinop(Mmov, this.rl.get(i), r, L1);
        if (i == rl.size() - 1) {
          return eRmbinop;
        } else {
          L = body.add(eRmbinop);
        }
      }
    }
    throw new Error("Problem when calling a function toERTL function");
  }
}

/** saut inconditionnel */
class Rgoto extends RTL {
  Label l;

  Rgoto(Label l) { this.l = l;  }

  void accept(RTLVisitor v) { v.visit(this); }
  public String toString() { return "goto " + l; }
  Label[] succ() { return new Label[] { l }; }

  @Override
  ERTL toERTL(Label exit, ERTLgraph body) {
    if (exit == l) { return new ERgoto(this.l); } //TODO: can't find an example of when this can happen but I'm not sure it can't happen either.
    else { return new ERgoto(this.l); }
  }
}

/** une fonction RTL */

class RTLfun {
  /** nom de la fonction */
  String name;
  /** paramètres formels */
  List<Register> formals;
  /** résultat de la fonction */
  Register result;
  /** ensemble des variables locales */
  Set<Register> locals;
  /** point d'entrée dans le graphe */
  Label entry;
  /** point de sortie dans le graphe */
  Label exit;
  /** le graphe de flot de contrôle */
  RTLgraph body;
  /** Variables */
  Map<String, Register> variables;
  /** Definition of structs */
  Map<String, String> struct_declarations;

  RTLfun(String name) {
    this.name = name;
    this.formals = new LinkedList<>();
    this.locals = new HashSet<>();
    variables = new HashMap<>();
    struct_declarations = new HashMap<>();
  }

  void accept(RTLVisitor v) { v.visit(this); }

  /** pour débugger */
  void print() {
	System.out.println("== RTL ==========================");
	System.out.println(result + " " + name + formals);
	System.out.println("  entry  : " + entry);
	System.out.println("  exit   : " + exit);
    System.out.println("  locals : " + locals);
	body.print(entry);
  }
}

/** un programme RTL */

class RTLfile {
  LinkedList<String> gvars;
  LinkedList<RTLfun> funs;
  Map<String, LinkedList<String>> struct_definition;

  RTLfile() {
    this.gvars = new LinkedList<String>();
    this.funs = new LinkedList<RTLfun>();
    this.struct_definition = new HashMap<>();
  }

  void accept(RTLVisitor v) { v.visit(this); }

  /** pour débugger */
  void print() {
	for (RTLfun fun: this.funs)
	  fun.print();
  }
}

/** graphe de flot de contrôle (d'une fonction)
 *
 * c'est un dictionnaire qui associe une instruction de type RTL
 * à une étiquette de type Label
 */
class RTLgraph {
	Map<Label, RTL> graph = new HashMap<Label, RTL>();

	/** ajoute une nouvelle instruction dans le graphe
	  * et renvoie son étiquette */
	Label add(RTL instr) {
		Label l = new Label();
		graph.put(l, instr);
		return l;
	}

	// imprime le graphe par un parcours en profondeur
	private void print(Set<Label> visited, Label l) {
		if (visited.contains(l)) return;
		visited.add(l);
		RTL r = this.graph.get(l);
		if (r == null) return; // c'est le cas pour exit
		System.out.println("  " + String.format("%3s", l) + ": " + r);
		for (Label s: r.succ()) print(visited, s);
	}

	/** imprime le graphe (pour debugger) */
	void print(Label entry) {
		print(new HashSet<Label>(), entry);
	}

    /*ERTLgraph toERTL(Label exit) {
      ERTLgraph eg = new ERTLgraph();
      for ( Map.Entry<Label, RTL> g : this.graph.entrySet() ) {
        if (g.getValue() instanceof Rcall) {
          eg = ((Rcall) g.getValue()).prevFun(eg, g.getKey());
        }
        else {
          eg.put(g.getKey(), g.getValue().toERTL(exit, this.body)); // Wow this is cool. So perfect... XD
        }
      }
      return eg;
    }*/
}

/** visiteur pour parcourir la forme RTL
 * (pour la suite du compilateur)
 */

interface RTLVisitor {
  public void visit(Rconst o);
  public void visit(Raccess_global o);
  public void visit(Rassign_global o);
  public void visit(Rload o);
  public void visit(Rstore o);
  public void visit(Rmunop o);
  public void visit(Rmbinop o);
  public void visit(Rmubranch o);
  public void visit(Rmbbranch o);
  public void visit(Rcall o);
  public void visit(Rgoto o);
  public void visit(RTLfun o);
  public void visit(RTLfile o);
  }

/** un visiteur du code RTL qui ne fait rien */
class EmptyRTLVisitor implements RTLVisitor {
  public void visit(Rconst o) {}
  public void visit(Raccess_global o) {}
  public void visit(Rassign_global o) {}
  public void visit(Rload o) {}
  public void visit(Rstore o) {}
  public void visit(Rmunop o) {}
  public void visit(Rmbinop o) {}
  public void visit(Rmubranch o) {}
  public void visit(Rmbbranch o) {}
  public void visit(Rcall o) {}
  public void visit(Rgoto o) {}
  public void visit(RTLfun o) {}
  public void visit(RTLfile o) {}
}
</file>

<file path="src/mini_c/sym.java">
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Wed Feb 22 12:46:09 CET 2017
//----------------------------------------------------

package mini_c;

/** CUP generated class containing symbol constants. */
public class sym {
  /* terminals */
  public static final int TIMES = 22;
  public static final int AND = 23;
  public static final int SIZEOF = 11;
  public static final int SEMICOLON = 16;
  public static final int ELSE = 6;
  public static final int IDENT = 2;
  public static final int NEG = 27;
  public static final int PLUS = 19;
  public static final int STRUCT = 10;
  public static final int OR = 24;
  public static final int INT = 8;
  public static final int EQUAL = 18;
  public static final int WHILE = 7;
  public static final int NOT = 25;
  public static final int RETURN = 9;
  public static final int IF = 5;
  public static final int LB = 15;
  public static final int RB = 14;
  public static final int COMMA = 17;
  public static final int CST = 3;
  public static final int EOF = 0;
  public static final int CMP = 4;
  public static final int DIV = 21;
  public static final int MINUS = 20;
  public static final int ARROW = 26;
  public static final int error = 1;
  public static final int RPAR = 13;
  public static final int LPAR = 12;
}
</file>

<file path="src/mini_c/Syntax.java">
package mini_c;

import java.util.*;

import static mini_c.Binop.*;
import static mini_c.Mbbranch.*;
import static mini_c.Mbinop.*;

/** README:
* 		The last parameters given to the function with structures and those things are because of a bad communication between
 * 	the typer and the RTL. We had no time to change it but I recognize is horrible.
* */

/* Syntaxe abstraite de Mini-Python */

/* opérateurs unaires et binaires */

enum Unop {
	Uneg, Unot
}

enum Binop {
	Badd, Bsub, Bmul, Bdiv, Bmod, Beqeq, Bneq, Blt, Ble, Bgt, Bge, // comparaison
																	// structurelle
	Band, Bor, Beq, Bobj /* Arrow stuff*/ // paresseux
}
class Typing {
	  public static HashMap<String,LinkedList<Param>> declStruct = new HashMap<String,LinkedList<Param>>(); // there we store the list of pointers a structure contains
	  public static HashMap<String,Var> varType = new HashMap<String, Var>(); //there we store the variables, functions included
	  public static HashMap<String,LinkedList<Var>> funArgsType=new HashMap<String,LinkedList<Var>>(); //we store, for each function the list of the type of its arguments
	  public static HashMap<String,Var> varTypeLoc = new HashMap<String, Var>();

	  Typing() {
		  varType.put("putchar", new Var("putchar","int"));
		  funArgsType.put("putchar",new LinkedList<Var>());
		  funArgsType.get("putchar").add(new Var("","int"));
		  varType.put("sbrk", new Var("sbrk","void*"));
		  funArgsType.put("sbrk",new LinkedList<Var>());
		  funArgsType.get("sbrk").add(new Var("","int"));
	  }

	  public static boolean equalsType(String x, String y) {
		  if (x.equals(y)) return true;
		  if (x.equals("typenull")) {
			 if (!y.equals("void*")) return true;
		  }
		  if (x.equals("void*")) {
				 if (!y.equals("int")) return true;
			  }
		  if (y.equals("typenull")) {
			 if (!x.equals("void*")) return true;
		  }
		  if (y.equals("void*")) {
				 if (!x.equals("int")) return true;
			  }
		  return false;
	  }
	}

/* constantes litérales */

class Constant {
	private int c;

	public Constant(int c) {
		super();
		this.c = c;
	}

	int getInt() { return c; }
	String Typer() {
	    if (this.c==0){
		    return("typenull");
		}
		return("int");
	}
}

/* expressions */

abstract class Expr {
	// TODO: toRTL can use Typer to make it less parameters! how didn't I see that before! I hate me.
	/*
	* 	struct_definition : map String - list of strings.
	* 		Contains the name of the struct (first string) and the list of all the names inside the struct.
	* 		Ex: struct S { int a; int b; } the a and b will be the list
	*	struct_declaration: contains the name of the pointer of a structure, and which sturcture it is.
	*		Ex: struct S *p; maps p with S.
	* */
	abstract Label toRTL(Label l, Register r, RTLgraph g, Map<String, Register> variables, Map<String, LinkedList<String>> struct_definition, Map<String, String> struct_declaration);
	abstract String Typer();
}

class Ecst extends Expr { // Integer
	final private Constant c;

	Ecst(Constant c) {
		this.c = c;
	}
	@Override
	String Typer() {
	    return this.c.Typer();
	}

	@Override
	Label toRTL(Label l, Register r, RTLgraph g, Map<String, Register> variables, Map<String, LinkedList<String>> struct_definition, Map<String, String> struct_declaration) {
		Rconst rc = new Rconst(this.c.getInt(), r, l);
		return g.add(rc);		// Add item to the graph
	}

	int getInt() { return c.getInt(); }
}

class Ebinop extends Expr { // Operation between 2 Expr
	final private Binop op;
	final private Expr e1, e2;

	Ebinop(Binop op, Expr e1, Expr e2) {
		super();
		this.op = op;
		this.e1 = e1;
		this.e2 = e2;
	}
	  @Override String Typer() {
	   	String t1 = this.e1.Typer();
	   	String t2;
	    switch (this.op) {
	      	case Bobj:
	      	//if (this.e1 instanceof Evar)
	      	if (Typing.declStruct.get(t1)!=null){
	       	// String x1 = ((Evar)this.e1).x;
	        	if (this.e2 instanceof Evar) {
	          	String x2 = ((Evar)this.e2).x;
	          	//System.out.println("this x2 is "+ x2);
	          	if (Typing.declStruct.containsKey(t1)) {
	            //int n = Typing.declStruct.get(((Evar)this.e1).x).indexOf();
	            for (Param p :Typing.declStruct.get(t1)) {
	            	//System.out.println("field "+p.v);
	              if (x2.equals(p.v.x)) {
	                return(p.t.t);
	              }
	            }
	            throw new Error("The field "+x2+" does not exist");
	          }
	          else {
	            throw new Error("The structure" + t1 + "does no exist");
	          }
	        }
	        else {
	          throw new Error("This is not a field");
	        }

	        }
	        else {
	          throw new Error("Not a structure");
	        }

	      case Beqeq:
	    	t2 = this.e2.Typer();
	        if (Typing.equalsType(t1,t2)) {

	          return (t1);
	        }
	        else {throw new Error("Bad type expression, left term is "+ t1+" and and right term is "+t2);}
	      case Bneq :
	      case Blt:
	      case Bgt:
	      case Ble:
	      case Bge:
	    	t2 = this.e2.Typer();
	        if (Typing.equalsType(t1,t2)) {
	          return ("int");
	        }
	        else {throw new Error("Bad type expression, t1 is "+t1+" and t2 is "+t2);}
	      case Bor:
	      case Band:
	    	t2 = this.e2.Typer();
	        return("int");
	      case Badd:
	      case Bmul:
	      case Bsub:
	      case Bdiv:
	    	t2 = this.e2.Typer();
	        if (Typing.equalsType("int",t1) && Typing.equalsType(t2,"int")) {
	          return ("int");
	        }
	        else {throw new Error("Bad type, operation impossible");}
	      case Beq:
	    	  t2 = this.e2.Typer();
	          if (this.e1 instanceof Evar) {
	        	//if (this.e2 instanceof )
	            if (Typing.equalsType(t1,t2)) {
	              return t1;
	            }
	            else {throw new Error("invalid type type left is "+t1+" and type right is "+t2);}
	          }
	          else if (this.e1 instanceof Ebinop) {
	            switch(((Ebinop) this.e1).op){
	              case Bobj:
	            	 // System.out.println("Le type 1 est "+t1+" et le type 2 est "+t2);
	                if (Typing.equalsType(t1,t2)) {
	                  return t1;
	                }
	                else {throw new Error("invalid type");}
	              default:
	              throw new Error("invalid type");
	            }
	          }
	          else {
	            throw new Error("invalid type");
	          }
	    }
	    return("");
	  }
	@Override Label toRTL(Label l, Register r, RTLgraph g, Map<String, Register> variables, Map<String, LinkedList<String>> struct_definition, Map<String, String> struct_declaration) {
		Label L = dealWithAssignments(l, r, g, variables, struct_definition, struct_declaration);
		if (L != null) { return L; }
		if ( (e2 instanceof Ecst) && (e1 instanceof Ecst)) { // ALL THIS IF IS TO MAKE COMPILER TAKE OUT SOME JOB. IT'S NOT NECESARRY. Just an efficient fancy thing.
			return constantOperations(l, r, g, variables, struct_definition, struct_declaration);
		}
		else if ( (e1 instanceof Ecst) || (e2 instanceof Ecst) ) { //If i reach here then e1 && e2 are not both constants
			// This function is also NOT NECESSARY. It will make things like add $4 x instead of loading 4 to a register and add registers.
			// Efficiency but the code will work with or without this.
			L = constantAndVariable(l, r, g, variables, struct_definition, struct_declaration);
			if (L != null) { return L; }
		}
		/* If I reached here then they are "normal" operations (+, /, *, -, <, >, etc ) and no 2 constants */
		// This is the reall to RTL part... the rest was to get things more efficiently and fancy but it should work without it.
		Register r2 = new Register();
		//Rmbinop rb;
		Label L3;
		Rmbinop rb;
		Rmbbranch rmb;
		Rmubranch rmu;
		Label lt, lf;
		Rconst cst;
		switch (this.op) {
			// This is for cases like 1 && 3 where I should give 1 as a result so I check the Beqeq and things like that.
			// The default cases are where I had thought I had normal binop operations (+, *, /, -)
			case Bsub:
				rb = new Rmbinop(Binop2Mbinop(), r, r2, l);
				L3 = g.add(rb);
				break;
			case Beqeq:
				cst = new Rconst(1, r, l);
				lt = g.add(cst);
				cst = new Rconst(0, r, l);
				lf = g.add(cst);
				rmb= new Rmbbranch(Mjeqeq, r2, r, lt, lf);
				L3 = g.add(rmb);
				break;
			case Bneq:
				cst = new Rconst(1, r, l);
				lt = g.add(cst);
				cst = new Rconst(0, r, l);
				lf = g.add(cst);
				rmb= new Rmbbranch(Mjneq, r2, r, lt, lf);
				L3 = g.add(rmb);
				break;
			case Blt:
				cst = new Rconst(1, r, l);
				lt = g.add(cst);
				cst = new Rconst(0, r, l);
				lf = g.add(cst);
				rmb= new Rmbbranch(Mjl, r2, r, lt, lf);
				L3 = g.add(rmb);
				break;
			case Ble:
				cst = new Rconst(1, r, l);
				lt = g.add(cst);
				cst = new Rconst(0, r, l);
				lf = g.add(cst);
				rmb= new Rmbbranch(Mjle, r2, r, lt, lf);
				L3 = g.add(rmb);
				break;
			case Bgt:
				cst = new Rconst(1, r, l);
				lt = g.add(cst);
				cst = new Rconst(0, r, l);
				lf = g.add(cst);
				rmb= new Rmbbranch(Mjg, r2, r, lt, lf);
				L3 = g.add(rmb);
				break;
			case Bge:
				cst = new Rconst(1, r, l);
				lt = g.add(cst);
				cst = new Rconst(0, r, l);
				lf = g.add(cst);
				rmb= new Rmbbranch(Mjge, r2, r, lt, lf);
				L3 = g.add(rmb);
				break;
			case Beq:
				throw new Error("Don't know how I get here"); // Normally this was done with the "dealWithAssignments" function
			case Bobj:
				throw new Error("Don't know how I get here"); // Normally this was done with the "dealWithAssignments" function
			case Bmod:
				throw new Error("Don't know how I get here");
			default:
				rb = new Rmbinop(Binop2Mbinop(), r2, r, l);
				L3 = g.add(rb);
				break;
		}
		Label L2 = this.e1.toRTL(L3, r2, g, variables, struct_definition, struct_declaration);
		Label L1 = this.e2.toRTL(L2, r, g, variables, struct_definition, struct_declaration);
		return L1;
	}

	private Label dealWithAssignments(Label l, Register r, RTLgraph g, Map<String, Register> variables, Map<String, LinkedList<String>> struct_definition, Map<String, String> struct_declaration) {
		/* This just works with the assignments of a variable int or a structure.
		* Op "="
		* */
		switch (this.op) {
			case Beq: // x = y
				/* 2 option for x, or a variable or a p->a, else is not a lvalue */
				Label L2;
				if (e1 instanceof Evar) { // 1st option, x is a variable
					if (variables.containsKey(((Evar) e1).getX())) {	// x can be a local variable
						Rmbinop rmbinop = new Rmbinop(Mmov, r, variables.get(((Evar) e1).getX()), l);
						L2 = g.add(rmbinop);
					}
					else {	// x is a global variable
						Rassign_global rag = new Rassign_global(r, ((Evar) e1).getX(), l);
						L2 = g.add(rag);
					}
				}
				else if (e1 instanceof Ebinop) {	// 2nd option, p->x = y;
					if (variables.containsKey(((Evar)((Ebinop)e1).e1).getX())) { // Local Variable
						if (((Ebinop) e1).op != Bobj) {
							throw new Error(e1.toString() + " not lValue");
						}
						//Register r2 = new Register();
						/* Get the index of the pointer (a) */
						// TODO: here I suppose p->a is the only option so no p->u->a is possible.
						LinkedList<String> as = struct_definition.get(struct_declaration.get(((Evar) ((Ebinop) e1).e1).getX()));
						if ((as == null) || (as.isEmpty())) { throw new Error(((Evar) ((Ebinop) e1).e1).getX() + " of " + struct_declaration.get(((Evar) ((Ebinop) e1).e1).getX()) + " struct was either empty or not defined. The typer should have got this."); }
						int a = as.indexOf(((Evar) ((Ebinop) e1).e2).getX());
						if (a == -1) { throw new Error("Structure " + ((Evar) ((Ebinop) e1).e1).getX() + " has no element " + ((Evar) ((Ebinop) e1).e2).getX() + ". The typer should have got this."); }

						Rstore rstore = new Rstore(r, variables.get(((Evar) ((Ebinop) e1).e1).getX()), a, l); // r2 = p
						/*Label L3 */
						L2 = g.add(rstore);
						//L2 = ((Ebinop) e1).getE1().toRTL(L3, variables.get(((Evar)((Ebinop)e1).e1).getX()), g, variables, struct_definition, struct_declaration);
					}
					else {
						throw new Error("global structure not yet implemented");	// TODO
					}
				}
				else { throw new Error(e1.toString() + " not lValue"); }
				Label L1 = this.e2.toRTL(L2, r, g, variables, struct_definition, struct_declaration);
				return L1;
			case Bobj: // p->a (used to load only)
				Register r2 = new Register();
				/* Get the index of the pointer */
				// TODO: here I suppose p->a is the only option so no p->u->a is possible.
				LinkedList<String> as = struct_definition.get( struct_declaration.get(((Evar) e1).getX()));
				if ( (as == null) || (as.isEmpty())) { throw new Error( ((Evar) e1).getX() + " of " + struct_declaration.get(((Evar) e1).getX()) + " struct was either empty or not defined. The typer should have got this."); }
				int a = as.indexOf(((Evar) e2).getX());
				if (a == -1) { throw new Error("Structure " + ((Evar) e1).getX() + " has no element " + ((Evar) e2).getX() + ". The typer should have got this."); }

				Rload rs = new Rload(variables.get(((Evar) e1).getX()), r, a,  l); // r = p, r2 = new register and i = a (offset)
				return g.add(rs);
			//Label L3 = e1.toRTL(L4, r2, g, variables, struct_definition, struct_declaration);
			//return L3;
			// TODO: implement the global
		}
		return null;
	}
	private Label constantOperations(Label l, Register r, RTLgraph g, Map<String, Register> variables, Map<String, LinkedList<String>> struct_definition, Map<String, String> struct_declaration) {
		// cases like 5 op 4 (Only constants)
		switch (this.op) { // in this case, the compilator will transform things like 4 + 5 directly to 9 in compilation time to make it more effective!
			case Badd:
				return new Ecst(new Constant(((Ecst) e1).getInt() + ((Ecst) e2).getInt())).toRTL(l, r, g, variables, struct_definition, struct_declaration);
			case Bsub:
				return new Ecst(new Constant(((Ecst) e1).getInt() - ((Ecst) e2).getInt())).toRTL(l, r, g, variables, struct_definition, struct_declaration);
			case Bmul:
				return new Ecst(new Constant(((Ecst) e1).getInt() * ((Ecst) e2).getInt())).toRTL(l, r, g, variables, struct_definition, struct_declaration);
			case Bdiv:
				return new Ecst(new Constant(((Ecst) e1).getInt() / ((Ecst) e2).getInt())).toRTL(l, r, g, variables, struct_definition, struct_declaration);
			case Bmod:
				return new Ecst(new Constant(((Ecst) e1).getInt() % ((Ecst) e2).getInt())).toRTL(l, r, g, variables, struct_definition, struct_declaration);
			case Beqeq:
				if (((Ecst) e1).getInt() == ((Ecst) e2).getInt()) {
					return new Ecst(new Constant(1)).toRTL(l, r, g, variables, struct_definition, struct_declaration);
				} else {
					return new Ecst(new Constant(0)).toRTL(l, r, g, variables, struct_definition, struct_declaration);
				}
			case Band:
				if ( ((Ecst) e1).getInt() != 0 && ((Ecst) e2).getInt() != 0 ) { return new Ecst(new Constant(1)).toRTL(l, r, g, variables, struct_definition, struct_declaration); }
				else { return new Ecst(new Constant(0)).toRTL(l, r, g, variables, struct_definition, struct_declaration); }
			case Bor:
				if ( ((Ecst) e1).getInt() == 0 && ((Ecst) e2).getInt() == 0 ) { return new Ecst(new Constant(0)).toRTL(l, r, g, variables, struct_definition, struct_declaration); }
				else { return new Ecst(new Constant(1)).toRTL(l, r, g, variables, struct_definition, struct_declaration); }
			case Beq:
				throw new Error("Constant = Constant not available");
			case Bneq:
				if (((Ecst) e1).getInt() != ((Ecst) e2).getInt()) {
					return new Ecst(new Constant(1)).toRTL(l, r, g, variables, struct_definition, struct_declaration);
				} else {
					return new Ecst(new Constant(0)).toRTL(l, r, g, variables, struct_definition, struct_declaration);
				}
			case Blt:
				if (((Ecst) e1).getInt() < ((Ecst) e2).getInt()) {
					return new Ecst(new Constant(1)).toRTL(l, r, g, variables, struct_definition, struct_declaration);
				} else {
					return new Ecst(new Constant(0)).toRTL(l, r, g, variables, struct_definition, struct_declaration);
				}
			case Ble:
				if (((Ecst) e1).getInt() <= ((Ecst) e2).getInt()) {
					return new Ecst(new Constant(1)).toRTL(l, r, g, variables, struct_definition, struct_declaration);
				} else {
					return new Ecst(new Constant(0)).toRTL(l, r, g, variables, struct_definition, struct_declaration);
				}
			case Bgt:
				if (((Ecst) e1).getInt() > ((Ecst) e2).getInt()) {
					return new Ecst(new Constant(1)).toRTL(l, r, g, variables, struct_definition, struct_declaration);
				} else {
					return new Ecst(new Constant(0)).toRTL(l, r, g, variables, struct_definition, struct_declaration);
				}
			case Bge:
				if (((Ecst) e1).getInt() >= ((Ecst) e2).getInt()) {
					return new Ecst(new Constant(1)).toRTL(l, r, g, variables, struct_definition, struct_declaration);
				} else {
					return new Ecst(new Constant(0)).toRTL(l, r, g, variables, struct_definition, struct_declaration);
				}
			default:
				throw new Error("Incompatible operation between integers");
		}
	}
	private Label constantAndVariable(Label l, Register r, RTLgraph g, Map<String, Register> variables, Map<String, LinkedList<String>> struct_definition, Map<String, String> struct_declaration) {
		// cases with one constant and one variable. Optimizing
		if ((this.op == Badd)) { // this is x + 4 or 4 + x
			if (e1 instanceof Ecst) {	// I add the constant directly as add $4 x instead of charging it to a register
				Rmunop rmunop = new Rmunop(new Maddi(((Ecst) e1).getInt()), r, l);
				Label L2 = g.add(rmunop);
				Label L1 = this.e2.toRTL(L2, r, g, variables, struct_definition, struct_declaration);
				return L1;
			}
			else {
				Rmunop rmunop = new Rmunop(new Maddi(((Ecst) e2).getInt()), r, l);
				Label L2 = g.add(rmunop);
				Label L1 = this.e1.toRTL(L2, r, g, variables, struct_definition, struct_declaration);
				return L1;
			}
		}
		else if ((this.op == Bsub) && (e2 instanceof Ecst)) { // this is x - 4 or 4 - x. Same as above but for subs
			Rmunop rmunop = new Rmunop(new Maddi(-((Ecst) e2).getInt()), r, l);
			Label L2 = g.add(rmunop);
			Label L1 = this.e1.toRTL(L2, r, g, variables, struct_definition, struct_declaration);
			return L1;
		}
		return null; // If this then keep going.
	}
	private Mbinop Binop2Mbinop() {
		switch (this.op) {
			case Badd: return Mbinop.Madd;
			case Bsub: return Mbinop.Msub;
			case Bdiv: return Mbinop.Mdiv;
			case Bmul: return Mbinop.Mmul;
			case Band: return Mbinop.Mand;
			case Bor: return Mbinop.Mor;
			/* This cases are made differently. And checked before getting here (Normally once inside this function this cannot happen) */
			//case Beqeq: return Mbinop.Msete;
			//case Bneq: return Msetne;
			//case Blt: return Msetl;
			//case Ble: return Msetle;
			//case Bgt: return Mbinop.Msetg;
			//case Bge: return Mbinop.Msetge;
			//case Bmod: return Mbinop.Mmov;
			//case Beq: return Mbinop.Msete;
			// Bobj: return Mbinop.Mmov;
		}
		throw new Error("Binop operation that I don't know how to do");
	}
	Binop getOp() { return this.op; }
	Expr getE1() { return this.e1; }
	Expr getE2() { return this.e2; }
}
class Eunop extends Expr { // Operation with only one Expr
	final private Unop op;
	final private Expr e;

	Eunop(Unop op, Expr e) {
		super();
		this.op = op;
		this.e = e;
	}
	  @Override
	  String Typer() {
	    switch (this.op) {
	      case Uneg:
	        if (this.e.Typer()=="int") {
	          return("int");
	        }
	        else {throw new Error("Invalid expression for negation");}
	      case Unot:
	        String s=this.e.Typer();
	        return("int");
	    }
	    return ("");
	  }
	@Override
	Label toRTL(Label l, Register r, RTLgraph g, Map<String, Register> variables, Map<String, LinkedList<String>> struct_definition, Map<String, String> struct_declaration) {
		switch(this.op) {
			case Uneg:
				if (this.e instanceof Ecst) {	/* if e is a cst just compute -e in compilation time */
					Ecst ecst = new Ecst( new Constant( -((Ecst) this.e).getInt()));
					return ecst.toRTL(l, r, g, variables, struct_definition, struct_declaration);
				}
				else {	/* The -a is done by making "0 - a" */
					Ecst c = new Ecst(new Constant(0));
					Register r2 = new Register();
					Rmbinop rb = new Rmbinop(Mbinop.Msub, r2, r, l);
					Label L3 = g.add(rb);
					Label L2 = this.e.toRTL(L3, r2, g, variables, struct_definition, struct_declaration);
					Label L1 = c.toRTL(L2, r, g, variables, struct_definition, struct_declaration);
					return L1;
				}
			case Unot: /* if(true) return 0; else return 1; */
				//Not so fancy (nor effective) but it works...
				Sif sif = new Sif(this.e, new Seval(new Ecst(new Constant(0))), new Seval(new Ecst(new Constant(1))));
				return sif.toRTL(l, l, r, g, variables, struct_definition, struct_declaration);
		}
		return new Label(); // This should never happen but the IDE and compiler don't understand all the cases are covered.
	}

	Unop getOp() { return this.op; }
	Expr getE() { return this.e; }
}
class Ecall extends Expr { // <Identifier>(<Expr>*) ex. f(x);
	final private String f;
	final private LinkedList<Expr> l;

	Ecall(String f, LinkedList<Expr> l) {
		super();
		this.f = f;
		this.l = l;
	}
	  @Override
	  String Typer() {
	    if (Typing.varType.containsKey(this.f)) {
	      LinkedList<Var> typeArgs= Typing.funArgsType.get(this.f);
	      Iterator<Var> it= typeArgs.iterator();
	      if (typeArgs.size()!=this.l.size()) {
	    	  throw new Error("invalid number of arguments");
	      }
	      for (Expr e:this.l) {
	        if (!Typing.equalsType(e.Typer(),it.next().type)) {
	          throw new Error("invalid argument type");
	        }
	      }
	      return (Typing.varType.get(this.f).type);
	    }
	    else {
	      throw new Error("This function does not exist");
	    }
	  }
	@Override
	Label toRTL(Label l, Register r, RTLgraph g, Map<String, Register> variables, Map<String, LinkedList<String>> struct_definition, Map<String, String> struct_declaration) {
		LinkedList<Register> rl = new LinkedList<>();
		Rcall rc = new Rcall(r, this.f, rl, l);
		Label L = g.add(rc);
		for ( Expr expr : this.l) { // Save all the variables into registers
			r = new Register();
			L = expr.toRTL(L, r, g, variables, struct_definition, struct_declaration);
			rl.add(r);
		}
		return L;
	}
}
class Evar extends Expr {
	final  String x;

	public Evar(String x) {
		this.x = x;
	}
	  @Override String Typer() {
	    if (Typing.varTypeLoc.get(this.x)!= null) {
	      return (Typing.varTypeLoc.get(this.x).type);
	    }
	    else if (Typing.varType.get(this.x)!=null) {
	      return (Typing.varType.get(this.x).type);
	    }
	    else {throw new Error("The variable "+this.x+" does not exist");}
	  }

	@Override
	Label toRTL(Label l, Register r, RTLgraph g, Map<String, Register> variables, Map<String, LinkedList<String>> struct_definition, Map<String, String> struct_declaration) {// Here the variable is already created
		if (variables.containsKey(this.x)) {
			Rmbinop rmbinop = new Rmbinop(Mmov, variables.get(this.x), r, l);
			return g.add(rmbinop);
		}
		else {
			Raccess_global rv = new Raccess_global(x, r, l);
			return g.add(rv);
		}
	}

	String getX() { return this.x; }
}
class Type {
	  final String t;
	  Type(String t) {
		  this.t = t;
	  }
}

/* instruction */
abstract class Stmt {
	abstract Label toRTL(Label l, Label ret, Register r, RTLgraph g, Map<String, Register> variables, Map<String, LinkedList<String>> struct_definition, Map<String, String> struct_declaration);
	/* RTLc as made in the slides for branches */
	Label toRTLc(Expr ex, Label truel, Label falsel, Register r, RTLgraph g, Map<String, Register> variables, Map<String, LinkedList<String>> struct_definition, Map<String, String> struct_declaration) {
		// TODO: see if I have a constant and do the simpler jumps
		if (ex instanceof Ebinop) { // two parts in the branch expression (ex. d < 4)
			switch(((Ebinop) ex).getOp()) {
				case Beqeq:	// a == 0
					return evaluate( Mjeqeq, truel, falsel, r, g, (Ebinop)ex, variables, struct_definition, struct_declaration);
				case Bneq: 	// a != 0
					return evaluate( Mjneq, truel, falsel, r, g, (Ebinop)ex, variables, struct_definition, struct_declaration);
				case Blt:	// a < 0
					return evaluate( Mbbranch.Mjl, truel, falsel, r, g, (Ebinop)ex, variables, struct_definition, struct_declaration);
				case Ble:	// a <= 0
					return evaluate( Mbbranch.Mjle, truel, falsel, r, g, (Ebinop)ex, variables, struct_definition, struct_declaration);
				case Bgt:	// a > 0
					return evaluate( Mbbranch.Mjg, truel, falsel, r, g, (Ebinop)ex, variables, struct_definition, struct_declaration);
				case Bge:	// a >= 0
					return evaluate( Mbbranch.Mjge, truel, falsel, r, g, (Ebinop)ex, variables, struct_definition, struct_declaration);
				case Band:	// a && 0
					return evaluate(new Mjz(), toRTLc(((Ebinop)ex).getE2(), truel, falsel, r, g, variables, struct_definition, struct_declaration), falsel, r, g, ((Ebinop)ex).getE1(), variables, struct_definition, struct_declaration);
				case Bor:	// a || 0
					return evaluate(new Mjz(), truel, toRTLc(((Ebinop)ex).getE2(), truel, falsel, r, g, variables, struct_definition, struct_declaration), r, g, ((Ebinop)ex).getE1(), variables, struct_definition, struct_declaration);
			}
		}	// If it's just a normal statement do the jz.
		if (ex instanceof Eunop) {
			switch(((Eunop) ex).getOp()) { // Kept in case I have to implement the Uneg in the future.
				case Unot: return evaluate( new Mjz(), falsel, truel, r, g, ex, variables, struct_definition, struct_declaration); // Give them in the other sense because I will count the e part of !e.
			}
		}
		return evaluate( new Mjz(), truel, falsel, r, g, ex, variables, struct_definition, struct_declaration);
	}
	private Label evaluate(Mbbranch m, Label truel, Label falsel, Register r, RTLgraph g, Ebinop e /* Only used for binoms */, Map<String, Register> variables, Map<String, LinkedList<String>> struct_definition, Map<String, String> struct_declaration) {
		Register r1 = r; // I know is redundant but I see it more clear... Hope the compiler is intelligent right?
		Register r2 = new Register();
		Rmbbranch rb = new Rmbbranch(m, r1, r2, truel, falsel);
		Label L3 = g.add(rb);
		Label L2 = e.getE2().toRTL(L3, r2, g, variables, struct_definition, struct_declaration);
		Label L1 = e.getE1().toRTL(L2, r1, g, variables, struct_definition, struct_declaration);
		return L1;
	}
	private Label evaluate(Mubranch m, Label truel, Label falsel, Register r, RTLgraph g, Expr re, Map<String, Register> variables, Map<String, LinkedList<String>> struct_definition, Map<String, String> struct_declaration) {
		// TODO: Because of the structure of machines. This may not be effective. Maybe it's better to use jnz
		Rmubranch rb = new Rmubranch(m, r, falsel, truel); // Turn around the true and false because it will be a jz (so in case it is zero I should do the false one)
		Label L2 = g.add(rb);
		if (re instanceof Eunop) {
			if (((Eunop) re).getOp() == Unop.Unot) {
				Label L1 = ((Eunop) re).getE().toRTL(L2, r, g, variables, struct_definition, struct_declaration);
				return L1;
			}
		}
		Label L1 = re.toRTL(L2, r, g, variables, struct_definition, struct_declaration); // This should not be called in the !re case.
		return L1;
	}
	abstract void Typer();
}

class Sif extends Stmt {
	final private Expr e;
	final private Stmt s1, s2;

	Sif(Expr e, Stmt s) {
		super();
		this.e = e;
		this.s1 = s;
		this.s2 = null;
	}

	Sif(Expr e, Stmt s1, Stmt s2) {
		super();
		this.e = e;
		this.s1 = s1;
		this.s2 = s2;
	}

	@Override
	Label toRTL(Label l, Label ret, Register r, RTLgraph g, Map<String, Register> variables, Map<String, LinkedList<String>> struct_definition, Map<String, String> struct_declaration) {
		Label truel = s1.toRTL(l, ret, new Register(), g, variables, struct_definition, struct_declaration);
		Label falsel = l;
		if (s2 != null) { falsel = s2.toRTL(l, ret, new Register(), g, variables, struct_definition, struct_declaration); } // It will be null if I don't have the "else" statement.
		return toRTLc(this.e, truel, falsel, r, g, variables, struct_definition, struct_declaration);
	}
    @Override
    void Typer(){
      String t= this.e.Typer();
      this.s1.Typer();
      if (s2 != null) {
      this.s2.Typer();
      }
    }
}
class Swhile extends Stmt {
	final Expr e;
	final Stmt s;

	Swhile(Expr e, Stmt s) {
		super();
		this.e = e;
		this.s = s;
	}
    @Override
    void Typer(){
      String t=this.e.Typer();
      this.s.Typer();
    }

	@Override
	Label toRTL(Label l, Label ret, Register r, RTLgraph g, Map<String, Register> variables, Map<String, LinkedList<String>> struct_definition, Map<String, String> struct_declaration) {
		Label L = new Label();
		Label loop = this.s.toRTL(L, ret, new Register(), g, variables, struct_definition, struct_declaration);
		Label Le = toRTLc(e, loop, l, r, g, variables, struct_definition, struct_declaration);
		Rgoto rg = new Rgoto(Le);
		g.graph.put(L, rg);
		return Le;
	}
}
class Sreturn extends Stmt {
	final Expr e;

	Sreturn(Expr e) {
		super();
		this.e = e;
	}
    @Override
    void Typer() {
      String t=this.e.Typer();
    }
	@Override
	Label toRTL(Label l, Label ret, Register r, RTLgraph g, Map<String, Register> variables, Map<String, LinkedList<String>> struct_definition, Map<String, String> struct_declaration) {
		return this.e.toRTL(ret, r, g, variables, struct_definition, struct_declaration); // I give ret (f.exit) because the return exit the function
	}
}
class Sblock extends Stmt {
	final LinkedList<Stmt> l;
	final LinkedList<Decl_variable> v;

	Sblock(LinkedList<Stmt> l, LinkedList<Decl_variable> v) {
		super();
		this.l = l;
		this.v = v;
	}
	@Override
    void Typer(){
	  for (Decl_variable d:v) {
	        d.TyperLoc();
	  //      System.out.println("ici "+d.x);
	  }
	  // System.out.println(Typing.varTypeLoc);
      for (Stmt s:l) {
        s.Typer();
      }
	 //  System.out.println(Typing.varTypeLoc);
	  for (Decl_variable d:v) {
	        Typing.varTypeLoc.remove(d.x);
	  }


    }
	@Override
	Label toRTL(Label l, Label ret, Register r, RTLgraph g, Map<String, Register> variables, Map<String, LinkedList<String>> struct_definition, Map<String, String> struct_declaration) {
		Stmt s = null;
		do{
			try { s = this.l.removeLast(); }
			catch (NoSuchElementException e) { return l; }
			l = s.toRTL(l, ret, r, g, variables, struct_definition, struct_declaration);
			r = new Register();
		} while(true);
	}
}
class Seval extends Stmt {
	final Expr e;

	Seval(Expr e) {
		super();
		this.e = e;
	}
	@Override
	  void Typer() {
		    String t=this.e.Typer();
		  }
	@Override
	Label toRTL(Label l, Label ret, Register r, RTLgraph g, Map<String, Register> variables, Map<String, LinkedList<String>> struct_definition, Map<String, String> struct_declaration) {	// I send l because it's not a return.
		return this.e.toRTL(l, r, g, variables, struct_definition, struct_declaration);
	}
}

abstract /* Declarations */
class Declarations { 
	abstract void Typer();
}

class Decl_variable extends Declarations {
    final String x;
    final LinkedList<String> v;
    final Type t;
    final LinkedList<Var> l;

	Decl_variable(LinkedList<String> x) throws Exception {
	      super();
	      this.x="int";
	      this.v = x;
	      this.t = new Type("int");
	      this.l = new LinkedList<Var>();
	      for (String s : x) {
	        if (Typing.varType.containsKey(s) || Typing.varTypeLoc.containsKey(s)) {
	          throw new Error("This variable name already exists");
	        }
	        this.l.addFirst(new Var(s,"int"));
	      }
	}

	Decl_variable(String x, LinkedList<String> l) throws Exception {
	      super();
	      this.v=l;
	      this.x = x;
	      this.t = new Type(x);
	      this.l = new LinkedList<Var>();

	   /*   if (!Typing.declStruct.containsKey(x)) {
	        throw new Error("This structure does not exist");

	      }*/
	      for (String s:l){
	        //Typing.varType.put(s, new Var(s,"x"));
	        this.l.addFirst(new Var(s,x));
	      }
	}
    @Override
    void Typer() {
      if (this.t.t.equals("struct")) {
        for (Var v:this.l) {
         	/*if (Typing.varType.containsKey(v.name)||Typing.varTypeLoc.containsKey(v.name)) {
    		throw new Error(v.name+" already exists");
    		}*/
          Typing.varType.put(v.name,v);
        }
      }
      else {
        for (Var v:this.l) {
        /*if (Typing.varType.containsKey(v.name)||Typing.varTypeLoc.containsKey(v.name)) {
        		throw new Error(v.name+" already exists");
        	}*/
          Typing.varType.put(v.name,v);
        }
      }

      }
    void TyperLoc() {
        if (this.t.t.equals("struct")) {
          for (Var v:this.l) {
         /*	if (Typing.varType.containsKey(v.name)||Typing.varTypeLoc.containsKey(v.name)) {
      		throw new Error(v.name+" already exists");
      		}*/
            Typing.varTypeLoc.put(v.name,v);
          }
        }
        else {
          for (Var v:this.l) {
         	/*if (Typing.varType.containsKey(v.name)||Typing.varTypeLoc.containsKey(v.name)) {
      		throw new Error(v.name+" already exists");
      		}*/
            Typing.varTypeLoc.put(v.name,v);
          }
        }

        }
	void initializeVar(Set<Register> locals, Map<String, Register> variables, Map<String, String> struct_map) { // Initialize variables
		for ( String s : v ) {
			Register r = new Register();
			variables.put(s, r);
			locals.add(r);
			struct_map.put(s, this.x);
		}
	}
}

class Decl_struct extends Declarations {
	final String s;
	final LinkedList<Param> l;

	Decl_struct(String s, LinkedList<Decl_variable> ld) throws Exception {
        super();
        this.s = s;
        this.l = new LinkedList<Param>();
        for (Decl_variable d:ld) {
        	for (String st:d.v) {
        	l.add(new Param(st, d.t.t));
        	}
        }

        HashSet<Param> unique = new HashSet<Param>(l);
        if (unique.size()!=l.size())
        {
          throw new Error("Two fields of the structure have the same name");
        }
        if (Typing.declStruct.containsKey(s)) {
          throw new Error("This structure name already exists");
        }
	}
    @Override
    void Typer() {
        if (Typing.declStruct.containsKey(s)) {
            throw new Error("This structure name already exists");
          }
      Typing.declStruct.put(this.s,this.l);
    }
}

class Decl_function extends Declarations { // Declaration of a function
	final String f;
	final LinkedList<Param> l; // arguments formels
	final Sblock b;
	final Type r;
	LinkedList<Register> backUpReg; 

	Decl_function(String f, LinkedList<Param> l, Sblock b, String t) throws Exception {
		super();
		this.f = f; // the functions name
		this.l = l; // arguments it has
		this.b = b; // what the function do
		this.r = new Type(t);
		this.backUpReg = new LinkedList<>();
	}
    @Override void Typer(){
      if (Typing.varType.containsKey(this.f)) {
        throw new Error("This structure name already exists");
      }
      //System.out.println("Typing the function " +this.f);
      Typing.varType.put(f, new Var(f,r.t));
      LinkedList<Var> typeArgs = new LinkedList<Var>();
      for (Param p:this.l) {
        typeArgs.addLast(new Var(p.v.x,p.t.t));
        Typing.varTypeLoc.put(p.v.x,new Var(p.v.x,p.t.t));
      }
     // System.out.println("varTypeLoc : "+Typing.varTypeLoc);
      //System.out.println("varType : "+Typing.varType);
      Typing.funArgsType.put(f,typeArgs);
      this.b.Typer();
      for (Param p:this.l) {
        Typing.varTypeLoc.remove(p.v.x);
      }
    }
	RTLfun toRTL(Map<String, LinkedList<String>> sd) {
		RTLfun f = new RTLfun(this.f);
		LinkedList<Stmt> lstStmt = this.b.l; // List of statements
		LinkedList<Param> lstParam = this.l; // List of input parameters
		LinkedList<Decl_variable> lstVar = this.b.v; // List of declaration of variables
		//f.struct_definition = sd;
		f.body = new RTLgraph();
		f.exit = new Label();
		Label current = f.exit;
		/* Declaration of local Variables */
		for ( Param p: lstParam) {
			p.initializeVar(f.formals, f.variables);
		}
		for (Decl_variable dv : lstVar) {
			dv.initializeVar(f.locals, f.variables, f.struct_declarations);
		}
		Stmt s = null;
		/* Do the statements */
		do{
			try { s = lstStmt.removeLast(); }
			catch (NoSuchElementException e) {
				f.entry = current;
				return f;
			}
			f.result = new Register(); // I create the next register to be used
			current = s.toRTL(current, f.exit, f.result, f.body, f.variables, sd, f.struct_declarations);
		} while(true);
	}
}

class Sizeof extends Expr {
	final private String s;

	Sizeof(String s) {
		this.s = s;
	}
	@Override
    String Typer() {
		if (Typing.declStruct.containsKey(s)) { return("int"); }
		else {throw new Error("This structure does not exist");}
	}

	@Override
	Label toRTL(Label l, Register r, RTLgraph g, Map<String, Register> variables, Map<String, LinkedList<String>> struct_definition, Map<String, String> struct_declaration) {
		Ecst size = new Ecst(new Constant(Typing.declStruct.get(this.s).size()));
		return size.toRTL(l, r, g, variables, struct_definition, struct_declaration);
	}
}

class Param {
    final Evar v;
    final Type t;
    public Param(String v, String s) throws Exception {
      this.v = new Evar(v);
      this.t = new Type(s);
    }
    public Param(Evar v) throws Exception {
      this.v = v;
      this.t = new Type("int");
    }
    public Param(Evar v, String s) throws Exception {
        this.v = v;
        this.t = new Type(s);
      }
    public Param(String x) throws Exception {
        this.v = new Evar(x);
        this.t = new Type("int");
      }
	void initializeVar(List<Register> formals, Map<String, Register> variables) { // Initialize variables
		int size = formals.size();
		Register r = new Register();
		//if (size < parameters.size()) { r = parameters.get(size); }
		//else { r = new Register(); }
		variables.put(v.getX(), r);
		formals.add(r);
	}
   /* public Param(Decl_variable d) {
    	for (String s:d.v) {
    	Param
    	}
    }*/

  }

/* File */
class File {
	final LinkedList<Declarations> l;

	File(LinkedList<Declarations> l) {
		super();
		this.l = l;
	}
    void Typer() {
    	Typing T = new Typing();
      for (Declarations d:l) {
        d.Typer();
       // System.out.println("declStruct : "+Typing.declStruct);
       // System.out.println("varType : "+Typing.varType);
        //System.out.println("varTypeLoc : "+Typing.varTypeLoc);
      }
    }

	RTLfile toRTL() {
		RTLfile file = new RTLfile();
		boolean printGlobal = true;
		for (Declarations d : this.l) {
			if (d instanceof Decl_variable) {
				if (printGlobal && !((Decl_variable) d).v.isEmpty()) {
					System.out.println("Global Variables: ");
					printGlobal = false;
				}
				for ( String s : ((Decl_variable) d).v ) {
					file.gvars.add(s);
					System.out.println("int " + s);
				}
			}
			else if (d instanceof Decl_struct) {
				LinkedList<String> li = new LinkedList<>();
				for (Param p : ((Decl_struct) d).l) {
					li.add(p.v.getX());
				}
				file.struct_definition.put(((Decl_struct) d).s, li);
				if (printGlobal) {
					System.out.println("Global Variables: ");
					printGlobal = false;
				}
				System.out.println("struct " + ((Decl_struct) d).s );
				for (String string : file.struct_definition.get(((Decl_struct) d).s)) {
					System.out.println("\tint " + string);	// TODO: not necessarry a int
				}
			}
			else if (d instanceof Decl_function) {
				RTLfun f = ((Decl_function) d).toRTL(file.struct_definition);
				f.print();
				file.funs.add(f);
			}
		}
		return file;
	}
}

class Var {
    String name;
    String type;
    Var(String n, String t) {
      this.name=n;
      this.type=t;
    }
  }
</file>

<file path="src/mini_c/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.core.resources.prefs">
eclipse.preferences.version=1
version=1
</file>

<file path="src/mini_c/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.epp.logging.aeri.ide.prefs">
eclipse.preferences.version=1
resetSendMode=KEEP
resetSendModeOn=0
sendMode=NOTIFY
</file>

<file path="src/mini_c/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.core.prefs">
eclipse.preferences.version=1
org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
org.eclipse.jdt.core.compiler.compliance=1.8
org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
org.eclipse.jdt.core.compiler.source=1.8
</file>

<file path="src/mini_c/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.launching.prefs">
eclipse.preferences.version=1
org.eclipse.jdt.launching.PREF_VM_XML=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?>\n<vmSettings defaultVM\="57,org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType13,1487755325298" defaultVMConnector\="">\n<vmType id\="org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType">\n<vm id\="1487755325298" name\="java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64" path\="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64"/>\n</vmType>\n</vmSettings>\n
</file>

<file path="src/mini_c/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.ui.prefs">
content_assist_proposals_background=255,255,255
content_assist_proposals_foreground=0,0,0
eclipse.preferences.version=1
fontPropagated=true
org.eclipse.jdt.ui.editor.tab.width=
org.eclipse.jdt.ui.formatterprofiles.version=12
org.eclipse.jdt.ui.javadoclocations.migrated=true
org.eclipse.jface.textfont=1|Monospace|10.0|0|GTK|1|;
proposalOrderMigrated=true
spelling_locale_initialized=true
tabWidthPropagated=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
</file>

<file path="src/mini_c/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.m2e.discovery.prefs">
eclipse.preferences.version=1
org.eclipse.m2e.discovery.pref.projects=
</file>

<file path="src/mini_c/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.mylyn.context.core.prefs">
eclipse.preferences.version=1
mylyn.attention.migrated=true
</file>

<file path="src/mini_c/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.mylyn.monitor.ui.prefs">
eclipse.preferences.version=1
org.eclipse.mylyn.monitor.activity.tracking.enabled.checked=true
</file>

<file path="src/mini_c/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.mylyn.tasks.ui.prefs">
eclipse.preferences.version=1
migrated.task.repositories.secure.store=true
org.eclipse.mylyn.tasks.ui.filters.nonmatching=true
org.eclipse.mylyn.tasks.ui.filters.nonmatching.encouraged=true
org.eclipse.mylyn.tasks.ui.welcome.message=true
</file>

<file path="src/mini_c/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.ide.prefs">
PROBLEMS_FILTERS_MIGRATE=true
eclipse.preferences.version=1
platformState=1459787361990
quickStart=false
tipsAndTricks=true
</file>

<file path="src/mini_c/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.prefs">
eclipse.preferences.version=1
showIntro=false
</file>

<file path="src/mini_c/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.workbench.prefs">
//org.eclipse.ui.commands/state/org.eclipse.ui.navigator.resources.nested.changeProjectPresentation/org.eclipse.ui.commands.radioState=false
PLUGINS_NOT_ACTIVATED_ON_STARTUP=org.eclipse.m2e.discovery;
eclipse.preferences.version=1
</file>

<file path="src/mini_c/workspace/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi">
<?xml version="1.0" encoding="ASCII"?>
<application:Application xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:advanced="http://www.eclipse.org/ui/2010/UIModel/application/ui/advanced" xmlns:application="http://www.eclipse.org/ui/2010/UIModel/application" xmlns:basic="http://www.eclipse.org/ui/2010/UIModel/application/ui/basic" xmlns:menu="http://www.eclipse.org/ui/2010/UIModel/application/ui/menu" xmi:id="_NV9OYfjgEea4UdV0IbBN0w" elementId="org.eclipse.e4.legacy.ide.application" contributorURI="platform:/plugin/org.eclipse.platform" selectedElement="_NV9OYvjgEea4UdV0IbBN0w" bindingContexts="_NV9OZPjgEea4UdV0IbBN0w">
  <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;workbench>&#xA;&lt;mruList/>&#xA;&lt;/workbench>"/>
  <tags>activeSchemeId:org.eclipse.ui.defaultAcceleratorConfiguration</tags>
  <tags>ModelMigrationProcessor.001</tags>
  <children xsi:type="basic:TrimmedWindow" xmi:id="_NV9OYvjgEea4UdV0IbBN0w" elementId="IDEWindow" contributorURI="platform:/plugin/org.eclipse.platform" selectedElement="_NzEoMvjgEea4UdV0IbBN0w" label="%trimmedwindow.label.eclipseSDK" x="151" y="74" width="1020" height="779">
    <persistedState key="coolBarVisible" value="true"/>
    <persistedState key="perspectiveBarVisible" value="true"/>
    <persistedState key="isRestored" value="true"/>
    <persistedState key="show_in_time" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;show_in_time/>"/>
    <persistedState key="workingSets" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;workingSets/>"/>
    <persistedState key="aggregateWorkingSetId" value="Aggregate for window 1487755260842"/>
    <tags>topLevel</tags>
    <children xsi:type="basic:PartSashContainer" xmi:id="_NzEoMvjgEea4UdV0IbBN0w" selectedElement="_NzFPQPjgEea4UdV0IbBN0w" horizontal="true">
      <children xsi:type="advanced:PerspectiveStack" xmi:id="_NzFPQPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.ide.perspectivestack" containerData="7500" selectedElement="_OYBvYvjgEea4UdV0IbBN0w">
        <children xsi:type="advanced:Perspective" xmi:id="_OYBvYvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.JavaPerspective" selectedElement="_OYCWcPjgEea4UdV0IbBN0w" label="Java" iconURI="platform:/plugin/org.eclipse.jdt.ui/$nl$/icons/full/eview16/jperspective.png">
          <persistedState key="persp.hiddenItems" value="persp.hideToolbarSC:org.eclipse.debug.ui.commands.RunToLine,persp.hideToolbarSC:org.eclipse.jdt.ui.actions.OpenProjectWizard,persp.hideToolbarSC:print,persp.hideToolbarSC:org.eclipse.ui.edit.text.toggleShowSelectedElementOnly,"/>
          <tags>persp.actionSet:org.eclipse.search.searchActionSet</tags>
          <tags>persp.actionSet:org.eclipse.ui.edit.text.actionSet.annotationNavigation</tags>
          <tags>persp.actionSet:org.eclipse.ui.edit.text.actionSet.navigation</tags>
          <tags>persp.actionSet:org.eclipse.ui.edit.text.actionSet.convertLineDelimitersTo</tags>
          <tags>persp.actionSet:org.eclipse.ui.externaltools.ExternalToolsSet</tags>
          <tags>persp.actionSet:org.eclipse.ui.actionSet.keyBindings</tags>
          <tags>persp.actionSet:org.eclipse.ui.actionSet.openFiles</tags>
          <tags>persp.actionSet:org.eclipse.wb.core.ui.actionset</tags>
          <tags>persp.actionSet:org.eclipse.mylyn.doc.actionSet</tags>
          <tags>persp.actionSet:org.eclipse.mylyn.tasks.ui.navigation</tags>
          <tags>persp.actionSet:org.eclipse.ui.cheatsheets.actionSet</tags>
          <tags>persp.actionSet:org.eclipse.debug.ui.launchActionSet</tags>
          <tags>persp.actionSet:org.eclipse.jdt.ui.JavaActionSet</tags>
          <tags>persp.actionSet:org.eclipse.jdt.ui.JavaElementCreationActionSet</tags>
          <tags>persp.actionSet:org.eclipse.ui.NavigateActionSet</tags>
          <tags>persp.viewSC:org.eclipse.jdt.ui.PackageExplorer</tags>
          <tags>persp.viewSC:org.eclipse.jdt.ui.TypeHierarchy</tags>
          <tags>persp.viewSC:org.eclipse.jdt.ui.SourceView</tags>
          <tags>persp.viewSC:org.eclipse.jdt.ui.JavadocView</tags>
          <tags>persp.viewSC:org.eclipse.search.ui.views.SearchView</tags>
          <tags>persp.viewSC:org.eclipse.ui.console.ConsoleView</tags>
          <tags>persp.viewSC:org.eclipse.ui.views.ContentOutline</tags>
          <tags>persp.viewSC:org.eclipse.ui.views.ProblemView</tags>
          <tags>persp.viewSC:org.eclipse.ui.views.ResourceNavigator</tags>
          <tags>persp.viewSC:org.eclipse.ui.views.TaskList</tags>
          <tags>persp.viewSC:org.eclipse.ui.views.ProgressView</tags>
          <tags>persp.viewSC:org.eclipse.ui.navigator.ProjectExplorer</tags>
          <tags>persp.viewSC:org.eclipse.ui.texteditor.TemplatesView</tags>
          <tags>persp.viewSC:org.eclipse.pde.runtime.LogView</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.JavaProjectWizard</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewPackageCreationWizard</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewClassCreationWizard</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewInterfaceCreationWizard</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewEnumCreationWizard</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewAnnotationCreationWizard</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewSourceFolderCreationWizard</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewSnippetFileCreationWizard</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewJavaWorkingSetWizard</tags>
          <tags>persp.newWizSC:org.eclipse.ui.wizards.new.folder</tags>
          <tags>persp.newWizSC:org.eclipse.ui.wizards.new.file</tags>
          <tags>persp.newWizSC:org.eclipse.ui.editors.wizards.UntitledTextFileWizard</tags>
          <tags>persp.perspSC:org.eclipse.jdt.ui.JavaBrowsingPerspective</tags>
          <tags>persp.perspSC:org.eclipse.debug.ui.DebugPerspective</tags>
          <tags>persp.viewSC:org.eclipse.ant.ui.views.AntView</tags>
          <tags>persp.showIn:org.eclipse.egit.ui.RepositoriesView</tags>
          <tags>persp.actionSet:org.eclipse.debug.ui.breakpointActionSet</tags>
          <tags>persp.actionSet:org.eclipse.jdt.debug.ui.JDTDebugActionSet</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.junit.wizards.NewTestCaseCreationWizard</tags>
          <tags>persp.actionSet:org.eclipse.jdt.junit.JUnitActionSet</tags>
          <tags>persp.showIn:org.eclipse.jdt.ui.PackageExplorer</tags>
          <tags>persp.showIn:org.eclipse.team.ui.GenericHistoryView</tags>
          <tags>persp.showIn:org.eclipse.ui.views.ResourceNavigator</tags>
          <tags>persp.showIn:org.eclipse.ui.navigator.ProjectExplorer</tags>
          <tags>persp.viewSC:org.eclipse.mylyn.tasks.ui.views.tasks</tags>
          <tags>persp.newWizSC:org.eclipse.mylyn.tasks.ui.wizards.new.repository.task</tags>
          <tags>persp.viewSC:org.eclipse.wb.core.StructureView</tags>
          <tags>persp.viewSC:org.eclipse.wb.core.PaletteView</tags>
          <children xsi:type="basic:PartSashContainer" xmi:id="_OYCWcPjgEea4UdV0IbBN0w" selectedElement="_OYCWcfjgEea4UdV0IbBN0w" horizontal="true">
            <children xsi:type="basic:PartSashContainer" xmi:id="_OYCWcfjgEea4UdV0IbBN0w" containerData="2500" selectedElement="_OYCWcvjgEea4UdV0IbBN0w">
              <children xsi:type="basic:PartStack" xmi:id="_OYCWcvjgEea4UdV0IbBN0w" elementId="left" containerData="6000" selectedElement="_OYCWc_jgEea4UdV0IbBN0w">
                <tags>org.eclipse.e4.primaryNavigationStack</tags>
                <tags>active</tags>
                <children xsi:type="advanced:Placeholder" xmi:id="_OYCWc_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.PackageExplorer" ref="_OXwpoPjgEea4UdV0IbBN0w"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_OYCWdPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.TypeHierarchy" toBeRendered="false" ref="_OXx3wPjgEea4UdV0IbBN0w"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_OYCWdfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.ResourceNavigator" toBeRendered="false" ref="_OXx3wfjgEea4UdV0IbBN0w"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_OYCWdvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigator.ProjectExplorer" toBeRendered="false" ref="_OXx3wvjgEea4UdV0IbBN0w"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_OYCWd_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.junit.ResultView" toBeRendered="false" ref="_OYAhQfjgEea4UdV0IbBN0w"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_OYCWePjgEea4UdV0IbBN0w" elementId="org.eclipse.wb.core.StructureView" toBeRendered="false" ref="_OYBvYPjgEea4UdV0IbBN0w"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_OYCWefjgEea4UdV0IbBN0w" elementId="org.eclipse.wb.core.PaletteView" toBeRendered="false" ref="_OYBvYfjgEea4UdV0IbBN0w"/>
              </children>
              <children xsi:type="basic:PartStack" xmi:id="_OYCWevjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesViewMStack" toBeRendered="false" containerData="4000">
                <children xsi:type="advanced:Placeholder" xmi:id="_OYCWe_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesView" toBeRendered="false" ref="_OYAhQPjgEea4UdV0IbBN0w"/>
              </children>
            </children>
            <children xsi:type="basic:PartSashContainer" xmi:id="_OYCWfPjgEea4UdV0IbBN0w" containerData="7500">
              <children xsi:type="basic:PartSashContainer" xmi:id="_OYCWffjgEea4UdV0IbBN0w" containerData="7500" horizontal="true">
                <children xsi:type="advanced:Placeholder" xmi:id="_OYCWfvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.editorss" containerData="7500" ref="_OXrKEPjgEea4UdV0IbBN0w"/>
                <children xsi:type="basic:PartSashContainer" xmi:id="_OYCWf_jgEea4UdV0IbBN0w" containerData="2500">
                  <children xsi:type="basic:PartStack" xmi:id="_OYCWgPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.views.tasksMStack" containerData="5000" selectedElement="_OYCWgfjgEea4UdV0IbBN0w">
                    <children xsi:type="advanced:Placeholder" xmi:id="_OYCWgfjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.views.tasks" ref="_OYBIUPjgEea4UdV0IbBN0w"/>
                  </children>
                  <children xsi:type="basic:PartStack" xmi:id="_OYCWgvjgEea4UdV0IbBN0w" elementId="right" containerData="5000" selectedElement="_OYCWg_jgEea4UdV0IbBN0w">
                    <tags>org.eclipse.e4.secondaryNavigationStack</tags>
                    <children xsi:type="advanced:Placeholder" xmi:id="_OYCWg_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.ContentOutline" ref="_OXzF4_jgEea4UdV0IbBN0w"/>
                    <children xsi:type="advanced:Placeholder" xmi:id="_OYCWhPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.texteditor.TemplatesView" toBeRendered="false" ref="_OXzF5PjgEea4UdV0IbBN0w"/>
                    <children xsi:type="advanced:Placeholder" xmi:id="_OYCWhfjgEea4UdV0IbBN0w" elementId="org.eclipse.ant.ui.views.AntView" toBeRendered="false" ref="_OX_6MPjgEea4UdV0IbBN0w"/>
                  </children>
                </children>
              </children>
              <children xsi:type="basic:PartStack" xmi:id="_OYCWhvjgEea4UdV0IbBN0w" elementId="bottom" containerData="2500" selectedElement="_OYCWh_jgEea4UdV0IbBN0w">
                <tags>org.eclipse.e4.secondaryDataStack</tags>
                <children xsi:type="advanced:Placeholder" xmi:id="_OYCWh_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.ProblemView" ref="_OXx3w_jgEea4UdV0IbBN0w"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_OYCWiPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.JavadocView" ref="_OXx3xPjgEea4UdV0IbBN0w"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_OYCWifjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.SourceView" ref="_OXye0PjgEea4UdV0IbBN0w"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_OYCWivjgEea4UdV0IbBN0w" elementId="org.eclipse.search.ui.views.SearchView" toBeRendered="false" ref="_OXye0fjgEea4UdV0IbBN0w"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_OYCWi_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.console.ConsoleView" toBeRendered="false" ref="_OXzF4PjgEea4UdV0IbBN0w"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_OYCWjPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.BookmarkView" toBeRendered="false" ref="_OXzF4fjgEea4UdV0IbBN0w"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_OYCWjfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.ProgressView" toBeRendered="false" ref="_OXzF4vjgEea4UdV0IbBN0w"/>
              </children>
            </children>
          </children>
        </children>
      </children>
      <children xsi:type="basic:PartStack" xmi:id="_NzFPQfjgEea4UdV0IbBN0w" elementId="stickyFolderRight" toBeRendered="false" containerData="2500">
        <children xsi:type="advanced:Placeholder" xmi:id="_NzFPQvjgEea4UdV0IbBN0w" elementId="org.eclipse.help.ui.HelpView" toBeRendered="false" ref="_NzDaEPjgEea4UdV0IbBN0w"/>
        <children xsi:type="advanced:Placeholder" xmi:id="_NzFPQ_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.internal.introview" toBeRendered="false" ref="_NzEoMPjgEea4UdV0IbBN0w"/>
        <children xsi:type="advanced:Placeholder" xmi:id="_NzFPRPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.cheatsheets.views.CheatSheetView" toBeRendered="false" ref="_NzEoMfjgEea4UdV0IbBN0w"/>
      </children>
    </children>
    <sharedElements xsi:type="basic:Part" xmi:id="_NzDaEPjgEea4UdV0IbBN0w" elementId="org.eclipse.help.ui.HelpView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Help" iconURI="platform:/plugin/org.eclipse.help.ui/icons/view16/help_view.gif" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:Help</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_NzEoMPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.internal.introview" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Welcome" iconURI="platform:/plugin/org.eclipse.ui/icons/full/eview16/defaultview_misc.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:General</tags>
      <menus xmi:id="_Oq_HoPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.internal.introview">
        <tags>ViewMenu</tags>
        <tags>menuContribution:menu</tags>
      </menus>
      <toolbar xmi:id="_Oq_HofjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.internal.introview" visible="false"/>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_NzEoMfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.cheatsheets.views.CheatSheetView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Cheat Sheets" iconURI="platform:/plugin/org.eclipse.ui.cheatsheets/icons/view16/cheatsheet_view.gif" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:Help</tags>
    </sharedElements>
    <sharedElements xsi:type="advanced:Area" xmi:id="_OXrKEPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.editorss">
      <children xsi:type="basic:PartStack" xmi:id="_OXrKEfjgEea4UdV0IbBN0w" elementId="org.eclipse.e4.primaryDataStack">
        <tags>org.eclipse.e4.primaryDataStack</tags>
        <tags>EditorStack</tags>
      </children>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_OXwpoPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.PackageExplorer" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Package Explorer" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/package.png" tooltip="" closeable="true">
      <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;view group_libraries=&quot;1&quot; layout=&quot;2&quot; linkWithEditor=&quot;0&quot; rootMode=&quot;1&quot; workingSetName=&quot;Aggregate for window 1487755260842&quot;>&#xA;&lt;customFilters userDefinedPatternsEnabled=&quot;false&quot;>&#xA;&lt;xmlDefinedFilters>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.StaticsFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.mylyn.java.ui.MembersFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonJavaProjectsFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer_patternFilterId_.*&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonSharedProjectsFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.SyntheticMembersFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ContainedLibraryFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.m2e.MavenModuleFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.HideInnerClassFilesFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.EmptyInnerPackageFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ClosedProjectsFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.EmptyLibraryContainerFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.PackageDeclarationFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ImportDeclarationFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonJavaElementFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.LibraryFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.CuAndClassFileFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.EmptyPackageFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonPublicFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.LocalTypesFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.FieldsFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;/xmlDefinedFilters>&#xA;&lt;/customFilters>&#xA;&lt;/view>"/>
      <tags>View</tags>
      <tags>categoryTag:Java</tags>
      <tags>active</tags>
      <tags>activeOnClose</tags>
      <menus xmi:id="_OZThwPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.PackageExplorer">
        <tags>ViewMenu</tags>
        <tags>menuContribution:menu</tags>
      </menus>
      <toolbar xmi:id="_OZThwfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.PackageExplorer"/>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_OXx3wPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.TypeHierarchy" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Type Hierarchy" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/class_hi.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:Java</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_OXx3wfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.ResourceNavigator" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Navigator" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/filenav_nav.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:General</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_OXx3wvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigator.ProjectExplorer" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Project Explorer" iconURI="platform:/plugin/org.eclipse.ui.navigator.resources/icons/full/eview16/resource_persp.gif" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:General</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_OXx3w_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.ProblemView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Problems" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/problems_view.png" tooltip="" closeable="true">
      <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;view PRIMARY_SORT_FIELD=&quot;org.eclipse.ui.ide.severityAndDescriptionField&quot; categoryGroup=&quot;org.eclipse.ui.ide.severity&quot; markerContentGenerator=&quot;org.eclipse.ui.ide.problemsGenerator&quot; partName=&quot;Problems&quot;>&#xA;&lt;columnWidths org.eclipse.ui.ide.locationField=&quot;105&quot; org.eclipse.ui.ide.markerType=&quot;105&quot; org.eclipse.ui.ide.pathField=&quot;140&quot; org.eclipse.ui.ide.resourceField=&quot;105&quot; org.eclipse.ui.ide.severityAndDescriptionField=&quot;350&quot;/>&#xA;&lt;visible IMemento.internal.id=&quot;org.eclipse.ui.ide.severityAndDescriptionField&quot;/>&#xA;&lt;visible IMemento.internal.id=&quot;org.eclipse.ui.ide.resourceField&quot;/>&#xA;&lt;visible IMemento.internal.id=&quot;org.eclipse.ui.ide.pathField&quot;/>&#xA;&lt;visible IMemento.internal.id=&quot;org.eclipse.ui.ide.locationField&quot;/>&#xA;&lt;visible IMemento.internal.id=&quot;org.eclipse.ui.ide.markerType&quot;/>&#xA;&lt;/view>"/>
      <tags>View</tags>
      <tags>categoryTag:General</tags>
      <menus xmi:id="_Okh6UPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.ProblemView">
        <tags>ViewMenu</tags>
        <tags>menuContribution:menu</tags>
      </menus>
      <toolbar xmi:id="_Okh6UfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.ProblemView"/>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_OXx3xPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.JavadocView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Javadoc" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/javadoc.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:Java</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_OXye0PjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.SourceView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Declaration" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/source.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:Java</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_OXye0fjgEea4UdV0IbBN0w" elementId="org.eclipse.search.ui.views.SearchView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Search" iconURI="platform:/plugin/org.eclipse.search/icons/full/eview16/searchres.gif" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:General</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_OXzF4PjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.console.ConsoleView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Console" iconURI="platform:/plugin/org.eclipse.ui.console/icons/full/cview16/console_view.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:General</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_OXzF4fjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.BookmarkView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Bookmarks" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/bkmrk_nav.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:General</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_OXzF4vjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.ProgressView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Progress" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/pview.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:General</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_OXzF4_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.ContentOutline" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Outline" iconURI="platform:/plugin/org.eclipse.ui.views/icons/full/eview16/outline_co.png" tooltip="" closeable="true">
      <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;view/>"/>
      <tags>View</tags>
      <tags>categoryTag:General</tags>
      <menus xmi:id="_OjR9IPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.ContentOutline">
        <tags>ViewMenu</tags>
        <tags>menuContribution:menu</tags>
      </menus>
      <toolbar xmi:id="_OjR9IfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.ContentOutline"/>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_OXzF5PjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.texteditor.TemplatesView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Templates" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/templates.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:General</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_OX_6MPjgEea4UdV0IbBN0w" elementId="org.eclipse.ant.ui.views.AntView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Ant" iconURI="platform:/plugin/org.eclipse.ant.ui/icons/full/eview16/ant_view.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:Ant</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_OYAhQPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Git Repositories" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/repo_rep.gif" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:Git</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_OYAhQfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.junit.ResultView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="JUnit" iconURI="platform:/plugin/org.eclipse.jdt.junit/icons/full/eview16/junit.gif" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:Java</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_OYBIUPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.views.tasks" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Task List" iconURI="platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.gif" tooltip="" closeable="true">
      <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;view linkWithEditor=&quot;true&quot; presentation=&quot;org.eclipse.mylyn.tasks.ui.categorized&quot;>&#xA;&lt;sorter groupBy=&quot;CATEGORY_QUERY&quot;>&#xA;&lt;sorter>&#xA;&lt;sort0 sortDirection=&quot;1&quot; sortKey=&quot;PRIORITY&quot;/>&#xA;&lt;sort1 sortDirection=&quot;1&quot; sortKey=&quot;RANK&quot;/>&#xA;&lt;sort2 sortDirection=&quot;1&quot; sortKey=&quot;DATE_CREATED&quot;/>&#xA;&lt;sort3 sortDirection=&quot;1&quot; sortKey=&quot;NONE&quot;/>&#xA;&lt;sort4 sortDirection=&quot;1&quot; sortKey=&quot;NONE&quot;/>&#xA;&lt;sort5 sortDirection=&quot;1&quot; sortKey=&quot;NONE&quot;/>&#xA;&lt;sort6 sortDirection=&quot;1&quot; sortKey=&quot;NONE&quot;/>&#xA;&lt;sort7 sortDirection=&quot;1&quot; sortKey=&quot;NONE&quot;/>&#xA;&lt;/sorter>&#xA;&lt;/sorter>&#xA;&lt;filteredTreeFindHistory/>&#xA;&lt;/view>"/>
      <tags>View</tags>
      <tags>categoryTag:Mylyn</tags>
      <menus xmi:id="_OgLl0PjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.views.tasks">
        <tags>ViewMenu</tags>
        <tags>menuContribution:menu</tags>
      </menus>
      <toolbar xmi:id="_OgLl0fjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.views.tasks"/>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_OYBvYPjgEea4UdV0IbBN0w" elementId="org.eclipse.wb.core.StructureView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Structure" iconURI="platform:/plugin/org.eclipse.wb.core/icons/structure/properties_view.gif" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:WindowBuilder</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_OYBvYfjgEea4UdV0IbBN0w" elementId="org.eclipse.wb.core.PaletteView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Palette" iconURI="platform:/plugin/org.eclipse.wb.core/icons/structure/palette.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:WindowBuilder</tags>
    </sharedElements>
    <trimBars xmi:id="_NzOZMPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.main.toolbar">
      <children xsi:type="menu:ToolBar" xmi:id="_N5k40PjgEea4UdV0IbBN0w" elementId="group.file" toBeRendered="false">
        <tags>toolbarSeparator</tags>
        <children xsi:type="menu:ToolBarSeparator" xmi:id="_N5k40fjgEea4UdV0IbBN0w" elementId="group.file" toBeRendered="false"/>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_N5lf4PjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.workbench.file">
        <tags>Draggable</tags>
        <children xsi:type="menu:HandledToolItem" xmi:id="_B4EZUPjhEea2OYmUbwhkUw" elementId="print" visible="false" iconURI="platform:/plugin/org.eclipse.ui/icons/full/etool16/print_edit.png" tooltip="Print" command="_NXbOHfjgEea4UdV0IbBN0w"/>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_N5mG8PjgEea4UdV0IbBN0w" elementId="additions" toBeRendered="false">
        <tags>toolbarSeparator</tags>
        <children xsi:type="menu:ToolBarSeparator" xmi:id="_N5mG8fjgEea4UdV0IbBN0w" elementId="additions" toBeRendered="false"/>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_OlrJ0PjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.launchActionSet">
        <tags>Draggable</tags>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_OmK5EPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.JavaElementCreationActionSet">
        <tags>Draggable</tags>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_Ol2I8PjgEea4UdV0IbBN0w" elementId="org.eclipse.search.searchActionSet">
        <tags>Draggable</tags>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_N5mG8vjgEea4UdV0IbBN0w" elementId="group.nav" toBeRendered="false">
        <tags>toolbarSeparator</tags>
        <children xsi:type="menu:ToolBarSeparator" xmi:id="_N5mG8_jgEea4UdV0IbBN0w" elementId="group.nav" toBeRendered="false"/>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_N5mG9PjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.workbench.navigate">
        <tags>Draggable</tags>
        <children xsi:type="menu:HandledToolItem" xmi:id="_B4G1kfjhEea2OYmUbwhkUw" elementId="org.eclipse.ui.window.pinEditor" visible="false" iconURI="platform:/plugin/org.eclipse.ui/icons/full/etool16/pin_editor.png" tooltip="Pin Editor" type="Check" command="_NXZZA_jgEea4UdV0IbBN0w"/>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_N5mG9fjgEea4UdV0IbBN0w" elementId="group.editor" toBeRendered="false">
        <tags>toolbarSeparator</tags>
        <children xsi:type="menu:ToolBarSeparator" xmi:id="_N5mG9vjgEea4UdV0IbBN0w" elementId="group.editor" toBeRendered="false"/>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_N5muAPjgEea4UdV0IbBN0w" elementId="group.help" toBeRendered="false">
        <tags>toolbarSeparator</tags>
        <children xsi:type="menu:ToolBarSeparator" xmi:id="_N5muAfjgEea4UdV0IbBN0w" elementId="group.help" toBeRendered="false"/>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_N5muAvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.workbench.help" visible="false">
        <tags>Draggable</tags>
      </children>
      <children xsi:type="menu:ToolControl" xmi:id="_OJXBQPjgEea4UdV0IbBN0w" elementId="PerspectiveSpacer" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.LayoutModifierToolControl">
        <tags>stretch</tags>
        <tags>SHOW_RESTORE_MENU</tags>
      </children>
      <children xsi:type="menu:ToolControl" xmi:id="_OJY2cPjgEea4UdV0IbBN0w" elementId="PerspectiveSwitcher" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.e4.ui.workbench.addons.perspectiveswitcher.PerspectiveSwitcher">
        <tags>Draggable</tags>
        <tags>HIDEABLE</tags>
        <tags>SHOW_RESTORE_MENU</tags>
      </children>
    </trimBars>
    <trimBars xmi:id="_OKcmYPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.trim.status" side="Bottom">
      <children xsi:type="menu:ToolControl" xmi:id="_OKiF8PjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.StatusLine" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.StandardTrim">
        <tags>stretch</tags>
      </children>
      <children xsi:type="menu:ToolControl" xmi:id="_OLERcPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.HeapStatus" toBeRendered="false" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.StandardTrim">
        <tags>Draggable</tags>
      </children>
      <children xsi:type="menu:ToolControl" xmi:id="_OLiykPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.ProgressBar" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.StandardTrim">
        <tags>Draggable</tags>
      </children>
    </trimBars>
    <trimBars xmi:id="_OMIBYPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.trim.vertical1" toBeRendered="false" side="Left">
      <children xsi:type="menu:ToolControl" xmi:id="_OzAbMPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.ide.perspectivestack(minimized)" toBeRendered="false" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.minmax.TrimStack">
        <tags>TrimStack</tags>
      </children>
    </trimBars>
    <trimBars xmi:id="_OMIocPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.trim.vertical2" side="Right"/>
  </children>
  <bindingTables xmi:id="_NV9OY_jgEea4UdV0IbBN0w" contributorURI="platform:/plugin/org.eclipse.platform" bindingContext="_NV9OZPjgEea4UdV0IbBN0w">
    <bindings xmi:id="_NYRilfjgEea4UdV0IbBN0w" keySequence="CTRL+A" command="_NXccWvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYSJo_jgEea4UdV0IbBN0w" keySequence="CTRL+SPACE" command="_NXam-fjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYSJpvjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+SPACE" command="_NXaADvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYSwt_jgEea4UdV0IbBN0w" keySequence="ALT+PAGE_UP" command="_NXdqXfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYT-2PjgEea4UdV0IbBN0w" keySequence="CTRL+C" command="_NXVud_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYUl5PjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+D" command="_NXccX_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYUl5vjgEea4UdV0IbBN0w" keySequence="ALT+PAGE_DOWN" command="_NXYxx_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYV0BPjgEea4UdV0IbBN0w" keySequence="SHIFT+INSERT" command="_NXWVofjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYXCKPjgEea4UdV0IbBN0w" keySequence="CTRL+F10" command="_NXW8uvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYXCKvjgEea4UdV0IbBN0w" keySequence="CTRL+X" command="_NXbOBPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYXpO_jgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+L" command="_NXccIPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYYQRvjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+F3" command="_NXbOLfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYY3WvjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+Z" command="_NXdDYvjgEea4UdV0IbBN0w">
      <tags>platform:gtk</tags>
    </bindings>
    <bindings xmi:id="_NYaFcfjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+I" command="_NXYx9fjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYaFePjgEea4UdV0IbBN0w" keySequence="CTRL+INSERT" command="_NXVud_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYash_jgEea4UdV0IbBN0w" keySequence="CTRL+Z" command="_NXanIPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYasiPjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+V" command="_NXccX_jgEea4UdV0IbBN0w">
      <tags>platform:gtk</tags>
    </bindings>
    <bindings xmi:id="_NYbTlfjgEea4UdV0IbBN0w" keySequence="CTRL+1" command="_NXZY-PjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdIwvjgEea4UdV0IbBN0w" keySequence="CTRL+V" command="_NXWVofjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdv4fjgEea4UdV0IbBN0w" keySequence="SHIFT+DEL" command="_NXbOBPjgEea4UdV0IbBN0w"/>
  </bindingTables>
  <bindingTables xmi:id="_NX9ZgPjgEea4UdV0IbBN0w" elementId="Ocaml.editor.context" bindingContext="_NXgGifjgEea4UdV0IbBN0w">
    <bindings xmi:id="_NYPtYPjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+C" command="_NXdDW_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYSJpPjgEea4UdV0IbBN0w" keySequence="CTRL+SPACE" command="_NXZY4vjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYTXyPjgEea4UdV0IbBN0w" keySequence="F7" command="_NXVHZfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYWbFfjgEea4UdV0IbBN0w" keySequence="SHIFT+TAB" command="_NXbOKvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYXCIvjgEea4UdV0IbBN0w" keySequence="F3" command="_NXYxyfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYXpNPjgEea4UdV0IbBN0w" keySequence="F6" command="_NXZY5vjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYY3VPjgEea4UdV0IbBN0w" keySequence="F2" command="_NXWVmfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYaFdfjgEea4UdV0IbBN0w" keySequence="ALT+CTRL+K" command="_NXZY_fjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYb6qfjgEea4UdV0IbBN0w" keySequence="SHIFT+F3" command="_NXW8m_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYchufjgEea4UdV0IbBN0w" keySequence="CTRL+O" command="_NXaABvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYchwvjgEea4UdV0IbBN0w" keySequence="F4" command="_NXYKyfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdIyvjgEea4UdV0IbBN0w" keySequence="TAB" command="_NXbOHvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYeW4PjgEea4UdV0IbBN0w" keySequence="ALT+CTRL+SHIFT+C" command="_NXXjxPjgEea4UdV0IbBN0w"/>
  </bindingTables>
  <bindingTables xmi:id="_NYPtYfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.javaEditorScope" bindingContext="_NXgtk_jgEea4UdV0IbBN0w">
    <bindings xmi:id="_NYPtYvjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+C" command="_NXVumPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYQ7gPjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+ARROW_RIGHT" command="_NXXjsvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYQ7gvjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+B" command="_NXdqXPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYQ7hvjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+ARROW_UP" command="_NXdqVPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYQ7h_jgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+ARROW_DOWN" command="_NXYK0fjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYSJqPjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+ARROW_UP" command="_NXdDQ_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYT-1PjgEea4UdV0IbBN0w" keySequence="CTRL+T" command="_NXWVh_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYT-1vjgEea4UdV0IbBN0w" keySequence="CTRL+/" command="_NXVumPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYVM-PjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+F" command="_NXccNPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYXpN_jgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+M" command="_NXZ_5PjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYZeZvjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+O" command="_NXanG_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYasgPjgEea4UdV0IbBN0w" keySequence="CTRL+I" command="_NXbOJfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYasjfjgEea4UdV0IbBN0w" keySequence="CTRL+7" command="_NXVumPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYbTmfjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+P" command="_NXYx6vjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYb6rPjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+/" command="_NXdDWfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYchuvjgEea4UdV0IbBN0w" keySequence="CTRL+O" command="_NXccXvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYchwPjgEea4UdV0IbBN0w" keySequence="CTRL+F3" command="_NXdDQvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdIy_jgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+U" command="_NXZZAfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdv1_jgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+\" command="_NXXjwPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYeW4_jgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+ARROW_DOWN" command="_NXccYPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYeW5_jgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+ARROW_LEFT" command="_NXb1IPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYeW6_jgEea4UdV0IbBN0w" keySequence="CTRL+2 L" command="_NXXjqPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYflBPjgEea4UdV0IbBN0w" keySequence="CTRL+2 M" command="_NXb1MPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYflCPjgEea4UdV0IbBN0w" keySequence="CTRL+2 F" command="_NXccZfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYflD_jgEea4UdV0IbBN0w" keySequence="CTRL+2 R" command="_NXZ__PjgEea4UdV0IbBN0w"/>
  </bindingTables>
  <bindingTables xmi:id="_NYQUcPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.propertiesEditorScope" bindingContext="_NXgtq_jgEea4UdV0IbBN0w">
    <bindings xmi:id="_NYQUcfjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+C" command="_NXVumPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYT-1_jgEea4UdV0IbBN0w" keySequence="CTRL+/" command="_NXVumPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYasjvjgEea4UdV0IbBN0w" keySequence="CTRL+7" command="_NXVumPjgEea4UdV0IbBN0w"/>
  </bindingTables>
  <bindingTables xmi:id="_NYQUcvjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.sse.ui.structuredTextEditorScope" bindingContext="_NXgtmfjgEea4UdV0IbBN0w">
    <bindings xmi:id="_NYQUc_jgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+C" command="_NXccLvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYQ7gfjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+ARROW_RIGHT" command="_NXXjr_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYQ7hfjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+ARROW_UP" command="_NXYx7_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYQ7ivjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+ARROW_DOWN" command="_NXZY0_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYRikfjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+A" command="_NXdqefjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYSwsfjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+ARROW_UP" command="_NXYx1vjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYVM-fjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+F" command="_NXdDZfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYXCJfjgEea4UdV0IbBN0w" keySequence="F3" command="_NXWVhfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYasgfjgEea4UdV0IbBN0w" keySequence="CTRL+I" command="_NXbOI_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYbTmvjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+P" command="_NXWVjPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYb6rfjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+/" command="_NXVukfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYchvvjgEea4UdV0IbBN0w" keySequence="CTRL+O" command="_NXWVrPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdv2PjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+\" command="_NXYKxPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdv2fjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+>" command="_NXanGvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYeW4vjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+ARROW_DOWN" command="_NXdDSvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYeW6PjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+ARROW_LEFT" command="_NXW8qfjgEea4UdV0IbBN0w"/>
  </bindingTables>
  <bindingTables xmi:id="_NYQUdPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.textEditorScope" bindingContext="_NXgGgvjgEea4UdV0IbBN0w">
    <bindings xmi:id="_NYQUdfjgEea4UdV0IbBN0w" keySequence="CTRL+ARROW_DOWN" command="_NXdqePjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYQUdvjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+ARROW_LEFT" command="_NXccOvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYRilPjgEea4UdV0IbBN0w" keySequence="CTRL+ARROW_UP" command="_NXYKz_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYRilvjgEea4UdV0IbBN0w" keySequence="ALT+CTRL+ARROW_UP" command="_NXdDQPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYSJofjgEea4UdV0IbBN0w" keySequence="ALT+ARROW_DOWN" command="_NXYx3_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYSJpfjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+DEL" command="_NXanAPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYSJp_jgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+A" command="_NXWVi_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYSwsvjgEea4UdV0IbBN0w" keySequence="ALT+CTRL+SPACE" command="_NXWVm_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYTXxPjgEea4UdV0IbBN0w" keySequence="CTRL+L" command="_NXanFvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYT-3fjgEea4UdV0IbBN0w" keySequence="CTRL+ARROW_LEFT" command="_NXVHdfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYUl4fjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+ARROW_RIGHT" command="_NXYx4vjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYUl5fjgEea4UdV0IbBN0w" keySequence="CTRL+ARROW_RIGHT" command="_NXZY1fjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYUl5_jgEea4UdV0IbBN0w" keySequence="CTRL+D" command="_NXXjtfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYV0APjgEea4UdV0IbBN0w" keySequence="SHIFT+HOME" command="_NXb1N_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYV0A_jgEea4UdV0IbBN0w" keySequence="ALT+CTRL+J" command="_NXZY7fjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYV0B_jgEea4UdV0IbBN0w" keySequence="CTRL+HOME" command="_NXWVn_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYWbEfjgEea4UdV0IbBN0w" keySequence="SHIFT+END" command="_NXccM_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYWbE_jgEea4UdV0IbBN0w" keySequence="CTRL+BS" command="_NXVHdPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYWbFPjgEea4UdV0IbBN0w" keySequence="CTRL+END" command="_NXYx5fjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYXCKfjgEea4UdV0IbBN0w" keySequence="CTRL+F10" command="_NXbOJPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYXpMfjgEea4UdV0IbBN0w" keySequence="F12" command="_NXVHafjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYXpM_jgEea4UdV0IbBN0w" keySequence="CTRL+NUMPAD_DIVIDE" command="_NXYK1PjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYYQQPjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+Q" command="_NXZY2vjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYYQRPjgEea4UdV0IbBN0w" keySequence="CTRL+NUMPAD_MULTIPLY" command="_NXZY2PjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYYQRfjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+Y" command="_NXccIfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYYQR_jgEea4UdV0IbBN0w" keySequence="CTRL+NUMPAD_SUBTRACT" command="_NXbOKfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYY3UfjgEea4UdV0IbBN0w" keySequence="END" command="_NXb1K_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYY3U_jgEea4UdV0IbBN0w" keySequence="F2" command="_NXZ_4_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYZeYfjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+NUMPAD_DIVIDE" command="_NXW8rfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYZeaPjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+CR" command="_NXbOK_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYaFcPjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+INSERT" command="_NXYx1_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYaFc_jgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+J" command="_NXYx8fjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYaFd_jgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+NUMPAD_MULTIPLY" command="_NXZY6vjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYb6pPjgEea4UdV0IbBN0w" keySequence="INSERT" command="_NXW8qvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYb6r_jgEea4UdV0IbBN0w" keySequence="CTRL+K" command="_NXYK5PjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYchtvjgEea4UdV0IbBN0w" keySequence="HOME" command="_NXccN_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYchuPjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+K" command="_NXYKxfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYchwfjgEea4UdV0IbBN0w" keySequence="SHIFT+CR" command="_NXccNvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdIwfjgEea4UdV0IbBN0w" keySequence="CTRL+NUMPAD_ADD" command="_NXccYvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdIyfjgEea4UdV0IbBN0w" keySequence="CTRL+J" command="_NXXjpPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdv0vjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+X" command="_NXVuhPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdv0_jgEea4UdV0IbBN0w" keySequence="ALT+/" command="_NXccPvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdv3PjgEea4UdV0IbBN0w" keySequence="CTRL+DEL" command="_NXanGPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdv3fjgEea4UdV0IbBN0w" keySequence="ALT+ARROW_UP" command="_NXdqVvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYeW6fjgEea4UdV0IbBN0w" keySequence="ALT+CTRL+ARROW_DOWN" command="_NXdDM_jgEea4UdV0IbBN0w"/>
  </bindingTables>
  <bindingTables xmi:id="_NYQUd_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.contexts.window" bindingContext="_NV9OZfjgEea4UdV0IbBN0w">
    <bindings xmi:id="_NYQUePjgEea4UdV0IbBN0w" keySequence="ALT+ARROW_RIGHT" command="_NXbOLPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYQUefjgEea4UdV0IbBN0w" keySequence="CTRL+B" command="_NXWVrfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYQUevjgEea4UdV0IbBN0w" keySequence="ALT+CTRL+SHIFT+ARROW_RIGHT" command="_NXW8qPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYRikvjgEea4UdV0IbBN0w" keySequence="ALT+CTRL+SHIFT+ARROW_UP" command="_NXXjp_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYRik_jgEea4UdV0IbBN0w" keySequence="ALT+ARROW_LEFT" command="_NXXjofjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYSJoPjgEea4UdV0IbBN0w" keySequence="CTRL+&#xc0;" command="_NXdqQPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYSws_jgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+D T" command="_NXVufvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYSwtPjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+D Q" command="_NXdDRPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYSwtfjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+D J" command="_NXZY9PjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYSwtvjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+D A" command="_NXanGfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYSwuPjgEea4UdV0IbBN0w" keySequence="CTRL+S" command="_NXccJvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYTXwPjgEea4UdV0IbBN0w" keySequence="CTRL+&#xd9;" command="_NXXju_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYTXwfjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+W" command="_NXdDP_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYTXwvjgEea4UdV0IbBN0w" keySequence="ALT+-" command="_NXVukvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYTXw_jgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+L" command="_NXZY8vjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYTXxfjgEea4UdV0IbBN0w" keySequence="CTRL+F2" command="_NXdDY_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYT-0fjgEea4UdV0IbBN0w" keySequence="CTRL+3" command="_NXZ_4vjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYT-1fjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+M" command="_NXccZvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYUl4PjgEea4UdV0IbBN0w" keySequence="CTRL+#" command="_NXW8vPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYUl6vjgEea4UdV0IbBN0w" keySequence="CTRL+F" command="_NXXj0fjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYVM8PjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+E" command="_NXYxxfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYVM8fjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+F" command="_NXb1G_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYVM8vjgEea4UdV0IbBN0w" keySequence="CTRL+E" command="_NXanFfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYVM9fjgEea4UdV0IbBN0w" keySequence="CTRL+G" command="_NXVHdvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYV0AfjgEea4UdV0IbBN0w" keySequence="ALT+CTRL+G" command="_NXYKwPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYV0AvjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+H" command="_NXanBfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYV0BvjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+G" command="_NXdDZPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYWbEPjgEea4UdV0IbBN0w" keySequence="CTRL+&#xc7;" command="_NXZ_6vjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYWbEvjgEea4UdV0IbBN0w" keySequence="CTRL+H" command="_NXam-PjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYWbFvjgEea4UdV0IbBN0w" keySequence="ALT+CTRL+H" command="_NXW8r_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYWbF_jgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+H" command="_NXVHbfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYWbGPjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+I" command="_NXW8vfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYXCJPjgEea4UdV0IbBN0w" keySequence="F3" command="_NXZY8PjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYXCJvjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+F6" command="_NXXjzvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYXCJ_jgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+F7" command="_NXccVfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYXpMPjgEea4UdV0IbBN0w" keySequence="F12" command="_NXam-_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYXpMvjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+T" command="_NXWVj_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYXpOfjgEea4UdV0IbBN0w" keySequence="CTRL+*" command="_NXaACPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYXpOvjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+N" command="_NXVulfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYXpPPjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+P" command="_NXYKyPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYYQQfjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+W" command="_NXbOAvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYYQQvjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+F4" command="_NXbOAvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYYQQ_jgEea4UdV0IbBN0w" keySequence="CTRL+," command="_NXWVp_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYY3UPjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+N" command="_NXanJvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYY3UvjgEea4UdV0IbBN0w" keySequence="F2" command="_NXWVqvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYY3VfjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+O" command="_NXccWfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYY3WPjgEea4UdV0IbBN0w" keySequence="CTRL+F7" command="_NXVuePjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYY3WfjgEea4UdV0IbBN0w" keySequence="CTRL+F4" command="_NXdqS_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYZeYPjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+NUMPAD_DIVIDE" command="_NXaAFPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYZeYvjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+F12" command="_NXVulPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYZeY_jgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+R" command="_NXdqffjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYZeafjgEea4UdV0IbBN0w" keySequence="ALT+CTRL+SHIFT+F12" command="_NXccaPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYaFcvjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+J" command="_NXanDfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYaFdPjgEea4UdV0IbBN0w" keySequence="CTRL+)" command="_NXccXPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYaFdvjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+NUMPAD_MULTIPLY" command="_NXXjuvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYasg_jgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+R" command="_NXdDavjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYashvjgEea4UdV0IbBN0w" keySequence="ALT+F7" command="_NXWVovjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYasifjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+F7" command="_NXYx6fjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYasivjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+F9" command="_NXccT_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYasi_jgEea4UdV0IbBN0w" keySequence="CTRL+F11" command="_NXb1MvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYasj_jgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+T" command="_NXbOA_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYaskPjgEea4UdV0IbBN0w" keySequence="CTRL+F9" command="_NXYx0PjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYbTkPjgEea4UdV0IbBN0w" keySequence="CTRL+M" command="_NXam8fjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYbTkvjgEea4UdV0IbBN0w" keySequence="ALT+CR" command="_NXZ_9_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYb6oPjgEea4UdV0IbBN0w" keySequence="CTRL+{" command="_NXaAEvjgEea4UdV0IbBN0w">
      <parameters xmi:id="_NYb6ofjgEea4UdV0IbBN0w" elementId="Splitter.isHorizontal" name="Splitter.isHorizontal" value="false"/>
    </bindings>
    <bindings xmi:id="_NYb6ovjgEea4UdV0IbBN0w" keySequence="ALT+CTRL+U" command="_NXYx0_jgEea4UdV0IbBN0w">
      <tags>platform:gtk</tags>
    </bindings>
    <bindings xmi:id="_NYb6o_jgEea4UdV0IbBN0w" keySequence="F11" command="_NXccUfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYb6pvjgEea4UdV0IbBN0w" keySequence="CTRL+-" command="_NXccJ_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYb6p_jgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+Z" command="_NXVHZPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYb6qPjgEea4UdV0IbBN0w" keySequence="CTRL+F12" command="_NXYKzfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYb6qvjgEea4UdV0IbBN0w" keySequence="CTRL+N" command="_NXdqQvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYb6rvjgEea4UdV0IbBN0w" keySequence="SHIFT+F5" command="_NXdDOvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYb6sPjgEea4UdV0IbBN0w" keySequence="ALT+CTRL+P" command="_NXYKtvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYchsPjgEea4UdV0IbBN0w" keySequence="F5" command="_NXb1LPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYchtPjgEea4UdV0IbBN0w" keySequence="CTRL+F6" command="_NXYKt_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYchtfjgEea4UdV0IbBN0w" keySequence="DEL" command="_NXYKvfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYcht_jgEea4UdV0IbBN0w" keySequence="CTRL+P" command="_NXbOHfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYchv_jgEea4UdV0IbBN0w" keySequence="CTRL+Q" command="_NXb1FvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYchw_jgEea4UdV0IbBN0w" keySequence="F4" command="_NXW8nfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdIwPjgEea4UdV0IbBN0w" keySequence="CTRL+F8" command="_NXZY-vjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdIxfjgEea4UdV0IbBN0w" keySequence="CTRL+W" command="_NXdqS_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdIx_jgEea4UdV0IbBN0w" keySequence="ALT+F5" command="_NXccUvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdIyPjgEea4UdV0IbBN0w" keySequence="CTRL+." command="_NXdDRfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdIz_jgEea4UdV0IbBN0w" keySequence="SHIFT+F2" command="_NXXjrfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdI0PjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+V" command="_NXccPPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdI0fjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+S" command="_NXdqdfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdv1PjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+S" command="_NXXjv_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdv1fjgEea4UdV0IbBN0w" keySequence="CTRL+U" command="_NXdDWPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdv1vjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+F8" command="_NXaAEfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdv2vjgEea4UdV0IbBN0w" keySequence="CTRL+_" command="_NXaAEvjgEea4UdV0IbBN0w">
      <parameters xmi:id="_NYdv2_jgEea4UdV0IbBN0w" elementId="Splitter.isHorizontal" name="Splitter.isHorizontal" value="true"/>
    </bindings>
    <bindings xmi:id="_NYdv3_jgEea4UdV0IbBN0w" keySequence="CTRL+=" command="_NXb1FfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdv4PjgEea4UdV0IbBN0w" keySequence="CTRL+=" command="_NXZ_8PjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdv4vjgEea4UdV0IbBN0w" keySequence="ALT+CTRL+SHIFT+ARROW_DOWN" command="_NXdqUfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYeW4fjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+B" command="_NXYKxvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYeW5PjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+C" command="_NXanAfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYeW6vjgEea4UdV0IbBN0w" keySequence="ALT+CTRL+B" command="_NXYK4vjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYeW7PjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+X M" command="_NXccZ_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYeW7fjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+Q Y" command="_NXYK2PjgEea4UdV0IbBN0w">
      <parameters xmi:id="_NYeW7vjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.team.sync.views.SynchronizeView"/>
    </bindings>
    <bindings xmi:id="_NYeW7_jgEea4UdV0IbBN0w" keySequence="CTRL+W R" command="_NXccP_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYeW8PjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+Q S" command="_NXYK2PjgEea4UdV0IbBN0w">
      <parameters xmi:id="_NYeW8fjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.search.ui.views.SearchView"/>
    </bindings>
    <bindings xmi:id="_NYeW8vjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+Q C" command="_NXYK2PjgEea4UdV0IbBN0w">
      <parameters xmi:id="_NYeW8_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.ui.console.ConsoleView"/>
    </bindings>
    <bindings xmi:id="_NYe98PjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+Q O" command="_NXYK2PjgEea4UdV0IbBN0w">
      <parameters xmi:id="_NYe98fjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.ui.views.ContentOutline"/>
    </bindings>
    <bindings xmi:id="_NYe98vjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+Q Q" command="_NXYK2PjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYe98_jgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+Q X" command="_NXYK2PjgEea4UdV0IbBN0w">
      <parameters xmi:id="_NYe99PjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.ui.views.ProblemView"/>
    </bindings>
    <bindings xmi:id="_NYe99fjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+X Q" command="_NXYx8_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYe99vjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+Q H" command="_NXYK2PjgEea4UdV0IbBN0w">
      <parameters xmi:id="_NYe99_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.ui.cheatsheets.views.CheatSheetView"/>
    </bindings>
    <bindings xmi:id="_NYe9-PjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+X J" command="_NXYxz_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYe9-fjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+Q J" command="_NXYK2PjgEea4UdV0IbBN0w">
      <parameters xmi:id="_NYe9-vjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.jdt.ui.JavadocView"/>
    </bindings>
    <bindings xmi:id="_NYe9-_jgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+Q V" command="_NXYK2PjgEea4UdV0IbBN0w">
      <parameters xmi:id="_NYe9_PjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.debug.ui.VariableView"/>
    </bindings>
    <bindings xmi:id="_NYe9_fjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+Q D" command="_NXYK2PjgEea4UdV0IbBN0w">
      <parameters xmi:id="_NYe9_vjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.jdt.ui.SourceView"/>
    </bindings>
    <bindings xmi:id="_NYe9__jgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+X T" command="_NXccV_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYe-APjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+Q B" command="_NXYK2PjgEea4UdV0IbBN0w">
      <parameters xmi:id="_NYe-AfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.debug.ui.BreakpointView"/>
    </bindings>
    <bindings xmi:id="_NYflAPjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+Q P" command="_NXYK2PjgEea4UdV0IbBN0w">
      <parameters xmi:id="_NYflAfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.jdt.ui.PackageExplorer"/>
    </bindings>
    <bindings xmi:id="_NYflAvjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+Q Z" command="_NXYK2PjgEea4UdV0IbBN0w">
      <parameters xmi:id="_NYflA_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.team.ui.GenericHistoryView"/>
    </bindings>
    <bindings xmi:id="_NYflBfjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+Q L" command="_NXYK2PjgEea4UdV0IbBN0w">
      <parameters xmi:id="_NYflBvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.pde.runtime.LogView"/>
    </bindings>
    <bindings xmi:id="_NYflB_jgEea4UdV0IbBN0w" keySequence="ALT+CTRL+X G" command="_NXccSfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYflCfjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+Q T" command="_NXYK2PjgEea4UdV0IbBN0w">
      <parameters xmi:id="_NYflCvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.jdt.ui.TypeHierarchy"/>
    </bindings>
    <bindings xmi:id="_NYflC_jgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+X A" command="_NXWVpfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYflDPjgEea4UdV0IbBN0w" keySequence="CTRL+W B" command="_NXbOLvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYflDfjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+Q K" command="_NXYK2PjgEea4UdV0IbBN0w">
      <parameters xmi:id="_NYflDvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.mylyn.tasks.ui.views.tasks"/>
    </bindings>
  </bindingTables>
  <bindingTables xmi:id="_NYQ7g_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.breadcrumbEditorScope" bindingContext="_NXgtkvjgEea4UdV0IbBN0w">
    <bindings xmi:id="_NYQ7hPjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+B" command="_NXdqXPjgEea4UdV0IbBN0w"/>
  </bindingTables>
  <bindingTables xmi:id="_NYQ7iPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.views.tasks" bindingContext="_NXgtlfjgEea4UdV0IbBN0w">
    <bindings xmi:id="_NYQ7ifjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+ARROW_DOWN" command="_NXccMPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYSJovjgEea4UdV0IbBN0w" keySequence="ALT+ARROW_DOWN" command="_NXanDPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYSwsPjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+ARROW_UP" command="_NXaABfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYV0BfjgEea4UdV0IbBN0w" keySequence="SHIFT+INSERT" command="_NXYKu_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYWbGfjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+I" command="_NXccJfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYashPjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+R" command="_NXccNfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYbTm_jgEea4UdV0IbBN0w" keySequence="CTRL+CR" command="_NXanA_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYb6pfjgEea4UdV0IbBN0w" keySequence="INSERT" command="_NXb1R_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYchxPjgEea4UdV0IbBN0w" keySequence="F4" command="_NXW8ufjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdIzPjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+U" command="_NXYx-PjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdv3vjgEea4UdV0IbBN0w" keySequence="ALT+ARROW_UP" command="_NXYK0_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYeW5fjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+C" command="_NXdqdPjgEea4UdV0IbBN0w"/>
  </bindingTables>
  <bindingTables xmi:id="_NYQ7i_jgEea4UdV0IbBN0w" elementId="org.eclipse.wb.core.java.editorScope" bindingContext="_NXgGg_jgEea4UdV0IbBN0w">
    <bindings xmi:id="_NYRikPjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+A" command="_NXdDPvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYRil_jgEea4UdV0IbBN0w" keySequence="ALT+CTRL+A" command="_NXdDPvjgEea4UdV0IbBN0w"/>
  </bindingTables>
  <bindingTables xmi:id="_NYTXxvjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.debugging" bindingContext="_NXgGjPjgEea4UdV0IbBN0w">
    <bindings xmi:id="_NYTXx_jgEea4UdV0IbBN0w" keySequence="CTRL+F2" command="_NXanB_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYT-0PjgEea4UdV0IbBN0w" keySequence="F7" command="_NXdDUvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYXpNfjgEea4UdV0IbBN0w" keySequence="F6" command="_NXccQ_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYXpNvjgEea4UdV0IbBN0w" keySequence="CTRL+R" command="_NXVuffjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYbTkfjgEea4UdV0IbBN0w" keySequence="CTRL+F5" command="_NXccR_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYchs_jgEea4UdV0IbBN0w" keySequence="F5" command="_NXW8pvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdIxPjgEea4UdV0IbBN0w" keySequence="F8" command="_NXW8o_jgEea4UdV0IbBN0w"/>
  </bindingTables>
  <bindingTables xmi:id="_NYT-0vjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.memoryview" bindingContext="_NXgGivjgEea4UdV0IbBN0w">
    <bindings xmi:id="_NYT-0_jgEea4UdV0IbBN0w" keySequence="CTRL+T" command="_NXZ_6_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYZeZ_jgEea4UdV0IbBN0w" keySequence="ALT+CTRL+N" command="_NXccafjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYaskfjgEea4UdV0IbBN0w" keySequence="ALT+CTRL+M" command="_NXccVvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYb6q_jgEea4UdV0IbBN0w" keySequence="CTRL+N" command="_NXYKtfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdIxvjgEea4UdV0IbBN0w" keySequence="CTRL+W" command="_NXW8t_jgEea4UdV0IbBN0w"/>
  </bindingTables>
  <bindingTables xmi:id="_NYT-2fjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesView" bindingContext="_NXgtrPjgEea4UdV0IbBN0w">
    <bindings xmi:id="_NYT-2vjgEea4UdV0IbBN0w" keySequence="CTRL+C" command="_NXZ_8vjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdIw_jgEea4UdV0IbBN0w" keySequence="CTRL+V" command="_NXVugvjgEea4UdV0IbBN0w"/>
  </bindingTables>
  <bindingTables xmi:id="_NYT-2_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.ReflogView" bindingContext="_NXgtkfjgEea4UdV0IbBN0w">
    <bindings xmi:id="_NYT-3PjgEea4UdV0IbBN0w" keySequence="CTRL+C" command="_NXYKuvjgEea4UdV0IbBN0w"/>
  </bindingTables>
  <bindingTables xmi:id="_NYUl4vjgEea4UdV0IbBN0w" elementId="org.eclipse.core.runtime.xml" bindingContext="_NXgtnfjgEea4UdV0IbBN0w">
    <bindings xmi:id="_NYUl4_jgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+D" command="_NXdDV_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYbTmPjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+P" command="_NXam_fjgEea4UdV0IbBN0w"/>
  </bindingTables>
  <bindingTables xmi:id="_NYUl6PjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.console" bindingContext="_NXgGhfjgEea4UdV0IbBN0w">
    <bindings xmi:id="_NYUl6fjgEea4UdV0IbBN0w" keySequence="CTRL+D" command="_NXdDPPjgEea4UdV0IbBN0w"/>
  </bindingTables>
  <bindingTables xmi:id="_NYVM8_jgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.memory.abstractasynctablerendering" bindingContext="_NXgtkPjgEea4UdV0IbBN0w">
    <bindings xmi:id="_NYVM9PjgEea4UdV0IbBN0w" keySequence="CTRL+G" command="_NXam8PjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYZeZPjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+." command="_NXaAFvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYasjPjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+," command="_NXb1GvjgEea4UdV0IbBN0w"/>
  </bindingTables>
  <bindingTables xmi:id="_NYVM9vjgEea4UdV0IbBN0w" elementId="org.eclipse.ant.ui.AntEditorScope" bindingContext="_NXgtpfjgEea4UdV0IbBN0w">
    <bindings xmi:id="_NYVM9_jgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+F" command="_NXccNPjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYXCI_jgEea4UdV0IbBN0w" keySequence="F3" command="_NXVugfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYZeZfjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+O" command="_NXVue_jgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYasgvjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+R" command="_NXW8mvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdIzvjgEea4UdV0IbBN0w" keySequence="SHIFT+F2" command="_NXW8kvjgEea4UdV0IbBN0w"/>
  </bindingTables>
  <bindingTables xmi:id="_NYXCIPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.editors.task" bindingContext="_NXgtlvjgEea4UdV0IbBN0w">
    <bindings xmi:id="_NYXCIfjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+I" command="_NXccJfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYXpOPjgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+M" command="_NXWVgvjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYashfjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+R" command="_NXccNfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYchu_jgEea4UdV0IbBN0w" keySequence="CTRL+O" command="_NXdDNfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdIzfjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+U" command="_NXYx-PjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYdI0vjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+S" command="_NXbODfjgEea4UdV0IbBN0w"/>
    <bindings xmi:id="_NYeW5vjgEea4UdV0IbBN0w" keySequence="ALT+SHIFT+C" command="_NXdqdPjgEea4UdV0IbBN0w"/>
  </bindingTables>
  <bindingTables xmi:id="_NYY3VvjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.wikitext.tasks.ui.markupSourceContext" bindingContext="_NXgtpvjgEea4UdV0IbBN0w">
    <bindings xmi:id="_NYY3V_jgEea4UdV0IbBN0w" keySequence="CTRL+SHIFT+O" command="_NXWVlfjgEea4UdV0IbBN0w"/>
  </bindingTables>
  <bindingTables xmi:id="_NYbTk_jgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.BreakpointView" bindingContext="_NXgGgfjgEea4UdV0IbBN0w">
    <bindings xmi:id="_NYbTlPjgEea4UdV0IbBN0w" keySequence="ALT+CR" command="_NXVHa_jgEea4UdV0IbBN0w"/>
  </bindingTables>
  <bindingTables xmi:id="_NYbTlvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.classFileEditorScope" bindingContext="_NXgGi_jgEea4UdV0IbBN0w">
    <bindings xmi:id="_NYbTl_jgEea4UdV0IbBN0w" keySequence="CTRL+1" command="_NXdDXPjgEea4UdV0IbBN0w"/>
  </bindingTables>
  <bindingTables xmi:id="_NYchsfjgEea4UdV0IbBN0w" elementId="org.eclipse.buildship.ui.contexts.taskview" bindingContext="_NXgtofjgEea4UdV0IbBN0w">
    <bindings xmi:id="_NYchsvjgEea4UdV0IbBN0w" keySequence="F5" command="_NXccLfjgEea4UdV0IbBN0w"/>
  </bindingTables>
  <bindingTables xmi:id="_NYchvPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.wikitext.ui.editor.markupSourceContext" bindingContext="_NXgtmPjgEea4UdV0IbBN0w">
    <bindings xmi:id="_NYchvfjgEea4UdV0IbBN0w" keySequence="CTRL+O" command="_NXWVlfjgEea4UdV0IbBN0w"/>
  </bindingTables>
  <bindingTables xmi:id="_NYdv0PjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.internal.wikitext.ui.editor.basicMarkupSourceContext" bindingContext="_NXgtl_jgEea4UdV0IbBN0w">
    <bindings xmi:id="_NYdv0fjgEea4UdV0IbBN0w" keySequence="F1" command="_NXVuf_jgEea4UdV0IbBN0w"/>
  </bindingTables>
  <bindingTables xmi:id="_OXrxIfjgEea4UdV0IbBN0w" bindingContext="_OXrxIPjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXsYMfjgEea4UdV0IbBN0w" bindingContext="_OXsYMPjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXsYM_jgEea4UdV0IbBN0w" bindingContext="_OXsYMvjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXsYNfjgEea4UdV0IbBN0w" bindingContext="_OXsYNPjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXsYN_jgEea4UdV0IbBN0w" bindingContext="_OXsYNvjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXsYOfjgEea4UdV0IbBN0w" bindingContext="_OXsYOPjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXsYO_jgEea4UdV0IbBN0w" bindingContext="_OXsYOvjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXs_QfjgEea4UdV0IbBN0w" bindingContext="_OXs_QPjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXs_Q_jgEea4UdV0IbBN0w" bindingContext="_OXs_QvjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXs_RfjgEea4UdV0IbBN0w" bindingContext="_OXs_RPjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXs_R_jgEea4UdV0IbBN0w" bindingContext="_OXs_RvjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXs_SfjgEea4UdV0IbBN0w" bindingContext="_OXs_SPjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXs_S_jgEea4UdV0IbBN0w" bindingContext="_OXs_SvjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXtmUfjgEea4UdV0IbBN0w" bindingContext="_OXtmUPjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXtmU_jgEea4UdV0IbBN0w" bindingContext="_OXtmUvjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXtmVfjgEea4UdV0IbBN0w" bindingContext="_OXtmVPjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXtmV_jgEea4UdV0IbBN0w" bindingContext="_OXtmVvjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXtmWfjgEea4UdV0IbBN0w" bindingContext="_OXtmWPjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXtmW_jgEea4UdV0IbBN0w" bindingContext="_OXtmWvjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXtmXfjgEea4UdV0IbBN0w" bindingContext="_OXtmXPjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXuNYfjgEea4UdV0IbBN0w" bindingContext="_OXuNYPjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXuNY_jgEea4UdV0IbBN0w" bindingContext="_OXuNYvjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXuNZfjgEea4UdV0IbBN0w" bindingContext="_OXuNZPjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXuNZ_jgEea4UdV0IbBN0w" bindingContext="_OXuNZvjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXuNafjgEea4UdV0IbBN0w" bindingContext="_OXuNaPjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXuNa_jgEea4UdV0IbBN0w" bindingContext="_OXuNavjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXuNbfjgEea4UdV0IbBN0w" bindingContext="_OXuNbPjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXu0cfjgEea4UdV0IbBN0w" bindingContext="_OXu0cPjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXu0c_jgEea4UdV0IbBN0w" bindingContext="_OXu0cvjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXu0dfjgEea4UdV0IbBN0w" bindingContext="_OXu0dPjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXu0d_jgEea4UdV0IbBN0w" bindingContext="_OXu0dvjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXu0efjgEea4UdV0IbBN0w" bindingContext="_OXu0ePjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXu0e_jgEea4UdV0IbBN0w" bindingContext="_OXu0evjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXu0ffjgEea4UdV0IbBN0w" bindingContext="_OXu0fPjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXvbgfjgEea4UdV0IbBN0w" bindingContext="_OXvbgPjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXvbg_jgEea4UdV0IbBN0w" bindingContext="_OXvbgvjgEea4UdV0IbBN0w"/>
  <bindingTables xmi:id="_OXvbhfjgEea4UdV0IbBN0w" bindingContext="_OXvbhPjgEea4UdV0IbBN0w"/>
  <rootContext xmi:id="_NV9OZPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.contexts.dialogAndWindow" contributorURI="platform:/plugin/org.eclipse.platform" name="In Dialogs and Windows" description="Either a dialog or a window is open">
    <children xmi:id="_NV9OZfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.contexts.window" contributorURI="platform:/plugin/org.eclipse.platform" name="In Windows" description="A window is open">
      <children xmi:id="_NV9OZvjgEea4UdV0IbBN0w" elementId="org.eclipse.e4.ui.contexts.views" contributorURI="platform:/plugin/org.eclipse.platform" name="%bindingcontext.name.bindingView"/>
      <children xmi:id="_NXgGgfjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.BreakpointView" name="In Breakpoints View" description="The breakpoints view context"/>
      <children xmi:id="_NXgGgvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.textEditorScope" name="Editing Text" description="Editing Text Context">
        <children xmi:id="_NXgGg_jgEea4UdV0IbBN0w" elementId="org.eclipse.wb.core.java.editorScope" name="WindowBuilder Java scope"/>
        <children xmi:id="_NXgGifjgEea4UdV0IbBN0w" elementId="Ocaml.editor.context" name="Editing Ocaml Source" description="Context for editing Ocaml source"/>
        <children xmi:id="_NXgGi_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.classFileEditorScope" name="Browsing attached Java Source" description="Browsing attached Java Source Context"/>
        <children xmi:id="_NXgtk_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.javaEditorScope" name="Editing Java Source" description="Editing Java Source Context"/>
        <children xmi:id="_NXgtlPjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.xsd.ui.text.editor.context" name="Editing XSD context"/>
        <children xmi:id="_NXgtlvjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.editors.task" name="In Tasks Editor"/>
        <children xmi:id="_NXgtl_jgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.internal.wikitext.ui.editor.basicMarkupSourceContext" name="WikiText Markup Source Context" description="WikiText markup editing context">
          <children xmi:id="_NXgtmPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.wikitext.ui.editor.markupSourceContext" name="WikiText Markup Source Context" description="WikiText markup editing context"/>
          <children xmi:id="_NXgtpvjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.wikitext.tasks.ui.markupSourceContext" name="Task Markup Editor Source Context"/>
        </children>
        <children xmi:id="_NXgtmfjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.sse.ui.structuredTextEditorScope" name="Editing in Structured Text Editors" description="Editing in Structured Text Editors">
          <children xmi:id="_NXgtmvjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.xml.navigation" name="XML Source Navigation" description="XML Source Navigation"/>
          <children xmi:id="_NXgtm_jgEea4UdV0IbBN0w" elementId="org.eclipse.wst.xml.cleanup" name="XML Source Cleanup" description="XML Source Cleanup"/>
          <children xmi:id="_NXgtnPjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.sse.comments" name="Source Comments in Structured Text Editors" description="Source Comments in Structured Text Editors"/>
          <children xmi:id="_NXgtnfjgEea4UdV0IbBN0w" elementId="org.eclipse.core.runtime.xml" name="Editing XML Source" description="Editing XML Source"/>
          <children xmi:id="_NXgtnvjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.xml.occurrences" name="XML Source Occurrences" description="XML Source Occurrences"/>
          <children xmi:id="_NXgtn_jgEea4UdV0IbBN0w" elementId="org.eclipse.wst.xml.grammar" name="XML Source Grammar" description="XML Source Grammar"/>
          <children xmi:id="_NXgtoPjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.xml.comments" name="XML Source Comments" description="XML Source Comments"/>
          <children xmi:id="_NXgto_jgEea4UdV0IbBN0w" elementId="org.eclipse.wst.xml.expand" name="XML Source Expand/Collapse" description="XML Source Expand/Collapse"/>
          <children xmi:id="_NXgtp_jgEea4UdV0IbBN0w" elementId="org.eclipse.wst.sse.hideFormat" name="Editing in Structured Text Editors" description="Editing in Structured Text Editors"/>
          <children xmi:id="_NXgtqPjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.xml.selection" name="XML Source Selection" description="XML Source Selection"/>
          <children xmi:id="_NXgtqfjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.xml.dependencies" name="XML Source Dependencies" description="XML Source Dependencies"/>
        </children>
        <children xmi:id="_NXgtpfjgEea4UdV0IbBN0w" elementId="org.eclipse.ant.ui.AntEditorScope" name="Editing Ant Buildfiles" description="Editing Ant Buildfiles Context"/>
        <children xmi:id="_NXgtq_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.propertiesEditorScope" name="Editing Properties Files" description="Editing Properties Files Context"/>
      </children>
      <children xmi:id="_NXgGhfjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.console" name="In I/O Console" description="In I/O console"/>
      <children xmi:id="_NXgGhvjgEea4UdV0IbBN0w" elementId="org.eclipse.compare.compareEditorScope" name="Comparing in an Editor" description="Comparing in an Editor"/>
      <children xmi:id="_NXgGiPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.console.ConsoleView" name="In Console View" description="In Console View"/>
      <children xmi:id="_NXgGivjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.memoryview" name="In Memory View" description="In memory view"/>
      <children xmi:id="_NXgGjPjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.debugging" name="Debugging" description="Debugging programs">
        <children xmi:id="_NXgtkPjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.memory.abstractasynctablerendering" name="In Table Memory Rendering" description="In Table Memory Rendering"/>
        <children xmi:id="_NXgtqvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.debug.ui.debugging" name="Debugging Java" description="Debugging Java programs"/>
      </children>
      <children xmi:id="_NXgtkfjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.ReflogView" name="In Git Reflog View"/>
      <children xmi:id="_NXgtlfjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.views.tasks" name="In Tasks View"/>
      <children xmi:id="_NXgtofjgEea4UdV0IbBN0w" elementId="org.eclipse.buildship.ui.contexts.taskview" name="In Gradle Tasks View" description="This context is activated when the Gradle Tasks view is in focus"/>
      <children xmi:id="_NXgtpPjgEea4UdV0IbBN0w" elementId="org.eclipse.buildship.ui.contexts.gradlenature" name="Context for selected IProjects with Gradle nature" description="This context is activated when the selection contains an IProject with the Gradle nature"/>
      <children xmi:id="_NXgtrPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesView" name="In Git Repositories View"/>
    </children>
    <children xmi:id="_NV9OZ_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.contexts.dialog" contributorURI="platform:/plugin/org.eclipse.platform" name="In Dialogs" description="A dialog is open"/>
  </rootContext>
  <rootContext xmi:id="_NXgGgPjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.xsd.ui.editor.designView" name="XSD Editor Design View" description="XSD Editor Design View"/>
  <rootContext xmi:id="_NXgGhPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.contexts.actionSet" name="Action Set" description="Parent context for action sets"/>
  <rootContext xmi:id="_NXgGh_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.contexts.workbenchMenu" name="Workbench Menu" description="When no Workbench windows are active"/>
  <rootContext xmi:id="_NXgtkvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.breadcrumbEditorScope" name="Editor Breadcrumb Navigation" description="Editor Breadcrumb Navigation Context"/>
  <rootContext xmi:id="_NXgtovjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.xsd.ui.editor.sourceView" name="XSD Editor Source View" description="XSD Editor Source View"/>
  <rootContext xmi:id="_OXrxIPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.junit.JUnitActionSet" name="Auto::org.eclipse.jdt.junit.JUnitActionSet"/>
  <rootContext xmi:id="_OXsYMPjgEea4UdV0IbBN0w" elementId="org.eclipse.search.searchActionSet" name="Auto::org.eclipse.search.searchActionSet"/>
  <rootContext xmi:id="_OXsYMvjgEea4UdV0IbBN0w" elementId="org.eclipse.team.ui.actionSet" name="Auto::org.eclipse.team.ui.actionSet"/>
  <rootContext xmi:id="_OXsYNPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.actionSet.annotationNavigation" name="Auto::org.eclipse.ui.edit.text.actionSet.annotationNavigation"/>
  <rootContext xmi:id="_OXsYNvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.actionSet.navigation" name="Auto::org.eclipse.ui.edit.text.actionSet.navigation"/>
  <rootContext xmi:id="_OXsYOPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.actionSet.convertLineDelimitersTo" name="Auto::org.eclipse.ui.edit.text.actionSet.convertLineDelimitersTo"/>
  <rootContext xmi:id="_OXsYOvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.externaltools.ExternalToolsSet" name="Auto::org.eclipse.ui.externaltools.ExternalToolsSet"/>
  <rootContext xmi:id="_OXs_QPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.NavigateActionSet" name="Auto::org.eclipse.ui.NavigateActionSet"/>
  <rootContext xmi:id="_OXs_QvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.actionSet.keyBindings" name="Auto::org.eclipse.ui.actionSet.keyBindings"/>
  <rootContext xmi:id="_OXs_RPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.WorkingSetModificationActionSet" name="Auto::org.eclipse.ui.WorkingSetModificationActionSet"/>
  <rootContext xmi:id="_OXs_RvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.WorkingSetActionSet" name="Auto::org.eclipse.ui.WorkingSetActionSet"/>
  <rootContext xmi:id="_OXs_SPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.actionSet.openFiles" name="Auto::org.eclipse.ui.actionSet.openFiles"/>
  <rootContext xmi:id="_OXs_SvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.actionSet.presentation" name="Auto::org.eclipse.ui.edit.text.actionSet.presentation"/>
  <rootContext xmi:id="_OXtmUPjgEea4UdV0IbBN0w" elementId="org.eclipse.wb.core.ui.actionset" name="Auto::org.eclipse.wb.core.ui.actionset"/>
  <rootContext xmi:id="_OXtmUvjgEea4UdV0IbBN0w" elementId="Ocaml_debuggingActionSet" name="Auto::Ocaml_debuggingActionSet"/>
  <rootContext xmi:id="_OXtmVPjgEea4UdV0IbBN0w" elementId="Ocaml_sourceActionSet" name="Auto::Ocaml_sourceActionSet"/>
  <rootContext xmi:id="_OXtmVvjgEea4UdV0IbBN0w" elementId="org.eclipse.ant.ui.actionSet.presentation" name="Auto::org.eclipse.ant.ui.actionSet.presentation"/>
  <rootContext xmi:id="_OXtmWPjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.breakpointActionSet" name="Auto::org.eclipse.debug.ui.breakpointActionSet"/>
  <rootContext xmi:id="_OXtmWvjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.debugActionSet" name="Auto::org.eclipse.debug.ui.debugActionSet"/>
  <rootContext xmi:id="_OXtmXPjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.launchActionSet" name="Auto::org.eclipse.debug.ui.launchActionSet"/>
  <rootContext xmi:id="_OXuNYPjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.profileActionSet" name="Auto::org.eclipse.debug.ui.profileActionSet"/>
  <rootContext xmi:id="_OXuNYvjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.gitaction" name="Auto::org.eclipse.egit.ui.gitaction"/>
  <rootContext xmi:id="_OXuNZPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.navigation" name="Auto::org.eclipse.egit.ui.navigation"/>
  <rootContext xmi:id="_OXuNZvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.debug.ui.JDTDebugActionSet" name="Auto::org.eclipse.jdt.debug.ui.JDTDebugActionSet"/>
  <rootContext xmi:id="_OXuNaPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.text.java.actionSet.presentation" name="Auto::org.eclipse.jdt.ui.text.java.actionSet.presentation"/>
  <rootContext xmi:id="_OXuNavjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.JavaElementCreationActionSet" name="Auto::org.eclipse.jdt.ui.JavaElementCreationActionSet"/>
  <rootContext xmi:id="_OXuNbPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.JavaActionSet" name="Auto::org.eclipse.jdt.ui.JavaActionSet"/>
  <rootContext xmi:id="_OXu0cPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.A_OpenActionSet" name="Auto::org.eclipse.jdt.ui.A_OpenActionSet"/>
  <rootContext xmi:id="_OXu0cvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.CodingActionSet" name="Auto::org.eclipse.jdt.ui.CodingActionSet"/>
  <rootContext xmi:id="_OXu0dPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.SearchActionSet" name="Auto::org.eclipse.jdt.ui.SearchActionSet"/>
  <rootContext xmi:id="_OXu0dvjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.context.ui.actionSet" name="Auto::org.eclipse.mylyn.context.ui.actionSet"/>
  <rootContext xmi:id="_OXu0ePjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.java.actionSet" name="Auto::org.eclipse.mylyn.java.actionSet"/>
  <rootContext xmi:id="_OXu0evjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.java.actionSet.browsing" name="Auto::org.eclipse.mylyn.java.actionSet.browsing"/>
  <rootContext xmi:id="_OXu0fPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.doc.actionSet" name="Auto::org.eclipse.mylyn.doc.actionSet"/>
  <rootContext xmi:id="_OXvbgPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.navigation" name="Auto::org.eclipse.mylyn.tasks.ui.navigation"/>
  <rootContext xmi:id="_OXvbgvjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.navigation.additions" name="Auto::org.eclipse.mylyn.tasks.ui.navigation.additions"/>
  <rootContext xmi:id="_OXvbhPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.cheatsheets.actionSet" name="Auto::org.eclipse.ui.cheatsheets.actionSet"/>
  <descriptors xmi:id="_NcFEgPjgEea4UdV0IbBN0w" elementId="org.eclipse.e4.ui.compatibility.editor" allowMultiple="true" category="org.eclipse.e4.primaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityEditor">
    <tags>Editor</tags>
  </descriptors>
  <descriptors xmi:id="_NcNnYPjgEea4UdV0IbBN0w" elementId="org.eclipse.gef.ui.palette_view" label="Palette" iconURI="platform:/plugin/org.eclipse.gef/icons/palette_view.gif" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_NchwcPjgEea4UdV0IbBN0w" elementId="org.eclipse.help.ui.HelpView" label="Help" iconURI="platform:/plugin/org.eclipse.help.ui/icons/view16/help_view.gif" tooltip="" category="Help" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Help</tags>
  </descriptors>
  <descriptors xmi:id="_NcoeIPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.junit.ResultView" label="JUnit" iconURI="platform:/plugin/org.eclipse.jdt.junit/icons/full/eview16/junit.gif" tooltip="" category="Java" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java</tags>
  </descriptors>
  <descriptors xmi:id="_NcqTUPjgEea4UdV0IbBN0w" elementId="org.eclipse.m2e.core.views.MavenRepositoryView" label="Maven Repositories" iconURI="platform:/plugin/org.eclipse.m2e.core.ui/icons/maven_indexes.gif" tooltip="" category="Maven" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Maven</tags>
  </descriptors>
  <descriptors xmi:id="_NcxoEPjgEea4UdV0IbBN0w" elementId="org.eclipse.m2e.core.views.MavenBuild" label="Maven Workspace Build" iconURI="platform:/plugin/org.eclipse.ui/icons/full/eview16/defaultview_misc.png" tooltip="" category="Maven" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Maven</tags>
  </descriptors>
  <descriptors xmi:id="_NcyPIPjgEea4UdV0IbBN0w" elementId="org.eclipse.search.SearchResultView" label="Classic Search" iconURI="platform:/plugin/org.eclipse.search/icons/full/eview16/searchres.gif" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_Nc5j4PjgEea4UdV0IbBN0w" elementId="org.eclipse.search.ui.views.SearchView" label="Search" iconURI="platform:/plugin/org.eclipse.search/icons/full/eview16/searchres.gif" tooltip="" allowMultiple="true" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_Nc6K8PjgEea4UdV0IbBN0w" elementId="org.eclipse.team.sync.views.SynchronizeView" label="Synchronize" iconURI="platform:/plugin/org.eclipse.team.ui/icons/full/eview16/synch_synch.gif" tooltip="" allowMultiple="true" category="Team" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Team</tags>
  </descriptors>
  <descriptors xmi:id="_NdKpoPjgEea4UdV0IbBN0w" elementId="org.eclipse.team.ui.GenericHistoryView" label="History" iconURI="platform:/plugin/org.eclipse.team.ui/icons/full/eview16/history_view.gif" tooltip="" allowMultiple="true" category="Team" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Team</tags>
  </descriptors>
  <descriptors xmi:id="_NdLQsPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.internal.introview" label="Welcome" iconURI="platform:/plugin/org.eclipse.ui/icons/full/eview16/defaultview_misc.png" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_NdL3wPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.browser.view" label="Internal Web Browser" iconURI="platform:/plugin/org.eclipse.ui.browser/icons/obj16/internal_browser.gif" tooltip="" allowMultiple="true" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_NdQJMPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.cheatsheets.views.CheatSheetView" label="Cheat Sheets" iconURI="platform:/plugin/org.eclipse.ui.cheatsheets/icons/view16/cheatsheet_view.gif" tooltip="" category="Help" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Help</tags>
  </descriptors>
  <descriptors xmi:id="_NdVowPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.console.ConsoleView" label="Console" iconURI="platform:/plugin/org.eclipse.ui.console/icons/full/cview16/console_view.png" tooltip="" allowMultiple="true" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_NdZ6MPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.ProgressView" label="Progress" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/pview.png" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_NdahQPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.ResourceNavigator" label="Navigator" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/filenav_nav.png" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_NdahQfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.BookmarkView" label="Bookmarks" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/bkmrk_nav.png" tooltip="" allowMultiple="true" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_NdbIUPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.TaskList" label="Tasks" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/tasks_tsk.png" tooltip="" allowMultiple="true" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_NdbvYPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.ProblemView" label="Problems" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/problems_view.png" tooltip="" allowMultiple="true" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_NdbvYfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.AllMarkersView" label="Markers" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/problems_view.png" tooltip="" allowMultiple="true" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_NdcWcPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.PropertySheet" label="Properties" iconURI="platform:/plugin/org.eclipse.ui.views/icons/full/eview16/prop_ps.png" tooltip="" allowMultiple="true" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_NdgA0PjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.ContentOutline" label="Outline" iconURI="platform:/plugin/org.eclipse.ui.views/icons/full/eview16/outline_co.png" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_Ndgn4PjgEea4UdV0IbBN0w" elementId="org.eclipse.pde.runtime.LogView" label="Error Log" iconURI="platform:/plugin/org.eclipse.ui.views.log/icons/eview16/error_log.gif" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_NdjrMPjgEea4UdV0IbBN0w" elementId="org.eclipse.wb.core.StructureView" label="Structure" iconURI="platform:/plugin/org.eclipse.wb.core/icons/structure/properties_view.gif" tooltip="" category="WindowBuilder" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:WindowBuilder</tags>
  </descriptors>
  <descriptors xmi:id="_NdwfgPjgEea4UdV0IbBN0w" elementId="org.eclipse.wb.core.PaletteView" label="Palette" iconURI="platform:/plugin/org.eclipse.wb.core/icons/structure/palette.png" tooltip="" category="WindowBuilder" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:WindowBuilder</tags>
  </descriptors>
  <descriptors xmi:id="_NdxGkPjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.common.snippets.internal.ui.SnippetsView" label="Snippets" iconURI="platform:/plugin/org.eclipse.wst.common.snippets/icons/snippets_view.gif" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_NdyUsPjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.xml.ui.views.annotations.XMLAnnotationsView" label="Documentation" iconURI="platform:/plugin/org.eclipse.wst.xml.ui/icons/full/obj16/comment_obj.gif" tooltip="" category="XML" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:XML</tags>
  </descriptors>
  <descriptors xmi:id="_Nd5CYPjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.xml.ui.contentmodel.view" label="Content Model" iconURI="platform:/plugin/org.eclipse.wst.xml.ui/icons/full/view16/hierarchy.gif" tooltip="" category="XML" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:XML</tags>
  </descriptors>
  <descriptors xmi:id="_Nd5pcPjgEea4UdV0IbBN0w" elementId="ocaml.ocamlCompilerOutput" label="OCaml Compiler Output" iconURI="platform:/plugin/Ocaml/icons/caml16x16.gif" tooltip="" category="OCaml" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:OCaml</tags>
  </descriptors>
  <descriptors xmi:id="_NeA-MPjgEea4UdV0IbBN0w" elementId="ocaml.ocamlBrowserView" label="OCaml Browser" iconURI="platform:/plugin/Ocaml/icons/camlPurple16x16.gif" tooltip="" category="OCaml" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:OCaml</tags>
  </descriptors>
  <descriptors xmi:id="_NeBlQPjgEea4UdV0IbBN0w" elementId="Ocaml.ocamlToplevelView" label="OCaml Toplevel" iconURI="platform:/plugin/Ocaml/icons/toplevelViewIcon.gif" tooltip="" allowMultiple="true" category="OCaml" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:OCaml</tags>
  </descriptors>
  <descriptors xmi:id="_NeCMUPjgEea4UdV0IbBN0w" elementId="Ocaml.ocamlCustomToplevelView" label="OCaml Custom Toplevel" iconURI="platform:/plugin/Ocaml/icons/toplevelViewIcon.gif" tooltip="" allowMultiple="true" category="OCaml" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:OCaml</tags>
  </descriptors>
  <descriptors xmi:id="_NeCzYPjgEea4UdV0IbBN0w" elementId="Ocaml.CallStackView" label="Ocaml Call Stack" iconURI="platform:/plugin/Ocaml/icons/stackframe.gif" tooltip="" category="Ocaml Debugging" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Ocaml Debugging</tags>
  </descriptors>
  <descriptors xmi:id="_NeCzYfjgEea4UdV0IbBN0w" elementId="Ocaml.BreakpointsView" label="Ocaml Breakpoints" iconURI="platform:/plugin/Ocaml/icons/breakpoint_view.gif" tooltip="" category="Ocaml Debugging" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Ocaml Debugging</tags>
  </descriptors>
  <descriptors xmi:id="_NeDacPjgEea4UdV0IbBN0w" elementId="Ocaml.WatchView" label="Ocaml Variable Watch" iconURI="platform:/plugin/Ocaml/icons/watchlist.gif" tooltip="" category="Ocaml Debugging" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Ocaml Debugging</tags>
  </descriptors>
  <descriptors xmi:id="_NeDacfjgEea4UdV0IbBN0w" elementId="Ocaml.ocamlASTView" label="AST" iconURI="platform:/plugin/Ocaml/icons/astview.gif" tooltip="" category="OCaml" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:OCaml</tags>
  </descriptors>
  <descriptors xmi:id="_NeEBgPjgEea4UdV0IbBN0w" elementId="org.eclipse.ant.ui.views.AntView" label="Ant" iconURI="platform:/plugin/org.eclipse.ant.ui/icons/full/eview16/ant_view.png" tooltip="" category="Ant" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Ant</tags>
  </descriptors>
  <descriptors xmi:id="_NePnsPjgEea4UdV0IbBN0w" elementId="org.eclipse.buildship.ui.views.taskview" label="Gradle Tasks" iconURI="platform:/plugin/org.eclipse.buildship.ui/icons/full/eview16/tasks_view.png" tooltip="" category="Gradle" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Gradle</tags>
  </descriptors>
  <descriptors xmi:id="_NeUgMPjgEea4UdV0IbBN0w" elementId="org.eclipse.buildship.ui.views.executionview" label="Gradle Executions" iconURI="platform:/plugin/org.eclipse.buildship.ui/icons/full/eview16/executions_view.png" tooltip="" category="Gradle" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Gradle</tags>
  </descriptors>
  <descriptors xmi:id="_NeVHQPjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.DebugView" label="Debug" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/debug_view.png" tooltip="" category="Debug" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Debug</tags>
  </descriptors>
  <descriptors xmi:id="_Ne1dkPjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.BreakpointView" label="Breakpoints" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/breakpoint_view.png" tooltip="" allowMultiple="true" category="Debug" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Debug</tags>
  </descriptors>
  <descriptors xmi:id="_Ne2EoPjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.VariableView" label="Variables" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/variable_view.png" tooltip="" allowMultiple="true" category="Debug" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Debug</tags>
  </descriptors>
  <descriptors xmi:id="_Ne2EofjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.ExpressionView" label="Expressions" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/watchlist_view.png" tooltip="" allowMultiple="true" category="Debug" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Debug</tags>
  </descriptors>
  <descriptors xmi:id="_Ne2rsPjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.RegisterView" label="Registers" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/register_view.png" tooltip="" allowMultiple="true" category="Debug" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Debug</tags>
  </descriptors>
  <descriptors xmi:id="_Ne3SwPjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.ModuleView" label="Modules" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/module_view.png" tooltip="" allowMultiple="true" category="Debug" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Debug</tags>
  </descriptors>
  <descriptors xmi:id="_Ne350PjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.MemoryView" label="Memory" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/memory_view.png" tooltip="" allowMultiple="true" category="Debug" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Debug</tags>
  </descriptors>
  <descriptors xmi:id="_Ne4g4PjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesView" label="Git Repositories" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/repo_rep.gif" tooltip="" category="Git" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Git</tags>
  </descriptors>
  <descriptors xmi:id="_NfEHEPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.StagingView" label="Git Staging" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/staging.png" tooltip="" category="Git" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Git</tags>
  </descriptors>
  <descriptors xmi:id="_NfEuIPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.InteractiveRebaseView" label="Git Interactive Rebase" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/rebase_interactive.gif" tooltip="" category="Git" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Git</tags>
  </descriptors>
  <descriptors xmi:id="_NfFVMPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.CompareTreeView" label="Git Tree Compare" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/obj16/gitrepository.gif" tooltip="" category="Git" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Git</tags>
  </descriptors>
  <descriptors xmi:id="_NfF8QPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.ReflogView" label="Git Reflog" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/reflog.gif" tooltip="" category="Git" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Git</tags>
  </descriptors>
  <descriptors xmi:id="_NfGjUPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.debug.ui.DisplayView" label="Display" iconURI="platform:/plugin/org.eclipse.jdt.debug.ui/icons/full/etool16/disp_sbook.gif" tooltip="" category="Debug" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Debug</tags>
  </descriptors>
  <descriptors xmi:id="_NfKNsPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.PackageExplorer" label="Package Explorer" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/package.png" tooltip="" category="Java" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java</tags>
  </descriptors>
  <descriptors xmi:id="_NfaFUPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.TypeHierarchy" label="Type Hierarchy" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/class_hi.png" tooltip="" category="Java" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java</tags>
  </descriptors>
  <descriptors xmi:id="_NfasYPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.ProjectsView" label="Projects" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/projects.png" tooltip="" category="Java Browsing" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java Browsing</tags>
  </descriptors>
  <descriptors xmi:id="_NfbTcPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.PackagesView" label="Packages" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/packages.png" tooltip="" category="Java Browsing" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java Browsing</tags>
  </descriptors>
  <descriptors xmi:id="_Nfb6gPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.TypesView" label="Types" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/types.png" tooltip="" category="Java Browsing" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java Browsing</tags>
  </descriptors>
  <descriptors xmi:id="_NfchkPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.MembersView" label="Members" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/members.png" tooltip="" category="Java Browsing" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java Browsing</tags>
  </descriptors>
  <descriptors xmi:id="_NfdIoPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.callhierarchy.view" label="Call Hierarchy" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/call_hierarchy.png" tooltip="" allowMultiple="true" category="Java" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java</tags>
  </descriptors>
  <descriptors xmi:id="_NfdvsPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.texteditor.TemplatesView" label="Templates" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/templates.png" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_NfeWwPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.SourceView" label="Declaration" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/source.png" tooltip="" category="Java" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java</tags>
  </descriptors>
  <descriptors xmi:id="_Nfe90PjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.JavadocView" label="Javadoc" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/javadoc.png" tooltip="" category="Java" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java</tags>
  </descriptors>
  <descriptors xmi:id="_Nffk4PjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.builds.navigator.builds" label="Builds" iconURI="platform:/plugin/org.eclipse.mylyn.builds.ui/icons/eview16/build-view.png" tooltip="" category="Mylyn" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Mylyn</tags>
  </descriptors>
  <descriptors xmi:id="_Nfm5oPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.commons.repositories.ui.navigator.Repositories" label="Team Repositories" iconURI="platform:/plugin/org.eclipse.mylyn.commons.repositories.ui/icons/eview16/repositories.gif" tooltip="" category="Mylyn" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Mylyn</tags>
  </descriptors>
  <descriptors xmi:id="_Nfou0PjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.views.tasks" label="Task List" iconURI="platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.gif" tooltip="" allowMultiple="true" category="Mylyn" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Mylyn</tags>
  </descriptors>
  <descriptors xmi:id="_Nf2KMPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.views.repositories" label="Task Repositories" iconURI="platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/repositories.gif" tooltip="" category="Mylyn" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Mylyn</tags>
  </descriptors>
  <descriptors xmi:id="_Nf2xQPjgEea4UdV0IbBN0w" elementId="org.eclipse.oomph.p2.ui.RepositoryExplorer" label="Repository Explorer" iconURI="platform:/plugin/org.eclipse.oomph.p2.ui/icons/obj16/repository.gif" tooltip="" category="Oomph" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Oomph</tags>
  </descriptors>
  <descriptors xmi:id="_Nf834PjgEea4UdV0IbBN0w" elementId="org.eclipse.recommenders.apidocs.rcp.views.apidocs" label="API Docs" iconURI="platform:/plugin/org.eclipse.recommenders.apidocs.rcp/icons/view16/apidocs.png" tooltip="" category="Code Recommenders" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Code Recommenders</tags>
  </descriptors>
  <descriptors xmi:id="_NgBJUPjgEea4UdV0IbBN0w" elementId="org.eclipse.recommenders.models.rcp.views.projectCoordinates" label="Project Coordinates" iconURI="platform:/plugin/org.eclipse.recommenders.coordinates.rcp/icons/view16/depinsp.gif" tooltip="" category="Code Recommenders" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Code Recommenders</tags>
  </descriptors>
  <descriptors xmi:id="_NgCXcPjgEea4UdV0IbBN0w" elementId="org.eclipse.recommenders.models.rcp.views.modelRepositories" label="Model Repositories" iconURI="platform:/plugin/org.eclipse.recommenders.models.rcp/icons/view16/depinsp.gif" tooltip="" category="Code Recommenders" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Code Recommenders</tags>
  </descriptors>
  <descriptors xmi:id="_NgDlkPjgEea4UdV0IbBN0w" elementId="org.eclipse.recommenders.models.rcp.views.dependencyOverview" label="Dependency Overview" iconURI="platform:/plugin/org.eclipse.recommenders.models.rcp/icons/view16/depinsp.gif" tooltip="" category="Code Recommenders" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Code Recommenders</tags>
  </descriptors>
  <descriptors xmi:id="_NgEMoPjgEea4UdV0IbBN0w" elementId="org.eclipse.recommenders.snipmatch.rcp.views.snippets" label="Snippets" iconURI="platform:/plugin/org.eclipse.recommenders.snipmatch.rcp/icons/view16/snippets.png" tooltip="" category="Code Recommenders" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Code Recommenders</tags>
  </descriptors>
  <descriptors xmi:id="_NgEzsPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigator.ProjectExplorer" label="Project Explorer" iconURI="platform:/plugin/org.eclipse.ui.navigator.resources/icons/full/eview16/resource_persp.gif" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <trimContributions xmi:id="_2r10UF9tEeO-yojH_y4TJA" elementId="org.eclipse.ui.ide.application.trimcontribution.QuickAccess" contributorURI="platform:/plugin/org.eclipse.ui.ide.application" toBeRendered="false" parentId="org.eclipse.ui.main.toolbar" positionInParent="last">
    <children xsi:type="menu:ToolControl" xmi:id="_76uUAF9tEeO-yojH_y4TJA" elementId="Spacer Glue" contributorURI="platform:/plugin/org.eclipse.ui.ide.application" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.LayoutModifierToolControl">
      <tags>glue</tags>
      <tags>move_after:PerspectiveSpacer</tags>
      <tags>SHOW_RESTORE_MENU</tags>
    </children>
    <children xsi:type="menu:ToolControl" xmi:id="_8tJPcF9tEeO-yojH_y4TJA" elementId="SearchField" contributorURI="platform:/plugin/org.eclipse.ui.ide.application" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.quickaccess.SearchField">
      <tags>move_after:Spacer Glue</tags>
      <tags>HIDEABLE</tags>
      <tags>SHOW_RESTORE_MENU</tags>
    </children>
    <children xsi:type="menu:ToolControl" xmi:id="_9LgmcF9tEeO-yojH_y4TJA" elementId="Search-PS Glue" contributorURI="platform:/plugin/org.eclipse.ui.ide.application" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.LayoutModifierToolControl">
      <tags>glue</tags>
      <tags>move_after:SearchField</tags>
      <tags>SHOW_RESTORE_MENU</tags>
    </children>
  </trimContributions>
  <commands xmi:id="_NXVHYPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.correction.inlineLocal.assist" commandName="Quick Assist - Inline local variable" description="Invokes quick assist and selects 'Inline local variable'" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVHYfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.select.pageUp" commandName="Select Page Up" description="Select to the top of the page" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVHYvjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.ResetQuickdiffBaseline" commandName="Reset quickdiff baseline" category="_NXT5YvjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXVHY_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.ResetQuickdiffBaselineTarget" name="Reset target (HEAD, HEAD^1)" optional="false"/>
  </commands>
  <commands xmi:id="_NXVHZPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.surround.with.quickMenu" commandName="Surround With Quick Menu" description="Shows the Surround With quick menu" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVHZfjgEea4UdV0IbBN0w" elementId="Ocaml.openIntfImplCommand" commandName="Open interface/implementation" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVHZvjgEea4UdV0IbBN0w" elementId="org.eclipse.search.ui.openFileSearchPage" commandName="File Search" description="Open the Search dialog's file search page" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVHZ_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.correction.convertLocalToField.assist" commandName="Quick Assist - Convert local variable to field" description="Invokes quick assist and selects 'Convert local variable to field'" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVHaPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.search.implementors.in.workspace" commandName="Implementors in Workspace" description="Search for implementors of the selected interface" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVHafjgEea4UdV0IbBN0w" elementId="org.eclipse.wb.core.commands.switch" commandName="Switch Source/Design Views" description="Switch between the Source and Design views." category="_NXT5Q_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVHavjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesViewAddRepository" commandName="Add a Git Repository" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVHa_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.debug.ui.breakpoint.properties" commandName="Java Breakpoint Properties" description="View and edit the properties for a given Java breakpoint" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVHbPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.correction.addThrowsDecl" commandName="Quick Fix - Add throws declaration" description="Invokes quick assist and selects 'Add throws declaration'" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVHbfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.navigate.open.type.in.hierarchy" commandName="Open Type in Hierarchy" description="Open a type in the type hierarchy view" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVHbvjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.task.clearActiveTime" commandName="Clear Active Time" category="_NXT5TvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVHb_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.ide.copyBuildIdCommand" commandName="Copy Build Id To Clipboard" description="Copies the build id to the clipboard." category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVHcPjgEea4UdV0IbBN0w" elementId="Ocaml.spacesToTabsCommand" commandName="Convert Spaces to Tabs" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVHcfjgEea4UdV0IbBN0w" elementId="org.eclipse.buildship.ui.commands.refreshproject" commandName="Refresh Gradle Project" description="Refreshes the selected Gradle project" category="_NXT5R_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVHcvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.select.textEnd" commandName="Select Text End" description="Select to the end of the text" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVHc_jgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.context.ui.commands.task.attachContext" commandName="Attach Context" category="_NXT5TPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVHdPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.deletePreviousWord" commandName="Delete Previous Word" description="Delete the previous word" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVHdfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.goto.wordPrevious" commandName="Previous Word" description="Go to the previous word" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVHdvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.search.declarations.in.workspace" commandName="Declaration in Workspace" description="Search for declarations of the selected element in the workspace" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVucPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.preferences" commandName="Preferences" description="Open the preferences dialog" category="_NXT5U_jgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXVucfjgEea4UdV0IbBN0w" elementId="preferencePageId" name="Preference Page"/>
  </commands>
  <commands xmi:id="_NXVucvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.delimiter.unix" commandName="Convert Line Delimiters to Unix (LF, \n, 0A, &#xb6;)" description="Converts the line delimiters to Unix (LF, \n, 0A, &#xb6;)" category="_NXT5UfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVuc_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.search.read.access.in.working.set" commandName="Read Access in Working Set" description="Search for read references to the selected element in a working set" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVudPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.commit.Squash" commandName="Squash Commits" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVudfjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.Edit" commandName="Edit Commit" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVudvjgEea4UdV0IbBN0w" elementId="org.eclipse.epp.mpc.ui.command.showMarketplaceWizard" commandName="Eclipse Marketplace" description="Show the Eclipse Marketplace wizard" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVud_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.copy" commandName="Copy" description="Copy the selection to the clipboard" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVuePjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.nextView" commandName="Next View" description="Switch to the next view" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVuefjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.revertToSaved" commandName="Revert to Saved" description="Revert to the last saved state" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVuevjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.properties.NewPropertySheetCommand" commandName="Properties" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVue_jgEea4UdV0IbBN0w" elementId="org.eclipse.ant.ui.toggleMarkOccurrences" commandName="Toggle Ant Mark Occurrences" description="Toggles mark occurrences in Ant editors" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVufPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigate.addToWorkingSet" commandName="Add to Working Set" description="Adds the selected object to a working set." category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVuffjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.RunToLine" commandName="Run to Line" description="Resume and break when execution reaches the current line" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVufvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.junit.junitShortcut.debug" commandName="Debug JUnit Test" description="Debug JUnit Test" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVuf_jgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.wikitext.ui.editor.showCheatSheetCommand" commandName="Show Markup Cheat Sheet" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVugPjgEea4UdV0IbBN0w" elementId="org.eclipse.team.ui.TeamSynchronizingPerspective" commandName="Team Synchronizing" description="Open the Team Synchronizing Perspective" category="_NXT5XPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVugfjgEea4UdV0IbBN0w" elementId="org.eclipse.ant.ui.open.declaration.command" commandName="Open Declaration" description="Opens the Ant editor on the referenced element" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVugvjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesViewPaste" commandName="Paste Repository Path or URI" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVug_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.showChangeRulerInformation" commandName="Show Quick Diff Ruler Tooltip" description="Displays quick diff or revision information for the caret line in a focused hover" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVuhPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.upperCase" commandName="To Upper Case" description="Changes the selection to upper case" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVuhfjgEea4UdV0IbBN0w" elementId="org.eclipse.recommenders.utils.rcp.commands.openBrowserDialog" commandName="Open a Web browser" category="_NXT5YvjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXVuhvjgEea4UdV0IbBN0w" elementId="org.eclipse.recommenders.utils.rcp.linkContribution.href" name="URI" optional="false"/>
  </commands>
  <commands xmi:id="_NXVuh_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigate.goInto" commandName="Go Into" description="Navigate into the selected item" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVuiPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.ConfigureFetch" commandName="Configure Upstream Fetch" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVuifjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.ConfigureUpstreamPush" commandName="Configure Upstream Push" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVuivjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.OpenRunConfigurations" commandName="Run..." description="Open run launch configuration dialog" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVui_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.create.delegate.methods" commandName="Generate Delegate Methods" description="Add delegate methods for a type's fields" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVujPjgEea4UdV0IbBN0w" elementId="org.eclipse.gef.ui.palette_view" commandName="Palette" category="_NXT5QfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVujfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.select.windowEnd" commandName="Select Window End" description="Select to the end of the window" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVujvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.minimizePart" commandName="Minimize Active View or Editor" description="Minimizes the active view or editor" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVuj_jgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.context.ui.commands.task.clearContext" commandName="Clear Context" category="_NXT5TPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVukPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.Untrack" commandName="Untrack" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVukfjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.sse.ui.add.block.comment" commandName="Add Block Comment" description="Add Block Comment" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVukvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.showSystemMenu" commandName="Show System Menu" description="Show the system menu" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVuk_jgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.ToggleLineBreakpoint" commandName="Toggle Line Breakpoint" description="Creates or removes a line breakpoint" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVulPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.searchForTask" commandName="Search Repository for Task" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVulfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.debug.ui.commands.AllInstances" commandName="All Instances" description="View all instances of the selected type loaded in the target VM" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVulvjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.OpenInCommitViewerCommand" commandName="Open in Commit Viewer" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVul_jgEea4UdV0IbBN0w" elementId="org.eclipse.m2e.actions.LifeCycleTest.run" commandName="Run Maven Test" description="Run Maven Test" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVumPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.toggle.comment" commandName="Toggle Comment" description="Toggle comment the selected lines" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVumfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.correction.addImport" commandName="Quick Fix - Add import" description="Invokes quick assist and selects 'Add import'" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVumvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.savePerspective" commandName="Save Perspective As" description="Save the current perspective" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVum_jgEea4UdV0IbBN0w" elementId="de.tum.in.www2.cupplugin.commands.OpenDefinition" commandName="Open Definition" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVunPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.internal.reflog.CheckoutCommand" commandName="Checkout" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVunfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.move" commandName="Move..." description="Move the selected item" category="_NXT5UfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXVunvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.refactor.migrate.jar" commandName="Migrate JAR File" description="Migrate a JAR File to a new version" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVgPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.correction.assignParamToField.assist" commandName="Quick Assist - Assign parameter to field" description="Invokes quick assist and selects 'Assign parameter to field'" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVgfjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.command.configureTrace" commandName="Configure Git Debug Trace" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVgvjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.maximizePart" commandName="Maximize Part" description="Maximize Part" category="_NXT5RfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVg_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.move.inner.to.top.level" commandName="Move Type to New File" description="Move Type to New File" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVhPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigate.linkWithEditor" commandName="Toggle Link with Editor " description="Toggles linking of a view's selection with the active editor's selection" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVhfjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.sse.ui.open.file.from.source" commandName="Open Selection" description="Open an editor on the selected link" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVhvjgEea4UdV0IbBN0w" elementId="org.eclipse.compare.ignoreWhiteSpace" commandName="Ignore White Space" description="Ignore white space where applicable" category="_NXT5UvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVh_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.open.hierarchy" commandName="Quick Hierarchy" description="Show the quick hierarchy of the selected element" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWViPjgEea4UdV0IbBN0w" elementId="org.eclipse.oomph.setup.editor.importProjects" commandName="Import Projects" category="_NXT5SvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVifjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.generate.constructor.using.fields" commandName="Generate Constructor using Fields" description="Choose fields to initialize and constructor from superclass to call " category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVivjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.builds.ui.command.ShowTestResults" commandName="Show Test Results" category="_NXT5SPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVi_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.toggleBlockSelectionMode" commandName="Toggle Block Selection" description="Toggle block / column selection in the current text editor" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVjPjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.sse.ui.goto.matching.bracket" commandName="Matching Character" description="Go to Matching Character" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVjfjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.xml.ui.disable.grammar.constraints" commandName="Turn off Grammar Constraints" description="Turn off grammar Constraints" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVjvjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesViewRefresh" commandName="Refresh" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVj_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.refactor.quickMenu" commandName="Show Refactor Quick Menu" description="Shows the refactor quick menu" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVkPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.commands.showElementInTypeHierarchyView" commandName="Show Java Element Type Hierarchy" description="Show a Java element in the Type Hierarchy view" category="_NXT5TfjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXWVkfjgEea4UdV0IbBN0w" elementId="elementRef" name="Java element reference" typeId="org.eclipse.jdt.ui.commands.javaElementReference" optional="false"/>
  </commands>
  <commands xmi:id="_NXWVkvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigate.goToResource" commandName="Go to" description="Go to a particular resource in the active view" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVk_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.resetPerspective" commandName="Reset Perspective" description="Reset the current perspective to its default state" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVlPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.open.super.implementation" commandName="Open Super Implementation" description="Open the Implementation in the Super Type" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVlfjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.wikitext.ui.quickOutlineCommand" commandName="Quick Outline" description="Open a popup dialog with a quick outline of the current document" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVlvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.project.buildLast" commandName="Repeat Working Set Build" description="Repeat the last working set build" category="_NXT5VvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVl_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.project.buildProject" commandName="Build Project" description="Build the selected project" category="_NXT5VvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVmPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.CompareIndexWithHead" commandName="Compare File in Index with HEAD Revision" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVmfjgEea4UdV0IbBN0w" elementId="Ocaml.contextInformationCommand" commandName="Show Tooltip Description" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVmvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.override.methods" commandName="Override/Implement Methods" description="Override or implement methods from super types" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVm_jgEea4UdV0IbBN0w" elementId="org.eclipse.recommenders.snipmatch.rcp.commands.completion" commandName="Snipmatch Snippet Completion" description="Open a dialog to search for and insert code snippets" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVnPjgEea4UdV0IbBN0w" elementId="org.eclipse.recommenders.utils.rcp.commands.openBrowser" commandName="Open a Web browser" category="_NXT5YvjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXWVnfjgEea4UdV0IbBN0w" elementId="org.eclipse.recommenders.utils.rcp.linkContribution.href" name="URI" optional="false"/>
  </commands>
  <commands xmi:id="_NXWVnvjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.discoveryWizardCommand" commandName="Discovery Wizard" description="shows the connector discovery wizard" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVn_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.goto.textStart" commandName="Text Start" description="Go to the beginning of the text" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVoPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.wikitext.ui.convertToDocbookCommand" commandName="Generate Docbook" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVofjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.paste" commandName="Paste" description="Paste from the clipboard" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVovjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.part.nextPage" commandName="Next Page" description="Switch to the next page" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVo_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.change.type" commandName="Generalize Declared Type" description="Change the declaration of a selected variable to a more general type consistent with usage" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVpPjgEea4UdV0IbBN0w" elementId="org.eclipse.oomph.setup.editor.refreshCache" commandName="Refresh Remote Cache" category="_NXT5SvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVpfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.debug.ui.javaAppletShortcut.run" commandName="Run Java Applet" description="Run Java Applet" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVpvjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.CreateBranch" commandName="Create Branch" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVp_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigate.previous" commandName="Previous" description="Navigate to the previous item" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVqPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.clean" commandName="Clean..." category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVqfjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesViewClone" commandName="Clone a Git Repository" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVqvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.rename" commandName="Rename" description="Rename the selected item" category="_NXT5UfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVq_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.clear.mark" commandName="Clear Mark" description="Clear the mark" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVrPjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.sse.ui.quick_outline" commandName="Quick Outline" description="Show the quick outline for the editor input" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXWVrfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.project.buildAll" commandName="Build All" description="Build all projects" category="_NXT5VvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8kPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.OpenInTextEditorCommand" commandName="Open in Text Editor" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8kfjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesViewRemove" commandName="Remove Repository" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8kvjgEea4UdV0IbBN0w" elementId="org.eclipse.ant.ui.openExternalDoc" commandName="Open External Documentation" description="Open the External documentation for the current task in the Ant editor" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8k_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.cut.line.to.beginning" commandName="Cut to Beginning of Line" description="Cut to the beginning of a line of text" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8lPjgEea4UdV0IbBN0w" elementId="org.eclipse.buildship.ui.commands.runtasks" commandName="Run Gradle Tasks" description="Runs all the selected Gradle tasks" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8lfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.toggleBreadcrumb" commandName="Toggle Java Editor Breadcrumb" description="Toggle the Java editor breadcrumb" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8lvjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesViewCreateRepository" commandName="Create a Repository" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8l_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.search.write.access.in.hierarchy" commandName="Write Access in Hierarchy" description="Search for write references of the selected element in its hierarchy" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8mPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.editors.revisions.rendering.cycle" commandName="Cycle Revision Coloring Mode" description="Cycles through the available coloring modes for revisions" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8mfjgEea4UdV0IbBN0w" elementId="org.eclipse.recommenders.snipmatch.rcp.commands.createSnippet" commandName="Create Snippet..." description="Creates a new Snipmatch code snippet from the current editor&#x2019;s text selection" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8mvjgEea4UdV0IbBN0w" elementId="org.eclipse.ant.ui.renameInFile" commandName="Rename In File" description="Renames all references within the same buildfile" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8m_jgEea4UdV0IbBN0w" elementId="Ocaml.camlp4formatterCommand" commandName="Format with camlp4" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8nPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.PushTags" commandName="Push Tags..." category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8nfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.open.type.hierarchy" commandName="Open Type Hierarchy" description="Open a type hierarchy on the selected element" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8nvjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.ContinueRebase" commandName="Continue Rebase" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8n_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.extract.interface" commandName="Extract Interface" description="Extract a set of members into a new interface and try to use the new interface" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8oPjgEea4UdV0IbBN0w" elementId="org.eclipse.help.ui.closeTray" commandName="Close User Assistance Tray" description="Close the user assistance tray containing context help information and cheat sheets." category="_NXT5VfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8ofjgEea4UdV0IbBN0w" elementId="org.eclipse.ltk.ui.refactoring.commands.moveResources" commandName="Move Resources" description="Move the selected resources and notify LTK participants." category="_NXT5XfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8ovjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.CreatePatch" commandName="Create Patch" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8o_jgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.Resume" commandName="Resume" description="Resume" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8pPjgEea4UdV0IbBN0w" elementId="org.eclipse.m2e.actions.LifeCycleGenerateSources.run" commandName="Run Maven Generate Sources" description="Run Maven Generate Sources" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8pfjgEea4UdV0IbBN0w" elementId="Ocaml.restartCommand" commandName="Restart" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8pvjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.StepInto" commandName="Step Into" description="Step into" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8p_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.file.restartWorkbench" commandName="Restart" description="Restart the workbench" category="_NXT5UfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8qPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.context.ui.commands.open.context.dialog" commandName="Show Context Quick View" description="Show Context Quick View" category="_NXT5TPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8qfjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.sse.ui.structure.select.previous" commandName="Select Previous Element" description="Expand selection to include previous sibling" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8qvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.toggleOverwrite" commandName="Toggle Overwrite" description="Toggle overwrite mode" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8q_jgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.context.ui.commands.attachment.retrieveContext" commandName="Retrieve Context Attachment" category="_NXT5TPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8rPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.pull.up" commandName="Pull Up" description="Move members to a superclass" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8rfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.folding.collapse_all" commandName="Collapse All" description="Collapses all folded regions" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8rvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.debug.ui.commands.AddExceptionBreakpoint" commandName="Add Java Exception Breakpoint" description="Add a Java exception breakpoint" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8r_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.open.call.hierarchy" commandName="Open Call Hierarchy" description="Open a call hierarchy on the selected element" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8sPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesViewClearCredentials" commandName="Clear Credentials" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8sfjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.wikitext.ui.convertToMarkupCommand" commandName="Generate Markup" category="_NXT5YvjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXW8svjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.wikitext.ui.targetLanguage" name="TargetLanguage" optional="false"/>
  </commands>
  <commands xmi:id="_NXW8s_jgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.RefreshRepositoryTasks" commandName="Synchronize Changed" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8tPjgEea4UdV0IbBN0w" elementId="org.eclipse.equinox.p2.ui.discovery.commands.ShowRepositoryCatalog" commandName="Show Repository Catalog" category="_NXT5YvjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXW8tfjgEea4UdV0IbBN0w" elementId="org.eclipse.equinox.p2.ui.discovery.commands.RepositoryParameter" name="P2 Repository URI"/>
  </commands>
  <commands xmi:id="_NXW8tvjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.ToggleWatchpoint" commandName="Toggle Watchpoint" description="Creates or removes a watchpoint" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8t_jgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.closeRendering" commandName="Close Rendering" description="Close the selected rendering." category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8uPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesViewOpenInEditor" commandName="Open in Editor" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8ufjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.showToolTip" commandName="Show Tooltip Description" category="_NXT5TvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8uvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.showViewMenu" commandName="Show View Menu" description="Show the view menu" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8u_jgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.context.ui.commands.task.copyContext" commandName="Copy Context" category="_NXT5TPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8vPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.Commit" commandName="Commit..." category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8vfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.inline" commandName="Inline" description="Inline a constant, local variable or method" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8vvjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.submodule.update" commandName="Update Submodule" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXW8v_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.shiftRight" commandName="Shift Right" description="Shift a block of text to the right" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjoPjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.ProfileLast" commandName="Profile" description="Launch in profile mode" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjofjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigate.backwardHistory" commandName="Backward History" description="Move backward in the editor navigation history" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjovjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.Pull" commandName="Pull" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjo_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.removeTrailingWhitespace" commandName="Remove Trailing Whitespace" description="Removes the trailing whitespace of each line" category="_NXT5UfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjpPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.findIncremental" commandName="Incremental Find" description="Incremental find" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjpfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.swap.mark" commandName="Swap Mark" description="Swap the mark with the cursor position" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjpvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.correction.addCast" commandName="Quick Fix - Add cast" description="Invokes quick assist and selects 'Add cast'" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjp_jgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.context.ui.commands.interest.increment" commandName="Make Landmark" description="Make Landmark" category="_NXT5TPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjqPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.correction.assignToLocal.assist" commandName="Quick Assist - Assign to local variable" description="Invokes quick assist and selects 'Assign to local variable'" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjqfjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.ImportChangedProjectsCommandId" commandName="Import Changed Projects" description="Import or create in local Git repository" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjqvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.search.return.continue.targets" commandName="Search break/continue Target Occurrences in File" description="Search for break/continue target occurrences of a selected target name" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjq_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesViewConfigureFetch" commandName="Configure Fetch..." category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjrPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.create.getter.setter" commandName="Generate Getters and Setters" description="Generate Getter and Setter methods for type's fields" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjrfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.open.external.javadoc" commandName="Open Attached Javadoc" description="Open the attached Javadoc of the selected element in a browser" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjrvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.shiftLeft" commandName="Shift Left" description="Shift a block of text to the left" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjr_jgEea4UdV0IbBN0w" elementId="org.eclipse.wst.sse.ui.structure.select.next" commandName="Select Next Element" description="Expand selection to include next sibling" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjsPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.Push" commandName="Push..." category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjsfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.debug.ui.commands.AddClassPrepareBreakpoint" commandName="Add Class Load Breakpoint" description="Add a class load breakpoint" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjsvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.select.next" commandName="Select Next Element" description="Expand selection to include next sibling" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjs_jgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.builds.ui.command.ShowBuildOutput" commandName="Show Build Output" category="_NXT5SPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjtPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesViewNewRemote" commandName="Create Remote..." category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjtfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.delete.line" commandName="Delete Line" description="Delete a line of text" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjtvjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.Restart" commandName="Restart" description="Restart a process or debug target without terminating and re-launching" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjt_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.stash.drop" commandName="Delete Stashed Commit..." category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjuPjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.DebugPerspective" commandName="Debug" description="Open the debug perspective" category="_NXT5XPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjufjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.RenameBranch" commandName="Rename Branch..." category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjuvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigate.expandAll" commandName="Expand All" description="Expand the current tree" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXju_jgEea4UdV0IbBN0w" elementId="Ocaml.backstepCommand" commandName="Backstep" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjvPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.specific_content_assist.command" commandName="Content Assist" description="A parameterizable command that invokes content assist with a single completion proposal category" category="_NXT5QvjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXXjvfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.specific_content_assist.category_id" name="type" optional="false"/>
  </commands>
  <commands xmi:id="_NXXjvvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.search.references.in.hierarchy" commandName="References in Hierarchy" description="Search for references of the selected element in its hierarchy" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjv_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.file.saveAll" commandName="Save All" description="Save all current contents" category="_NXT5UfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjwPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.remove.block.comment" commandName="Remove Block Comment" description="Remove the block comment enclosing the selection" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjwfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.search.method.exits" commandName="Search Method Exit Occurrences in File" description="Search for method exit occurrences of a selected return type" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjwvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.open.implementation" commandName="Open Implementation" description="Opens the Implementations of a method in its hierarchy" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjw_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.junit.gotoTest" commandName="Referring Tests" description="Referring Tests" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjxPjgEea4UdV0IbBN0w" elementId="Ocaml.commentSelectionProtectedCommand" commandName="Comment/Uncomment Selection (Protected)" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjxfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.folding.collapseMembers" commandName="Collapse Members" description="Collapse all members" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjxvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.find.broken.nls.keys" commandName="Find Broken Externalized Strings" description="Finds undefined, duplicate and unused externalized string keys in property files" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjx_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.file.closeOthers" commandName="Close Others" description="Close all editors except the one that is active" category="_NXT5UfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjyPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.commands.showElementInPackageView" commandName="Show Java Element in Package Explorer" description="Select Java element in the Package Explorer view" category="_NXT5TfjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXXjyfjgEea4UdV0IbBN0w" elementId="elementRef" name="Java element reference" typeId="org.eclipse.jdt.ui.commands.javaElementReference" optional="false"/>
  </commands>
  <commands xmi:id="_NXXjyvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.editors.quickdiff.revertLine" commandName="Revert Line" description="Revert the current line" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjy_jgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.OpenDebugConfigurations" commandName="Debug..." description="Open debug launch configuration dialog" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjzPjgEea4UdV0IbBN0w" elementId="org.eclipse.oomph.setup.editor.performDropdown" commandName="Perform Dropdown" category="_NXT5SvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjzfjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.SimpleFetch" commandName="Fetch from Upstream" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjzvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.previousEditor" commandName="Previous Editor" description="Switch to the previous editor" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXjz_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.debug.ui.commands.InstanceCount" commandName="Instance Count" description="View the instance count of the selected type loaded in the target VM" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXj0PjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.copy.qualified.name" commandName="Copy Qualified Name" description="Copy a fully qualified name to the system clipboard" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXj0fjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.findReplace" commandName="Find and Replace" description="Find and replace text" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXj0vjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.promote.local.variable" commandName="Convert Local Variable to Field" description="Convert a local variable to a field" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXj0_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.MergeTool" commandName="Merge Tool" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXj1PjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.ide.OpenMarkersView" commandName="Open Another" description="Open another view" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXXj1fjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.command.shareProject" commandName="Share with Git" description="Share the project using Git" category="_NXT5YvjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXYKsPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.command.projectNameParameter" name="Project" optional="false"/>
  </commands>
  <commands xmi:id="_NXYKsfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.convert.anonymous.to.nested" commandName="Convert Anonymous Class to Nested" description="Convert an anonymous class to a nested class" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKsvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.correction.changeToStatic" commandName="Quick Fix - Change to static access" description="Invokes quick assist and selects 'Change to static access'" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKs_jgEea4UdV0IbBN0w" elementId="org.eclipse.equinox.p2.ui.sdk.installationDetails" commandName="Installation Details" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKtPjgEea4UdV0IbBN0w" elementId="org.eclipse.team.ui.synchronizeAll" commandName="Synchronize..." description="Synchronize resources in the workspace with another location" category="_NXT5QPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKtfjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.newRendering" commandName="New Rendering" description="Add a new rendering." category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKtvjgEea4UdV0IbBN0w" elementId="org.eclipse.m2e.profiles.ui.commands.selectMavenProfileCommand" commandName="Select Maven Profiles" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKt_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.nextEditor" commandName="Next Editor" description="Switch to the next editor" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKuPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.project.closeUnrelatedProjects" commandName="Close Unrelated Projects" description="Close unrelated projects" category="_NXT5VvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKufjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.self.encapsulate.field" commandName="Encapsulate Field" description="Create getting and setting methods for the field and use only those to access the field" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKuvjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.internal.reflog.CopyCommand" commandName="Copy SHA-1" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKu_jgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.new.subtask" commandName="New Subtask" category="_NXT5TvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKvPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.help.helpContents" commandName="Help Contents" description="Open the help contents" category="_NXT5VfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKvfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.delete" commandName="Delete" description="Delete the selection" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKvvjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.Reset" commandName="Reset..." category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKv_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.delete.line.to.beginning" commandName="Delete to Beginning of Line" description="Delete to the beginning of a line of text" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKwPjgEea4UdV0IbBN0w" elementId="org.eclipse.search.ui.performTextSearchWorkspace" commandName="Find Text in Workspace" description="Searches the files in the workspace for specific text." category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKwfjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.RenameBranch" commandName="Rename Branch" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKwvjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.Synchronize" commandName="Synchronize" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKw_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.search.declarations.in.working.set" commandName="Declaration in Working Set" description="Search for declarations of the selected element in a working set" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKxPjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.sse.ui.remove.block.comment" commandName="Remove Block Comment" description="Remove Block Comment" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKxfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.findPrevious" commandName="Find Previous" description="Find previous item" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKxvjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.ToggleBreakpoint" commandName="Toggle Breakpoint" description="Creates or removes a breakpoint" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKx_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.navigate.gototype" commandName="Go to Type" description="Go to Type" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKyPjgEea4UdV0IbBN0w" elementId="org.eclipse.m2e.core.ui.command.openPom" commandName="Open Maven POM" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKyfjgEea4UdV0IbBN0w" elementId="Ocaml.gotoMatchingDelimiterCommand" commandName="Goto Matching Delimiter" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKyvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.addBookmark" commandName="Add Bookmark" description="Add a bookmark" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKy_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.commit.Revert" commandName="Revert Commit" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKzPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.commit.StashDrop" commandName="Delete Stashed Commit..." category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKzfjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.openTask" commandName="Open Task" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKzvjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.xsd.ui.refactor.rename.element" commandName="&amp;Rename XSD element" description="Rename XSD element" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYKz_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.scroll.lineUp" commandName="Scroll Line Up" description="Scroll up one line of text" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYK0PjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.set.mark" commandName="Set Mark" description="Set the mark" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYK0fjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.select.last" commandName="Restore Last Selection" description="Restore last selection" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYK0vjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.java.ui.editor.folding.auto" commandName="Toggle Active Folding" description="Toggle Active Folding" category="_NXT5T_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYK0_jgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.goToPreviousUnread" commandName="Go To Previous Unread Task" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYK1PjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.folding.toggle" commandName="Toggle Folding" description="Toggles folding in the current editor" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYK1fjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.toggleShowWhitespaceCharacters" commandName="Show Whitespace Characters" description="Shows whitespace characters in current text editor" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYK1vjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.correction.splitJoinVariableDeclaration.assist" commandName="Quick Assist - Split/Join variable declaration" description="Invokes quick assist and selects 'Split/Join variable declaration'" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYK1_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.file.revert" commandName="Revert" description="Revert to the last saved state" category="_NXT5UfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYK2PjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.showView" commandName="Show View" description="Shows a particular view" category="_NXT5QfjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXYK2fjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.showView.viewId" name="View"/>
    <parameters xmi:id="_NXYK2vjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.showView.secondaryId" name="Secondary Id"/>
    <parameters xmi:id="_NXYK2_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.views.showView.makeFast" name="As FastView"/>
  </commands>
  <commands xmi:id="_NXYK3PjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigate.showResourceByPath" commandName="Show Resource in Navigator" description="Show a resource in the Navigator given its path" category="_NXT5TfjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXYK3fjgEea4UdV0IbBN0w" elementId="resourcePath" name="Resource Path" typeId="org.eclipse.ui.ide.resourcePath" optional="false"/>
  </commands>
  <commands xmi:id="_NXYK3vjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.Ignore" commandName="Ignore" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYK3_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.commit.Edit" commandName="Edit Commit" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYK4PjgEea4UdV0IbBN0w" elementId="org.eclipse.oomph.ui.ToggleOfflineMode" commandName="Toggle Offline Mode" category="_NXT5YfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYK4fjgEea4UdV0IbBN0w" elementId="org.eclipse.oomph.setup.editor.openLog" commandName="Open Setup Log" category="_NXT5SvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYK4vjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.SkipAllBreakpoints" commandName="Skip All Breakpoints" description="Sets whether or not any breakpoint should suspend execution" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYK4_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.delimiter.windows" commandName="Convert Line Delimiters to Windows (CRLF, \r\n, 0D0A, &#xa4;&#xb6;)" description="Converts the line delimiters to Windows (CRLF, \r\n, 0D0A, &#xa4;&#xb6;)" category="_NXT5UfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYK5PjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.findNext" commandName="Find Next" description="Find next item" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYxwPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.project.buildAutomatically" commandName="Build Automatically" description="Toggle the workspace build automatically function" category="_NXT5VvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYxwfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.file.import" commandName="Import" description="Import" category="_NXT5UfjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXYxwvjgEea4UdV0IbBN0w" elementId="importWizardId" name="Import Wizard"/>
  </commands>
  <commands xmi:id="_NXYxw_jgEea4UdV0IbBN0w" elementId="Ocaml.camlp4convertCommand" commandName="Convert from revised syntax to standard syntax with camlp4" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYxxPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.Merge" commandName="Merge" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYxxfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.switchToEditor" commandName="Switch to Editor" description="Switch to an editor" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYxxvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.help.dynamicHelp" commandName="Dynamic Help" description="Open the dynamic help" category="_NXT5VfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYxx_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigate.nextSubTab" commandName="Next Sub-Tab" description="Switch to the next sub-tab" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYxyPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.comment" commandName="Comment" description="Turn the selected lines into Java comments" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYxyfjgEea4UdV0IbBN0w" elementId="Ocaml.formatterCommand" commandName="Format" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYxyvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.introduce.parameter" commandName="Introduce Parameter" description="Introduce a new method parameter based on the selected expression" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYxy_jgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.addTaskRepository" commandName="Add Task Repository..." category="_NXT5TvjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXYxzPjgEea4UdV0IbBN0w" elementId="connectorKind" name="Repository Type"/>
  </commands>
  <commands xmi:id="_NXYxzfjgEea4UdV0IbBN0w" elementId="de.tum.in.www2.cupplugin.commands.OpenDeclaration" commandName="Open Declaration" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYxzvjgEea4UdV0IbBN0w" elementId="Ocaml.reverseCommand" commandName="Reverse" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYxz_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.debug.ui.localJavaShortcut.run" commandName="Run Java Application" description="Run Java Application" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx0PjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.activateTask" commandName="Activate Task" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx0fjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.addTask" commandName="Add Task..." description="Add a task" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx0vjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.CreateTag" commandName="Create Tag..." category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx0_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.search.occurrences.in.file.quickMenu" commandName="Show Occurrences in File Quick Menu" description="Shows the Occurrences in File quick menu" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx1PjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.builds.ui.commands.OpenBuildElementWithBrowser" commandName="Open Build with Browser" category="_NXT5SPjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXYx1fjgEea4UdV0IbBN0w" elementId="element" name="Element"/>
  </commands>
  <commands xmi:id="_NXYx1vjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.sse.ui.structure.select.enclosing" commandName="Select Enclosing Element" description="Expand selection to include enclosing element" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx1_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.toggleInsertMode" commandName="Toggle Insert Mode" description="Toggle insert mode" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx2PjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.cheatsheets.openCheatSheet" commandName="Open Cheat Sheet" description="Open a Cheat Sheet." category="_NXT5VfjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXYx2fjgEea4UdV0IbBN0w" elementId="cheatSheetId" name="Identifier"/>
  </commands>
  <commands xmi:id="_NXYx2vjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.file.closePart" commandName="Close Part" description="Close the active workbench part" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx2_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesViewDelete" commandName="Delete Repository" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx3PjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.viewSource.command" commandName="View Unformatted Text" category="_NXT5TvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx3fjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.editors.revisions.id.toggle" commandName="Toggle Revision Id Display" description="Toggles the display of the revision id" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx3vjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.project.cleanAction" commandName="Build Clean" description="Discard old built state" category="_NXT5VvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx3_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.moveLineDown" commandName="Move Lines Down" description="Moves the selected lines down" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx4PjgEea4UdV0IbBN0w" elementId="Ocaml.runCommand" commandName="Run" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx4fjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigate.back" commandName="Back" description="Navigate back" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx4vjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.select.wordNext" commandName="Select Next Word" description="Select the next word" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx4_jgEea4UdV0IbBN0w" elementId="org.eclipse.equinox.p2.ui.sdk.update" commandName="Check for Updates" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx5PjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.goto.pageDown" commandName="Page Down" description="Go down one page" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx5fjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.goto.textEnd" commandName="Text End" description="Go to the end of the text" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx5vjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.JavaBrowsingPerspective" commandName="Java Browsing" description="Show the Java Browsing perspective" category="_NXT5XPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx5_jgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.builds.ui.commands.OpenBuildElement" commandName="Open Build Element" category="_NXT5SPjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXYx6PjgEea4UdV0IbBN0w" elementId="element" name="Element"/>
  </commands>
  <commands xmi:id="_NXYx6fjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.part.previousPage" commandName="Previous Page" description="Switch to the previous page" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx6vjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.goto.matching.bracket" commandName="Go to Matching Bracket" description="Moves the cursor to the matching bracket" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx6_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.GarbageCollect" commandName="Collect Garbage" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx7PjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.CompareWithWorkingTree" commandName="Compare with Working Tree" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx7fjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.Branch" commandName="Branch" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx7vjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.project.closeProject" commandName="Close Project" description="Close the selected project" category="_NXT5VvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx7_jgEea4UdV0IbBN0w" elementId="org.eclipse.wst.xml.ui.previousSibling" commandName="Previous Sibling" description="Go to Previous Sibling" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx8PjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesViewConfigurePush" commandName="Configure Push..." category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx8fjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.findIncrementalReverse" commandName="Incremental Find Reverse" description="Incremental find reverse" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx8vjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.introduce.factory" commandName="Introduce Factory" description="Introduce a factory method to encapsulate invocation of the selected constructor" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx8_jgEea4UdV0IbBN0w" elementId="org.eclipse.ant.ui.antShortcut.run" commandName="Run Ant Build" description="Run Ant Build" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx9PjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.stash.apply" commandName="Apply Stashed Changes" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx9fjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.debug.ui.commands.Inspect" commandName="Inspect" description="Inspect result of evaluating selected text" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx9vjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.commit.CherryPick" commandName="Cherry Pick" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx9_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.use.supertype" commandName="Use Supertype Where Possible" description="Change occurrences of a type to use a supertype instead" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXYx-PjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.markTaskUnread" commandName="Mark Task Unread" category="_NXT5TvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY0PjgEea4UdV0IbBN0w" elementId="org.eclipse.search.ui.performTextSearchFile" commandName="Find Text in File" description="Searches the files in the file for specific text." category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY0fjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.goto.columnNext" commandName="Next Column" description="Go to the next column" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY0vjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.Squash" commandName="Squash Commits" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY0_jgEea4UdV0IbBN0w" elementId="org.eclipse.wst.sse.ui.structure.select.last" commandName="Restore Last Selection" description="Restore last selection" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY1PjgEea4UdV0IbBN0w" elementId="org.eclipse.search.ui.performTextSearchWorkingSet" commandName="Find Text in Working Set" description="Searches the files in the working set for specific text." category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY1fjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.goto.wordNext" commandName="Next Word" description="Go to the next word" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY1vjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.cut.line" commandName="Cut Line" description="Cut a line of text" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY1_jgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.builds.ui.command.NewTaskFromBuild" commandName="New Task From Build" category="_NXT5SPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY2PjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.folding.expand_all" commandName="Expand All" description="Expands all folded regions" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY2fjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.xsd.ui.refactor.makeElementGlobal" commandName="Make Local Element &amp;Global" description="Promotes local element to global level and replaces its references" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY2vjgEea4UdV0IbBN0w" elementId="org.eclipse.quickdiff.toggle" commandName="Quick Diff Toggle" description="Toggles quick diff information display on the line number ruler" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY2_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.deleteNext" commandName="Delete Next" description="Delete the next character" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY3PjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.FetchGerritChange" commandName="Fetch From Gerrit" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY3fjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.correction.encapsulateField.assist" commandName="Quick Assist - Create getter/setter for field" description="Invokes quick assist and selects 'Create getter/setter for field'" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY3vjgEea4UdV0IbBN0w" elementId="org.eclipse.oomph.setup.editor.openEditorDropdown" commandName="Open Setup Editor" category="_NXT5SvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY3_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.help.quickStartAction" commandName="Welcome" description="Show help for beginning users" category="_NXT5VfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY4PjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.SynchronizeAll" commandName="Synchronize Changed" category="_NXT5TvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY4fjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.debug.ui.commands.Watch" commandName="Watch" description="Create new watch expression" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY4vjgEea4UdV0IbBN0w" elementId="Ocaml.contentAssistCommand" commandName="Content Assist" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY4_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.Reword" commandName="Reword Commit" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY5PjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.hideShowEditors" commandName="Toggle Shared Area Visibility" description="Toggles the visibility of the shared area" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY5fjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.wikitext.context.ui.editor.folding.auto" commandName="Toggle Active Folding" description="Toggle Active Folding" category="_NXT5UPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY5vjgEea4UdV0IbBN0w" elementId="Ocaml.toplevelQuickEvalCommand" commandName="Eval In Toplevel" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY5_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.OpenCommit" commandName="Open Git Commit" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY6PjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.help.displayHelp" commandName="Display Help" description="Display a Help topic" category="_NXT5VfjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXZY6fjgEea4UdV0IbBN0w" elementId="href" name="Help topic href"/>
  </commands>
  <commands xmi:id="_NXZY6vjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.folding.restore" commandName="Reset Structure" description="Resets the folding structure" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY6_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.select.pageDown" commandName="Select Page Down" description="Select to the bottom of the page" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY7PjgEea4UdV0IbBN0w" elementId="org.eclipse.ltk.ui.refactor.create.refactoring.script" commandName="Create Script" description="Create a refactoring script from refactorings on the local workspace" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY7fjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.join.lines" commandName="Join Lines" description="Join lines of text" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY7vjgEea4UdV0IbBN0w" elementId="org.eclipse.help.ui.indexcommand" commandName="Index" description="Show Keyword Index" category="_NXT5VfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY7_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.showContextMenu" commandName="Show Context Menu" description="Show the context menu" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY8PjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.open.editor" commandName="Open Declaration" description="Open an editor on the selected element" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY8fjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.clean.up" commandName="Clean Up" description="Solve problems and improve code style on selected resources" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY8vjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.extract.local.variable" commandName="Extract Local Variable" description="Extracts an expression into a new local variable and uses the new local variable" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY8_jgEea4UdV0IbBN0w" elementId="org.eclipse.oomph.p2.ui.ExploreRepository" commandName="Explore Repository" category="_NXT5WvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY9PjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.debug.ui.localJavaShortcut.debug" commandName="Debug Java Application" description="Debug Java Application" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY9fjgEea4UdV0IbBN0w" elementId="org.eclipse.ltk.ui.refactor.show.refactoring.history" commandName="Open Refactoring History " description="Opens the refactoring history" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY9vjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.search.read.access.in.hierarchy" commandName="Read Access in Hierarchy" description="Search for read references of the selected element in its hierarchy" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY9_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigate.forward" commandName="Forward" description="Navigate forward" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY-PjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.correction.assist.proposals" commandName="Quick Fix" description="Suggest possible fixes for a problem" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY-fjgEea4UdV0IbBN0w" elementId="org.eclipse.buildship.ui.commands.openbuildscript" commandName="Open Gradle Build Script" description="Opens the Gradle build script for the selected Gradle project" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY-vjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.nextPerspective" commandName="Next Perspective" description="Switch to the next perspective" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY-_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.push.down" commandName="Push Down" description="Move members to subclasses" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY_PjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.UpdateRepositoryConfiguration" commandName="Update Repository Configuration" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY_fjgEea4UdV0IbBN0w" elementId="Ocaml.markOccurrencesCommand" commandName="Mark Occurrences" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY_vjgEea4UdV0IbBN0w" elementId="org.eclipse.buildship.ui.commands.openrunconfiguration" commandName="Open Gradle Run Configuration" description="Opens the Run Configuration for the selected Gradle tasks" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZY__jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.commit.StashApply" commandName="Apply Stashed Changes" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZZAPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.DeleteTag" commandName="&amp;Delete Tag" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZZAfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.remove.occurrence.annotations" commandName="Remove Occurrence Annotations" description="Removes the occurrence annotations from the current editor" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZZAvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.search.write.access.in.working.set" commandName="Write Access in Working Set" description="Search for write references to the selected element in a working set" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZZA_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.pinEditor" commandName="Pin Editor" description="Pin the current editor" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZZBPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigate.nextTab" commandName="Next Tab" description="Switch to the next tab" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ_4PjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.ShowVersions" commandName="Open" category="_NXT5YvjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXZ_4fjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.CompareMode" name="Compare mode"/>
  </commands>
  <commands xmi:id="_NXZ_4vjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.quickAccess" commandName="Quick Access" description="Quickly access UI elements" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ_4_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.showInformation" commandName="Show Tooltip Description" description="Displays information for the current caret location in a focused hover" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ_5PjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.add.import" commandName="Add Import" description="Create import statement on selection" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ_5fjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.attachment.open" commandName="Open Attachment" category="_NXT5RfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ_5vjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.goto.pageUp" commandName="Page Up" description="Go up one page" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ_5_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.goto.columnPrevious" commandName="Previous Column" description="Go to the previous column" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ_6PjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.submodule.sync" commandName="Sync Submodule" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ_6fjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.DeleteBranch" commandName="Delete Branch" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ_6vjgEea4UdV0IbBN0w" elementId="Ocaml.backstepReturnCommand" commandName="Backstep Return" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ_6_jgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.toggleMemoryMonitorsPane" commandName="Toggle Memory Monitors Pane" description="Toggle visibility of the Memory Monitors Pane" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ_7PjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.ConfigureUpstreamFetch" commandName="Configure Upstream Fetch" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ_7fjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.search.implementors.in.working.set" commandName="Implementors in Working Set" description="Search for implementors of the selected interface in a working set" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ_7vjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.Discard" commandName="Replace with File in Index" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ_7_jgEea4UdV0IbBN0w" elementId="org.eclipse.compare.selectNextChange" commandName="Select Next Change" description="Select Next Change" category="_NXT5UvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ_8PjgEea4UdV0IbBN0w" elementId="Ocaml.stepOverCommand" commandName="Step Over" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ_8fjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesViewCreateBranch" commandName="Create Branch..." category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ_8vjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesViewCopyPath" commandName="Copy Path to Clipboard" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ_8_jgEea4UdV0IbBN0w" elementId="org.eclipse.ltk.ui.refactoring.commands.renameResource" commandName="Rename Resource" description="Rename the selected resource and notify LTK participants." category="_NXT5XfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ_9PjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.builds.ui.command.NewTaskFromTest" commandName="New Task From Test" category="_NXT5SPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ_9fjgEea4UdV0IbBN0w" elementId="org.eclipse.oomph.setup.editor.perform.startup" commandName="Perform Setup Tasks (Startup)" category="_NXT5SvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ_9vjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.Rebase" commandName="Rebase on" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ_9_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.file.properties" commandName="Properties" description="Display the properties of the selected item" category="_NXT5UfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ_-PjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.commit.ShowInHistory" commandName="Show in History" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ_-fjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.previousTask" commandName="Previous Task Command" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ_-vjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.showRulerAnnotationInformation" commandName="Show Ruler Annotation Tooltip" description="Displays annotation information for the caret line in a focused hover" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ_-_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.ReplaceWithHead" commandName="Replace with HEAD revision" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ__PjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.correction.renameInFile.assist" commandName="Quick Assist - Rename in file" description="Invokes quick assist and selects 'Rename in file'" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXZ__fjgEea4UdV0IbBN0w" elementId="org.eclipse.recommenders.utils.rcp.commands.openPreferences" commandName="Open the preferences dialog" category="_NXT5YvjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXZ__vjgEea4UdV0IbBN0w" elementId="org.eclipse.recommenders.utils.rcp.linkContribution.href" name="URI" optional="false"/>
  </commands>
  <commands xmi:id="_NXZ___jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.browser.openBrowser" commandName="Open Browser" description="Opens the default web browser." category="_NXT5U_jgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXaAAPjgEea4UdV0IbBN0w" elementId="url" name="URL"/>
    <parameters xmi:id="_NXaAAfjgEea4UdV0IbBN0w" elementId="browserId" name="Browser Id"/>
    <parameters xmi:id="_NXaAAvjgEea4UdV0IbBN0w" elementId="name" name="Browser Name"/>
    <parameters xmi:id="_NXaAA_jgEea4UdV0IbBN0w" elementId="tooltip" name="Browser Tooltip"/>
  </commands>
  <commands xmi:id="_NXaABPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.activeContextInfo" commandName="Show activeContext Info" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXaABfjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.markTaskReadGoToPreviousUnread" commandName="Mark Task Read and Go To Previous Unread Task" category="_NXT5TvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXaABvjgEea4UdV0IbBN0w" elementId="Ocaml.openQuickOutlineCommand" commandName="Quick Outline" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXaAB_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.search.implement.occurrences" commandName="Search Implement Occurrences in File" description="Search for implement occurrences of a selected type" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXaACPjgEea4UdV0IbBN0w" elementId="Ocaml.stepCommand" commandName="Step" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXaACfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.select.textStart" commandName="Select Text Start" description="Select to the beginning of the text" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXaACvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.extract.constant" commandName="Extract Constant" description="Extracts a constant into a new static field and uses the new static field" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXaAC_jgEea4UdV0IbBN0w" elementId="org.eclipse.wst.sse.ui.cleanup.document" commandName="Cleanup Document..." description="Cleanup document" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXaADPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.DeleteBranch" commandName="Delete Branch..." category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXaADfjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.builds.ui.command.ShowBuildOutput.url" commandName="Show Build Output" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXaADvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.contentAssist.contextInformation" commandName="Context Information" description="Show Context Information" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXaAD_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.file.saveAs" commandName="Save As" description="Save the current contents to another location" category="_NXT5UfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXaAEPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.ConfigurePush" commandName="Configure Upstream Push" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXaAEfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.previousPerspective" commandName="Previous Perspective" description="Switch to the previous perspective" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXaAEvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.splitEditor" commandName="Toggle Split Editor" description="Split or join the currently active editor." category="_NXT5U_jgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXaAE_jgEea4UdV0IbBN0w" elementId="Splitter.isHorizontal" name="Orientation" optional="false"/>
  </commands>
  <commands xmi:id="_NXaAFPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigate.collapseAll" commandName="Collapse All" description="Collapse the current tree" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXaAFfjgEea4UdV0IbBN0w" elementId="org.eclipse.compare.copyAllRightToLeft" commandName="Copy All from Right to Left" description="Copy All Changes from Right to Left" category="_NXT5UvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXaAFvjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.command.nextpage" commandName="Next Page of Memory" description="Load next page of memory" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXam8PjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.command.gotoaddress" commandName="Go to Address" description="Go to Address" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXam8fjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.maximizePart" commandName="Maximize Active View or Editor" description="Toggles maximize/restore state of active view or editor" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXam8vjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.deactivateSelectedTask" commandName="Deactivate Selected Task" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXam8_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.lockToolBar" commandName="Lock the Toolbars" description="Lock the Toolbars" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXam9PjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.newEditor" commandName="New Editor" description="Open another editor on the active editor's input" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXam9fjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.correction.qualifyField" commandName="Quick Fix - Qualify field access" description="Invokes quick assist and selects 'Qualify field access'" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXam9vjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.Disconnect" commandName="Disconnect" description="Disconnect" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXam9_jgEea4UdV0IbBN0w" elementId="org.eclipse.wst.sse.ui.format" commandName="Format" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXam-PjgEea4UdV0IbBN0w" elementId="org.eclipse.search.ui.openSearchDialog" commandName="Open Search Dialog" description="Open the Search dialog" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXam-fjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.contentAssist.proposals" commandName="Content Assist" description="Content Assist" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXam-vjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigate.up" commandName="Up" description="Navigate up one level" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXam-_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.activateEditor" commandName="Activate Editor" description="Activate the editor" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXam_PjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.search.write.access.in.workspace" commandName="Write Access in Workspace" description="Search for write references to the selected element in the workspace" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXam_fjgEea4UdV0IbBN0w" elementId="org.eclipse.m2e.core.ui.command.addPlugin" commandName="Add Maven Plugin" description="Add Maven Plugin" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXam_vjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigate.removeFromWorkingSet" commandName="Remove From Working Set" description="Removes the selected object from a working set." category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXam__jgEea4UdV0IbBN0w" elementId="sed.tabletree.expandAll" commandName="Expand All" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanAPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.delete.line.to.end" commandName="Delete to End of Line" description="Delete to the end of a line of text" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanAfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.modify.method.parameters" commandName="Change Method Signature" description="Change method signature includes parameter names and parameter order" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanAvjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.commit.CreateBranch" commandName="Create Branch..." category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanA_jgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.openSelectedTask" commandName="Open Selected Task" category="_NXT5TvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanBPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesLinkWithSelection" commandName="Link with Selection" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanBfjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.context.ui.commands.toggle.focus.active.view" commandName="Focus on Active Task" description="Toggle the focus on active task for the active view" category="_NXT5TPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanBvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.correction.extractLocal.assist" commandName="Quick Assist - Extract local variable (replace all occurrences)" description="Invokes quick assist and selects 'Extract local variable (replace all occurrences)'" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanB_jgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.Terminate" commandName="Terminate" description="Terminate" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanCPjgEea4UdV0IbBN0w" elementId="org.eclipse.help.ui.ignoreMissingPlaceholders" commandName="Do not warn of missing documentation" description="Sets the help preferences to no longer report a warning about the current set of missing documents." category="_NXT5VfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanCfjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.ShowRepositoriesView" commandName="Show Git Repositories View" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanCvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.ide.deleteCompleted" commandName="Delete Completed Tasks" description="Delete the tasks marked as completed" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanC_jgEea4UdV0IbBN0w" elementId="org.eclipse.compare.compareWithOther" commandName="Compare With Other Resource" description="Compare resources, clipboard contents or editors" category="_NXT5UvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanDPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.goToNextUnread" commandName="Go To Next Unread Task" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanDfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.add.javadoc.comment" commandName="Add Javadoc Comment" description="Add a Javadoc comment stub to the member element" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanDvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.editors.revisions.author.toggle" commandName="Toggle Revision Author Display" description="Toggles the display of the revision author" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanD_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.goto.windowEnd" commandName="Window End" description="Go to the end of the window" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanEPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.CreatePatch" commandName="Create Patch" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanEfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.perspectives.showPerspective" commandName="Show Perspective" description="Show a particular perspective" category="_NXT5XPjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXanEvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.perspectives.showPerspective.perspectiveId" name="Parameter"/>
    <parameters xmi:id="_NXanE_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.perspectives.showPerspective.newWindow" name="In New Window"/>
  </commands>
  <commands xmi:id="_NXanFPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RebaseInteractiveCurrent" commandName="%RebaseInteractiveCurrentHandler.name" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanFfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.openEditorDropDown" commandName="Quick Switch Editor" description="Open the editor drop down list" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanFvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.goto.line" commandName="Go to Line" description="Go to a specified line of text" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanF_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.editors.quickdiff.revert" commandName="Revert Lines" description="Revert the current selection, block or deleted lines" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanGPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.deleteNextWord" commandName="Delete Next Word" description="Delete the next word" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanGfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.debug.ui.javaAppletShortcut.debug" commandName="Debug Java Applet" description="Debug Java Applet" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanGvjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.xml.ui.gotoMatchingTag" commandName="Matching Tag" description="Go to Matching Tag" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanG_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.toggleMarkOccurrences" commandName="Toggle Mark Occurrences" description="Toggles mark occurrences in Java editors" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanHPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.select.lineUp" commandName="Select Line Up" description="Extend the selection to the previous line of text" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanHfjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.SkipRebase" commandName="Skip commit and continue" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanHvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.replace.invocations" commandName="Replace Invocations" description="Replace invocations of the selected method" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanH_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.search.declarations.in.hierarchy" commandName="Declaration in Hierarchy" description="Search for declarations of the selected element in its hierarchy" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanIPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.undo" commandName="Undo" description="Undo the last operation" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanIfjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.SetQuickdiffBaseline" commandName="Set quickdiff baseline" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanIvjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.submodule.add" commandName="Add Submodule" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanI_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.cut.line.to.end" commandName="Cut to End of Line" description="Cut to the end of a line of text" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanJPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.correction.convertAnonymousToLocal.assist" commandName="Quick Assist - Convert anonymous to local class" description="Invokes quick assist and selects 'Convert anonymous to local class'" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanJfjgEea4UdV0IbBN0w" elementId="org.eclipse.compare.copyLeftToRight" commandName="Copy from Left to Right" description="Copy Current Change from Left to Right" category="_NXT5UvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanJvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.file.newQuickMenu" commandName="New menu" description="Open the New menu" category="_NXT5UfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXanJ_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.project.openProject" commandName="Open Project" description="Open a project" category="_NXT5VvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOAPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.file.openWorkspace" commandName="Switch Workspace" description="Open the workspace selection dialog" category="_NXT5UfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOAfjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.actions.WatchCommand" commandName="Watch" description="Create a watch expression from the current selection and add it to the Expressions view" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOAvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.file.closeAll" commandName="Close All" description="Close all editors" category="_NXT5UfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOA_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.navigate.open.type" commandName="Open Type" description="Open a type in a Java editor" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOBPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.cut" commandName="Cut" description="Cut the selection to the clipboard" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOBfjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.ShowBlame" commandName="Show Annotations" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOBvjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.org.eclipse.egit.ui.AbortRebase" commandName="Abort Rebase" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOB_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.introduce.indirection" commandName="Introduce Indirection" description="Introduce an indirection to encapsulate invocations of a selected method" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOCPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.correction.addSuppressWarnings" commandName="Quick Fix - Add @SuppressWarnings" description="Invokes quick fix and selects 'Add @SuppressWarnings' " category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOCfjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.Merge" commandName="Merge" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOCvjgEea4UdV0IbBN0w" elementId="org.eclipse.ltk.ui.refactor.apply.refactoring.script" commandName="Apply Script" description="Perform refactorings from a refactoring script on the local workspace" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOC_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.ReplaceWithRef" commandName="Replace with branch, tag, or reference" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbODPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.search.write.access.in.project" commandName="Write Access in Project" description="Search for write references to the selected element in the enclosing project" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbODfjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.submitTask" commandName="Submit Task" description="Submits the currently open task" category="_NXT5RfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbODvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.project.properties" commandName="Properties" description="Display the properties of the selected item's project " category="_NXT5VvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOD_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.extract.superclass" commandName="Extract Superclass" description="Extract a set of members into a new superclass and try to use the new superclass" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOEPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.CompareVersionsInTree" commandName="Compare in Tree" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOEfjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.xml.ui.reload.dependencies" commandName="Reload Dependencies" description="Reload Dependencies" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOEvjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.sse.ui.generate.xml" commandName="&amp;XML File..." category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOE_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.select.columnPrevious" commandName="Select Previous Column" description="Select the previous column" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOFPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.toggleShowSelectedElementOnly" commandName="Show Selected Element Only" description="Show Selected Element Only" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOFfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.junit.junitShortcut.rerunFailedFirst" commandName="Rerun JUnit Test - Failures First" description="Rerun JUnit Test - Failures First" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOFvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.file.export" commandName="Export" description="Export" category="_NXT5UfjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXbOF_jgEea4UdV0IbBN0w" elementId="exportWizardId" name="Export Wizard"/>
  </commands>
  <commands xmi:id="_NXbOGPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.correction.extractLocalNotReplaceOccurrences.assist" commandName="Quick Assist - Extract local variable" description="Invokes quick assist and selects 'Extract local variable'" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOGfjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.xsd.ui.refactor.makeTypeGlobal" commandName="Make &amp;Anonymous Type Global" description="Promotes anonymous type to global level and replaces its references" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOGvjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesToggleBranchHierarchy" commandName="Toggle Branch Representation" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOG_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.search.implementors.in.project" commandName="Implementors in Project" description="Search for implementors of the selected interface in the enclosing project" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOHPjgEea4UdV0IbBN0w" elementId="org.eclipse.ltk.ui.refactoring.commands.deleteResources" commandName="Delete Resources" description="Delete the selected resources and notify LTK participants." category="_NXT5XfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOHfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.file.print" commandName="Print" description="Print" category="_NXT5UfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOHvjgEea4UdV0IbBN0w" elementId="Ocaml.shiftRightCommand" commandName="Shift Right" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOH_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.ApplyPatch" commandName="Apply Patch" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOIPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.junit.junitShortcut.rerunLast" commandName="Rerun JUnit Test" description="Rerun JUnit Test" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOIfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.debug.ui.commands.AllReferences" commandName="All References" description="Inspect all references to the selected object" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOIvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.JavaPerspective" commandName="Java" description="Show the Java perspective" category="_NXT5XPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOI_jgEea4UdV0IbBN0w" elementId="org.eclipse.wst.sse.ui.format.active.elements" commandName="Format Active Elements" description="Format active elements" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOJPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.showRulerContextMenu" commandName="Show Ruler Context Menu" description="Show the context menu for the ruler" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOJfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.indent" commandName="Correct Indentation" description="Corrects the indentation of the selected lines" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOJvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.ide.copyConfigCommand" commandName="Copy Configuration Data To Clipboard" description="Copies the configuration data (system properties, installed bundles, etc) to the clipboard." category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOJ_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.search.references.in.working.set" commandName="References in Working Set" description="Search for references to the selected element in a working set" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOKPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.task.clearOutgoing" commandName="Clear Outgoing Changes" category="_NXT5TvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOKfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.folding.collapse" commandName="Collapse" description="Collapses the folded region at the current selection" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOKvjgEea4UdV0IbBN0w" elementId="Ocaml.shiftLeftCommand" commandName="Shift Left" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOK_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.smartEnterInverse" commandName="Insert Line Above Current Line" description="Adds a new line above the current line" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOLPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigate.forwardHistory" commandName="Forward History" description="Move forward in the editor navigation history" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOLfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.spy" commandName="Show Contributing Plug-in" description="Shows contribution information for the currently selected element" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOLvjgEea4UdV0IbBN0w" elementId="Ocaml.putBreakpointCommand" commandName="Put Breakpoint" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOL_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.help.helpSearch" commandName="Help Search" description="Open the help search" category="_NXT5VfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOMPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.infer.type.arguments" commandName="Infer Generic Type Arguments" description="Infer type arguments for references to generic classes and remove unnecessary casts" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXbOMfjgEea4UdV0IbBN0w" elementId="org.eclipse.search.ui.performTextSearchProject" commandName="Find Text in Project" description="Searches the files in the project for specific text." category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1EPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.goto.lineDown" commandName="Line Down" description="Go down one line of text" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1EfjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.builds.ui.command.ShowTestResults.url" commandName="Show Test Results" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1EvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.project.rebuildAll" commandName="Rebuild All" description="Rebuild all projects" category="_NXT5VvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1E_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.commit.Checkout" commandName="Checkout" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1FPjgEea4UdV0IbBN0w" elementId="org.eclipse.m2e.actions.LifeCycleClean.run" commandName="Run Maven Clean" description="Run Maven Clean" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1FfjgEea4UdV0IbBN0w" elementId="org.eclipse.gef.zoom_in" commandName="Zoom In" description="Zoom In" category="_NXT5XvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1FvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.gotoLastEditPosition" commandName="Last Edit Location" description="Last edit location" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1F_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.quick.format" commandName="Format Element" description="Format enclosing text element" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1GPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.open.hyperlink" commandName="Open Hyperlink" description="Opens the hyperlink at the caret location or opens a chooser if more than one hyperlink is available" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1GfjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.wikitext.ui.convertToEclipseHelpCommand" commandName="Generate Eclipse Help (*.html and *-toc.xml)" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1GvjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.command.prevpage" commandName="Previous Page of Memory" description="Load previous page of memory" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1G_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.debug.ui.commands.ForceReturn" commandName="Force Return" description="Forces return from method with value of selected expression " category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1HPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.openLocalFile" commandName="Open File..." description="Open a file" category="_NXT5UfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1HfjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.Disconnect" commandName="Disconnect" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1HvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.ide.configureFilters" commandName="Configure Contents..." description="Configure the filters to apply to the markers view" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1H_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigate.previousTab" commandName="Previous Tab" description="Switch to the previous tab" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1IPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.select.previous" commandName="Select Previous Element" description="Expand selection to include previous sibling" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1IfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.dialogs.openMessageDialog" commandName="Open Message Dialog" description="Open a Message Dialog" category="_NXT5WfjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXb1IvjgEea4UdV0IbBN0w" elementId="title" name="Title"/>
    <parameters xmi:id="_NXb1I_jgEea4UdV0IbBN0w" elementId="message" name="Message"/>
    <parameters xmi:id="_NXb1JPjgEea4UdV0IbBN0w" elementId="imageType" name="Image Type Constant" typeId="org.eclipse.ui.dialogs.Integer"/>
    <parameters xmi:id="_NXb1JfjgEea4UdV0IbBN0w" elementId="defaultIndex" name="Default Button Index" typeId="org.eclipse.ui.dialogs.Integer"/>
    <parameters xmi:id="_NXb1JvjgEea4UdV0IbBN0w" elementId="buttonLabel0" name="First Button Label"/>
    <parameters xmi:id="_NXb1J_jgEea4UdV0IbBN0w" elementId="buttonLabel1" name="Second Button Label"/>
    <parameters xmi:id="_NXb1KPjgEea4UdV0IbBN0w" elementId="buttonLabel2" name="Third Button Label"/>
    <parameters xmi:id="_NXb1KfjgEea4UdV0IbBN0w" elementId="buttonLabel3" name="Fourth Button Label"/>
    <parameters xmi:id="_NXb1KvjgEea4UdV0IbBN0w" elementId="cancelReturns" name="Return Value on Cancel"/>
  </commands>
  <commands xmi:id="_NXb1K_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.goto.lineEnd" commandName="Line End" description="Go to the end of the line of text" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1LPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.file.refresh" commandName="Refresh" description="Refresh the selected items" category="_NXT5UfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1LfjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.commit.CreateTag" commandName="Create Tag..." category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1LvjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesViewChangeCredentials" commandName="Change Credentials" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1L_jgEea4UdV0IbBN0w" elementId="org.eclipse.wst.xml.ui.referencedFileErrors" commandName="Show Details..." description="Show Details..." category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1MPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.correction.extractMethodInplace.assist" commandName="Quick Assist - Extract method" description="Invokes quick assist and selects 'Extract to method'" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1MfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.closeAllPerspectives" commandName="Close All Perspectives" description="Close all open perspectives" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1MvjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.RunLast" commandName="Run" description="Launch in run mode" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1M_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.externalTools.commands.OpenExternalToolsConfigurations" commandName="External Tools..." description="Open external tools launch configuration dialog" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1NPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.debug.ui.command.OpenFromClipboard" commandName="Open from Clipboard" description="Opens a Java element or a Java stack trace from clipboard" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1NfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.deletePrevious" commandName="Delete Previous" description="Delete the previous character" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1NvjgEea4UdV0IbBN0w" elementId="Ocaml.tabsToSpacesCommand" commandName="Convert Tabs to Spaces" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1N_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.select.lineStart" commandName="Select Line Start" description="Select to the beginning of the line of text" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1OPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.disconnected" commandName="Disconnected" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1OfjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.commit.Reword" commandName="Reword Commit" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1OvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.editors.lineNumberToggle" commandName="Show Line Numbers" description="Toggle display of line numbers" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1O_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.select.columnNext" commandName="Select Next Column" description="Select the next column" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1PPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.CompareWithPrevious" commandName="Compare with Previous Revision" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1PfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.search.read.access.in.workspace" commandName="Read Access in Workspace" description="Search for read references to the selected element in the workspace" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1PvjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.index.ui.command.ResetIndex" commandName="Refresh Search Index" category="_NXT5TvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1P_jgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.TerminateAndRelaunch" commandName="Terminate and Relaunch" description="Terminate and Relaunch" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1QPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.JavaHierarchyPerspective" commandName="Java Type Hierarchy" description="Show the Java Type Hierarchy perspective" category="_NXT5XPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1QfjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesToggleBranchCommit" commandName="Toggle Latest Branch Commit" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1QvjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.PushCommit" commandName="Push Commit..." category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1Q_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.surround.with.try.multicatch" commandName="Surround with try/multi-catch Block" description="Surround the selected text with a try/multi-catch block" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1RPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.Tag" commandName="Tag" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1RfjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.NoAssumeUnchanged" commandName="No Assume Unchanged" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1RvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.ide.showInSystemExplorer" commandName="Show In (System Explorer)" description="Show in system's explorer (file manager)" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1R_jgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.new.local.task" commandName="New Local Task" category="_NXT5TvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1SPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.select.lineDown" commandName="Select Line Down" description="Extend the selection to the next line of text" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1SfjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.RemoveAllBreakpoints" commandName="Remove All Breakpoints" description="Removes all breakpoints" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1SvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.sort.members" commandName="Sort Members" description="Sort all members using the member order preference" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXb1S_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigator.resources.nested.changeProjectPresentation" commandName="P&amp;rojects Presentation" category="_NXT5YvjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXb1TPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigator.resources.nested.enabled" name="&amp;Hierarchical"/>
    <parameters xmi:id="_NXb1TfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.commands.radioStateParameter" name="Nested Project view - Radio State" optional="false"/>
  </commands>
  <commands xmi:id="_NXccIPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.showKeyAssist" commandName="Show Key Assist" description="Show the key assist dialog" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccIfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.lowerCase" commandName="To Lower Case" description="Changes the selection to lower case" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccIvjgEea4UdV0IbBN0w" elementId="org.eclipse.m2e.discovery.ui" commandName="m2e Marketplace" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccI_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.CompareWithIndex" commandName="Compare with Index" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccJPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.introduce.parameter.object" commandName="Introduce Parameter Object" description="Introduce a parameter object to a selected method" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccJfjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.markTaskIncomplete" commandName="Mark Task Incomplete" category="_NXT5TvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccJvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.file.save" commandName="Save" description="Save the current contents" category="_NXT5UfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccJ_jgEea4UdV0IbBN0w" elementId="org.eclipse.gef.zoom_out" commandName="Zoom Out" description="Zoom Out" category="_NXT5XvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccKPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.commands.openElementInEditor" commandName="Open Java Element" description="Open a Java element in its editor" category="_NXT5TfjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXccKfjgEea4UdV0IbBN0w" elementId="elementRef" name="Java element reference" typeId="org.eclipse.jdt.ui.commands.javaElementReference" optional="false"/>
  </commands>
  <commands xmi:id="_NXccKvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.search.references.in.project" commandName="References in Project" description="Search for references to the selected element in the enclosing project" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccK_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.AddToIndex" commandName="Add to Index" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccLPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.discovery.ui.discoveryWizardCommand" commandName="Discovery Wizard" description="shows the connector discovery wizard" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccLfjgEea4UdV0IbBN0w" elementId="org.eclipse.buildship.ui.commands.refreshtaskview" commandName="Refresh View (Gradle Tasks)" description="Refreshes the Gradle Tasks view" category="_NXT5QfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccLvjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.sse.ui.toggle.comment" commandName="Toggle Comment" description="Toggle Comment" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccL_jgEea4UdV0IbBN0w" elementId="org.eclipse.team.ui.applyPatch" commandName="Apply Patch..." description="Apply a patch to one or more workspace projects." category="_NXT5QPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccMPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.markTaskReadGoToNextUnread" commandName="Mark Task Read and Go To Next Unread Task" category="_NXT5TvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccMfjgEea4UdV0IbBN0w" elementId="org.eclipse.buildship.ui.commands.rundefaulttasks" commandName="Run Gradle Default Tasks" description="Runs the default tasks of the selected Gradle project" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccMvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.help.tipsAndTricksAction" commandName="Tips and Tricks" description="Open the tips and tricks help page" category="_NXT5VfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccM_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.select.lineEnd" commandName="Select Line End" description="Select to the end of the line of text" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccNPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.format" commandName="Format" description="Format the selected text" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccNfjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.markTaskRead" commandName="Mark Task Read" category="_NXT5TvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccNvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.smartEnter" commandName="Insert Line Below Current Line" description="Adds a new line below the current line" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccN_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.goto.lineStart" commandName="Line Start" description="Go to the start of the line of text" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccOPjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.xml.ui.cmnd.contentmodel.sych" commandName="Synch" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccOfjgEea4UdV0IbBN0w" elementId="org.eclipse.oomph.setup.editor.synchronizePreferences" commandName="Synchronize Preferences" category="_NXT5SvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccOvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.select.wordPrevious" commandName="Select Previous Word" description="Select the previous word" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccO_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesViewConfigureBranch" commandName="Configure Branch" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccPPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.move.element" commandName="Move - Refactoring " description="Move the selected element to a new location" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccPfjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.Suspend" commandName="Suspend" description="Suspend" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccPvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.hippieCompletion" commandName="Word Completion" description="Context insensitive completion" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccP_jgEea4UdV0IbBN0w" elementId="Ocaml.removeBreakpointsCommand" commandName="Remove Breakpoints" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccQPjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.xsd.ui.refactor.renameTargetNamespace" commandName="Rename Target Namespace" description="Changes the target namespace of the schema" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccQfjgEea4UdV0IbBN0w" elementId="org.eclipse.team.ui.synchronizeLast" commandName="Repeat last synchronization" description="Repeat the last synchronization" category="_NXT5QPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccQvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.folding.collapseComments" commandName="Collapse Comments" description="Collapse all comments" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccQ_jgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.StepOver" commandName="Step Over" description="Step over" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccRPjgEea4UdV0IbBN0w" elementId="org.eclipse.compare.selectPreviousChange" commandName="Select Previous Change" description="Select Previous Change" category="_NXT5UvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccRfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.generate.javadoc" commandName="Generate Javadoc" description="Generates Javadoc for a selectable set of Java resources" category="_NXT5VvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccRvjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesViewConfigureGerritRemote" commandName="Gerrit Configuration..." category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccR_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.debug.ui.commands.StepIntoSelection" commandName="Step Into Selection" description="Step into the current selected statement" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccSPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.ide.configureColumns" commandName="Configure Columns..." description="Configure the columns in the markers view" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccSfjgEea4UdV0IbBN0w" elementId="org.eclipse.buildship.ui.shortcut.test.run" commandName="Run Gradle Test" description="Run Gradle test based on the current selection" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccSvjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.ReplaceWithCommit" commandName="Replace with commit" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccS_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.file.exit" commandName="Exit" description="Exit the application" category="_NXT5UfjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXccTPjgEea4UdV0IbBN0w" elementId="mayPrompt" name="may prompt"/>
  </commands>
  <commands xmi:id="_NXccTfjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.CompareWithHead" commandName="Compare with HEAD Revision" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccTvjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesViewOpen" commandName="Open" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccT_jgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.deactivateAllTasks" commandName="Deactivate Task" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccUPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.ShowHistory" commandName="Show in History" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccUfjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.DebugLast" commandName="Debug" description="Launch in debug mode" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccUvjgEea4UdV0IbBN0w" elementId="org.eclipse.m2e.core.ui.command.updateProject" commandName="Update Project" description="Update Maven Project configuration and dependencies" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccU_jgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.wikitext.ui.convertToHtmlCommand" commandName="Generate HTML" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccVPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.SimplePush" commandName="Push to Upstream" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccVfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.previousView" commandName="Previous View" description="Switch to the previous view" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccVvjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.addMemoryMonitor" commandName="Add Memory Block" description="Add memory block" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccV_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.junit.junitShortcut.run" commandName="Run JUnit Test" description="Run JUnit Test" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccWPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.generate.tostring" commandName="Generate toString()" description="Generates the toString() method for the type" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccWfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.organize.imports" commandName="Organize Imports" description="Evaluate all required imports and replace the current imports" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccWvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.selectAll" commandName="Select All" description="Select all" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccW_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.PushHeadToGerrit" commandName="Push Current Head to Gerrit" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccXPjgEea4UdV0IbBN0w" elementId="Ocaml.backstepOverCommand" commandName="Backstep Over" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccXfjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.DropToFrame" commandName="Drop to Frame" description="Drop to Frame" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccXvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.show.outline" commandName="Quick Outline" description="Show the quick outline for the editor input" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccX_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.debug.ui.commands.Display" commandName="Display" description="Display result of evaluating selected text" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccYPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.goto.next.member" commandName="Go to Next Member" description="Move the caret to the next member of the compilation unit" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccYfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.search.exception.occurrences" commandName="Search Exception Occurrences in File" description="Search for exception occurrences of a selected exception type" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccYvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.folding.expand" commandName="Expand" description="Expands the folded region at the current selection" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccY_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.project.rebuildProject" commandName="Rebuild Project" description="Rebuild the selected projects" category="_NXT5VvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccZPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.ShowBlame" commandName="Show Annotations" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccZfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.correction.assignToField.assist" commandName="Quick Assist - Assign to field" description="Invokes quick assist and selects 'Assign to field'" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccZvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.extract.method" commandName="Extract Method" description="Extract a set of statements or an expression into a new method and use the new method" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccZ_jgEea4UdV0IbBN0w" elementId="org.eclipse.m2e.core.pomFileAction.run" commandName="Run Maven Build" description="Run Maven Build" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccaPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.openRemoteTask" commandName="Open Remote Task" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccafjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.nextMemoryBlock" commandName="Next Memory Monitor" description="Show renderings from next memory monitor." category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXccavjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.internal.reflog.OpenInCommitViewerCommand" commandName="Open in Commit Viewer" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDMPjgEea4UdV0IbBN0w" elementId="org.eclipse.m2e.actions.LifeCycleInstall.run" commandName="Run Maven Install" description="Run Maven Install" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDMfjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.context.ui.commands.task.retrieveContext" commandName="Retrieve Context" category="_NXT5TPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDMvjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.Fetch" commandName="Fetch" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDM_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.copyLineDown" commandName="Copy Lines" description="Duplicates the selected lines and moves the selection to the copy" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDNPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.navigate.gotopackage" commandName="Go to Package" description="Go to Package" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDNfjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.task.ui.editor.QuickOutline" commandName="Quick Outline" description="Show the quick outline for the editor input" category="_NXT5TvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDNvjgEea4UdV0IbBN0w" elementId="org.eclipse.oomph.setup.editor.perform" commandName="Perform Setup Tasks" category="_NXT5SvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDN_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.help.installationDialog" commandName="Installation Information" description="Open the installation dialog" category="_NXT5VfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDOPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.goto.lineUp" commandName="Line Up" description="Go up one line of text" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDOfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.goto.windowStart" commandName="Window Start" description="Go to the start of the window" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDOvjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.ToggleStepFilters" commandName="Use Step Filters" description="Toggles enablement of debug step filters" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDO_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.correction.addBlock.assist" commandName="Quick Assist - Replace statement with block" description="Invokes quick assist and selects 'Replace statement with block'" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDPPjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.eof" commandName="EOF" description="Send end of file" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDPfjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.commons.ui.command.AddRepository" commandName="Add Repository" category="_NXT5YPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDPvjgEea4UdV0IbBN0w" elementId="org.eclipse.wb.core.commands.empty" commandName="Empty command" description="Command which does nothing" category="_NXT5Q_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDP_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigate.showInQuickMenu" commandName="Show In..." description="Open the Show In menu" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDQPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.copyLineUp" commandName="Duplicate Lines" description="Duplicates the selected lines and leaves the selection unchanged" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDQfjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.ToggleMethodBreakpoint" commandName="Toggle Method Breakpoint" description="Creates or removes a method breakpoint" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDQvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.navigate.java.open.structure" commandName="Open Structure" description="Show the structure of the selected element" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDQ_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.select.enclosing" commandName="Select Enclosing Element" description="Expand selection to include enclosing element" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDRPjgEea4UdV0IbBN0w" elementId="org.eclipse.ant.ui.antShortcut.debug" commandName="Debug Ant Build" description="Debug Ant Build" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDRfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigate.next" commandName="Next" description="Navigate to the next item" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDRvjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesViewRenameBranch" commandName="Rename Branch..." category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDR_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.closePerspective" commandName="Close Perspective" description="Close the current perspective" category="_NXT5U_jgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXdDSPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.closePerspective.perspectiveId" name="Perspective Id"/>
  </commands>
  <commands xmi:id="_NXdDSfjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.AssumeUnchanged" commandName="Assume Unchanged" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDSvjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.xml.ui.nextSibling" commandName="Next Sibling" description="Go to Next Sibling" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDS_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.cheatsheets.openCheatSheetURL" commandName="Open Cheat Sheet from URL" description="Open a Cheat Sheet from file at a specified URL." category="_NXT5VfjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXdDTPjgEea4UdV0IbBN0w" elementId="cheatSheetId" name="Identifier" optional="false"/>
    <parameters xmi:id="_NXdDTfjgEea4UdV0IbBN0w" elementId="name" name="Name" optional="false"/>
    <parameters xmi:id="_NXdDTvjgEea4UdV0IbBN0w" elementId="url" name="URL" optional="false"/>
  </commands>
  <commands xmi:id="_NXdDT_jgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.bugs.commands.newTaskFromMarker" commandName="New Task from Marker..." description="Report as Bug from Marker" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDUPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.context.ui.commands.focus.view" commandName="Focus View" category="_NXT5YvjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXdDUfjgEea4UdV0IbBN0w" elementId="viewId" name="View ID to Focus" optional="false"/>
  </commands>
  <commands xmi:id="_NXdDUvjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.StepReturn" commandName="Step Return" description="Step return" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDU_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.browser.openBundleResource" commandName="Open Resource in Browser" description="Opens a bundle resource in the default web browser." category="_NXT5U_jgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXdDVPjgEea4UdV0IbBN0w" elementId="plugin" name="Plugin"/>
    <parameters xmi:id="_NXdDVfjgEea4UdV0IbBN0w" elementId="path" name="Path"/>
  </commands>
  <commands xmi:id="_NXdDVvjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.PushBranch" commandName="Push Branch..." category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDV_jgEea4UdV0IbBN0w" elementId="org.eclipse.m2e.core.ui.command.addDependency" commandName="Add Maven Dependency" description="Add Maven Dependency" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDWPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.debug.ui.commands.Execute" commandName="Execute" description="Evaluate selected text" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDWfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.add.block.comment" commandName="Add Block Comment" description="Enclose the selection with a block comment" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDWvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.help.aboutAction" commandName="About" description="Open the about dialog" category="_NXT5VfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDW_jgEea4UdV0IbBN0w" elementId="Ocaml.commentSelectionCommand" commandName="Comment/Uncomment Selection" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDXPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.annotate.classFile" commandName="Annotate Class File" description="Externally add Annotations to a Class File." category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDXfjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.stash.create" commandName="Stash Changes..." category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDXvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.file.closeAllSaved" commandName="Close All Saved" description="Close all saved editors" category="_NXT5UfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDX_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.CheckoutCommand" commandName="Checkout" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDYPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.search.read.access.in.project" commandName="Read Access in Project" description="Search for read references to the selected element in the enclosing project" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDYfjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.activateSelectedTask" commandName="Activate Selected Task" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDYvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.redo" commandName="Redo" description="Redo the last operation" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDY_jgEea4UdV0IbBN0w" elementId="Ocaml.terminateCommand" commandName="Terminate" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDZPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.search.references.in.workspace" commandName="References in Workspace" description="Search for references to the selected element in the workspace" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDZfjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.sse.ui.format.document" commandName="Format" description="Format selection" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDZvjgEea4UdV0IbBN0w" elementId="org.eclipse.m2e.editor.RenameArtifactAction" commandName="Rename Maven Artifact..." category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDZ_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.correction.addNonNLS" commandName="Quick Fix - Add non-NLS tag" description="Invokes quick assist and selects 'Add non-NLS tag'" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDaPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigate.selectWorkingSets" commandName="Select Working Sets" description="Select the working sets that are applicable for this window." category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDafjgEea4UdV0IbBN0w" elementId="de.tum.in.www2.cupplugin.commands.RenameSymbol" commandName="Rename Symbol ..." category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdDavjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.rename.element" commandName="Rename - Refactoring " description="Rename the selected element" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqQPjgEea4UdV0IbBN0w" elementId="Ocaml.stepReturnCommand" commandName="Step Return" category="_NXT5S_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqQfjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.RemoveFromIndex" commandName="Remove from Index" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqQvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.newWizard" commandName="New" description="Open the New item wizard" category="_NXT5UfjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXdqQ_jgEea4UdV0IbBN0w" elementId="newWizardId" name="New Wizard"/>
  </commands>
  <commands xmi:id="_NXdqRPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.externalize.strings" commandName="Externalize Strings" description="Finds all strings that are not externalized and moves them into a separate property file" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqRfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.newWindow" commandName="New Window" description="Open another window" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqRvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.uncomment" commandName="Uncomment" description="Uncomment the selected Java comment lines" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqR_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.CherryPick" commandName="Cherry Pick" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqSPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.builds.ui.commands.CopyDetails" commandName="Copy Details" category="_NXT5SPjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXdqSfjgEea4UdV0IbBN0w" elementId="kind" name="Kind"/>
    <parameters xmi:id="_NXdqSvjgEea4UdV0IbBN0w" elementId="element" name="Element"/>
  </commands>
  <commands xmi:id="_NXdqS_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.file.close" commandName="Close" description="Close the active editor" category="_NXT5UfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqTPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.builds.ui.command.RunBuild" commandName="Run Build" category="_NXT5SPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqTfjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.CompareVersions" commandName="Compare with each other" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqTvjgEea4UdV0IbBN0w" elementId="org.eclipse.equinox.p2.ui.sdk.install" commandName="Install New Software..." category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqT_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.window.customizePerspective" commandName="Customize Perspective" description="Customize the current perspective" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqUPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.surround.with.try.catch" commandName="Surround with try/catch Block" description="Surround the selected text with a try/catch block" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqUfjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.context.ui.commands.interest.decrement" commandName="Make Less Interesting" description="Make Less Interesting" category="_NXT5TPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqUvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.externaltools.ExternalToolMenuDelegateToolbar" commandName="Run Last Launched External Tool" description="Runs the last launched external Tool" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqU_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.CheckoutCommand" commandName="Checkout" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqVPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.goto.previous.member" commandName="Go to Previous Member" description="Move the caret to the previous member of the compilation unit" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqVfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.search.occurrences.in.file" commandName="Search All Occurrences in File" description="Search for all occurrences of the selected element in its declaring file" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqVvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.moveLineUp" commandName="Move Lines Up" description="Moves the selected lines up" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqV_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.Reset" commandName="Reset..." category="_NXT5YvjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXdqWPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.ResetMode" name="Reset mode" optional="false"/>
  </commands>
  <commands xmi:id="_NXdqWfjgEea4UdV0IbBN0w" elementId="org.eclipse.equinox.p2.ui.discovery.commands.ShowBundleCatalog" commandName="Show Bundle Catalog" category="_NXT5YvjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXdqWvjgEea4UdV0IbBN0w" elementId="org.eclipse.equinox.p2.ui.discovery.commands.DirectoryParameter" name="Directory URL"/>
    <parameters xmi:id="_NXdqW_jgEea4UdV0IbBN0w" elementId="org.eclipse.equinox.p2.ui.discovery.commands.TagsParameter" name="Tags"/>
  </commands>
  <commands xmi:id="_NXdqXPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.gotoBreadcrumb" commandName="Show In Breadcrumb" description="Shows the Java editor breadcrumb and sets the keyboard focus into it" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqXfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigate.previousSubTab" commandName="Previous Sub-Tab" description="Switch to the previous sub-tab" category="_NXT5TfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqXvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.generate.hashcode.equals" commandName="Generate hashCode() and equals()" description="Generates hashCode() and equals() methods for the type" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqX_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigate.showIn" commandName="Show In" category="_NXT5TfjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXdqYPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigate.showIn.targetId" name="Show In Target Id" optional="false"/>
  </commands>
  <commands xmi:id="_NXdqYfjgEea4UdV0IbBN0w" elementId="sed.tabletree.collapseAll" commandName="Collapse All" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqYvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.dialogs.openInputDialog" commandName="Open Input Dialog" description="Open an Input Dialog" category="_NXT5WfjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXdqY_jgEea4UdV0IbBN0w" elementId="title" name="Title"/>
    <parameters xmi:id="_NXdqZPjgEea4UdV0IbBN0w" elementId="message" name="Message"/>
    <parameters xmi:id="_NXdqZfjgEea4UdV0IbBN0w" elementId="initialValue" name="Initial Value"/>
    <parameters xmi:id="_NXdqZvjgEea4UdV0IbBN0w" elementId="cancelReturns" name="Return Value on Cancel"/>
  </commands>
  <commands xmi:id="_NXdqZ_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesViewRemoveRemote" commandName="Delete Remote" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqaPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RebaseCurrent" commandName="Rebase" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqafjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.extract.class" commandName="Extract Class..." description="Extracts fields into a new class" category="_NXT5VPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqavjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.correction.extractConstant.assist" commandName="Quick Assist - Extract constant" description="Invokes quick assist and selects 'Extract constant'" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqa_jgEea4UdV0IbBN0w" elementId="org.eclipse.recommenders.rcp.commands.extensionDiscovery" commandName="Discover New Extensions" category="_NXT5YvjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXdqbPjgEea4UdV0IbBN0w" elementId="org.eclipse.recommenders.utils.rcp.linkContribution.href" name="URI" optional="false"/>
  </commands>
  <commands xmi:id="_NXdqbfjgEea4UdV0IbBN0w" elementId="org.eclipse.compare.copyRightToLeft" commandName="Copy from Right to Left" description="Copy Current Change from Right to Left" category="_NXT5UvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqbvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.ide.markCompleted" commandName="Mark Completed" description="Mark the selected tasks as completed" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqb_jgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.commands.OpenProfileConfigurations" commandName="Profile..." description="Open profile launch configuration dialog" category="_NXT5WPjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqcPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.recenter" commandName="Recenter" description="Scroll cursor line to center, top and bottom" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqcfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.add.unimplemented.constructors" commandName="Generate Constructors from Superclass" description="Evaluate and add constructors from superclass" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqcvjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.builds.ui.commands.OpenBuildElementWithBrowser.url" commandName="Open Build with Browser" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqc_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.select.windowStart" commandName="Select Window Start" description="Select to the start of the window" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqdPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.command.markTaskComplete" commandName="Mark Task Complete" category="_NXT5TvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqdfjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.source.quickMenu" commandName="Show Source Quick Menu" description="Shows the source quick menu" category="_NXT5X_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqdvjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.edit.text.java.search.declarations.in.project" commandName="Declaration in Project" description="Search for declarations of the selected element in the enclosing project" category="_NXT5V_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqd_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.history.Revert" commandName="Revert Commit" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqePjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.edit.text.scroll.lineDown" commandName="Scroll Line Down" description="Scroll down one line of text" category="_NXT5SfjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqefjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.sse.ui.search.find.occurrences" commandName="Occurrences in File" description="Find occurrences of the selection in the file" category="_NXT5QvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqevjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.ToggleCoolbarAction" commandName="Toggle Toolbar Visibility" description="Toggles the visibility of the window toolbar" category="_NXT5U_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqe_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.RepositoriesViewImportProjects" commandName="Import Projects..." description="Import or create in local Git repository" category="_NXT5W_jgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqfPjgEea4UdV0IbBN0w" elementId="org.eclipse.wst.sse.ui.outline.customFilter" commandName="&amp;Filters" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NXdqffjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.navigate.openResource" commandName="Open Resource" description="Open an editor on a particular resource" category="_NXT5TfjgEea4UdV0IbBN0w">
    <parameters xmi:id="_NXdqfvjgEea4UdV0IbBN0w" elementId="filePath" name="File Path" typeId="org.eclipse.ui.ide.resourcePath"/>
  </commands>
  <commands xmi:id="_NXdqf_jgEea4UdV0IbBN0w" elementId="org.eclipse.compare.copyAllLeftToRight" commandName="Copy All from Left to Right" description="Copy All Changes from Left to Right" category="_NXT5UvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NiCikPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.CompareWithCommit" commandName="org.eclipse.egit.ui.team.CompareWithCommit"/>
  <commands xmi:id="_NiDJoPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.CompareWithRevision" commandName="org.eclipse.egit.ui.team.CompareWithRevision"/>
  <commands xmi:id="_NiDwsPjgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.team.ReplaceWithPrevious" commandName="org.eclipse.egit.ui.team.ReplaceWithPrevious"/>
  <commands xmi:id="_NyD7kPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.search.searchActionSet/org.eclipse.search.OpenSearchDialogPage" commandName="Search..." description="Search" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyEioPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.team.ui.actionSet/org.eclipse.team.ui.synchronizeAll" commandName="Synchronize..." description="Synchronize..." category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyFJsPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.team.ui.actionSet/org.eclipse.team.ui.ConfigureProject" commandName="Share Project..." description="Share the project with others using a version and configuration management system." category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyFwwPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.ui.externaltools.ExternalToolsSet/org.eclipse.ui.externaltools.ExternalToolMenuDelegateMenu" commandName="External Tools" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyI0EPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.wb.core.ui.actionset/org.eclipse.wb.core.wizards.actions.NewDesignerTypeDropDownAction" commandName="New Visual Class" description="Create new visual classes" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyKCMPjgEea4UdV0IbBN0w" elementId="Ocaml.cleanCommand" commandName="Clean" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyKCMfjgEea4UdV0IbBN0w" elementId="Ocaml.switchSpellCheckerCommand" commandName="Switch Spell Checker" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyKpQPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.ant.ui.actionSet.presentation/org.eclipse.ant.ui.toggleAutoReconcile" commandName="Toggle Ant Editor Auto Reconcile" description="Toggle Ant Editor Auto Reconcile" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyL3YPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.launchActionSet/org.eclipse.debug.internal.ui.actions.RunWithConfigurationAction" commandName="Run As" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyMecPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.launchActionSet/org.eclipse.debug.internal.ui.actions.RunHistoryMenuAction" commandName="Run History" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyMecfjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.launchActionSet/org.eclipse.debug.internal.ui.actions.RunDropDownAction" commandName="Run" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyNFgPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.launchActionSet/org.eclipse.debug.internal.ui.actions.DebugWithConfigurationAction" commandName="Debug As" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyNFgfjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.launchActionSet/org.eclipse.debug.internal.ui.actions.DebugHistoryMenuAction" commandName="Debug History" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyNFgvjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.launchActionSet/org.eclipse.debug.internal.ui.actions.DebugDropDownAction" commandName="Debug" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyNskPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.profileActionSet/org.eclipse.debug.internal.ui.actions.ProfileDropDownAction" commandName="Profile" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyNskfjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.profileActionSet/org.eclipse.debug.internal.ui.actions.ProfileWithConfigurationAction" commandName="Profile As" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyNskvjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.profileActionSet/org.eclipse.debug.internal.ui.actions.ProfileHistoryMenuAction" commandName="Profile History" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyPhwPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.ui.JavaElementCreationActionSet/org.eclipse.jdt.ui.actions.NewTypeDropDown" commandName="Class..." description="New Java Class" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyQI0PjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.ui.JavaElementCreationActionSet/org.eclipse.jdt.ui.actions.OpenPackageWizard" commandName="Package..." description="New Java Package" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyQI0fjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.ui.JavaElementCreationActionSet/org.eclipse.jdt.ui.actions.OpenProjectWizard" commandName="Java Project..." description="New Java Project" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyQv4PjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.ui.SearchActionSet/org.eclipse.jdt.ui.actions.OpenJavaSearchPage" commandName="Java..." category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyRW8PjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.mylyn.java.actionSet.browsing/org.eclipse.mylyn.java.ui.actions.ApplyMylynToBrowsingPerspectiveAction" commandName="Focus Browsing Perspective" description="Focus Java Browsing Views on Active Task" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyR-APjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.mylyn.doc.actionSet/org.eclipse.mylyn.tasks.ui.bug.report" commandName="Report Bug or Enhancement..." description="Report Bug or Enhancement" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyR-AfjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.mylyn.tasks.ui.navigation.additions/org.eclipse.mylyn.tasks.ui.navigate.task.history" commandName="Activate Previous Task" description="Activate Previous Task" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NySlEPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.ui.cheatsheets.actionSet/org.eclipse.ui.cheatsheets.actions.CheatSheetHelpMenuAction" commandName="Cheat Sheets..." category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NySlEfjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.m2e.jdt.ui.downloadSourcesContribution/org.eclipse.m2e.jdt.ui.downloadSourcesAction" commandName="label" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyTMIPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.m2e.jdt.ui.downloadSourcesContribution_38/org.eclipse.m2e.jdt.ui.downloadSourcesAction_38" commandName="label" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyTMIfjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.ui.texteditor.ruler.actions/org.eclipse.ui.texteditor.BookmarkRulerAction" commandName="Text Editor Bookmark Ruler Action" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyTMIvjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.ui.texteditor.ruler.actions/org.eclipse.ui.texteditor.SelectRulerAction" commandName="Text Editor Ruler Single-Click" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyTMI_jgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" commandName="%AddBreakpoint.label" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyTzMPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.ui.texteditor.ruler.actions/org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction" commandName="label" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyTzMfjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.wst.dtd.core.dtdsource.ruler.actions/org.eclipse.ui.texteditor.BookmarkRulerAction" commandName="Add Bookmark..." category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyUaQPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.wst.dtd.core.dtdsource.ruler.actions/org.eclipse.ui.texteditor.SelectRulerAction" commandName="Select Ruler" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyUaQfjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.core.runtime.xml.source.ruler.actions/org.eclipse.ui.texteditor.BookmarkRulerAction" commandName="Add Bookmark..." category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyUaQvjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.core.runtime.xml.source.ruler.actions/org.eclipse.ui.texteditor.SelectRulerAction" commandName="Select Ruler" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyUaQ_jgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.ant.ui.BreakpointRulerActions/org.eclipse.ant.ui.actions.ManageBreakpointRulerAction" commandName="Toggle Breakpoint" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyVBUPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.ClassFileEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" commandName="Toggle Breakpoint" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyVBUfjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.JavaSnippetToolbarActions/org.eclipse.jdt.debug.ui.SnippetExecute" commandName="Execute" description="Execute the Selected Text" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyVoYPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.JavaSnippetToolbarActions/org.eclipse.jdt.debug.ui.SnippetDisplay" commandName="Display" description="Display Result of Evaluating Selected Text" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyVoYfjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.JavaSnippetToolbarActions/org.eclipse.jdt.debug.ui.SnippetInspect" commandName="Inspect" description="Inspect Result of Evaluating Selected Text" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyVoYvjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.internal.ui.CompilationUnitEditor.ruler.actions/org.eclipse.jdt.internal.ui.javaeditor.BookmarkRulerAction" commandName="Java Editor Bookmark Ruler Action" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyVoY_jgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.internal.ui.CompilationUnitEditor.ruler.actions/org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction" commandName="Java Editor Ruler Single-Click" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyWPcPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.internal.ui.ClassFileEditor.ruler.actions/org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction" commandName="Java Editor Ruler Single-Click" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyWPcfjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.internal.ui.PropertiesFileEditor.ruler.actions/org.eclipse.jdt.internal.ui.propertiesfileeditor.BookmarkRulerAction" commandName="Java Editor Bookmark Ruler Action" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyWPcvjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.internal.ui.PropertiesFileEditor.ruler.actions/org.eclipse.jdt.internal.ui.propertiesfileeditor.SelectRulerAction" commandName="Java Editor Ruler Single-Click" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyW2gPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.wst.xsd.core.xsdsource.ruler.actions/org.eclipse.ui.texteditor.BookmarkRulerAction" commandName="Add Bookmark..." category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyW2gfjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.wst.xsd.core.xsdsource.ruler.actions/org.eclipse.ui.texteditor.SelectRulerAction" commandName="Select Ruler" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyW2gvjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.PulldownActions/org.eclipse.debug.ui.debugview.pulldown.ViewManagementAction" commandName="View Management..." category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyXdkPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.debugview.toolbar/org.eclipse.debug.ui.debugview.toolbar.removeAllTerminated" commandName="Remove All Terminated" description="Remove All Terminated Launches" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyXdkfjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.breakpointsview.toolbar/org.eclipse.debug.ui.breakpointsView.toolbar.removeAll" commandName="Remove All" description="Remove All Breakpoints" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyXdkvjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.breakpointsview.toolbar/org.eclipse.debug.ui.breakpointsView.toolbar.linkWithDebugView" commandName="Link with Debug View" description="Link with Debug View" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyYEoPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.breakpointsview.toolbar/org.eclipse.debug.ui.breakpointsView.toolbar.workingSets" commandName="Working Sets..." description="Manage Working Sets" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyYEofjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.breakpointsview.toolbar/org.eclipse.debug.ui.breakpointsView.toolbar.clearDefaultBreakpointGroup" commandName="Deselect Default Working Set" description="Deselect Default Working Set" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyYEovjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.breakpointsview.toolbar/org.eclipse.debug.ui.breakpointsView.toolbar.setDefaultBreakpointGroup" commandName="Select Default Working Set..." description="Select Default Working Set" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyYEo_jgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.breakpointsview.toolbar/org.eclipse.debug.ui.breakpointsView.toolbar.groupByAction" commandName="Group By" description="Show" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyYrsPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.expressionsView.toolbar/org.eclipse.debug.ui.expresssionsView.toolbar.removeAll" commandName="Remove All" description="Remove All Expressions" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyYrsfjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.expressionsView.toolbar/org.eclipse.debug.ui.expresssionsView.toolbar.AddWatchExpression" commandName="Add Watch Expression..." description="Create a new watch expression" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyYrsvjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.memoryView.toolbar/org.eclipse.debug.ui.PinMemoryBlockAction" commandName="Pin Memory Monitor" description="Pin Memory Monitor" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyYrs_jgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.memoryView.toolbar/org.eclipse.debug.ui.NewMemoryViewAction" commandName="New Memory View" description="New Memory View" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyZSwPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.memoryView.toolbar/org.eclipse.debug.ui.togglemonitors" commandName="Toggle Memory Monitors Pane" description="Toggle Memory Monitors Pane" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyZSwfjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.memoryView.toolbar/org.eclipse.debug.ui.linkrenderingpanes" commandName="Link Memory Rendering Panes" description="Link Memory Rendering Panes" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyZSwvjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.memoryView.toolbar/org.eclipse.debug.ui.tablerendering.preferencesaction" commandName="Table Renderings Preferences..." description="&amp;Table Renderings Preferences..." category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyZ50PjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.memoryView.toolbar/org.eclipse.debug.ui.togglesplitpane" commandName="Toggle Split Pane" description="Toggle Split Pane" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyZ50fjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.memoryView.toolbar/org.eclipse.debug.ui.switchMemoryBlock" commandName="Switch Memory Monitor" description="Switch Memory Monitor" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyZ50vjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.debug.ui.memoryView.toolbar/org.eclipse.debug.ui.memoryViewPreferencesAction" commandName="Preferences..." description="&amp;Preferences..." category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyZ50_jgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.VariableViewActions/org.eclipse.jdt.debug.ui.variableViewActions.Preferences" commandName="Java Preferences..." description="Opens preferences for Java variables" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_Nyag4PjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.VariableViewActions/org.eclipse.jdt.debug.ui.variablesViewActions.AllReferencesInView" commandName="Show References" description="Shows references to each object in the variables view as an array of objects." category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_Nyag4fjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.VariableViewActions/org.eclipse.jdt.debug.ui.variableViewActions.ShowNullEntries" commandName="Show Null Array Entries" description="Show Null Array Entries" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_Nyag4vjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.VariableViewActions/org.eclipse.jdt.debug.ui.variableViewActions.ShowQualified" commandName="Show Qualified Names" description="Show Qualified Names" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NybH8PjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.VariableViewActions/org.eclipse.jdt.debug.ui.variableViewActions.ShowStatic" commandName="Show Static Variables" description="Show Static Variables" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NybH8fjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.VariableViewActions/org.eclipse.jdt.debug.ui.variableViewActions.ShowConstants" commandName="Show Constants" description="Show Constants" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NybH8vjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.ExpressionViewActions/org.eclipse.jdt.debug.ui.variableViewActions.Preferences" commandName="Java Preferences..." description="Opens preferences for Java variables" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NybH8_jgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.ExpressionViewActions/org.eclipse.jdt.debug.ui.expressionViewActions.AllReferencesInView" commandName="Show References" description="Show &amp;References" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NybvAPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.ExpressionViewActions/org.eclipse.jdt.debug.ui.variableViewActions.ShowNullEntries" commandName="Show Null Array Entries" description="Show Null Array Entries" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NybvAfjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.ExpressionViewActions/org.eclipse.jdt.debug.ui.expressionViewActions.ShowQualified" commandName="Show Qualified Names" description="Show Qualified Names" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NybvAvjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.ExpressionViewActions/org.eclipse.jdt.debug.ui.expressionViewActions.ShowStatic" commandName="Show Static Variables" description="Show Static Variables" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NycWEPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.ExpressionViewActions/org.eclipse.jdt.debug.ui.expressionViewActions.ShowConstants" commandName="Show Constants" description="Show Constants" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NycWEfjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.BreakpointViewActions/org.eclipse.jdt.debug.ui.actions.AddException" commandName="Add Java Exception Breakpoint" description="Add Java Exception Breakpoint" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NycWEvjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.BreakpointViewActions/org.eclipse.jdt.debug.ui.breakpointViewActions.ShowQualified" commandName="Show Qualified Names" description="Show Qualified Names" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NycWE_jgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.LaunchViewActions/org.eclipse.jdt.debug.ui.launchViewActions.ShowThreadGroups" commandName="Show Thread Groups" description="Show Thread Groups" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_Nyc9IPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.LaunchViewActions/org.eclipse.jdt.debug.ui.launchViewActions.ShowQualified" commandName="Show Qualified Names" description="Show Qualified Names" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_Nyc9IfjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.LaunchViewActions/org.eclipse.jdt.debug.ui.launchViewActions.ShowSystemThreads" commandName="Show System Threads" description="Show System Threads" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_Nyc9IvjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.LaunchViewActions/org.eclipse.jdt.debug.ui.launchViewActions.ShowMonitorThreadInfo" commandName="Show Monitors" description="Show the Thread &amp; Monitor Information" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_Nyc9I_jgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.DisplayViewActions/org.eclipse.jdt.debug.ui.displayViewToolbar.Watch" commandName="Watch" description="Create a Watch Expression from the Selected Text" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NydkMPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.DisplayViewActions/org.eclipse.jdt.debug.ui.displayViewToolbar.Execute" commandName="Execute" description="Execute the Selected Text" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NydkMfjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.DisplayViewActions/org.eclipse.jdt.debug.ui.displayViewToolbar.Display" commandName="Display" description="Display Result of Evaluating Selected Text" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NydkMvjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.DisplayViewActions/org.eclipse.jdt.debug.ui.displayViewToolbar.Inspect" commandName="Inspect" description="Inspect Result of Evaluating Selected Text" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyeLQPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.mylyn.context.ui.outline.contribution/org.eclipse.mylyn.context.ui.contentOutline.focus" commandName="Focus on Active Task" description="Focus on Active Task (Alt+click to reveal filtered elements)" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyeLQfjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.mylyn.java.ui.markers.breakpoints.contribution/org.eclipse.mylyn.java.ui.actions.focus.markers.breakpoints" commandName="Focus on Active Task" description="Focus on Active Task" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyeLQvjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.mylyn.ui.debug.view.contribution/org.eclipse.mylyn.ui.actions.FilterResourceNavigatorAction" commandName="Focus on Active Task (Experimental)" description="Focus on Active Task (Experimental)" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyeyUPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.mylyn.ui.projectexplorer.filter/org.eclipse.mylyn.ide.ui.actions.focus.projectExplorer" commandName="Focus on Active Task" description="Focus on Active Task (Alt+click to reveal filtered elements)" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyeyUfjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.mylyn.ui.resource.navigator.filter/org.eclipse.mylyn.ide.ui.actions.focus.resourceNavigator" commandName="Focus on Active Task" description="Focus on Active Task (Alt+click to reveal filtered elements)" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyeyUvjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.mylyn.problems.contribution/org.eclipse.mylyn.ide.ui.actions.focus.markers.problems" commandName="Focus on Active Task" description="Focus on Active Task" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyeyU_jgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.mylyn.markers.all.contribution/org.eclipse.mylyn.ide.ui.actions.focus.markers.all" commandName="Focus on Active Task" description="Focus on Active Task" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyfZYPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.mylyn.markers.tasks.contribution/org.eclipse.mylyn.ide.ui.actions.focus.markers.tasks" commandName="Focus on Active Task" description="Focus on Active Task" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyfZYfjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.mylyn.markers.bookmarks.contribution/org.eclipse.mylyn.ide.ui.actions.focus.markers.bookmarks" commandName="Focus on Active Task" description="Focus on Active Task" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NyfZYvjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.mylyn.java.explorer.contribution/org.eclipse.mylyn.java.actions.focus.packageExplorer" commandName="Focus on Active Task" description="Focus on Active Task (Alt+click to reveal filtered elements)" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NygAcPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.mylyn.tasks.ui.actions.view/org.eclipse.mylyn.tasks.ui.search.open" commandName="Search Repository..." category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NygAcfjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.mylyn.tasks.ui.actions.view/org.eclipse.mylyn.tasks.ui.synchronize.changed" commandName="Synchronize Changed" description="Synchronize Changed" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NygAcvjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.mylyn.tasks.ui.actions.view/org.eclipse.mylyn.tasks.ui.tasks.restore" commandName="Restore Tasks from History..." category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NygAc_jgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.mylyn.tasks.ui.actions.view/org.eclipse.mylyn.tasks.ui.open.repositories.view" commandName="Show Task Repositories View" description="Show Task Repositories View" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NygngPjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.mylyn.tasks.ui.actions.view/org.eclipse.mylyn.doc.legend.show.action" commandName="Show UI Legend" description="Show Tasks UI Legend" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <commands xmi:id="_NygngfjgEea4UdV0IbBN0w" elementId="AUTOGEN:::org.eclipse.mylyn.tasks.ui.actions.view/org.eclipse.mylyn.context.ui.actions.tasklist.focus" commandName="Focus on Workweek" description="Focus on Workweek" category="_NXT5YvjgEea4UdV0IbBN0w"/>
  <addons xmi:id="_NV9OaPjgEea4UdV0IbBN0w" elementId="org.eclipse.e4.core.commands.service" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.core.commands/org.eclipse.e4.core.commands.CommandServiceAddon"/>
  <addons xmi:id="_NV9OafjgEea4UdV0IbBN0w" elementId="org.eclipse.e4.ui.contexts.service" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.services/org.eclipse.e4.ui.services.ContextServiceAddon"/>
  <addons xmi:id="_NV9OavjgEea4UdV0IbBN0w" elementId="org.eclipse.e4.ui.bindings.service" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.bindings/org.eclipse.e4.ui.bindings.BindingServiceAddon"/>
  <addons xmi:id="_NV9Oa_jgEea4UdV0IbBN0w" elementId="org.eclipse.e4.ui.workbench.commands.model" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.addons.CommandProcessingAddon"/>
  <addons xmi:id="_NV9ObPjgEea4UdV0IbBN0w" elementId="org.eclipse.e4.ui.workbench.contexts.model" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.addons.ContextProcessingAddon"/>
  <addons xmi:id="_NV9ObfjgEea4UdV0IbBN0w" elementId="org.eclipse.e4.ui.workbench.bindings.model" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.swt/org.eclipse.e4.ui.workbench.swt.util.BindingProcessingAddon"/>
  <addons xmi:id="_NV9ObvjgEea4UdV0IbBN0w" elementId="Cleanup Addon" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.cleanupaddon.CleanupAddon"/>
  <addons xmi:id="_NV9Ob_jgEea4UdV0IbBN0w" elementId="DnD Addon" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.dndaddon.DnDAddon"/>
  <addons xmi:id="_NV9OcPjgEea4UdV0IbBN0w" elementId="MinMax Addon" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.minmax.MinMaxAddon"/>
  <addons xmi:id="_NV9OcfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.workbench.addon.0" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.addons.HandlerProcessingAddon"/>
  <addons xmi:id="_NWL34PjgEea4UdV0IbBN0w" elementId="SplitterAddon" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.splitteraddon.SplitterAddon"/>
  <addons xmi:id="_dz0JgGOlEeSMMaPQU2nlzw" elementId="org.eclipse.ui.ide.application.addon.0" contributorURI="platform:/plugin/org.eclipse.ui.ide.application" contributionURI="bundleclass://org.eclipse.ui.ide.application/org.eclipse.ui.internal.ide.application.addons.ModelCleanupAddon"/>
  <categories xmi:id="_NXT5QPjgEea4UdV0IbBN0w" elementId="org.eclipse.team.ui.category.team" name="Team" description="Actions that apply when working with a Team"/>
  <categories xmi:id="_NXT5QfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.category.views" name="Views" description="Commands for opening views"/>
  <categories xmi:id="_NXT5QvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.category.edit" name="Edit"/>
  <categories xmi:id="_NXT5Q_jgEea4UdV0IbBN0w" elementId="org.eclipse.wb.core.actions.category" name="WindowBuilder Pro" description="WindowBuilder Pro actions"/>
  <categories xmi:id="_NXT5RPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.wikitext.ui.editor.category" name="WikiText Markup Editing Commands" description="commands for editing lightweight markup"/>
  <categories xmi:id="_NXT5RfjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.category.editor" name="Task Editor"/>
  <categories xmi:id="_NXT5RvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.ide.markerContents" name="Contents" description="The category for menu contents"/>
  <categories xmi:id="_NXT5R_jgEea4UdV0IbBN0w" elementId="org.eclipse.buildship.ui.project" name="Buildship" description="Contains the Buildship specific commands"/>
  <categories xmi:id="_NXT5SPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.builds.ui.category.Commands" name="Builds"/>
  <categories xmi:id="_NXT5SfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.category.textEditor" name="Text Editing" description="Text Editing Commands"/>
  <categories xmi:id="_NXT5SvjgEea4UdV0IbBN0w" elementId="org.eclipse.oomph.setup.category" name="Oomph Setup"/>
  <categories xmi:id="_NXT5S_jgEea4UdV0IbBN0w" elementId="Ocaml.commandscategory" name="Ocaml Commands"/>
  <categories xmi:id="_NXT5TPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.context.ui.commands" name="Focused UI" description="Task-Focused Interface"/>
  <categories xmi:id="_NXT5TfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.category.navigate" name="Navigate"/>
  <categories xmi:id="_NXT5TvjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.tasks.ui.commands" name="Task Repositories"/>
  <categories xmi:id="_NXT5T_jgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.java.ui.commands" name="Java Context" description="Java Task-Focused Interface Commands"/>
  <categories xmi:id="_NXT5UPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.wikitext.context.ui.commands" name="%commands.category.name" description="%commands.category.description"/>
  <categories xmi:id="_NXT5UfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.category.file" name="File"/>
  <categories xmi:id="_NXT5UvjgEea4UdV0IbBN0w" elementId="org.eclipse.compare.ui.category.compare" name="Compare" description="Compare command category"/>
  <categories xmi:id="_NXT5U_jgEea4UdV0IbBN0w" elementId="org.eclipse.ui.category.window" name="Window"/>
  <categories xmi:id="_NXT5VPjgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.category.refactoring" name="Refactor - Java" description="Java Refactoring Actions"/>
  <categories xmi:id="_NXT5VfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.category.help" name="Help"/>
  <categories xmi:id="_NXT5VvjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.category.project" name="Project"/>
  <categories xmi:id="_NXT5V_jgEea4UdV0IbBN0w" elementId="org.eclipse.search.ui.category.search" name="Search" description="Search command category"/>
  <categories xmi:id="_NXT5WPjgEea4UdV0IbBN0w" elementId="org.eclipse.debug.ui.category.run" name="Run/Debug" description="Run/Debug command category"/>
  <categories xmi:id="_NXT5WfjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.category.dialogs" name="Dialogs" description="Commands for opening dialogs"/>
  <categories xmi:id="_NXT5WvjgEea4UdV0IbBN0w" elementId="org.eclipse.oomph" name="Oomph"/>
  <categories xmi:id="_NXT5W_jgEea4UdV0IbBN0w" elementId="org.eclipse.egit.ui.commandCategory" name="Git"/>
  <categories xmi:id="_NXT5XPjgEea4UdV0IbBN0w" elementId="org.eclipse.ui.category.perspectives" name="Perspectives" description="Commands for opening perspectives"/>
  <categories xmi:id="_NXT5XfjgEea4UdV0IbBN0w" elementId="org.eclipse.ltk.ui.category.refactoring" name="Refactoring"/>
  <categories xmi:id="_NXT5XvjgEea4UdV0IbBN0w" elementId="org.eclipse.gef.category.view" name="View" description="View"/>
  <categories xmi:id="_NXT5X_jgEea4UdV0IbBN0w" elementId="org.eclipse.jdt.ui.category.source" name="Source" description="Java Source Actions"/>
  <categories xmi:id="_NXT5YPjgEea4UdV0IbBN0w" elementId="org.eclipse.mylyn.commons.repositories.ui.category.Team" name="Team"/>
  <categories xmi:id="_NXT5YfjgEea4UdV0IbBN0w" elementId="org.eclipse.oomph.commands" name="Oomph"/>
  <categories xmi:id="_NXT5YvjgEea4UdV0IbBN0w" elementId="org.eclipse.core.commands.categories.autogenerated" name="Uncategorized" description="Commands that were either auto-generated or have no category"/>
</application:Application>
</file>

<file path="src/mini_c/workspace/.metadata/.plugins/org.eclipse.epp.logging.aeri.ide/org.eclipse.epp.logging.aeri.ide.server/server-config.json">
{
  "version": "v1",
  "title": "Eclipse Automated Error Reporting",
  "timestamp": 1487755260322,
  "ttl": 10080,
  "helpUrl": "https://dev.eclipse.org/recommenders/community/aeri/v2/help/",
  "feedbackUrl": "http://ctrlflow.com/automated-error-reporting",
  "aboutUrl": "https://wiki.eclipse.org/EPP/Logging",
  "submitUrl": "https://dev.eclipse.org/recommenders/community/confess/0.6/reports/",
  "maxReportSize": 262144,
  "problemsUrl": "https://www.eclipse.org/downloads/download.php?r\u003d1\u0026file\u003d/technology/epp/logging/problems.zip",
  "problemsTtl": 20160,
  "connectTimeout": 10,
  "socketTimeout": 10,
  "acceptedProducts": [
    "org.eclipse.*",
    "org.fordiac.*"
  ],
  "acceptedPlugins": [
    "org.apache.log4j.*",
    "org.eclipse.*",
    "org.fordiac.*"
  ],
  "acceptedPackages": [
    "ch.qos.*",
    "com.cforcoding.*",
    "com.google.*",
    "com.gradleware.tooling.*",
    "com.mountainminds.eclemma.*",
    "com.naef.*",
    "com.sun.*",
    "java.*",
    "javafx.*",
    "javax.*",
    "org.apache.*",
    "org.eclipse.*",
    "org.fordiac.*",
    "org.gradle.*",
    "org.jacoco.*",
    "org.osgi.*",
    "org.slf4j.*",
    "sun.*"
  ],
  "requiredPackages": [
    "com.cforcoding.*",
    "com.gradleware.tooling.*",
    "com.mountainminds.eclemma.*",
    "com.naef.*",
    "org.eclipse.*",
    "org.fordiac.*",
    "org.gradle.*",
    "org.jacoco.*"
  ],
  "acceptOtherPackages": false,
  "acceptUiFreezes": true,
  "ignoredStatuses": [
    ":java.io.IOException:There is not enough space on the disk",
    ":java.net.*:",
    "org.eclipse.core.filesystem::Could not delete*",
    "org.eclipse.core.filesystem::Could not move*",
    "org.eclipse.core.resources:org.eclipse.core.internal.resources.ResourceException:Resource is out of sync with the file system*",
    "org.eclipse.core.runtime::Invalid input url*",
    "org.eclipse.epp.mpc.ui:java.io.IOException:",
    "org.eclipse.equinox.p2.*::",
    "org.eclipse.jface:java.io.IOException:Unable to resolve plug-in*",
    "org.eclipse.oomph.setup.core:$org.apache.http.ConnectionClosedException:",
    "org.eclipse.pde.core::The current target platform contains errors*",
    "org.eclipse.ui::Conflicting handlers for*"
  ],
  "problemsZipLastDownloadTimestamp": 1487755910361
}
</file>

<file path="src/mini_c/workspace/.metadata/.plugins/org.eclipse.jdt.launching/.install.xml">
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<dirs>
<entry loc="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64" stamp="1485053182000"/>
</dirs>
</file>

<file path="src/mini_c/workspace/.metadata/.plugins/org.eclipse.jdt.launching/libraryInfos.xml">
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<libraryInfos>
<libraryInfo home="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64" version="1.8.0_121">
<bootpath>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64/jre/lib/resources.jar"/>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64/jre/lib/rt.jar"/>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64/jre/lib/sunrsasign.jar"/>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64/jre/lib/jsse.jar"/>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64/jre/lib/jce.jar"/>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64/jre/lib/charsets.jar"/>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64/jre/lib/jfr.jar"/>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64/jre/classes"/>
</bootpath>
<extensionDirs>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64/jre/lib/ext"/>
<entry path="/usr/java/packages/lib/ext"/>
</extensionDirs>
<endorsedDirs>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64/jre/lib/endorsed"/>
</endorsedDirs>
</libraryInfo>
<libraryInfo home="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64/jre" version="1.8.0_121">
<bootpath>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64/jre/lib/resources.jar"/>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64/jre/lib/rt.jar"/>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64/jre/lib/sunrsasign.jar"/>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64/jre/lib/jsse.jar"/>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64/jre/lib/jce.jar"/>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64/jre/lib/charsets.jar"/>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64/jre/lib/jfr.jar"/>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64/jre/classes"/>
</bootpath>
<extensionDirs>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64/jre/lib/ext"/>
<entry path="/usr/java/packages/lib/ext"/>
</extensionDirs>
<endorsedDirs>
<entry path="/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64/jre/lib/endorsed"/>
</endorsedDirs>
</libraryInfo>
</libraryInfos>
</file>

<file path="src/mini_c/workspace/.metadata/.plugins/org.eclipse.jdt.ui/dialog_settings.xml">
<?xml version="1.0" encoding="UTF-8"?>
<section name="Workbench">
	<item value="/home/philemon.poux/Documents/Compilation/src" key="org.eclipse.jdt.ui.last.external.project"/>
	<section name="org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart">
		<item value="2" key="layout"/>
		<item value="true" key="group_libraries"/>
		<item value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#x0A;&lt;packageExplorer group_libraries=&quot;1&quot; layout=&quot;2&quot; linkWithEditor=&quot;0&quot; rootMode=&quot;1&quot; workingSetName=&quot;Aggregate for window 1487755260842&quot;&gt;&#x0A;&lt;customFilters userDefinedPatternsEnabled=&quot;false&quot;&gt;&#x0A;&lt;xmlDefinedFilters&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.StaticsFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.mylyn.java.ui.MembersFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonJavaProjectsFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer_patternFilterId_.*&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonSharedProjectsFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.SyntheticMembersFilter&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ContainedLibraryFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.m2e.MavenModuleFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.HideInnerClassFilesFilter&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.EmptyInnerPackageFilter&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ClosedProjectsFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.EmptyLibraryContainerFilter&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.PackageDeclarationFilter&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ImportDeclarationFilter&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonJavaElementFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.LibraryFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.CuAndClassFileFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.EmptyPackageFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonPublicFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.LocalTypesFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.FieldsFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;/xmlDefinedFilters&gt;&#x0A;&lt;/customFilters&gt;&#x0A;&lt;/packageExplorer&gt;" key="memento"/>
		<item value="1" key="rootMode"/>
		<item value="false" key="linkWithEditor"/>
	</section>
</section>
</file>

<file path="src/mini_c/workspace/.metadata/.plugins/org.eclipse.jdt.ui/OpenTypeHistory.xml">
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<typeInfoHistroy/>
</file>

<file path="src/mini_c/workspace/.metadata/.plugins/org.eclipse.jdt.ui/QualifiedTypeNameHistory.xml">
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy/>
</file>

<file path="src/mini_c/workspace/.metadata/.plugins/org.eclipse.m2e.logback.configuration/logback.1.6.2.20150902-0002.xml">
<configuration scan="true">
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <pattern>%date [%thread] %-5level %logger{35} - %msg%n</pattern>
    </encoder>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>OFF</level> <!-- change to DEBUG to mimic '-consolelog' behaviour -->
    </filter>
  </appender>

  <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <File>${org.eclipse.m2e.log.dir}/0.log</File>
    <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
      <FileNamePattern>${org.eclipse.m2e.log.dir}/%i.log</FileNamePattern>
      <MinIndex>1</MinIndex>
      <MaxIndex>10</MaxIndex>
    </rollingPolicy>
    <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
      <MaxFileSize>100MB</MaxFileSize>
    </triggeringPolicy>
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <pattern>%date [%thread] %-5level %logger{35} - %msg%n</pattern>
    </encoder>
  </appender>

  <appender name="EclipseLog" class="org.eclipse.m2e.logback.appender.EclipseLogAppender">
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>WARN</level>
    </filter>
  </appender>

  <appender name="MavenConsoleLog" class="org.eclipse.m2e.logback.appender.MavenConsoleAppender">
  </appender>
        
  <root level="INFO">
    <appender-ref ref="FILE" />
    <appender-ref ref="STDOUT" />
    <appender-ref ref="EclipseLog" />
    <appender-ref ref="MavenConsoleLog" />
  </root>

  <logger name="com.ning.http.client" level="INFO" />
</configuration>
</file>

<file path="src/mini_c/workspace/.metadata/.plugins/org.eclipse.oomph.setup/workspace.setup">
<?xml version="1.0" encoding="UTF-8"?>
<setup:Workspace
    xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:setup="http://www.eclipse.org/oomph/setup/1.0"
    name="workspace"/>
</file>

<file path="src/mini_c/workspace/.metadata/.plugins/org.eclipse.ui.ide/dialog_settings.xml">
<?xml version="1.0" encoding="UTF-8"?>
<section name="Workbench">
	<section name="ExternalProjectImportWizard">
	</section>
</section>
</file>

<file path="src/mini_c/workspace/.metadata/.plugins/org.eclipse.ui.intro/dialog_settings.xml">
<?xml version="1.0" encoding="UTF-8"?>
<section name="Workbench">
	<item value="1024" key="introLaunchBar.location"/>
</section>
</file>

<file path="src/mini_c/workspace/.metadata/.plugins/org.eclipse.ui.workbench/dialog_settings.xml">
<?xml version="1.0" encoding="UTF-8"?>
<section name="Workbench">
	<section name="org.eclipse.ui.internal.QuickAccess">
		<item value="-1" key="dialogHeight"/>
		<item value="-1" key="dialogWidth"/>
		<list key="textEntries">
		</list>
		<list key="orderedElements">
		</list>
		<list key="orderedProviders">
		</list>
		<list key="textArray">
		</list>
	</section>
	<section name="ImportExportAction">
	</section>
</section>
</file>

<file path="src/mini_c/workspace/.metadata/.plugins/org.eclipse.ui.workbench/workingsets.xml">
<?xml version="1.0" encoding="UTF-8"?>
<workingSetManager>
<workingSet aggregate="true" factoryID="org.eclipse.ui.internal.WorkingSetFactory" id="1487755260843_0" label="Window Working Set" name="Aggregate for window 1487755260842"/>
</workingSetManager>
</file>

<file path="src/mini_c/workspace/.metadata/version.ini">
#Wed Feb 22 10:26:43 CET 2017
org.eclipse.core.runtime=2
org.eclipse.platform=4.5.2.v20160212-1500
</file>

<file path="src/mini_c/X86_64.java">
package mini_c;

import java.io.FileWriter;
import java.io.IOException;
import java.io.Writer;
import java.util.HashSet;
import java.util.LinkedList;

/** une étiquette (Lab) ou une instruction (Asm) */
abstract    class LabelAsm { String s; }
class Lab extends LabelAsm { Lab(String s) { this.s = s; } }
class Asm extends LabelAsm { Asm(String s) { this.s = s; } }

/** programme assembleur x86-64 */
public class X86_64 {
    /** segment de code */
	private LinkedList<LabelAsm> text;
	/** segment de données */
	private StringBuffer data;
	/** étiquettes à conserver dans le code */
  	private HashSet<String> needed;

	X86_64() {
		this.text = new LinkedList<>();
		this.data = new StringBuffer();
    	this.needed = new HashSet<>();
	}

	/** ajoute une nouvelle instruction à la fin du code */
    X86_64 emit(String s) {
		this.text.add(new Asm("\t" + s + "\n"));
		return this;
    }
    /** ajoute une étiquette qui doit rester dans le code
	 *   (par ex. l'étiquette d'une fonction) */
    X86_64 label(String s) {
        this.text.add(new Lab(s));
        this.needed.add(s);
        return this;
    }
  	/** ajoute une étiquette ; elle ne restera dans le code qui si
   	*  on appelle needLabel sur cette étiquette */
    X86_64 label(Label l) {
        this.text.add(new Lab(l.name));
        return this;
    }
  	/** déclare que cette étiquette devra rester dans le code */
  	void needLabel(Label l) {
    needed.add(l.name);
  }

    /** Assembly Instructions */
    /* Move instructions */
  	X86_64 movq(String op1, String op2) { return emit("movq " + op1 + ", " + op2); }
  	X86_64 movq(int n, String op) { return movq("$" + n, op); }
  	X86_64 movzbq(String op1, String op2) { return emit("movzbq " + op1 + ", " + op2); }
    /* Operations binome */
  	X86_64 incq(String op) { return emit("incq " + op); }
  	X86_64 decq(String op) { return emit("decq " + op); }
	X86_64 negq(String op) { return emit("negq " + op); }
	X86_64 addq(String op1, String op2) { return emit("addq " + op1 + ", " + op2); }
	X86_64 subq(String op1, String op2) { return emit("subq " + op1 + ", " + op2); }
	X86_64 imulq(String op1, String op2) { return emit("imulq " + op1 + ", " + op2); }
	X86_64 idivq(String op1, String op2) { return emit("idivq " + op1 + ", " + op2); }
	X86_64 cqto() { return emit("cqto"); }
    /* Load Effective Address */
	X86_64 leaq(String op1, String op2) { return emit("leaq " + op1 + ", " + op2); }
    /* binary operations */
	X86_64 notq(String op) { return emit("notq " + op); }
	X86_64 andq(String op1, String op2) { return emit("andq " + op1 + ", " + op2); }
	X86_64 orq(String op1, String op2) { return emit("orq " + op1 + ", " + op2); }
	X86_64 xorq(String op1, String op2) { return emit("xorq " + op1 + ", " + op2); }
    /* Shift Operations */
	X86_64 shlq(String op1, String op2) { return emit("shlq " + op1 + ", " + op2); }
	X86_64 shrq(String op1, String op2) { return emit("shrq " + op1 + ", " + op2); }
	X86_64 sarq(String op1, String op2) { return emit("sarq " + op1 + ", " + op2); }
    /* Push & Pop */
	X86_64 pushq(String op) { return emit("pushq " + op); }
	X86_64 popq(String op) { return emit("popq " + op); }
    /* functions and jumps */
	X86_64 ret() { return emit("ret"); }
	X86_64 leave() { return emit("leave"); }
	X86_64 call(String s) { return emit("call " + s); }
	X86_64 callstar(String op) { return emit("call *" + op); }
	X86_64 jmp(String s) { return emit("jmp " + s); }
	X86_64 jmpstar(String op) { return emit("jmp *" + op); }
    /* Comparisons */
	X86_64 cmpb(String op1, String op2) { return emit("cmpb " + op1 + ", " + op2); }
	X86_64 cmpb(int n, String op) { return cmpb("$" + n, op); }
	X86_64 cmpw(String op1, String op2) { return emit("cmpw " + op1 + ", " + op2); }
	X86_64 cmpw(int n, String op) { return cmpw("$" + n, op); }
	X86_64 cmpl(String op1, String op2) { return emit("cmpl " + op1 + ", " + op2); }
	X86_64 cmpl(int n, String op) { return cmpl("$" + n, op); }
	X86_64 cmpq(String op1, String op2) { return emit("cmpq " + op1 + ", " + op2); }
	X86_64 cmpq(int n, String op) { return cmpq("$" + n, op); }
    /* Test */
	X86_64 testq(String op1, String op2) { return emit("testq " + op1 + ", " + op2); }
	X86_64 testq(int n, String op) { return testq("$" + n, op); }
    /* Conditional jumps */
	X86_64 je(String s) { return emit("je " + s); }
	X86_64 jz(String s) { return emit("jz " + s); }
	X86_64 jne(String s) { return emit("jne " + s); }
	X86_64 jnz(String s) { return emit("jnz " + s); }
	X86_64 js(String s) { return emit("js " + s); }
	X86_64 jns(String s) { return emit("jns " + s); }
	X86_64 jg(String s) { return emit("jg " + s); }
	X86_64 jge(String s) { return emit("jge " + s); }
	X86_64 jl(String s) { return emit("jl " + s); }
	X86_64 jle(String s) { return emit("jle " + s); }
	X86_64 ja(String s) { return emit("ja " + s); }
	X86_64 jae(String s) { return emit("jae " + s); }
	X86_64 jb(String s) { return emit("jb " + s); }
	X86_64 jbe(String s) { return emit("jbe " + s); }
    /* set */
	X86_64 sete(String s) { return emit("sete " + s); }
	X86_64 setz(String s) { return emit("setz " + s); }
	X86_64 setne(String s) { return emit("setne " + s); }
	X86_64 setnz(String s) { return emit("setnz " + s); }
	X86_64 sets(String s) { return emit("sets " + s); }
	X86_64 setns(String s) { return emit("setns " + s); }
	X86_64 setg(String s) { return emit("setg " + s); }
	X86_64 setge(String s) { return emit("setge " + s); }
	X86_64 setl(String s) { return emit("setl " + s); }
	X86_64 setle(String s) { return emit("setle " + s); }
	X86_64 seta(String s) { return emit("seta " + s); }
	X86_64 setae(String s) { return emit("setae " + s); }
	X86_64 setb(String s) { return emit("setb " + s); }
	X86_64 setbe(String s) { return emit("setbe " + s); }
    /*----------------------------------------------- End of instructions */
	/** segment de données */
	private static String escaped(String s) {
		StringBuffer b = new StringBuffer();
		for (int i = 0; i < s.length(); i++) {
			char c = s.charAt(i);
			if (c == '\n') b.append("\\n");
			else b.append(c);
		}
		return b.toString();
	}

	/** ajoute une étiquette dans le segment de données */
	X86_64 dlabel(String s) {
	    this.data.append(s + ":\n");
	    return this;
	  }

	X86_64 data(String s) { this.data.append("\t" + s + "\n"); return this; }
	X86_64 string(String s) { return data(".string \"" + escaped(s) + "\""); }
	X86_64 space(int n) { return data(".space " + n); }
	X86_64 quad(long l) { return data(".quad " + l); }

	X86_64 globl(String l) { return emit(".globl " + l); }

	/** imprime le programme assembleur dans un fichier */
	void printToFile(String file) {
		try {
			Writer writer = new FileWriter(file);
			writer.write("\t.text\n");
			for (LabelAsm lasm: this.text) {
			  if (lasm instanceof Lab) {
			    if (this.needed.contains(lasm.s))
			      writer.write(lasm.s + ":\n");
			  } else
			    writer.write(lasm.s);
			}
			writer.write("\t.data\n");
			writer.write(this.data.toString());
			writer.close();
		} catch (IOException e) {
			throw new Error("cannot write to " + file);
		}
	}
	void print() {
	    System.out.println("== ASM ==========================");
	    System.out.print("\t.text\n");
	    for (LabelAsm lasm : this.text) {
	        if (lasm instanceof Lab) {
                if (this.needed.contains(lasm.s)) {
                    System.out.print(lasm.s + ":\n");
                }
            }
            else {
	            System.out.print(lasm.s);
            }
        }
        System.out.print("\t.data\n");
	    System.out.print(this.data.toString());
    }
}
</file>

<file path="test.c">
struct U { int x; int y; };

struct S { int a; struct U *u; int b; };

int main() {
  struct U *u;
  struct S *s;

  u = sbrk(sizeof(struct U));
  s = sbrk(sizeof(struct S));
  s->u = sbrk(sizeof(struct U));
  s->a = 'A';
  s->b = 'B';
  putchar(s->a);
  putchar(s->b);
  putchar(10);
  u->x = 'X';
  u->y = 'Y';
  putchar(s->a);
  putchar(s->b);
  putchar(10);
  s->u = u;
  putchar(s->a);
  putchar(s->b);
  putchar(10);
  return 0;
}
</file>

<file path="tests/compil">
#!/bin/bash
java -cp ../Practice/mini-python-java/bin/:../lib/java-cup-11a-runtime.jar mini_c.Main $@
</file>

<file path="tests/exec-fail/deref_null.c">
struct S { int a; };
int main() {
  struct S *p;
  p = 0;
  putchar(p->a);
}
</file>

<file path="tests/exec-fail/division_by_zero1.c">
int main() {
  putchar(1 / 0);
}
</file>

<file path="tests/exec/abr.c">
/* arbres binaires de recherche */

struct ABR {
  int valeur;
  struct ABR *gauche, *droite;
};

struct ABR* make(int v, struct ABR *g, struct ABR *d) {
  struct ABR * s;
  s = sbrk(sizeof(struct ABR));
  s->valeur = v;
  s->gauche = g;
  s->droite = d;
  return s;
}

int insere(struct ABR *a, int x) {
  if (x == a->valeur)
    return 0;
  if (x < a->valeur) {
    if (a->gauche == 0)
      a->gauche = make(x, 0, 0);
    else
      insere(a->gauche, x);
  } else
    if (a->droite == 0)
      a->droite = make(x, 0, 0);
    else
      insere(a->droite, x);
  return 0;
}

int contient(struct ABR *a, int x) {
  if (x == a->valeur) return 1;
  if (x < a->valeur && a->gauche != 0) return contient(a->gauche, x);
  if (a->droite != 0) return contient(a->droite, x);
  return 0;
}

int print_int(int n) {
  int q;
  q = n / 10;
  if (n > 9) print_int(q);
  putchar('0' + (n - 10*q));
  return 0;
}

int print(struct ABR *a) {
  putchar('(');
  if (a->gauche != 0) print(a->gauche);
  print_int(a->valeur);
  if (a->droite != 0) print(a->droite);
  return putchar(')');
}

int main() {
  struct ABR *dico;
  dico = make(1, 0, 0);
  insere(dico, 17);
  insere(dico, 5);
  insere(dico, 8);
  print(dico);
  putchar(10);
  if (contient(dico, 5) && !contient(dico, 0) &&
      contient(dico, 17) && !contient(dico, 3)) {
    putchar('o');
    putchar('k');
    putchar(0x0a);
  }
  insere(dico, 42);
  insere(dico, 1000);
  insere(dico, 0);
  print(dico);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/and1.c">
int main() {
  putchar(65 + (1 && 1)); // 66, pas 67 !
  putchar(65 + (1 && 2)); // 66, pas 67 !
  putchar(65 + (1 && 0));
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/and2.c">
int main() {
  putchar(65 + (0 && 1));
  putchar(65 + (0 && 2));
  putchar(65 + (1 && 0));
  putchar(65 + (0 && 0));
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/arith1.c">
int main() {
  putchar(100+4);
  putchar(102-1);
  putchar(100+2*4);
  putchar(216/2);
  putchar(3*37);
  putchar(0x20);
  putchar(118 + -(1-2));
  putchar(100 + 122 / 11);
  putchar(113 + (1<2));
  putchar(108 + (2<1));
  putchar(99 + (2==1+1));
  putchar(10 + (1==2));
  return 0;
}
</file>

<file path="tests/exec/assign1.c">
int main() {
  int x;
  x = 65;
  putchar(x);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/assign2.c">
int main() {
  int x, y;
  x = (y = 1);
  putchar('A' + x);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/assign3.c">
int main() {
  int x;
  putchar(x = 65);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/assign6.c">
struct U { int x; int y; };

struct S { int a; struct U *u; int b; };

int main() {
  struct U *u;
  struct S *s;

  u = sbrk(sizeof(struct U));
  s = sbrk(sizeof(struct S));
  s->u = sbrk(sizeof(struct U));
  s->a = 'A';
  s->b = 'B';
  s->u->x = 'x';
  s->u->y = 'y';
  putchar(s->a);
  putchar(s->u->x);
  putchar(s->u->y);
  putchar(s->b);
  putchar(10);
  u->x = 'X';
  u->y = 'Y';
  putchar(s->a);
  putchar(s->u->x);
  putchar(s->u->y);
  putchar(s->b);
  putchar(10);
  s->u = u;
  putchar(s->a);
  putchar(s->u->x);
  putchar(s->u->y);
  putchar(s->b);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/assign7.c">
struct U { int x; int y; };

struct S { int a; struct U *u; int b; };

struct U *u;
struct S *s;

int main() {
  u = sbrk(sizeof(struct U));
  s = sbrk(sizeof(struct S));
  s->u = sbrk(sizeof(struct U));
  s->a = 'A';
  s->b = 'B';
  s->u->x = 'x';
  s->u->y = 'y';
  putchar(s->a);
  putchar(s->u->x);
  putchar(s->u->y);
  putchar(s->b);
  putchar(10);
  u->x = 'X';
  u->y = 'Y';
  putchar(s->a);
  putchar(s->u->x);
  putchar(s->u->y);
  putchar(s->b);
  putchar(10);
  s->u = u;
  putchar(s->a);
  putchar(s->u->x);
  putchar(s->u->y);
  putchar(s->b);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/block1.c">
int main() {
  int x;
  x = 65;
  putchar(x);
  if (1) {
    int y;
    y = 66;
    putchar(y);
  } else {
    int z;
    z = 67;
    putchar(z);
  }
  putchar(x);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/block2.c">
int main() {
  int x;
  x = 65;
  putchar(x);
  if (0) {
    int y;
    y = 66;
    putchar(y);
  } else {
    int y, z;
    y = 67;
    z = 68;
    putchar(y);
    putchar(z);
  }
  putchar(x);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/call1.c">
int f(int x, int y) {
  putchar(x);
  return 0;
}

int main() {
  f('A', 'B');
  f('B', 'A');
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/call2.c">
int f(int x, int y, int z, int t) {
  if (x) {
    putchar(x);
    return f(y, z, t, x);
  }
  return 0;
}

int main() {
  f('A', 'B', 'C', 0);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/char1.c">
int main() {
  putchar('h');
  putchar('e');
  putchar('l');
  putchar('l');
  putchar('o');
  putchar(' ');
  putchar('w');
  putchar('o');
  putchar('r');
  putchar('l');
  putchar('d');
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/char2.c">
int main() {
  int c;
  c = 'A';
  putchar(c);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/char3.c">
int main() {
  int c;
  c = 'A';
  putchar(c);
  c = c+1;
  putchar(c);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/char4.c">
int f(int x, int y) {
  return x+y;
}

int main() {
  int c;
  putchar(f('A', 0));
  putchar(f('A', 1));
  putchar(f('A', 2));
  c = f('A', 3);
  putchar(c);
  c = c+1;
  putchar(c);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/dllist.c">
/*** listes circulaires doublement chaînées ***/

struct L {
  int valeur;
  struct L *suivant, *precedent;
};

/* liste réduite à un élément */
struct L* make(int v) {
  struct L* r;
  r = sbrk(sizeof(struct L));
  r->valeur = v;
  r->suivant = r->precedent = r;
  return r;
}

/* insertion après un élément donnée */
int inserer_apres(struct L *l, int v) {
  struct L *e;
  e = make(v);
  e->suivant = l->suivant;
  l->suivant = e;
  e->suivant->precedent = e;
  e->precedent = l;
  return 0;
}

/* suppression d'un élément donné */
int supprimer(struct L *l) {
  l->precedent->suivant = l->suivant;
  l->suivant->precedent = l->precedent;
  return 0;
}

/* affichage */
int afficher(struct L *l) {
  struct L *p;
  p = l;
  putchar(p->valeur);
  p = p->suivant;
  while (p != l) {
    putchar(p->valeur);
    p = p->suivant;
  }
  putchar(10);
  return 0;
}

int main() {
  struct L *l;
  l = make(65);
  afficher(l);
  inserer_apres(l, 66);
  afficher(l);
  inserer_apres(l, 67);
  afficher(l);
  supprimer(l->suivant);
  afficher(l);
  return 0;
}
</file>

<file path="tests/exec/fact_imp.c">
int fact_imp(int n) {
  int res;
  res = 1;
  while (n > 1)
    res = res * ((n = n-1) + 1);
  return res;
}

int main() {
  if (fact_imp(0) == 1) putchar('1');
  if (fact_imp(1) == 1) putchar('2');
  if (fact_imp(5) == 120) putchar('3');
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/fact_rec.c">
int fact_rec(int n) {
  if (n <= 1) return 1;
  return n * fact_rec(n - 1);
}

int main() {
  if (fact_rec(0) == 1) putchar('1');
  if (fact_rec(1) == 1) putchar('2');
  if (fact_rec(5) == 120) putchar('3');
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/fact.c">
int fact(int n) {
  if (n <= 1) return 1;
  return n * fact(n-1);
}

int main() {
  int n;
  n = 0;
  while (n <= 4) {
    putchar(65 + fact(n));
    n = n+1;
  }
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/field2.c">
struct S { int a; int b; };

struct S *s;

int main() {
  s = sbrk(sizeof(struct S));
  s->a = 'A';
  putchar(s->a);
  s->b = 'B';
  putchar(s->b);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/field4.c">
struct S { int a; int b; };

int main() {
  struct S *p;
  p = sbrk(sizeof(struct S));
  p->a = 'A';
  putchar(p->a);
  p->b = 'B';
  putchar(p->b);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/field7.c">
struct S { int a; int b; };

struct S *s;

int main() {
  struct S *p;
  s = sbrk(sizeof(struct S));
  p = s;
  p->a = 'A';
  putchar(s->a);
  putchar(p->a);
  p->b = 'B';
  putchar(s->b);
  putchar(p->b);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/field8.c">
struct S { int a; int b; };

int main() {
  struct S *p;
  p = sbrk(sizeof(struct S));
  p->a = 'A';
  putchar(p->a);
  p->b = 'B';
  putchar(p->b);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/for1.c">
int main() {
  int i;
  int cpt;
  cpt = 0;
  i = 0;
  while (i < 10) {
    int j;
    j = 10;
    while (j > 0) {
      cpt = cpt+1;
      j = j-1;
    }
    i = i+1;
  }
  if (cpt == 100)
    putchar('!');
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/for2.c">
int main() {
  int i;
  i = 10;
  while (i > 0)
    putchar('A' + (i = i-1) + 1);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/for3.c">
int main() {
  int x;
  x = 10;
  while (x) putchar('A' + (x = x-1));
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/for4.c">
int main() {
  int x;
  x = 10; while (x) putchar('A' + (x = x-1));
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/for5.c">
int main() {
  int x;
  x = 10;
  while (x) { putchar('A' + x); x = x-1; }
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/for6.c">
int main() {
  int x;
  x = 10;
  while ((x = x-1) + 1) { putchar('A' + x); x = x-1; }
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/global1.c">
int x, y;

int main() {
  x = 65;
  putchar(x);
  x = x+1;
  putchar(x);
  x = x+2;
  putchar(x);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/global2.c">
int x, y;

int main() {
  x = 65;
  putchar(x);
  putchar(x = x+1);
  putchar(y = x+1);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/hello_world.c">
int main() {
  putchar(104);
  putchar(101);
  putchar(108);
  putchar(108);
  putchar(111);
  putchar(32);
  putchar(119);
  putchar(111);
  putchar(114);
  putchar(108);
  putchar(100);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/if1.c">
int main() {
  int x;
  x = 65;
  putchar(x);
  if (x) x = 66;
  putchar(x);
  if (x && 0) x = 67;
  putchar(x);
  if (x && 1) x = 68;
  putchar(x);
  if (x || 0) x = 69;
  putchar(x);
  if (x || 1) x = 70;
  putchar(x);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/josephus.c">
/*** listes circulaires doublement chaînées ***/

struct L {
  int valeur;
  struct L *suivant, *precedent;
};

/* liste réduite à un élément */
struct L* make(int v) {
  struct L* r;
  r = sbrk(sizeof(struct L));
  r->valeur = v;
  r->suivant = r->precedent = r;
  return r;
}

/* insertion après un élément donnée */
int inserer_apres(struct L *l, int v) {
  struct L *e;
  e = make(v);
  e->suivant = l->suivant;
  l->suivant = e;
  e->suivant->precedent = e;
  e->precedent = l;
  return 0;
}

/* suppression d'un élément donné */
int supprimer(struct L *l) {
  l->precedent->suivant = l->suivant;
  l->suivant->precedent = l->precedent;
  return 0;
}

/* affichage */
int afficher(struct L *l) {
  struct L *p;
  p = l;
  putchar(p->valeur);
  p = p->suivant;
  while (p != l) {
    putchar(p->valeur);
    p = p->suivant;
  }
  putchar(10);
  return 0;
}

/*** Partie 3 : problème de Josephus ***/

/* construction de la liste circulaire 1,2,...,n;
   l'élément renvoyé est celui contenant 1 */
struct L* cercle(int n) {
  struct L *l;
  int i;
  l = make(1);
  i = n;
  while (i >= 2) {
    inserer_apres(l, i);
    i = i-1;
  }
  return l;
}

/* jeu de Josephus */
int josephus(int n, int p) {
  /* c est le joueur courant, 1 au départ */
  struct L *c;
  c = cercle(n);

  /* tant qu'il reste plus d'un joueur */
  while (c != c->suivant) {
    /* on élimine un joueur */
    int i;
    i = 1;
    while (i < p) {
      c = c->suivant;
      i = i+1;
    }
    supprimer(c);
    c = c->suivant;
  }
  return c->valeur;
}

int print_int(int n) {
  int q;
  q = n / 10;
  if (n > 9) print_int(q);
  putchar('0' + (n - 10*q));
  return 0;
}

int main() {
  print_int(josephus(7, 5)); // 6
  putchar(10);
  print_int(josephus(5, 5)); // 2
  putchar(10);
  print_int(josephus(5, 17)); // 4
  putchar(10);
  print_int(josephus(13, 2)); // 11
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/local1.c">
int main() {
  int x;
  x = 65;
  putchar(x);
  x = 66;
  putchar(x);
  x = 67;
  putchar(x);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/local2.c">
int main() {
  int x, y;
  x = 65;
  putchar(x);
  x = x+1;
  putchar(x);
  y = x+1;
  putchar(x);
  putchar(y);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/local3.c">
int main() {
  int x, y;
  x = 65;
  putchar(x);
  putchar(x = x+1);
  putchar(y = x+1);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/mandelbrot.c">
/* arithmetique de virgule fixe
   precision q = 8192 i.e. 13 bits pour la partie decimale */

int add(int x, int y) {
  return x + y;
}
int sub(int x, int y) {
  return x - y;
}
int mul(int x, int y) {
  int t;
  t = x * y;
  return (t + 8192 / 2) / 8192;
}
int div(int x, int y) {
  int t;
  t = x * 8192;
  return (t + y / 2) / y;
}
int of_int(int x) {
  return x * 8192;
}

int iter(int n, int a, int b, int xn, int yn) {
  int xn2, yn2;
  if (n == 100) return 1;
  xn2 = mul(xn, xn);
  yn2 = mul(yn, yn);
  if (add(xn2, yn2) > of_int(4)) return 0;
  return iter(n+1, a, b, add(sub(xn2, yn2), a),
              add(mul(of_int(2), mul(xn, yn)), b));
}

int inside(int x, int y) {
  return iter(0, x, y, of_int(0), of_int(0));
}

int run(int steps) {
  int xmin, xmax, deltax, ymin, ymax, deltay, i;
  xmin = of_int(-2);
  xmax = of_int(1);
  deltax = div(sub(xmax, xmin), of_int(2 * steps));
  ymin = of_int(-1);
  ymax = of_int(1);
  deltay = div(sub(ymax, ymin), of_int(steps));
  i = 0;
  while (i < steps) {
    int y, j;
    y = add(ymin, mul(of_int(i), deltay));
    j;
    j = 0;
    while (j < 2 * steps) {
      int x;
      x = add(xmin, mul(of_int(j), deltax));
      if (inside(x, y))
        putchar('0');
      else
        putchar('1');
      j = j+1;
    }
    putchar(10);
    i = i+1;
  }
}

int main() {
  run(30);
  return 0;
}
</file>

<file path="tests/exec/not1.c">
int main() {
  putchar(65 + !0);
  putchar(65 + !1);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/not2.c">
int main() {
  int x;
  x = 0;
  putchar(65 + !x);
  x = 1;
  putchar(65 + !x);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/or1.c">
int main() {
  putchar(65 + (1 || 1)); // 66, pas 67 !
  putchar(65 + (0 || 2)); // 66, pas 67 !
  putchar(65 + (1 || 0));
  putchar(65 + (0 || 0));
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/pascal.c">
/* triangle de Pascal modulo 7 */

struct List { int head; struct List *next; };

int get(struct List *l, int i) {
  if (i == 0) return l->head;
  return get(l->next, i-1);
}

int set(struct List *l, int i, int v) {
  if (i == 0) return l->head = v;
  return set(l->next, i-1, v);
}

struct List* create(int n) {
  struct List *r;
  if (n == 0) return 0;
  r = sbrk(sizeof(struct List));
  r->head = 0;
  r->next = create(n-1);
  return r;
}

int print_row(struct List *r, int i) {
  int j;
  j = 0;
  while (j <= i) {
    if (get(r, j) != 0)
      putchar('*');
    else
      putchar('.');
    j = j+1;
  }
  putchar(10);
  return 0;
}

int mod7(int x) {
  return x - 7*(x/7);
}

int compute_row(struct List *r, int i) {
  int j;
  j = i;
  while (j > 0) {
    set(r, j, mod7(get(r,j) + get(r,j-1)));
    j = j-1;
  }
  set(r, 0, 1);
  return 0;
}

int pascal(int n) {
  int i;
  struct List *r;
  r = create(n + 1);
  i = 0;
  while (i < n) {
    set(r, i, 0);
    compute_row(r, i);
    print_row(r, i);
    i = i+1;
  }
  return 0;
}

int main() {
  pascal(42);
  return 0;
}
</file>

<file path="tests/exec/print_int.c">
int print_int(int n) {
  int q;
  q = n / 10;
  if (n > 9) print_int(q);
  putchar('0' + (n - 10*q));
  return 0;
}

int main() {
  print_int(42);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/putchar_hexa1.c">
int main() {
  putchar(0x41);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/putchar-octal1.c">
int main() {
  putchar(0101);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/putchar1.c">
int main() {
  putchar(65);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/return1.c">
int f(int x, int y, int z, int t) {
  if (!x) return 10;
  putchar(x);
  return f(y, z, t, x);
}

int main() {
  putchar(f('A', 'B', 'C', 0));
  return 0;
}
</file>

<file path="tests/exec/return2.c">
int f(int x, int y) {
  return x + 2*y;
}

int main() {
  putchar(f('A', 0));
  putchar(f('A', 1));
  putchar(f('A', 2));
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/sizeof2.c">
struct S { int a; };
struct T { int a; struct S *p; };

int main() {
  putchar(65 + sizeof(struct S));
  putchar(10);
  putchar(65 + sizeof(struct T));
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/uminus1.c">
int main() {
  putchar(66 + -1);
  putchar(65 + -(-1));
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/while1.c">
int main() {
  int x;
  x = 10;
  while((x = x-1) + 1) putchar('A' + x);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/while2.c">
int main() {
  int x;
  x = 10;
  while(x = x-1) putchar('A' + x);
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/while3.c">
int main() {
  int x;
  x = 10;
  while(x) { putchar('A' + x); x = x-1; }
  putchar(10);
  return 0;
}
</file>

<file path="tests/exec/while4.c">
int main() {
  int x;
  x = 10;
  while(x) { x = x-1; putchar('A' + x); }
  putchar(10);
  return 0;
}
</file>

<file path="tests/LISEZMOI">
Les tests sont organisés en différentes catégories :

  syntax/bad/    refusés à l'analyse lexicale ou syntaxique
  typing/bad/    refusés à l'analyse sémantique
  typing/good/   acceptés à l'analyse sémantique
  exec-fail/     compilés avec succès mais l'exécution doit échouer
  exec/          compilés et exécutés avec succès, le résultat attendu étant
                 conforme au fichier .out

Les tests sont cumulatifs i.e.

- les fichiers de typing/bad/, exec-fail/ et exec/ peuvent être
  utilisés pour la catégorie syntax/good/

- les fichiers de exec-fail/ et exec/ peuvent être
  utilisés pour la catégorie typing/good/
</file>

<file path="tests/PersonalTests/fact.c">
int fact(int n) {
  if (n <= 1) return 1;
  return n * fact(n-1);
}
int main() {
    int x;
  x = fact(42);
  return x;
}
</file>

<file path="tests/run">
#!/bin/bash

shopt -s nullglob

# script de test pour le projet de compilation

option=$1
compilo=$2
score=0
max=0
verbose=0


echo "Test de $2"

echo

# tous les tests passent avec gcc
test_gcc() {
for f in syntax/bad/*.c; do
    if gcc -c $f > /dev/null 2>&1 ; then
      echo "succès de gcc -c sur $f"; exit 1
    fi
done

for f in typing/good/*.c exec/*.c exec-fail/*.c; do
    gcc -c $f > /dev/null 2>&1 ||
     (echo "echec de gcc sur $f"; exit 1)
done
for f in typing/bad/*.c; do
    if gcc -c $f > /dev/null 2>&1 ; then
      echo "succès de gcc -c sur $f"; exit 1
    fi
done
for f in exec/*.c; do
    if test $f == exec/sizeof1.c; then continue; fi
    if test $f == exec/sizeof2.c; then continue; fi
    echo "test gcc sur $f"
    expected=exec/`basename $f .c`.out
    if gcc $f > /dev/null 2>&1 ; then
      ./a.out > out
      if ! cmp --quiet out $expected; then
          echo "mauvaise sortie de gcc sur $f"; exit 1
      fi
    else
      echo "échec de gcc -c sur $f"; exit 1
    fi
done
}

compile () {
if [[ $verbose != 0 ]]; then
  echo Compile $1 $2
  $compilo $1 $2;
else
  $compilo $1 $2 > /dev/null 2>&1;
fi;
}


# partie 1 : tests d'analyse syntaxique

partie1 () {

score=0
max=0

echo "Partie 1"

# les mauvais
echo -n "mauvais "
for f in syntax/bad/*.c; do
    echo -n ".";
    max=`expr $max + 1`;
    compile --parse-only $f;
    case $? in
	"0")
	echo
	echo "ECHEC sur "$f" (devrait échouer)";;
	"1") score=`expr $score + 1`;;
	*)
	echo
	echo "ECHEC sur "$f" (pour une mauvaise raison)";;
    esac
done
echo

# les bons
echo -n "bons "
for f in syntax/good/*.c typing/bad/*.c typing/good/*.c exec/*.c exec-fail/*.c; do
    echo -n ".";
    max=`expr $max + 1`;
    compile --parse-only $f;
    case $? in
	"1")
	echo
	echo "ECHEC sur "$f" (devrait reussir)";;
	"0") score=`expr $score + 1`;;
	*)
	echo
	echo "ECHEC sur "$f" (pour une mauvaise raison)";;
    esac
done
echo

percent=`expr 100 \* $score / $max`;

echo -n "Syntaxe : $score/$max : $percent%"; }

# partie 2 : tests d'analyse sémantique


partie2 () {
echo
echo "Partie 2"

score=0
max=0

# les mauvais
echo -n "mauvais "
for f in typing/bad/*.c; do
    echo -n ".";
    max=`expr $max + 1`;
    compile --type-only $f;
    case $? in
	"0")
	echo
	echo "ECHEC sur "$f" (devrait échouer)";;
	"1") score=`expr $score + 1`;;
	*)
	echo
	echo "ECHEC sur "$f" (pour une mauvaise raison)";;
    esac
done
echo

# les bons
echo -n "bons "
for f in typing/good/*.c exec/*.c exec-fail/*.c; do
    echo -n ".";
    max=`expr $max + 1`;
    compile --type-only $f;
    case $? in
	"1")
	echo
	echo "ECHEC sur "$f" (devrait reussir)";;
	"0") score=`expr $score + 1`;;
	*)
	echo
	echo "ECHEC sur "$f" (pour une mauvaise raison)";;
    esac
done
echo

percent=`expr 100 \* $score / $max`;

echo    "Typage  : $score/$max : $percent%";
}


# partie 3 : tests d'exécution

partie3 () {

score_comp=0
score_out=0
score_test=0
max=0

echo
echo "Partie 3"
echo "Execution normale"
echo "-----------------"

# timeout="why3-cpulimit 30 0 -h"

for f in exec/*.c; do
    echo -n "."
    asm=exec/`basename $f .c`.s
    rm -f $asm
    expected=exec/`basename $f .c`.out
    max=`expr $max + 1`;
    if compile $f; then
	rm -f out
	score_comp=`expr $score_comp + 1`;
	if gcc -fPIC $asm && ./a.out > out; then
	    score_out=`expr $score_out + 1`;
	    if cmp --quiet out $expected; then
		score_test=`expr $score_test + 1`;
	    else
		echo
		echo "ECHEC : mauvaise sortie pour $f"
	    fi
	else
		echo
		echo "ECHEC du code produit pour $f"
	fi
    else
	echo
	echo "ECHEC de la compilation sur $f (devrait réussir)"
    fi
done
echo

echo "Execution conduisant à un échec"
echo "-------------------------------"

for f in exec-fail/*.c; do
    echo -n "."
    asm=exec-fail/`basename $f .c`.s
    rm -f $asm
    max=`expr $max + 1`;
    if compile $f && gcc $asm; then
	score_comp=`expr $score_comp + 1`;
	if ./a.out > out; then
	    echo
	    echo "ECHEC : le code $f devrait échouer"
	else
	    score_test=`expr $score_test + 1`;
	    score_out=`expr $score_out + 1`;
	fi
    else
	echo
	echo "ECHEC de la compilation sur $f (devrait réussir)"
    fi
done

echo
percent=`expr 100 \* $score / $max`;

echo "Compilation:";
percent=`expr 100 \* $score_comp / $max`;
echo "Compilation : $score_comp/$max : $percent%";
percent=`expr 100 \* $score_out / $max`;
echo "Code produit : $score_out/$max : $percent%";
percent=`expr 100 \* $score_test / $max`;
echo "Comportement du code : $score_test/$max : $percent%";}


case $option in
    "-1" )
        partie1;;
    "-2" )
        partie2;;
    "-3" )
        partie3;;
    "-v1" )
	verbose=1;
	partie1;;
    "-v2" )
    	verbose=1;
        partie2;;
    "-v3" )
    	verbose=1;
        partie3;;
    "-all" )
    	partie1;
    	partie2;
    	partie3;;
    "-gcc" )
        test_gcc;;
    * )
        echo "usage : $0 <option> <compilo>"
        echo "spécifier une option parmi : "
        echo "-1      : tester l'analyse syntaxique"
        echo "-2      : tester le typage"
        echo "-3      : tester la compilation"
        echo "-v1     : tester l'analyse syntaxique (verbeusement)"
        echo "-v2     : tester le typage (verbeusement)"
        echo "-v3     : tester la compilation (verbeusement)"
        echo "-all    : tout tester";;

esac
echo
</file>

<file path="tests/syntax/bad/testfile-bad_ident1-1.c">
void 1A() { }
</file>

<file path="tests/syntax/bad/testfile-bad_ident2-1.c">
void  A'A() { }
</file>

<file path="tests/syntax/bad/testfile-block1-1.c">
void f() { { }
</file>

<file path="tests/syntax/bad/testfile-block2-1.c">
void f() { { } } }
</file>

<file path="tests/syntax/bad/testfile-expr2-1.c">
void f() { 0 ! 0; }
</file>

<file path="tests/syntax/bad/testfile-expr3-1.c">
void f() { 0 <> 0; }
</file>

<file path="tests/syntax/bad/testfile-expr4-1.c">
void f() { 0 <== 0; }
</file>

<file path="tests/syntax/bad/testfile-expr6-1.c">
void f() { (0)0; }
</file>

<file path="tests/syntax/bad/testfile-expr7-1.c">
void f() { j+ ; }
</file>

<file path="tests/syntax/bad/testfile-if_else-1.c">
void m() { if (true) ; else }
</file>

<file path="tests/syntax/bad/testfile-if1-1.c">
void m() { if () ; }
</file>

<file path="tests/syntax/bad/testfile-if2-1.c">
void m() { if (;) ; }
</file>

<file path="tests/syntax/bad/testfile-if3-1.c">
int m() { if (true) }
</file>

<file path="tests/syntax/bad/testfile-instr_decl1-1.c">
void m() { int x = 0 }
</file>

<file path="tests/syntax/bad/testfile-instr_expr-1.c">
int m() { 0 }
</file>

<file path="tests/syntax/bad/testfile-lexing2-1.c">
void m() { int i = 1/// comment starts at first /, not second
        1; }
</file>

<file path="tests/syntax/bad/testfile-lexing3-1.c">
void m() { int i = 1/**/0; }
</file>

<file path="tests/syntax/bad/testfile-lexing4-1.c">
void m() { i/**/nt i = 10; }
</file>

<file path="tests/syntax/bad/testfile-lexing5-1.c">
void m() { int i = 0; i +/**/= 10; }
</file>

<file path="tests/syntax/bad/testfile-lexing6-1.c">
void m() { int i = 0; i + = 10; }
</file>

<file path="tests/syntax/bad/testfile-parameters1-1.c">
void m(int) {}
</file>

<file path="tests/syntax/bad/testfile-parameters2-1.c">
void m(int x,) {}
</file>

<file path="tests/syntax/bad/testfile-return1-1.c">
int m() { return
</file>

<file path="tests/syntax/bad/testfile-struct-1.c">
struct S x;
int main() {}
</file>

<file path="tests/syntax/bad/testfile-struct-2.c">
struct S { struct S a; };
</file>

<file path="tests/syntax/bad/testfile-unclosed_comment-1.c">
/*
</file>

<file path="tests/syntax/bad/testfile-var2-1.c">
void f() { int }
</file>

<file path="tests/syntax/good/testfile-assign-1.c">
int m() { int x; int y; y = x = 0; }
</file>

<file path="tests/syntax/good/testfile-bool-1.c">
int m() { return 1==2 && 3==4 || !(5>=6); }
</file>

<file path="tests/typing/bad/testfile-arith-1.c">
struct S { int a; };
int main() { struct S *s; s+s; }
</file>

<file path="tests/typing/bad/testfile-arith-2.c">
int main() { struct S *p; 1-p; }
</file>

<file path="tests/typing/bad/testfile-arith-3.c">
int main() { int p; struct S *q; putchar(p-q); }
</file>

<file path="tests/typing/bad/testfile-arrow-1.c">
int main() { 1->a; }
</file>

<file path="tests/typing/bad/testfile-arrow-2.c">
int main() { int x; x->a; }
</file>

<file path="tests/typing/bad/testfile-arrow-3.c">
struct S { int a; };
int main() { int x; x->a; }
</file>

<file path="tests/typing/bad/testfile-arrow-4.c">
struct S { int a; };
int foo() {}
int main() { (foo())->a; }
</file>

<file path="tests/typing/bad/testfile-assign-1.c">
int main() { 1 = 2; }
</file>

<file path="tests/typing/bad/testfile-assign-2.c">
int main() { 0 = 1; }
</file>

<file path="tests/typing/bad/testfile-assign-3.c">
int main() { int x, y; (x+y) = 2; }
</file>

<file path="tests/typing/bad/testfile-call-1.c">
int f(int x) {}
int main() { f(); }
</file>

<file path="tests/typing/bad/testfile-redef-1.c">
struct S { int a; };
struct S { int a; };
</file>

<file path="tests/typing/bad/testfile-redef-2.c">
int main() {}
int main() {}
</file>

<file path="tests/typing/bad/testfile-redef-3.c">
int f;
int f() {}
int main() {}
</file>

<file path="tests/typing/bad/testfile-redef-4.c">
int f() {}
int f;
int main() {}
</file>

<file path="tests/typing/bad/testfile-redef-5.c">
int main() { int x, x; }
</file>

<file path="tests/typing/bad/testfile-redef-6.c">
struct S { int a; int a; };
int main() {}
</file>

<file path="tests/typing/bad/testfile-scope-1.c">
int main() { { int x; } x; }
</file>

<file path="tests/typing/bad/testfile-scope-2.c">
int main() { int x; if(x) { int y; } else y; }
</file>

<file path="tests/typing/bad/testfile-unary_minus-1.c">
struct S { int a; };
int main() { struct S *s; -s; }
</file>

<file path="tests/typing/bad/testfile-undef_var-1.c">
int main() { x; }
</file>

<file path="tests/typing/bad/testfile-undef_var-2.c">
int main() { int x; }
int n() { x; }
</file>

<file path="tests/typing/bad/testfile-undef_var-3.c">
int f(int x) { }
int main() { x; }
</file>

<file path="tests/typing/good/testfile-subtype-1.c">
int main() {
  int x;
  x = 'a';
}
</file>

<file path="tests/typing/good/testfile-subtype-2.c">
struct S { int a; };
int main() {
  struct S *s;
  s = 0;
}
</file>

<file path="tests/typing/good/testfile-unique-1.c">
int main() {
  int x;
  if (1) { int x; }
}
</file>

<file path="workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.core.resources.prefs">
eclipse.preferences.version=1
version=1
</file>

<file path="workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.epp.logging.aeri.ide.prefs">
eclipse.preferences.version=1
resetSendMode=KEEP
resetSendModeOn=0
sendMode=NOTIFY
</file>

<file path="workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.ui.prefs">
content_assist_proposals_background=255,255,255
content_assist_proposals_foreground=0,0,0
eclipse.preferences.version=1
fontPropagated=true
org.eclipse.jdt.ui.editor.tab.width=
org.eclipse.jdt.ui.formatterprofiles.version=12
org.eclipse.jdt.ui.javadoclocations.migrated=true
org.eclipse.jface.textfont=1|Monospace|10.0|0|GTK|1|;
proposalOrderMigrated=true
spelling_locale_initialized=true
tabWidthPropagated=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
</file>

<file path="workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.m2e.discovery.prefs">
eclipse.preferences.version=1
org.eclipse.m2e.discovery.pref.projects=
</file>

<file path="workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.mylyn.context.core.prefs">
eclipse.preferences.version=1
mylyn.attention.migrated=true
</file>

<file path="workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.mylyn.monitor.ui.prefs">
eclipse.preferences.version=1
org.eclipse.mylyn.monitor.activity.tracking.enabled.checked=true
</file>

<file path="workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.mylyn.tasks.ui.prefs">
eclipse.preferences.version=1
migrated.task.repositories.secure.store=true
org.eclipse.mylyn.tasks.ui.filters.nonmatching=true
org.eclipse.mylyn.tasks.ui.filters.nonmatching.encouraged=true
org.eclipse.mylyn.tasks.ui.welcome.message=true
</file>

<file path="workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.ide.prefs">
PROBLEMS_FILTERS_MIGRATE=true
eclipse.preferences.version=1
platformState=1459848915870
quickStart=false
tipsAndTricks=true
</file>

<file path="workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.prefs">
eclipse.preferences.version=1
showIntro=false
</file>

<file path="workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.workbench.prefs">
//org.eclipse.ui.commands/state/org.eclipse.ui.navigator.resources.nested.changeProjectPresentation/org.eclipse.ui.commands.radioState=false
PLUGINS_NOT_ACTIVATED_ON_STARTUP=org.eclipse.m2e.discovery;
eclipse.preferences.version=1
</file>

<file path="workspace/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi">
<?xml version="1.0" encoding="ASCII"?>
<application:Application xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:advanced="http://www.eclipse.org/ui/2010/UIModel/application/ui/advanced" xmlns:application="http://www.eclipse.org/ui/2010/UIModel/application" xmlns:basic="http://www.eclipse.org/ui/2010/UIModel/application/ui/basic" xmlns:menu="http://www.eclipse.org/ui/2010/UIModel/application/ui/menu" xmi:id="_lV8KMQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.e4.legacy.ide.application" contributorURI="platform:/plugin/org.eclipse.platform" selectedElement="_lV8KMgPkEeeT-9Bzrt0dmg" bindingContexts="_lV8KNAPkEeeT-9Bzrt0dmg">
  <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;workbench>&#xA;&lt;mruList/>&#xA;&lt;/workbench>"/>
  <tags>activeSchemeId:org.eclipse.ui.defaultAcceleratorConfiguration</tags>
  <tags>ModelMigrationProcessor.001</tags>
  <children xsi:type="basic:TrimmedWindow" xmi:id="_lV8KMgPkEeeT-9Bzrt0dmg" elementId="IDEWindow" contributorURI="platform:/plugin/org.eclipse.platform" selectedElement="_ljHqkgPkEeeT-9Bzrt0dmg" label="%trimmedwindow.label.eclipseSDK" x="363" y="66" width="1024" height="768">
    <persistedState key="coolBarVisible" value="true"/>
    <persistedState key="perspectiveBarVisible" value="true"/>
    <persistedState key="isRestored" value="true"/>
    <persistedState key="show_in_time" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;show_in_time/>"/>
    <persistedState key="workingSets" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;workingSets/>"/>
    <persistedState key="aggregateWorkingSetId" value="Aggregate for window 1488966598055"/>
    <tags>topLevel</tags>
    <children xsi:type="basic:PartSashContainer" xmi:id="_ljHqkgPkEeeT-9Bzrt0dmg" selectedElement="_ljIRoAPkEeeT-9Bzrt0dmg" horizontal="true">
      <children xsi:type="advanced:PerspectiveStack" xmi:id="_ljIRoAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.ide.perspectivestack" containerData="7500" selectedElement="_lukFkAPkEeeT-9Bzrt0dmg">
        <children xsi:type="advanced:Perspective" xmi:id="_lukFkAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.JavaPerspective" selectedElement="_lukFkQPkEeeT-9Bzrt0dmg" label="Java" iconURI="platform:/plugin/org.eclipse.jdt.ui/$nl$/icons/full/eview16/jperspective.png">
          <persistedState key="persp.hiddenItems" value="persp.hideToolbarSC:org.eclipse.debug.ui.commands.RunToLine,persp.hideToolbarSC:org.eclipse.jdt.ui.actions.OpenProjectWizard,persp.hideToolbarSC:print,persp.hideToolbarSC:org.eclipse.ui.edit.text.toggleShowSelectedElementOnly,"/>
          <tags>persp.actionSet:org.eclipse.search.searchActionSet</tags>
          <tags>persp.actionSet:org.eclipse.ui.edit.text.actionSet.annotationNavigation</tags>
          <tags>persp.actionSet:org.eclipse.ui.edit.text.actionSet.navigation</tags>
          <tags>persp.actionSet:org.eclipse.ui.edit.text.actionSet.convertLineDelimitersTo</tags>
          <tags>persp.actionSet:org.eclipse.ui.externaltools.ExternalToolsSet</tags>
          <tags>persp.actionSet:org.eclipse.ui.actionSet.keyBindings</tags>
          <tags>persp.actionSet:org.eclipse.ui.actionSet.openFiles</tags>
          <tags>persp.actionSet:org.eclipse.wb.core.ui.actionset</tags>
          <tags>persp.actionSet:org.eclipse.mylyn.doc.actionSet</tags>
          <tags>persp.actionSet:org.eclipse.mylyn.tasks.ui.navigation</tags>
          <tags>persp.actionSet:org.eclipse.ui.cheatsheets.actionSet</tags>
          <tags>persp.actionSet:org.eclipse.debug.ui.launchActionSet</tags>
          <tags>persp.actionSet:org.eclipse.jdt.ui.JavaActionSet</tags>
          <tags>persp.actionSet:org.eclipse.jdt.ui.JavaElementCreationActionSet</tags>
          <tags>persp.actionSet:org.eclipse.ui.NavigateActionSet</tags>
          <tags>persp.viewSC:org.eclipse.jdt.ui.PackageExplorer</tags>
          <tags>persp.viewSC:org.eclipse.jdt.ui.TypeHierarchy</tags>
          <tags>persp.viewSC:org.eclipse.jdt.ui.SourceView</tags>
          <tags>persp.viewSC:org.eclipse.jdt.ui.JavadocView</tags>
          <tags>persp.viewSC:org.eclipse.search.ui.views.SearchView</tags>
          <tags>persp.viewSC:org.eclipse.ui.console.ConsoleView</tags>
          <tags>persp.viewSC:org.eclipse.ui.views.ContentOutline</tags>
          <tags>persp.viewSC:org.eclipse.ui.views.ProblemView</tags>
          <tags>persp.viewSC:org.eclipse.ui.views.ResourceNavigator</tags>
          <tags>persp.viewSC:org.eclipse.ui.views.TaskList</tags>
          <tags>persp.viewSC:org.eclipse.ui.views.ProgressView</tags>
          <tags>persp.viewSC:org.eclipse.ui.navigator.ProjectExplorer</tags>
          <tags>persp.viewSC:org.eclipse.ui.texteditor.TemplatesView</tags>
          <tags>persp.viewSC:org.eclipse.pde.runtime.LogView</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.JavaProjectWizard</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewPackageCreationWizard</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewClassCreationWizard</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewInterfaceCreationWizard</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewEnumCreationWizard</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewAnnotationCreationWizard</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewSourceFolderCreationWizard</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewSnippetFileCreationWizard</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewJavaWorkingSetWizard</tags>
          <tags>persp.newWizSC:org.eclipse.ui.wizards.new.folder</tags>
          <tags>persp.newWizSC:org.eclipse.ui.wizards.new.file</tags>
          <tags>persp.newWizSC:org.eclipse.ui.editors.wizards.UntitledTextFileWizard</tags>
          <tags>persp.perspSC:org.eclipse.jdt.ui.JavaBrowsingPerspective</tags>
          <tags>persp.perspSC:org.eclipse.debug.ui.DebugPerspective</tags>
          <tags>persp.viewSC:org.eclipse.ant.ui.views.AntView</tags>
          <tags>persp.showIn:org.eclipse.egit.ui.RepositoriesView</tags>
          <tags>persp.actionSet:org.eclipse.debug.ui.breakpointActionSet</tags>
          <tags>persp.actionSet:org.eclipse.jdt.debug.ui.JDTDebugActionSet</tags>
          <tags>persp.newWizSC:org.eclipse.jdt.junit.wizards.NewTestCaseCreationWizard</tags>
          <tags>persp.actionSet:org.eclipse.jdt.junit.JUnitActionSet</tags>
          <tags>persp.showIn:org.eclipse.jdt.ui.PackageExplorer</tags>
          <tags>persp.showIn:org.eclipse.team.ui.GenericHistoryView</tags>
          <tags>persp.showIn:org.eclipse.ui.views.ResourceNavigator</tags>
          <tags>persp.showIn:org.eclipse.ui.navigator.ProjectExplorer</tags>
          <tags>persp.viewSC:org.eclipse.mylyn.tasks.ui.views.tasks</tags>
          <tags>persp.newWizSC:org.eclipse.mylyn.tasks.ui.wizards.new.repository.task</tags>
          <tags>persp.viewSC:org.eclipse.wb.core.StructureView</tags>
          <tags>persp.viewSC:org.eclipse.wb.core.PaletteView</tags>
          <children xsi:type="basic:PartSashContainer" xmi:id="_lukFkQPkEeeT-9Bzrt0dmg" selectedElement="_lukFkgPkEeeT-9Bzrt0dmg" horizontal="true">
            <children xsi:type="basic:PartSashContainer" xmi:id="_lukFkgPkEeeT-9Bzrt0dmg" containerData="2500" selectedElement="_lukFkwPkEeeT-9Bzrt0dmg">
              <children xsi:type="basic:PartStack" xmi:id="_lukFkwPkEeeT-9Bzrt0dmg" elementId="left" containerData="6000" selectedElement="_lukFlAPkEeeT-9Bzrt0dmg">
                <tags>org.eclipse.e4.primaryNavigationStack</tags>
                <tags>active</tags>
                <tags>noFocus</tags>
                <children xsi:type="advanced:Placeholder" xmi:id="_lukFlAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.PackageExplorer" ref="_luYfYAPkEeeT-9Bzrt0dmg"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_lukFlQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.TypeHierarchy" toBeRendered="false" ref="_luaUkAPkEeeT-9Bzrt0dmg"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_lukFlgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.ResourceNavigator" toBeRendered="false" ref="_luaUkQPkEeeT-9Bzrt0dmg"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_lukFlwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigator.ProjectExplorer" toBeRendered="false" ref="_luaUkgPkEeeT-9Bzrt0dmg"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_lukFmAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.junit.ResultView" toBeRendered="false" ref="_luiQYQPkEeeT-9Bzrt0dmg"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_lukFmQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wb.core.StructureView" toBeRendered="false" ref="_lujegAPkEeeT-9Bzrt0dmg"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_lukFmgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wb.core.PaletteView" toBeRendered="false" ref="_lujegQPkEeeT-9Bzrt0dmg"/>
              </children>
              <children xsi:type="basic:PartStack" xmi:id="_lukFmwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesViewMStack" toBeRendered="false" containerData="4000">
                <children xsi:type="advanced:Placeholder" xmi:id="_lukFnAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesView" toBeRendered="false" ref="_luiQYAPkEeeT-9Bzrt0dmg"/>
              </children>
            </children>
            <children xsi:type="basic:PartSashContainer" xmi:id="_lukFnQPkEeeT-9Bzrt0dmg" containerData="7500">
              <children xsi:type="basic:PartSashContainer" xmi:id="_lukFngPkEeeT-9Bzrt0dmg" containerData="7500" horizontal="true">
                <children xsi:type="advanced:Placeholder" xmi:id="_lukFnwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.editorss" containerData="7500" ref="_luRKoAPkEeeT-9Bzrt0dmg"/>
                <children xsi:type="basic:PartSashContainer" xmi:id="_lukFoAPkEeeT-9Bzrt0dmg" containerData="2500">
                  <children xsi:type="basic:PartStack" xmi:id="_lukFoQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.views.tasksMStack" containerData="5000" selectedElement="_lukFogPkEeeT-9Bzrt0dmg">
                    <children xsi:type="advanced:Placeholder" xmi:id="_lukFogPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.views.tasks" ref="_lui3cAPkEeeT-9Bzrt0dmg"/>
                  </children>
                  <children xsi:type="basic:PartStack" xmi:id="_lukFowPkEeeT-9Bzrt0dmg" elementId="right" containerData="5000" selectedElement="_lukFpAPkEeeT-9Bzrt0dmg">
                    <tags>org.eclipse.e4.secondaryNavigationStack</tags>
                    <children xsi:type="advanced:Placeholder" xmi:id="_lukFpAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.ContentOutline" ref="_lucJwgPkEeeT-9Bzrt0dmg"/>
                    <children xsi:type="advanced:Placeholder" xmi:id="_lukFpQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.texteditor.TemplatesView" toBeRendered="false" ref="_lucw0APkEeeT-9Bzrt0dmg"/>
                    <children xsi:type="advanced:Placeholder" xmi:id="_lukFpgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ant.ui.views.AntView" toBeRendered="false" ref="_luhpUAPkEeeT-9Bzrt0dmg"/>
                  </children>
                </children>
              </children>
              <children xsi:type="basic:PartStack" xmi:id="_lukFpwPkEeeT-9Bzrt0dmg" elementId="bottom" containerData="2500" selectedElement="_lukFqAPkEeeT-9Bzrt0dmg">
                <tags>org.eclipse.e4.secondaryDataStack</tags>
                <children xsi:type="advanced:Placeholder" xmi:id="_lukFqAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.ProblemView" ref="_luaUkwPkEeeT-9Bzrt0dmg"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_lukFqQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.JavadocView" ref="_lua7oAPkEeeT-9Bzrt0dmg"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_lukFqgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.SourceView" ref="_lua7oQPkEeeT-9Bzrt0dmg"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_lukFqwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.search.ui.views.SearchView" toBeRendered="false" ref="_lubisAPkEeeT-9Bzrt0dmg"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_lukFrAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.console.ConsoleView" toBeRendered="false" ref="_lubisQPkEeeT-9Bzrt0dmg"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_lukFrQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.BookmarkView" toBeRendered="false" ref="_lucJwAPkEeeT-9Bzrt0dmg"/>
                <children xsi:type="advanced:Placeholder" xmi:id="_lukFrgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.ProgressView" toBeRendered="false" ref="_lucJwQPkEeeT-9Bzrt0dmg"/>
              </children>
            </children>
          </children>
        </children>
      </children>
      <children xsi:type="basic:PartStack" xmi:id="_ljIRoQPkEeeT-9Bzrt0dmg" elementId="stickyFolderRight" toBeRendered="false" containerData="2500">
        <children xsi:type="advanced:Placeholder" xmi:id="_ljIRogPkEeeT-9Bzrt0dmg" elementId="org.eclipse.help.ui.HelpView" toBeRendered="false" ref="_ljF1YAPkEeeT-9Bzrt0dmg"/>
        <children xsi:type="advanced:Placeholder" xmi:id="_ljIRowPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.internal.introview" toBeRendered="false" ref="_ljHqkAPkEeeT-9Bzrt0dmg"/>
        <children xsi:type="advanced:Placeholder" xmi:id="_ljIRpAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.cheatsheets.views.CheatSheetView" toBeRendered="false" ref="_ljHqkQPkEeeT-9Bzrt0dmg"/>
      </children>
    </children>
    <sharedElements xsi:type="basic:Part" xmi:id="_ljF1YAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.help.ui.HelpView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Help" iconURI="platform:/plugin/org.eclipse.help.ui/icons/view16/help_view.gif" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:Help</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_ljHqkAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.internal.introview" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Welcome" iconURI="platform:/plugin/org.eclipse.ui/icons/full/eview16/defaultview_misc.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:General</tags>
      <menus xmi:id="_l48JkAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.internal.introview">
        <tags>ViewMenu</tags>
        <tags>menuContribution:menu</tags>
      </menus>
      <toolbar xmi:id="_l48JkQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.internal.introview" visible="false"/>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_ljHqkQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.cheatsheets.views.CheatSheetView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Cheat Sheets" iconURI="platform:/plugin/org.eclipse.ui.cheatsheets/icons/view16/cheatsheet_view.gif" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:Help</tags>
    </sharedElements>
    <sharedElements xsi:type="advanced:Area" xmi:id="_luRKoAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.editorss">
      <children xsi:type="basic:PartStack" xmi:id="_luRKoQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.e4.primaryDataStack">
        <tags>org.eclipse.e4.primaryDataStack</tags>
        <tags>EditorStack</tags>
      </children>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_luYfYAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.PackageExplorer" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Package Explorer" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/package.png" tooltip="" closeable="true">
      <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;view group_libraries=&quot;1&quot; layout=&quot;2&quot; linkWithEditor=&quot;0&quot; rootMode=&quot;1&quot; workingSetName=&quot;Aggregate for window 1488966598055&quot;>&#xA;&lt;customFilters userDefinedPatternsEnabled=&quot;false&quot;>&#xA;&lt;xmlDefinedFilters>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.StaticsFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.mylyn.java.ui.MembersFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonJavaProjectsFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer_patternFilterId_.*&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonSharedProjectsFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.SyntheticMembersFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ContainedLibraryFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.m2e.MavenModuleFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.HideInnerClassFilesFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.EmptyInnerPackageFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ClosedProjectsFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.EmptyLibraryContainerFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.PackageDeclarationFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ImportDeclarationFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonJavaElementFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.LibraryFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.CuAndClassFileFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.EmptyPackageFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonPublicFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.LocalTypesFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.FieldsFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;/xmlDefinedFilters>&#xA;&lt;/customFilters>&#xA;&lt;/view>"/>
      <tags>View</tags>
      <tags>categoryTag:Java</tags>
      <tags>active</tags>
      <tags>activeOnClose</tags>
      <menus xmi:id="_lvfSoAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.PackageExplorer">
        <tags>ViewMenu</tags>
        <tags>menuContribution:menu</tags>
      </menus>
      <toolbar xmi:id="_lvfSoQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.PackageExplorer"/>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_luaUkAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.TypeHierarchy" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Type Hierarchy" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/class_hi.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:Java</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_luaUkQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.ResourceNavigator" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Navigator" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/filenav_nav.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:General</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_luaUkgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigator.ProjectExplorer" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Project Explorer" iconURI="platform:/plugin/org.eclipse.ui.navigator.resources/icons/full/eview16/resource_persp.gif" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:General</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_luaUkwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.ProblemView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Problems" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/problems_view.png" tooltip="" closeable="true">
      <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;view PRIMARY_SORT_FIELD=&quot;org.eclipse.ui.ide.severityAndDescriptionField&quot; categoryGroup=&quot;org.eclipse.ui.ide.severity&quot; markerContentGenerator=&quot;org.eclipse.ui.ide.problemsGenerator&quot; partName=&quot;Problems&quot;>&#xA;&lt;columnWidths org.eclipse.ui.ide.locationField=&quot;105&quot; org.eclipse.ui.ide.markerType=&quot;105&quot; org.eclipse.ui.ide.pathField=&quot;140&quot; org.eclipse.ui.ide.resourceField=&quot;105&quot; org.eclipse.ui.ide.severityAndDescriptionField=&quot;350&quot;/>&#xA;&lt;visible IMemento.internal.id=&quot;org.eclipse.ui.ide.severityAndDescriptionField&quot;/>&#xA;&lt;visible IMemento.internal.id=&quot;org.eclipse.ui.ide.resourceField&quot;/>&#xA;&lt;visible IMemento.internal.id=&quot;org.eclipse.ui.ide.pathField&quot;/>&#xA;&lt;visible IMemento.internal.id=&quot;org.eclipse.ui.ide.locationField&quot;/>&#xA;&lt;visible IMemento.internal.id=&quot;org.eclipse.ui.ide.markerType&quot;/>&#xA;&lt;/view>"/>
      <tags>View</tags>
      <tags>categoryTag:General</tags>
      <menus xmi:id="_l1qMEAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.ProblemView">
        <tags>ViewMenu</tags>
        <tags>menuContribution:menu</tags>
      </menus>
      <toolbar xmi:id="_l1qMEQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.ProblemView"/>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_lua7oAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.JavadocView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Javadoc" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/javadoc.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:Java</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_lua7oQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.SourceView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Declaration" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/source.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:Java</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_lubisAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.search.ui.views.SearchView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Search" iconURI="platform:/plugin/org.eclipse.search/icons/full/eview16/searchres.gif" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:General</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_lubisQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.console.ConsoleView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Console" iconURI="platform:/plugin/org.eclipse.ui.console/icons/full/cview16/console_view.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:General</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_lucJwAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.BookmarkView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Bookmarks" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/bkmrk_nav.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:General</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_lucJwQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.ProgressView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Progress" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/pview.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:General</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_lucJwgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.ContentOutline" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Outline" iconURI="platform:/plugin/org.eclipse.ui.views/icons/full/eview16/outline_co.png" tooltip="" closeable="true">
      <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;view/>"/>
      <tags>View</tags>
      <tags>categoryTag:General</tags>
      <menus xmi:id="_l05XEAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.ContentOutline">
        <tags>ViewMenu</tags>
        <tags>menuContribution:menu</tags>
      </menus>
      <toolbar xmi:id="_l05XEQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.ContentOutline"/>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_lucw0APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.texteditor.TemplatesView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Templates" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/templates.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:General</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_luhpUAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ant.ui.views.AntView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Ant" iconURI="platform:/plugin/org.eclipse.ant.ui/icons/full/eview16/ant_view.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:Ant</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_luiQYAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Git Repositories" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/repo_rep.gif" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:Git</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_luiQYQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.junit.ResultView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="JUnit" iconURI="platform:/plugin/org.eclipse.jdt.junit/icons/full/eview16/junit.gif" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:Java</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_lui3cAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.views.tasks" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Task List" iconURI="platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.gif" tooltip="" closeable="true">
      <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;view linkWithEditor=&quot;true&quot; presentation=&quot;org.eclipse.mylyn.tasks.ui.categorized&quot;>&#xA;&lt;sorter groupBy=&quot;CATEGORY_QUERY&quot;>&#xA;&lt;sorter>&#xA;&lt;sort0 sortDirection=&quot;1&quot; sortKey=&quot;PRIORITY&quot;/>&#xA;&lt;sort1 sortDirection=&quot;1&quot; sortKey=&quot;RANK&quot;/>&#xA;&lt;sort2 sortDirection=&quot;1&quot; sortKey=&quot;DATE_CREATED&quot;/>&#xA;&lt;sort3 sortDirection=&quot;1&quot; sortKey=&quot;NONE&quot;/>&#xA;&lt;sort4 sortDirection=&quot;1&quot; sortKey=&quot;NONE&quot;/>&#xA;&lt;sort5 sortDirection=&quot;1&quot; sortKey=&quot;NONE&quot;/>&#xA;&lt;sort6 sortDirection=&quot;1&quot; sortKey=&quot;NONE&quot;/>&#xA;&lt;sort7 sortDirection=&quot;1&quot; sortKey=&quot;NONE&quot;/>&#xA;&lt;/sorter>&#xA;&lt;/sorter>&#xA;&lt;filteredTreeFindHistory/>&#xA;&lt;/view>"/>
      <tags>View</tags>
      <tags>categoryTag:Mylyn</tags>
      <menus xmi:id="_lys-sAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.views.tasks">
        <tags>ViewMenu</tags>
        <tags>menuContribution:menu</tags>
      </menus>
      <toolbar xmi:id="_lys-sQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.views.tasks"/>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_lujegAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wb.core.StructureView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Structure" iconURI="platform:/plugin/org.eclipse.wb.core/icons/structure/properties_view.gif" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:WindowBuilder</tags>
    </sharedElements>
    <sharedElements xsi:type="basic:Part" xmi:id="_lujegQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wb.core.PaletteView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Palette" iconURI="platform:/plugin/org.eclipse.wb.core/icons/structure/palette.png" tooltip="" closeable="true">
      <tags>View</tags>
      <tags>categoryTag:WindowBuilder</tags>
    </sharedElements>
    <trimBars xmi:id="_ljQ0gAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.main.toolbar">
      <children xsi:type="menu:ToolBar" xmi:id="_lkQTAAPkEeeT-9Bzrt0dmg" elementId="group.file" toBeRendered="false">
        <tags>toolbarSeparator</tags>
        <children xsi:type="menu:ToolBarSeparator" xmi:id="_lkQTAQPkEeeT-9Bzrt0dmg" elementId="group.file" toBeRendered="false"/>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_lkQ6EAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.workbench.file">
        <tags>Draggable</tags>
        <children xsi:type="menu:HandledToolItem" xmi:id="_lkYO0APkEeeT-9Bzrt0dmg" elementId="print" visible="false" iconURI="platform:/plugin/org.eclipse.ui/icons/full/etool16/print_edit.png" tooltip="Print" enabled="false" command="_lWZdYwPkEeeT-9Bzrt0dmg"/>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_lkQ6EQPkEeeT-9Bzrt0dmg" elementId="additions" toBeRendered="false">
        <tags>toolbarSeparator</tags>
        <children xsi:type="menu:ToolBarSeparator" xmi:id="_lkQ6EgPkEeeT-9Bzrt0dmg" elementId="additions" toBeRendered="false"/>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_l2WvoAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.launchActionSet">
        <tags>Draggable</tags>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_l2tU8APkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.JavaElementCreationActionSet">
        <tags>Draggable</tags>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_l2boIAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.search.searchActionSet">
        <tags>Draggable</tags>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_lkQ6EwPkEeeT-9Bzrt0dmg" elementId="group.nav" toBeRendered="false">
        <tags>toolbarSeparator</tags>
        <children xsi:type="menu:ToolBarSeparator" xmi:id="_lkQ6FAPkEeeT-9Bzrt0dmg" elementId="group.nav" toBeRendered="false"/>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_lkRhIAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.workbench.navigate">
        <tags>Draggable</tags>
        <children xsi:type="menu:HandledToolItem" xmi:id="_lkZc8wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.pinEditor" visible="false" iconURI="platform:/plugin/org.eclipse.ui/icons/full/etool16/pin_editor.png" tooltip="Pin Editor" type="Check" command="_lWYPIwPkEeeT-9Bzrt0dmg"/>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_lkRhIQPkEeeT-9Bzrt0dmg" elementId="group.editor" toBeRendered="false">
        <tags>toolbarSeparator</tags>
        <children xsi:type="menu:ToolBarSeparator" xmi:id="_lkRhIgPkEeeT-9Bzrt0dmg" elementId="group.editor" toBeRendered="false"/>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_lkRhIwPkEeeT-9Bzrt0dmg" elementId="group.help" toBeRendered="false">
        <tags>toolbarSeparator</tags>
        <children xsi:type="menu:ToolBarSeparator" xmi:id="_lkRhJAPkEeeT-9Bzrt0dmg" elementId="group.help" toBeRendered="false"/>
      </children>
      <children xsi:type="menu:ToolBar" xmi:id="_lkRhJQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.workbench.help" visible="false">
        <tags>Draggable</tags>
      </children>
      <children xsi:type="menu:ToolControl" xmi:id="_ln1ygAPkEeeT-9Bzrt0dmg" elementId="PerspectiveSpacer" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.LayoutModifierToolControl">
        <tags>stretch</tags>
        <tags>SHOW_RESTORE_MENU</tags>
      </children>
      <children xsi:type="menu:ToolControl" xmi:id="_ln3AoAPkEeeT-9Bzrt0dmg" elementId="PerspectiveSwitcher" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.e4.ui.workbench.addons.perspectiveswitcher.PerspectiveSwitcher">
        <tags>Draggable</tags>
        <tags>HIDEABLE</tags>
        <tags>SHOW_RESTORE_MENU</tags>
      </children>
    </trimBars>
    <trimBars xmi:id="_ln-VYAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.trim.status" side="Bottom">
      <children xsi:type="menu:ToolControl" xmi:id="_loCm0APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.StatusLine" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.StandardTrim">
        <tags>stretch</tags>
      </children>
      <children xsi:type="menu:ToolControl" xmi:id="_loMX0APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.HeapStatus" toBeRendered="false" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.StandardTrim">
        <tags>Draggable</tags>
      </children>
      <children xsi:type="menu:ToolControl" xmi:id="_loVhwAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.ProgressBar" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.StandardTrim">
        <tags>Draggable</tags>
      </children>
    </trimBars>
    <trimBars xmi:id="_lojkMAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.trim.vertical1" toBeRendered="false" side="Left">
      <children xsi:type="menu:ToolControl" xmi:id="_l6mWcAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.ide.perspectivestack(minimized)" toBeRendered="false" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.minmax.TrimStack">
        <tags>TrimStack</tags>
      </children>
    </trimBars>
    <trimBars xmi:id="_lokLQAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.trim.vertical2" side="Right"/>
  </children>
  <bindingTables xmi:id="_lV8KMwPkEeeT-9Bzrt0dmg" contributorURI="platform:/plugin/org.eclipse.platform" bindingContext="_lV8KNAPkEeeT-9Bzrt0dmg">
    <bindings xmi:id="_lW3XSwPkEeeT-9Bzrt0dmg" keySequence="CTRL+A" command="_lWariwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW3-UgPkEeeT-9Bzrt0dmg" keySequence="CTRL+SPACE" command="_lWY2PwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW4lYAPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+SPACE" command="_lWY2LQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW5MdAPkEeeT-9Bzrt0dmg" keySequence="CTRL+C" command="_lWT9vAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW5MeQPkEeeT-9Bzrt0dmg" keySequence="ALT+PAGE_UP" command="_lWb5fwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW5zgwPkEeeT-9Bzrt0dmg" keySequence="SHIFT+INSERT" command="_lWVLxAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW7otAPkEeeT-9Bzrt0dmg" keySequence="ALT+PAGE_DOWN" command="_lWXBCAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW7ouAPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+D" command="_lWarkAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW8PxQPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+L" command="_lWarUQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW8PygPkEeeT-9Bzrt0dmg" keySequence="CTRL+V" command="_lWVLxAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW-E9wPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+F3" command="_lWaEQgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW-sBgPkEeeT-9Bzrt0dmg" keySequence="CTRL+F10" command="_lWVy3APkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW_6JQPkEeeT-9Bzrt0dmg" keySequence="CTRL+Z" command="_lWZdPgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW_6JwPkEeeT-9Bzrt0dmg" keySequence="CTRL+X" command="_lWZdSgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXAhMwPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+I" command="_lWXoCwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXAhNQPkEeeT-9Bzrt0dmg" keySequence="CTRL+INSERT" command="_lWT9vAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXCWYQPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+Z" command="_lWbSjgPkEeeT-9Bzrt0dmg">
      <tags>platform:gtk</tags>
    </bindings>
    <bindings xmi:id="_lXELlwPkEeeT-9Bzrt0dmg" keySequence="CTRL+1" command="_lWYPGAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXEypAPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+V" command="_lWarkAPkEeeT-9Bzrt0dmg">
      <tags>platform:gtk</tags>
    </bindings>
    <bindings xmi:id="_lXFZuwPkEeeT-9Bzrt0dmg" keySequence="SHIFT+DEL" command="_lWZdSgPkEeeT-9Bzrt0dmg"/>
  </bindingTables>
  <bindingTables xmi:id="_lWyewAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.contexts.window" bindingContext="_lV8KNQPkEeeT-9Bzrt0dmg">
    <bindings xmi:id="_lW1iEAPkEeeT-9Bzrt0dmg" keySequence="CTRL+B" command="_lWVL0APkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW2JIAPkEeeT-9Bzrt0dmg" keySequence="ALT+ARROW_RIGHT" command="_lWaEQQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW2wMgPkEeeT-9Bzrt0dmg" keySequence="ALT+CTRL+SHIFT+ARROW_RIGHT" command="_lWVL6QPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW3XSAPkEeeT-9Bzrt0dmg" keySequence="ALT+CTRL+SHIFT+ARROW_UP" command="_lWVy6QPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW3XSQPkEeeT-9Bzrt0dmg" keySequence="ALT+ARROW_LEFT" command="_lWVy4wPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW3-VAPkEeeT-9Bzrt0dmg" keySequence="CTRL+&#xc0;" command="_lWbSlgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW4lZgPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+D T" command="_lWT9wwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW4lZwPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+D Q" command="_lWbScAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW4laAPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+D J" command="_lWYPFAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW4laQPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+D A" command="_lWZdNwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW5McQPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+W" command="_lWZdSAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW5MegPkEeeT-9Bzrt0dmg" keySequence="CTRL+#" command="_lWVy3gPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW5MewPkEeeT-9Bzrt0dmg" keySequence="CTRL+H" command="_lWY2PgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW5zhQPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+G" command="_lWbSkAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW5zhgPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+H" command="_lWY2SwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW5zhwPkEeeT-9Bzrt0dmg" keySequence="ALT+CTRL+G" command="_lWWZ_wPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW6akQPkEeeT-9Bzrt0dmg" keySequence="CTRL+F" command="_lWWZ6gPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW6akgPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+F" command="_lWaEUgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW6akwPkEeeT-9Bzrt0dmg" keySequence="CTRL+E" command="_lWZdMwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW6alAPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+E" command="_lWXBBgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW7BoQPkEeeT-9Bzrt0dmg" keySequence="CTRL+&#xc7;" command="_lWYPLwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW7BpQPkEeeT-9Bzrt0dmg" keySequence="CTRL+G" command="_lWT9tAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW7BpwPkEeeT-9Bzrt0dmg" keySequence="ALT+CTRL+H" command="_lWVy0QPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW7BqAPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+H" command="_lWT9qwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW7BqQPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+I" command="_lWVy3wPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW7ougPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+F7" command="_lWXBKQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW8PwAPkEeeT-9Bzrt0dmg" keySequence="CTRL+F6" command="_lWWZ9gPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW8PwQPkEeeT-9Bzrt0dmg" keySequence="CTRL+*" command="_lWY2JwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW8PwgPkEeeT-9Bzrt0dmg" keySequence="CTRL+." command="_lWbScQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW8PwwPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+T" command="_lWZdSQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW8PyAPkEeeT-9Bzrt0dmg" keySequence="F3" command="_lWYPEAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW820APkEeeT-9Bzrt0dmg" keySequence="ALT+CTRL+SHIFT+F12" command="_lWarmQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW822gPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+R" command="_lWbSlQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW9d6APkEeeT-9Bzrt0dmg" keySequence="CTRL+W" command="_lWbSoQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW-E8APkEeeT-9Bzrt0dmg" keySequence="F12" command="_lWY2QQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW-E8gPkEeeT-9Bzrt0dmg" keySequence="CTRL+-" command="_lWarWAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW-E8wPkEeeT-9Bzrt0dmg" keySequence="CTRL+P" command="_lWZdYwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW-E9APkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+F6" command="_lWWZ5wPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW-E9gPkEeeT-9Bzrt0dmg" keySequence="CTRL+&#xd9;" command="_lWVy_QPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW-E-APkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+R" command="_lWb5nwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW-sAQPkEeeT-9Bzrt0dmg" keySequence="F11" command="_lWarggPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW-sAwPkEeeT-9Bzrt0dmg" keySequence="CTRL+F2" command="_lWbSjwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW-sBQPkEeeT-9Bzrt0dmg" keySequence="ALT+CTRL+U" command="_lWXBEwPkEeeT-9Bzrt0dmg">
      <tags>platform:gtk</tags>
    </bindings>
    <bindings xmi:id="_lW-sCAPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+T" command="_lWUk1wPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW-sCQPkEeeT-9Bzrt0dmg" keySequence="CTRL+," command="_lWVLygPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW_TEQPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+F12" command="_lWUkvgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW_TFAPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+F9" command="_lWargAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW_TFQPkEeeT-9Bzrt0dmg" keySequence="ALT+CTRL+P" command="_lWWZ9QPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW_TFwPkEeeT-9Bzrt0dmg" keySequence="CTRL+F11" command="_lWaEaQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW_6IAPkEeeT-9Bzrt0dmg" keySequence="F2" command="_lWVLzQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW_6JAPkEeeT-9Bzrt0dmg" keySequence="CTRL+M" command="_lWY2NwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW_6JgPkEeeT-9Bzrt0dmg" keySequence="DEL" command="_lWWZ_APkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW_6KAPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+Z" command="_lWT9ogPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW_6KQPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+F8" command="_lWY2MAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW_6KgPkEeeT-9Bzrt0dmg" keySequence="ALT+-" command="_lWUkvAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXAhMAPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+N" command="_lWZdRAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXAhMQPkEeeT-9Bzrt0dmg" keySequence="CTRL+U" command="_lWbShAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXAhMgPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+F7" command="_lWarhgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXAhNAPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+J" command="_lWY2UwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXAhNwPkEeeT-9Bzrt0dmg" keySequence="CTRL+)" command="_lWarjQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXBIQAPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+NUMPAD_MULTIPLY" command="_lWVy_APkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXBIRQPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+S" command="_lWb5lwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXBIRwPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+NUMPAD_DIVIDE" command="_lWY2MwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXBvUgPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+V" command="_lWarbQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXBvVAPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+M" command="_lWarlwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXBvVQPkEeeT-9Bzrt0dmg" keySequence="CTRL+F4" command="_lWbSoQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXBvVwPkEeeT-9Bzrt0dmg" keySequence="ALT+F5" command="_lWargwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXCWYAPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+F4" command="_lWZdSAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXCWYgPkEeeT-9Bzrt0dmg" keySequence="CTRL+F7" command="_lWT9vQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXCWZgPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+O" command="_lWarigPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXCWaQPkEeeT-9Bzrt0dmg" keySequence="CTRL+F8" command="_lWYPGgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXCWagPkEeeT-9Bzrt0dmg" keySequence="ALT+CR" command="_lWYPPAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXC9cwPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+W" command="_lWbSawPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXC9dQPkEeeT-9Bzrt0dmg" keySequence="F4" command="_lWVL3gPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXC9eQPkEeeT-9Bzrt0dmg" keySequence="CTRL+F9" command="_lWXBEAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXC9egPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+L" command="_lWYPEgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXDkgQPkEeeT-9Bzrt0dmg" keySequence="CTRL+3" command="_lWYPJwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXDkhgPkEeeT-9Bzrt0dmg" keySequence="CTRL+Q" command="_lWaETQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXDkhwPkEeeT-9Bzrt0dmg" keySequence="CTRL+F12" command="_lWWaDAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXDkiQPkEeeT-9Bzrt0dmg" keySequence="SHIFT+F2" command="_lWVy7wPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXDkiwPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+P" command="_lWWaBwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXDkjAPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+N" command="_lWUkvwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXELkgPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+S" command="_lWVzAQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXELlAPkEeeT-9Bzrt0dmg" keySequence="CTRL+S" command="_lWarVwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXELlQPkEeeT-9Bzrt0dmg" keySequence="CTRL+N" command="_lWbSmAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXEyoAPkEeeT-9Bzrt0dmg" keySequence="CTRL+{" command="_lWY2MQPkEeeT-9Bzrt0dmg">
      <parameters xmi:id="_lXEyoQPkEeeT-9Bzrt0dmg" elementId="Splitter.isHorizontal" name="Splitter.isHorizontal" value="false"/>
    </bindings>
    <bindings xmi:id="_lXEyogPkEeeT-9Bzrt0dmg" keySequence="SHIFT+F5" command="_lWbSZgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXEypwPkEeeT-9Bzrt0dmg" keySequence="F5" command="_lWaEYwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXEyqwPkEeeT-9Bzrt0dmg" keySequence="ALT+F7" command="_lWVLxQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXFZtAPkEeeT-9Bzrt0dmg" keySequence="CTRL+_" command="_lWY2MQPkEeeT-9Bzrt0dmg">
      <parameters xmi:id="_lXFZtQPkEeeT-9Bzrt0dmg" elementId="Splitter.isHorizontal" name="Splitter.isHorizontal" value="true"/>
    </bindings>
    <bindings xmi:id="_lXFZuQPkEeeT-9Bzrt0dmg" keySequence="CTRL+=" command="_lWaETAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXFZugPkEeeT-9Bzrt0dmg" keySequence="CTRL+=" command="_lWYPNQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXFZvAPkEeeT-9Bzrt0dmg" keySequence="ALT+CTRL+SHIFT+ARROW_DOWN" command="_lWb5cwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXFZvgPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+B" command="_lWWaBQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXGAwAPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+C" command="_lWY2RwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXGAxgPkEeeT-9Bzrt0dmg" keySequence="ALT+CTRL+B" command="_lWXA_gPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXGAxwPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+Q X" command="_lWXA9APkEeeT-9Bzrt0dmg">
      <parameters xmi:id="_lXGAyAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.ui.views.ProblemView"/>
    </bindings>
    <bindings xmi:id="_lXGAyQPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+X M" command="_lWarmAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXGAygPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+Q Z" command="_lWXA9APkEeeT-9Bzrt0dmg">
      <parameters xmi:id="_lXGAywPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.team.ui.GenericHistoryView"/>
    </bindings>
    <bindings xmi:id="_lXGAzAPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+X J" command="_lWXBDwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXGAzgPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+Q T" command="_lWXA9APkEeeT-9Bzrt0dmg">
      <parameters xmi:id="_lXGAzwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.jdt.ui.TypeHierarchy"/>
    </bindings>
    <bindings xmi:id="_lXGA0APkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+Q J" command="_lWXA9APkEeeT-9Bzrt0dmg">
      <parameters xmi:id="_lXGn0APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.jdt.ui.JavadocView"/>
    </bindings>
    <bindings xmi:id="_lXGn0QPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+X A" command="_lWVLyAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXGn0gPkEeeT-9Bzrt0dmg" keySequence="CTRL+W R" command="_lWarcAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXGn0wPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+Q H" command="_lWXA9APkEeeT-9Bzrt0dmg">
      <parameters xmi:id="_lXGn1APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.ui.cheatsheets.views.CheatSheetView"/>
    </bindings>
    <bindings xmi:id="_lXGn1QPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+Q O" command="_lWXA9APkEeeT-9Bzrt0dmg">
      <parameters xmi:id="_lXGn1gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.ui.views.ContentOutline"/>
    </bindings>
    <bindings xmi:id="_lXGn1wPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+Q L" command="_lWXA9APkEeeT-9Bzrt0dmg">
      <parameters xmi:id="_lXGn2APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.pde.runtime.LogView"/>
    </bindings>
    <bindings xmi:id="_lXGn2QPkEeeT-9Bzrt0dmg" keySequence="CTRL+W B" command="_lWaEQwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXGn2gPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+Q B" command="_lWXA9APkEeeT-9Bzrt0dmg">
      <parameters xmi:id="_lXGn2wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.debug.ui.BreakpointView"/>
    </bindings>
    <bindings xmi:id="_lXGn3QPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+Q C" command="_lWXA9APkEeeT-9Bzrt0dmg">
      <parameters xmi:id="_lXGn3gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.ui.console.ConsoleView"/>
    </bindings>
    <bindings xmi:id="_lXGn3wPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+Q Q" command="_lWXA9APkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXGn4APkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+Q V" command="_lWXA9APkEeeT-9Bzrt0dmg">
      <parameters xmi:id="_lXGn4QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.debug.ui.VariableView"/>
    </bindings>
    <bindings xmi:id="_lXHO4QPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+Q D" command="_lWXA9APkEeeT-9Bzrt0dmg">
      <parameters xmi:id="_lXHO4gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.jdt.ui.SourceView"/>
    </bindings>
    <bindings xmi:id="_lXHO4wPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+X T" command="_lWariAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXHO5QPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+Q K" command="_lWXA9APkEeeT-9Bzrt0dmg">
      <parameters xmi:id="_lXHO5gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.mylyn.tasks.ui.views.tasks"/>
    </bindings>
    <bindings xmi:id="_lXHO5wPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+Q S" command="_lWXA9APkEeeT-9Bzrt0dmg">
      <parameters xmi:id="_lXHO6APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.search.ui.views.SearchView"/>
    </bindings>
    <bindings xmi:id="_lXHO6QPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+X Q" command="_lWXoCQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXHO6gPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+Q P" command="_lWXA9APkEeeT-9Bzrt0dmg">
      <parameters xmi:id="_lXHO6wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.jdt.ui.PackageExplorer"/>
    </bindings>
    <bindings xmi:id="_lXHO7APkEeeT-9Bzrt0dmg" keySequence="ALT+CTRL+X G" command="_lWaregPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXHO7QPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+Q Y" command="_lWXA9APkEeeT-9Bzrt0dmg">
      <parameters xmi:id="_lXHO7gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.team.sync.views.SynchronizeView"/>
    </bindings>
  </bindingTables>
  <bindingTables xmi:id="_lW2JIQPkEeeT-9Bzrt0dmg" elementId="Ocaml.editor.context" bindingContext="_lWeVuQPkEeeT-9Bzrt0dmg">
    <bindings xmi:id="_lW2JIgPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+C" command="_lWbShwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW3-UwPkEeeT-9Bzrt0dmg" keySequence="CTRL+SPACE" command="_lWXoIQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW5zgQPkEeeT-9Bzrt0dmg" keySequence="SHIFT+TAB" command="_lWZdcAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW8PxgPkEeeT-9Bzrt0dmg" keySequence="F3" command="_lWXBCgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW820wPkEeeT-9Bzrt0dmg" keySequence="CTRL+O" command="_lWY2JQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW9d4gPkEeeT-9Bzrt0dmg" keySequence="F6" command="_lWXoJQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW-E-QPkEeeT-9Bzrt0dmg" keySequence="F7" command="_lWT9owPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW_6IgPkEeeT-9Bzrt0dmg" keySequence="F2" command="_lWUk4QPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW_6IwPkEeeT-9Bzrt0dmg" keySequence="TAB" command="_lWZdZAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXAhOAPkEeeT-9Bzrt0dmg" keySequence="ALT+CTRL+K" command="_lWYPHQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXBvUQPkEeeT-9Bzrt0dmg" keySequence="SHIFT+F3" command="_lWVL3APkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXC9dAPkEeeT-9Bzrt0dmg" keySequence="F4" command="_lWWaCAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXFZvQPkEeeT-9Bzrt0dmg" keySequence="ALT+CTRL+SHIFT+C" command="_lWVzBgPkEeeT-9Bzrt0dmg"/>
  </bindingTables>
  <bindingTables xmi:id="_lW2JIwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.javaEditorScope" bindingContext="_lWeVwAPkEeeT-9Bzrt0dmg">
    <bindings xmi:id="_lW2JJAPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+C" command="_lWUkwgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW2wMwPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+ARROW_RIGHT" command="_lWVy9APkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW2wNgPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+ARROW_UP" command="_lWb5dgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW2wNwPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+B" command="_lWb5fgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW3XQQPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+ARROW_DOWN" command="_lWWaEAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW4lYgPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+ARROW_UP" command="_lWbSbwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW6alwPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+F" command="_lWarZQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW821APkEeeT-9Bzrt0dmg" keySequence="CTRL+O" command="_lWarjwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW9d7APkEeeT-9Bzrt0dmg" keySequence="CTRL+7" command="_lWUkwgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW_TEgPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+/" command="_lWbShQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW_TGQPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+P" command="_lWXoAAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXBIQgPkEeeT-9Bzrt0dmg" keySequence="CTRL+I" command="_lWZdawPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXCWZAPkEeeT-9Bzrt0dmg" keySequence="CTRL+T" command="_lWUkzwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXDkggPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+U" command="_lWYPIQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXDkigPkEeeT-9Bzrt0dmg" keySequence="CTRL+F3" command="_lWbSbgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXDkjwPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+O" command="_lWZdOQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXELkAPkEeeT-9Bzrt0dmg" keySequence="CTRL+/" command="_lWUkwgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXEypQPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+M" command="_lWYPKQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXFZsQPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+\" command="_lWVzAgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXFZwAPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+ARROW_DOWN" command="_lWarkQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXGAwwPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+ARROW_LEFT" command="_lWaEVwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXGAzQPkEeeT-9Bzrt0dmg" keySequence="CTRL+2 L" command="_lWVy6gPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXGn3APkEeeT-9Bzrt0dmg" keySequence="CTRL+2 M" command="_lWaEZwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXHO4APkEeeT-9Bzrt0dmg" keySequence="CTRL+2 R" command="_lWYPQQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXHO5APkEeeT-9Bzrt0dmg" keySequence="CTRL+2 F" command="_lWarlgPkEeeT-9Bzrt0dmg"/>
  </bindingTables>
  <bindingTables xmi:id="_lW2JJQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.propertiesEditorScope" bindingContext="_lWeV2APkEeeT-9Bzrt0dmg">
    <bindings xmi:id="_lW2JJgPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+C" command="_lWUkwgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW9d7QPkEeeT-9Bzrt0dmg" keySequence="CTRL+7" command="_lWUkwgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXELkQPkEeeT-9Bzrt0dmg" keySequence="CTRL+/" command="_lWUkwgPkEeeT-9Bzrt0dmg"/>
  </bindingTables>
  <bindingTables xmi:id="_lW2JJwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.sse.ui.structuredTextEditorScope" bindingContext="_lWeVxgPkEeeT-9Bzrt0dmg">
    <bindings xmi:id="_lW2JKAPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+C" command="_lWarXwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW2wNAPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+ARROW_RIGHT" command="_lWVy8QPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW2wNQPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+ARROW_UP" command="_lWXoBQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW3XRAPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+ARROW_DOWN" command="_lWXoEgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW3XRwPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+A" command="_lWb5mwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW4lZAPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+ARROW_UP" command="_lWXBFgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW7BoAPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+F" command="_lWbSkQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW8PyQPkEeeT-9Bzrt0dmg" keySequence="F3" command="_lWUkzQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW822APkEeeT-9Bzrt0dmg" keySequence="CTRL+O" command="_lWVLzwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW_TEwPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+/" command="_lWUkuwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW_TGgPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+P" command="_lWUk1APkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXBIQwPkEeeT-9Bzrt0dmg" keySequence="CTRL+I" command="_lWZdaQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXFZsgPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+\" command="_lWWaAwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXFZswPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+>" command="_lWZdOAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXFZvwPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+ARROW_DOWN" command="_lWbSdgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXGAxAPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+ARROW_LEFT" command="_lWVL6gPkEeeT-9Bzrt0dmg"/>
  </bindingTables>
  <bindingTables xmi:id="_lW2JKQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.textEditorScope" bindingContext="_lWeVsgPkEeeT-9Bzrt0dmg">
    <bindings xmi:id="_lW2wMAPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+ARROW_LEFT" command="_lWarawPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW2wMQPkEeeT-9Bzrt0dmg" keySequence="CTRL+ARROW_DOWN" command="_lWb5mgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW3XSgPkEeeT-9Bzrt0dmg" keySequence="CTRL+ARROW_UP" command="_lWWaDgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW3-UAPkEeeT-9Bzrt0dmg" keySequence="ALT+CTRL+ARROW_UP" command="_lWbSbAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW3-VQPkEeeT-9Bzrt0dmg" keySequence="ALT+ARROW_DOWN" command="_lWXBHwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW3-VwPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+DEL" command="_lWY2RgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW4lYQPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+A" command="_lWUk0wPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW4lZQPkEeeT-9Bzrt0dmg" keySequence="ALT+CTRL+SPACE" command="_lWUk4wPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW5McAPkEeeT-9Bzrt0dmg" keySequence="CTRL+J" command="_lWVy5gPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW5McgPkEeeT-9Bzrt0dmg" keySequence="CTRL+NUMPAD_SUBTRACT" command="_lWZdbwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW5McwPkEeeT-9Bzrt0dmg" keySequence="CTRL+ARROW_LEFT" command="_lWT9swPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW5zgAPkEeeT-9Bzrt0dmg" keySequence="CTRL+END" command="_lWXBJQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW5zggPkEeeT-9Bzrt0dmg" keySequence="ALT+CTRL+J" command="_lWXoLAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW5ziAPkEeeT-9Bzrt0dmg" keySequence="SHIFT+END" command="_lWarZAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW6akAPkEeeT-9Bzrt0dmg" keySequence="SHIFT+HOME" command="_lWaEbgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW7BogPkEeeT-9Bzrt0dmg" keySequence="CTRL+HOME" command="_lWVLwgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW7BpgPkEeeT-9Bzrt0dmg" keySequence="CTRL+BS" command="_lWT9sgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW7osAPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+ARROW_RIGHT" command="_lWXBIgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW7osQPkEeeT-9Bzrt0dmg" keySequence="CTRL+D" command="_lWVy9wPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW7otQPkEeeT-9Bzrt0dmg" keySequence="CTRL+ARROW_RIGHT" command="_lWXoFAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW7ouQPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+K" command="_lWWaBAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW8PxAPkEeeT-9Bzrt0dmg" keySequence="CTRL+NUMPAD_MULTIPLY" command="_lWXoFwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW820QPkEeeT-9Bzrt0dmg" keySequence="INSERT" command="_lWVL6wPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW9d5wPkEeeT-9Bzrt0dmg" keySequence="CTRL+K" command="_lWXBAAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW9d6wPkEeeT-9Bzrt0dmg" keySequence="CTRL+NUMPAD_DIVIDE" command="_lWXA8APkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW-E8QPkEeeT-9Bzrt0dmg" keySequence="F12" command="_lWT9pwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW-E9QPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+Q" command="_lWXoGQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW-sBwPkEeeT-9Bzrt0dmg" keySequence="CTRL+F10" command="_lWZdagPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW_6IQPkEeeT-9Bzrt0dmg" keySequence="F2" command="_lWYPKAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXAhNgPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+J" command="_lWXoBwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXBIQQPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+NUMPAD_MULTIPLY" command="_lWXoKQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXBIRAPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+INSERT" command="_lWXBFwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXBISAPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+NUMPAD_DIVIDE" command="_lWVL7gPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXBISQPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+Y" command="_lWarUgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXBvUAPkEeeT-9Bzrt0dmg" keySequence="CTRL+L" command="_lWZdNAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXBvVgPkEeeT-9Bzrt0dmg" keySequence="CTRL+NUMPAD_ADD" command="_lWarkwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXC9cgPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+CR" command="_lWaEQAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXC9dwPkEeeT-9Bzrt0dmg" keySequence="SHIFT+CR" command="_lWarZwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXC9eAPkEeeT-9Bzrt0dmg" keySequence="END" command="_lWaEYgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXDkgAPkEeeT-9Bzrt0dmg" keySequence="ALT+/" command="_lWarbwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXDkjQPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+X" command="_lWT9yQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXFZsAPkEeeT-9Bzrt0dmg" keySequence="HOME" command="_lWaraAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXFZtgPkEeeT-9Bzrt0dmg" keySequence="CTRL+DEL" command="_lWZdNgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXFZtwPkEeeT-9Bzrt0dmg" keySequence="ALT+ARROW_UP" command="_lWb5eAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXGAxQPkEeeT-9Bzrt0dmg" keySequence="ALT+CTRL+ARROW_DOWN" command="_lWarnwPkEeeT-9Bzrt0dmg"/>
  </bindingTables>
  <bindingTables xmi:id="_lW2wOAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.breadcrumbEditorScope" bindingContext="_lWeVvwPkEeeT-9Bzrt0dmg">
    <bindings xmi:id="_lW3XQAPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+B" command="_lWb5fgPkEeeT-9Bzrt0dmg"/>
  </bindingTables>
  <bindingTables xmi:id="_lW3XQgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.views.tasks" bindingContext="_lWeVwgPkEeeT-9Bzrt0dmg">
    <bindings xmi:id="_lW3XQwPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+ARROW_DOWN" command="_lWarYQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW3-VgPkEeeT-9Bzrt0dmg" keySequence="ALT+ARROW_DOWN" command="_lWY2UgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW4lYwPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+ARROW_UP" command="_lWY2JAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW5zhAPkEeeT-9Bzrt0dmg" keySequence="SHIFT+INSERT" command="_lWWZ-gPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW7BqgPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+I" command="_lWarVgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW820gPkEeeT-9Bzrt0dmg" keySequence="INSERT" command="_lWaEfgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW9d4APkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+R" command="_lWarZgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXBvUwPkEeeT-9Bzrt0dmg" keySequence="CTRL+CR" command="_lWY2SQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXC9dgPkEeeT-9Bzrt0dmg" keySequence="F4" command="_lWVy2wPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXDkgwPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+U" command="_lWXoDgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXFZuAPkEeeT-9Bzrt0dmg" keySequence="ALT+ARROW_UP" command="_lWWaEgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXGAwQPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+C" command="_lWb5lgPkEeeT-9Bzrt0dmg"/>
  </bindingTables>
  <bindingTables xmi:id="_lW3XRQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wb.core.java.editorScope" bindingContext="_lWeVswPkEeeT-9Bzrt0dmg">
    <bindings xmi:id="_lW3XRgPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+A" command="_lWbSagPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW3-UQPkEeeT-9Bzrt0dmg" keySequence="ALT+CTRL+A" command="_lWbSagPkEeeT-9Bzrt0dmg"/>
  </bindingTables>
  <bindingTables xmi:id="_lW5MdQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesView" bindingContext="_lWeV2QPkEeeT-9Bzrt0dmg">
    <bindings xmi:id="_lW5MdgPkEeeT-9Bzrt0dmg" keySequence="CTRL+C" command="_lWYPNwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW8PywPkEeeT-9Bzrt0dmg" keySequence="CTRL+V" command="_lWT9xwPkEeeT-9Bzrt0dmg"/>
  </bindingTables>
  <bindingTables xmi:id="_lW5MdwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.ReflogView" bindingContext="_lWeVvgPkEeeT-9Bzrt0dmg">
    <bindings xmi:id="_lW5MeAPkEeeT-9Bzrt0dmg" keySequence="CTRL+C" command="_lWWZ-QPkEeeT-9Bzrt0dmg"/>
  </bindingTables>
  <bindingTables xmi:id="_lW6alQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ant.ui.AntEditorScope" bindingContext="_lWeV0gPkEeeT-9Bzrt0dmg">
    <bindings xmi:id="_lW6algPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+F" command="_lWarZQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW8PxwPkEeeT-9Bzrt0dmg" keySequence="F3" command="_lWT9xgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW822QPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+R" command="_lWVL2wPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXDkiAPkEeeT-9Bzrt0dmg" keySequence="SHIFT+F2" command="_lWVL0wPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXDkjgPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+O" command="_lWT9wAPkEeeT-9Bzrt0dmg"/>
  </bindingTables>
  <bindingTables xmi:id="_lW7BowPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.memory.abstractasynctablerendering" bindingContext="_lWeVvQPkEeeT-9Bzrt0dmg">
    <bindings xmi:id="_lW7BpAPkEeeT-9Bzrt0dmg" keySequence="CTRL+G" command="_lWY2NgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW_TFgPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+." command="_lWY2NQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXCWZQPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+," command="_lWaEUQPkEeeT-9Bzrt0dmg"/>
  </bindingTables>
  <bindingTables xmi:id="_lW7BqwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.editors.task" bindingContext="_lWeVwwPkEeeT-9Bzrt0dmg">
    <bindings xmi:id="_lW7BrAPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+I" command="_lWarVgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW821QPkEeeT-9Bzrt0dmg" keySequence="CTRL+O" command="_lWbSYQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW9d4QPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+R" command="_lWarZgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXBIRgPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+S" command="_lWZdUwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXDkhAPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+U" command="_lWXoDgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXEypgPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+M" command="_lWUkygPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXGAwgPkEeeT-9Bzrt0dmg" keySequence="ALT+SHIFT+C" command="_lWb5lgPkEeeT-9Bzrt0dmg"/>
  </bindingTables>
  <bindingTables xmi:id="_lW7osgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.console" bindingContext="_lWeVtQPkEeeT-9Bzrt0dmg">
    <bindings xmi:id="_lW7oswPkEeeT-9Bzrt0dmg" keySequence="CTRL+D" command="_lWbSaAPkEeeT-9Bzrt0dmg"/>
  </bindingTables>
  <bindingTables xmi:id="_lW7otgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.core.runtime.xml" bindingContext="_lWeVygPkEeeT-9Bzrt0dmg">
    <bindings xmi:id="_lW7otwPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+D" command="_lWbSgwPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW_TGAPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+P" command="_lWY2QwPkEeeT-9Bzrt0dmg"/>
  </bindingTables>
  <bindingTables xmi:id="_lW821gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.wikitext.ui.editor.markupSourceContext" bindingContext="_lWeVxQPkEeeT-9Bzrt0dmg">
    <bindings xmi:id="_lW821wPkEeeT-9Bzrt0dmg" keySequence="CTRL+O" command="_lWUk3QPkEeeT-9Bzrt0dmg"/>
  </bindingTables>
  <bindingTables xmi:id="_lW9d4wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.debugging" bindingContext="_lWeVvAPkEeeT-9Bzrt0dmg">
    <bindings xmi:id="_lW9d5APkEeeT-9Bzrt0dmg" keySequence="F6" command="_lWardAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW-sAAPkEeeT-9Bzrt0dmg" keySequence="F7" command="_lWbSfgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW-sAgPkEeeT-9Bzrt0dmg" keySequence="F8" command="_lWVL5APkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW-sBAPkEeeT-9Bzrt0dmg" keySequence="CTRL+F2" command="_lWY2TQPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lW_TEAPkEeeT-9Bzrt0dmg" keySequence="CTRL+F5" command="_lWareAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXDkhQPkEeeT-9Bzrt0dmg" keySequence="CTRL+R" command="_lWT9wgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXEyqgPkEeeT-9Bzrt0dmg" keySequence="F5" command="_lWVL5wPkEeeT-9Bzrt0dmg"/>
  </bindingTables>
  <bindingTables xmi:id="_lW9d5QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.internal.wikitext.ui.editor.basicMarkupSourceContext" bindingContext="_lWeVxAPkEeeT-9Bzrt0dmg">
    <bindings xmi:id="_lW9d5gPkEeeT-9Bzrt0dmg" keySequence="F1" command="_lWT9xAPkEeeT-9Bzrt0dmg"/>
  </bindingTables>
  <bindingTables xmi:id="_lW9d6QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.memoryview" bindingContext="_lWeVugPkEeeT-9Bzrt0dmg">
    <bindings xmi:id="_lW9d6gPkEeeT-9Bzrt0dmg" keySequence="CTRL+W" command="_lWVy2QPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXCWYwPkEeeT-9Bzrt0dmg" keySequence="CTRL+T" command="_lWYPMAPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXELkwPkEeeT-9Bzrt0dmg" keySequence="ALT+CTRL+N" command="_lWarmgPkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXELlgPkEeeT-9Bzrt0dmg" keySequence="CTRL+N" command="_lWWZ9APkEeeT-9Bzrt0dmg"/>
    <bindings xmi:id="_lXEyowPkEeeT-9Bzrt0dmg" keySequence="ALT+CTRL+M" command="_lWarhwPkEeeT-9Bzrt0dmg"/>
  </bindingTables>
  <bindingTables xmi:id="_lXCWZwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.wikitext.tasks.ui.markupSourceContext" bindingContext="_lWeV0wPkEeeT-9Bzrt0dmg">
    <bindings xmi:id="_lXCWaAPkEeeT-9Bzrt0dmg" keySequence="CTRL+SHIFT+O" command="_lWUk3QPkEeeT-9Bzrt0dmg"/>
  </bindingTables>
  <bindingTables xmi:id="_lXC9cAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.BreakpointView" bindingContext="_lWeVsQPkEeeT-9Bzrt0dmg">
    <bindings xmi:id="_lXC9cQPkEeeT-9Bzrt0dmg" keySequence="ALT+CR" command="_lWT9qQPkEeeT-9Bzrt0dmg"/>
  </bindingTables>
  <bindingTables xmi:id="_lXELmAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.classFileEditorScope" bindingContext="_lWeVuwPkEeeT-9Bzrt0dmg">
    <bindings xmi:id="_lXELmQPkEeeT-9Bzrt0dmg" keySequence="CTRL+1" command="_lWbSiAPkEeeT-9Bzrt0dmg"/>
  </bindingTables>
  <bindingTables xmi:id="_lXEyqAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.buildship.ui.contexts.taskview" bindingContext="_lWeVzgPkEeeT-9Bzrt0dmg">
    <bindings xmi:id="_lXEyqQPkEeeT-9Bzrt0dmg" keySequence="F5" command="_lWarXgPkEeeT-9Bzrt0dmg"/>
  </bindingTables>
  <bindingTables xmi:id="_luSYwQPkEeeT-9Bzrt0dmg" bindingContext="_luSYwAPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luS_0QPkEeeT-9Bzrt0dmg" bindingContext="_luS_0APkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luS_0wPkEeeT-9Bzrt0dmg" bindingContext="_luS_0gPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luS_1QPkEeeT-9Bzrt0dmg" bindingContext="_luS_1APkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luTm4QPkEeeT-9Bzrt0dmg" bindingContext="_luTm4APkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luTm4wPkEeeT-9Bzrt0dmg" bindingContext="_luTm4gPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luTm5QPkEeeT-9Bzrt0dmg" bindingContext="_luTm5APkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luTm5wPkEeeT-9Bzrt0dmg" bindingContext="_luTm5gPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luTm6QPkEeeT-9Bzrt0dmg" bindingContext="_luTm6APkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luUN8QPkEeeT-9Bzrt0dmg" bindingContext="_luUN8APkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luUN8wPkEeeT-9Bzrt0dmg" bindingContext="_luUN8gPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luUN9QPkEeeT-9Bzrt0dmg" bindingContext="_luUN9APkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luUN9wPkEeeT-9Bzrt0dmg" bindingContext="_luUN9gPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luUN-QPkEeeT-9Bzrt0dmg" bindingContext="_luUN-APkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luU1AQPkEeeT-9Bzrt0dmg" bindingContext="_luU1AAPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luU1AwPkEeeT-9Bzrt0dmg" bindingContext="_luU1AgPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luU1BQPkEeeT-9Bzrt0dmg" bindingContext="_luU1BAPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luU1BwPkEeeT-9Bzrt0dmg" bindingContext="_luU1BgPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luU1CQPkEeeT-9Bzrt0dmg" bindingContext="_luU1CAPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luVcEQPkEeeT-9Bzrt0dmg" bindingContext="_luVcEAPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luVcEwPkEeeT-9Bzrt0dmg" bindingContext="_luVcEgPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luVcFQPkEeeT-9Bzrt0dmg" bindingContext="_luVcFAPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luVcFwPkEeeT-9Bzrt0dmg" bindingContext="_luVcFgPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luVcGQPkEeeT-9Bzrt0dmg" bindingContext="_luVcGAPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luVcGwPkEeeT-9Bzrt0dmg" bindingContext="_luVcGgPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luWDIQPkEeeT-9Bzrt0dmg" bindingContext="_luWDIAPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luWDIwPkEeeT-9Bzrt0dmg" bindingContext="_luWDIgPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luWDJQPkEeeT-9Bzrt0dmg" bindingContext="_luWDJAPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luWDJwPkEeeT-9Bzrt0dmg" bindingContext="_luWDJgPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luWDKQPkEeeT-9Bzrt0dmg" bindingContext="_luWDKAPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luWqMQPkEeeT-9Bzrt0dmg" bindingContext="_luWqMAPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luWqMwPkEeeT-9Bzrt0dmg" bindingContext="_luWqMgPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luWqNQPkEeeT-9Bzrt0dmg" bindingContext="_luWqNAPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luWqNwPkEeeT-9Bzrt0dmg" bindingContext="_luWqNgPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luWqOQPkEeeT-9Bzrt0dmg" bindingContext="_luWqOAPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luXRQQPkEeeT-9Bzrt0dmg" bindingContext="_luXRQAPkEeeT-9Bzrt0dmg"/>
  <bindingTables xmi:id="_luXRQwPkEeeT-9Bzrt0dmg" bindingContext="_luXRQgPkEeeT-9Bzrt0dmg"/>
  <rootContext xmi:id="_lV8KNAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.contexts.dialogAndWindow" contributorURI="platform:/plugin/org.eclipse.platform" name="In Dialogs and Windows" description="Either a dialog or a window is open">
    <children xmi:id="_lV8KNQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.contexts.window" contributorURI="platform:/plugin/org.eclipse.platform" name="In Windows" description="A window is open">
      <children xmi:id="_lV8KNgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.e4.ui.contexts.views" contributorURI="platform:/plugin/org.eclipse.platform" name="%bindingcontext.name.bindingView"/>
      <children xmi:id="_lWeVsQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.BreakpointView" name="In Breakpoints View" description="The breakpoints view context"/>
      <children xmi:id="_lWeVsgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.textEditorScope" name="Editing Text" description="Editing Text Context">
        <children xmi:id="_lWeVswPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wb.core.java.editorScope" name="WindowBuilder Java scope"/>
        <children xmi:id="_lWeVuQPkEeeT-9Bzrt0dmg" elementId="Ocaml.editor.context" name="Editing Ocaml Source" description="Context for editing Ocaml source"/>
        <children xmi:id="_lWeVuwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.classFileEditorScope" name="Browsing attached Java Source" description="Browsing attached Java Source Context"/>
        <children xmi:id="_lWeVwAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.javaEditorScope" name="Editing Java Source" description="Editing Java Source Context"/>
        <children xmi:id="_lWeVwQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.xsd.ui.text.editor.context" name="Editing XSD context"/>
        <children xmi:id="_lWeVwwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.editors.task" name="In Tasks Editor"/>
        <children xmi:id="_lWeVxAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.internal.wikitext.ui.editor.basicMarkupSourceContext" name="WikiText Markup Source Context" description="WikiText markup editing context">
          <children xmi:id="_lWeVxQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.wikitext.ui.editor.markupSourceContext" name="WikiText Markup Source Context" description="WikiText markup editing context"/>
          <children xmi:id="_lWeV0wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.wikitext.tasks.ui.markupSourceContext" name="Task Markup Editor Source Context"/>
        </children>
        <children xmi:id="_lWeVxgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.sse.ui.structuredTextEditorScope" name="Editing in Structured Text Editors" description="Editing in Structured Text Editors">
          <children xmi:id="_lWeVxwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.xml.navigation" name="XML Source Navigation" description="XML Source Navigation"/>
          <children xmi:id="_lWeVyAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.xml.cleanup" name="XML Source Cleanup" description="XML Source Cleanup"/>
          <children xmi:id="_lWeVyQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.sse.comments" name="Source Comments in Structured Text Editors" description="Source Comments in Structured Text Editors"/>
          <children xmi:id="_lWeVygPkEeeT-9Bzrt0dmg" elementId="org.eclipse.core.runtime.xml" name="Editing XML Source" description="Editing XML Source"/>
          <children xmi:id="_lWeVywPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.xml.occurrences" name="XML Source Occurrences" description="XML Source Occurrences"/>
          <children xmi:id="_lWeVzAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.xml.grammar" name="XML Source Grammar" description="XML Source Grammar"/>
          <children xmi:id="_lWeVzQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.xml.comments" name="XML Source Comments" description="XML Source Comments"/>
          <children xmi:id="_lWeV0APkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.xml.expand" name="XML Source Expand/Collapse" description="XML Source Expand/Collapse"/>
          <children xmi:id="_lWeV1APkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.sse.hideFormat" name="Editing in Structured Text Editors" description="Editing in Structured Text Editors"/>
          <children xmi:id="_lWeV1QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.xml.selection" name="XML Source Selection" description="XML Source Selection"/>
          <children xmi:id="_lWeV1gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.xml.dependencies" name="XML Source Dependencies" description="XML Source Dependencies"/>
        </children>
        <children xmi:id="_lWeV0gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ant.ui.AntEditorScope" name="Editing Ant Buildfiles" description="Editing Ant Buildfiles Context"/>
        <children xmi:id="_lWeV2APkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.propertiesEditorScope" name="Editing Properties Files" description="Editing Properties Files Context"/>
      </children>
      <children xmi:id="_lWeVtQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.console" name="In I/O Console" description="In I/O console"/>
      <children xmi:id="_lWeVtgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.compare.compareEditorScope" name="Comparing in an Editor" description="Comparing in an Editor"/>
      <children xmi:id="_lWeVuAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.console.ConsoleView" name="In Console View" description="In Console View"/>
      <children xmi:id="_lWeVugPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.memoryview" name="In Memory View" description="In memory view"/>
      <children xmi:id="_lWeVvAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.debugging" name="Debugging" description="Debugging programs">
        <children xmi:id="_lWeVvQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.memory.abstractasynctablerendering" name="In Table Memory Rendering" description="In Table Memory Rendering"/>
        <children xmi:id="_lWeV1wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.debug.ui.debugging" name="Debugging Java" description="Debugging Java programs"/>
      </children>
      <children xmi:id="_lWeVvgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.ReflogView" name="In Git Reflog View"/>
      <children xmi:id="_lWeVwgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.views.tasks" name="In Tasks View"/>
      <children xmi:id="_lWeVzgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.buildship.ui.contexts.taskview" name="In Gradle Tasks View" description="This context is activated when the Gradle Tasks view is in focus"/>
      <children xmi:id="_lWeV0QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.buildship.ui.contexts.gradlenature" name="Context for selected IProjects with Gradle nature" description="This context is activated when the selection contains an IProject with the Gradle nature"/>
      <children xmi:id="_lWeV2QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesView" name="In Git Repositories View"/>
    </children>
    <children xmi:id="_lV8KNwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.contexts.dialog" contributorURI="platform:/plugin/org.eclipse.platform" name="In Dialogs" description="A dialog is open"/>
  </rootContext>
  <rootContext xmi:id="_lWeVsAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.xsd.ui.editor.designView" name="XSD Editor Design View" description="XSD Editor Design View"/>
  <rootContext xmi:id="_lWeVtAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.contexts.actionSet" name="Action Set" description="Parent context for action sets"/>
  <rootContext xmi:id="_lWeVtwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.contexts.workbenchMenu" name="Workbench Menu" description="When no Workbench windows are active"/>
  <rootContext xmi:id="_lWeVvwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.breadcrumbEditorScope" name="Editor Breadcrumb Navigation" description="Editor Breadcrumb Navigation Context"/>
  <rootContext xmi:id="_lWeVzwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.xsd.ui.editor.sourceView" name="XSD Editor Source View" description="XSD Editor Source View"/>
  <rootContext xmi:id="_luSYwAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.junit.JUnitActionSet" name="Auto::org.eclipse.jdt.junit.JUnitActionSet"/>
  <rootContext xmi:id="_luS_0APkEeeT-9Bzrt0dmg" elementId="org.eclipse.search.searchActionSet" name="Auto::org.eclipse.search.searchActionSet"/>
  <rootContext xmi:id="_luS_0gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.team.ui.actionSet" name="Auto::org.eclipse.team.ui.actionSet"/>
  <rootContext xmi:id="_luS_1APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.actionSet.annotationNavigation" name="Auto::org.eclipse.ui.edit.text.actionSet.annotationNavigation"/>
  <rootContext xmi:id="_luTm4APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.actionSet.navigation" name="Auto::org.eclipse.ui.edit.text.actionSet.navigation"/>
  <rootContext xmi:id="_luTm4gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.actionSet.convertLineDelimitersTo" name="Auto::org.eclipse.ui.edit.text.actionSet.convertLineDelimitersTo"/>
  <rootContext xmi:id="_luTm5APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.externaltools.ExternalToolsSet" name="Auto::org.eclipse.ui.externaltools.ExternalToolsSet"/>
  <rootContext xmi:id="_luTm5gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.NavigateActionSet" name="Auto::org.eclipse.ui.NavigateActionSet"/>
  <rootContext xmi:id="_luTm6APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.actionSet.keyBindings" name="Auto::org.eclipse.ui.actionSet.keyBindings"/>
  <rootContext xmi:id="_luUN8APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.WorkingSetModificationActionSet" name="Auto::org.eclipse.ui.WorkingSetModificationActionSet"/>
  <rootContext xmi:id="_luUN8gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.WorkingSetActionSet" name="Auto::org.eclipse.ui.WorkingSetActionSet"/>
  <rootContext xmi:id="_luUN9APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.actionSet.openFiles" name="Auto::org.eclipse.ui.actionSet.openFiles"/>
  <rootContext xmi:id="_luUN9gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.actionSet.presentation" name="Auto::org.eclipse.ui.edit.text.actionSet.presentation"/>
  <rootContext xmi:id="_luUN-APkEeeT-9Bzrt0dmg" elementId="org.eclipse.wb.core.ui.actionset" name="Auto::org.eclipse.wb.core.ui.actionset"/>
  <rootContext xmi:id="_luU1AAPkEeeT-9Bzrt0dmg" elementId="Ocaml_debuggingActionSet" name="Auto::Ocaml_debuggingActionSet"/>
  <rootContext xmi:id="_luU1AgPkEeeT-9Bzrt0dmg" elementId="Ocaml_sourceActionSet" name="Auto::Ocaml_sourceActionSet"/>
  <rootContext xmi:id="_luU1BAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ant.ui.actionSet.presentation" name="Auto::org.eclipse.ant.ui.actionSet.presentation"/>
  <rootContext xmi:id="_luU1BgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.breakpointActionSet" name="Auto::org.eclipse.debug.ui.breakpointActionSet"/>
  <rootContext xmi:id="_luU1CAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.debugActionSet" name="Auto::org.eclipse.debug.ui.debugActionSet"/>
  <rootContext xmi:id="_luVcEAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.launchActionSet" name="Auto::org.eclipse.debug.ui.launchActionSet"/>
  <rootContext xmi:id="_luVcEgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.profileActionSet" name="Auto::org.eclipse.debug.ui.profileActionSet"/>
  <rootContext xmi:id="_luVcFAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.gitaction" name="Auto::org.eclipse.egit.ui.gitaction"/>
  <rootContext xmi:id="_luVcFgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.navigation" name="Auto::org.eclipse.egit.ui.navigation"/>
  <rootContext xmi:id="_luVcGAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.debug.ui.JDTDebugActionSet" name="Auto::org.eclipse.jdt.debug.ui.JDTDebugActionSet"/>
  <rootContext xmi:id="_luVcGgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.text.java.actionSet.presentation" name="Auto::org.eclipse.jdt.ui.text.java.actionSet.presentation"/>
  <rootContext xmi:id="_luWDIAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.JavaElementCreationActionSet" name="Auto::org.eclipse.jdt.ui.JavaElementCreationActionSet"/>
  <rootContext xmi:id="_luWDIgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.JavaActionSet" name="Auto::org.eclipse.jdt.ui.JavaActionSet"/>
  <rootContext xmi:id="_luWDJAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.A_OpenActionSet" name="Auto::org.eclipse.jdt.ui.A_OpenActionSet"/>
  <rootContext xmi:id="_luWDJgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.CodingActionSet" name="Auto::org.eclipse.jdt.ui.CodingActionSet"/>
  <rootContext xmi:id="_luWDKAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.SearchActionSet" name="Auto::org.eclipse.jdt.ui.SearchActionSet"/>
  <rootContext xmi:id="_luWqMAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.context.ui.actionSet" name="Auto::org.eclipse.mylyn.context.ui.actionSet"/>
  <rootContext xmi:id="_luWqMgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.java.actionSet" name="Auto::org.eclipse.mylyn.java.actionSet"/>
  <rootContext xmi:id="_luWqNAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.java.actionSet.browsing" name="Auto::org.eclipse.mylyn.java.actionSet.browsing"/>
  <rootContext xmi:id="_luWqNgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.doc.actionSet" name="Auto::org.eclipse.mylyn.doc.actionSet"/>
  <rootContext xmi:id="_luWqOAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.navigation" name="Auto::org.eclipse.mylyn.tasks.ui.navigation"/>
  <rootContext xmi:id="_luXRQAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.navigation.additions" name="Auto::org.eclipse.mylyn.tasks.ui.navigation.additions"/>
  <rootContext xmi:id="_luXRQgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.cheatsheets.actionSet" name="Auto::org.eclipse.ui.cheatsheets.actionSet"/>
  <descriptors xmi:id="_lY_eMAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.e4.ui.compatibility.editor" allowMultiple="true" category="org.eclipse.e4.primaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityEditor">
    <tags>Editor</tags>
  </descriptors>
  <descriptors xmi:id="_lZB6cAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.gef.ui.palette_view" label="Palette" iconURI="platform:/plugin/org.eclipse.gef/icons/palette_view.gif" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_lZGy8APkEeeT-9Bzrt0dmg" elementId="org.eclipse.help.ui.HelpView" label="Help" iconURI="platform:/plugin/org.eclipse.help.ui/icons/view16/help_view.gif" tooltip="" category="Help" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Help</tags>
  </descriptors>
  <descriptors xmi:id="_lZHaAAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.junit.ResultView" label="JUnit" iconURI="platform:/plugin/org.eclipse.jdt.junit/icons/full/eview16/junit.gif" tooltip="" category="Java" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java</tags>
  </descriptors>
  <descriptors xmi:id="_lZIBEAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.m2e.core.views.MavenRepositoryView" label="Maven Repositories" iconURI="platform:/plugin/org.eclipse.m2e.core.ui/icons/maven_indexes.gif" tooltip="" category="Maven" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Maven</tags>
  </descriptors>
  <descriptors xmi:id="_lZIoIAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.m2e.core.views.MavenBuild" label="Maven Workspace Build" iconURI="platform:/plugin/org.eclipse.ui/icons/full/eview16/defaultview_misc.png" tooltip="" category="Maven" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Maven</tags>
  </descriptors>
  <descriptors xmi:id="_lZJPMAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.search.SearchResultView" label="Classic Search" iconURI="platform:/plugin/org.eclipse.search/icons/full/eview16/searchres.gif" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_lZJ2QAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.search.ui.views.SearchView" label="Search" iconURI="platform:/plugin/org.eclipse.search/icons/full/eview16/searchres.gif" tooltip="" allowMultiple="true" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_lZKdUAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.team.sync.views.SynchronizeView" label="Synchronize" iconURI="platform:/plugin/org.eclipse.team.ui/icons/full/eview16/synch_synch.gif" tooltip="" allowMultiple="true" category="Team" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Team</tags>
  </descriptors>
  <descriptors xmi:id="_lZMSgAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.team.ui.GenericHistoryView" label="History" iconURI="platform:/plugin/org.eclipse.team.ui/icons/full/eview16/history_view.gif" tooltip="" allowMultiple="true" category="Team" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Team</tags>
  </descriptors>
  <descriptors xmi:id="_lZM5kAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.internal.introview" label="Welcome" iconURI="platform:/plugin/org.eclipse.ui/icons/full/eview16/defaultview_misc.png" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_lZM5kQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.browser.view" label="Internal Web Browser" iconURI="platform:/plugin/org.eclipse.ui.browser/icons/obj16/internal_browser.gif" tooltip="" allowMultiple="true" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_lZOHsAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.cheatsheets.views.CheatSheetView" label="Cheat Sheets" iconURI="platform:/plugin/org.eclipse.ui.cheatsheets/icons/view16/cheatsheet_view.gif" tooltip="" category="Help" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Help</tags>
  </descriptors>
  <descriptors xmi:id="_lZOuwAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.console.ConsoleView" label="Console" iconURI="platform:/plugin/org.eclipse.ui.console/icons/full/cview16/console_view.png" tooltip="" allowMultiple="true" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_lZPV0APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.ProgressView" label="Progress" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/pview.png" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_lZP84APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.ResourceNavigator" label="Navigator" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/filenav_nav.png" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_lZP84QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.BookmarkView" label="Bookmarks" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/bkmrk_nav.png" tooltip="" allowMultiple="true" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_lZQj8APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.TaskList" label="Tasks" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/tasks_tsk.png" tooltip="" allowMultiple="true" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_lZRLAAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.ProblemView" label="Problems" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/problems_view.png" tooltip="" allowMultiple="true" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_lZRyEAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.AllMarkersView" label="Markers" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/problems_view.png" tooltip="" allowMultiple="true" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_lZSZIAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.PropertySheet" label="Properties" iconURI="platform:/plugin/org.eclipse.ui.views/icons/full/eview16/prop_ps.png" tooltip="" allowMultiple="true" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_lZTAMAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.ContentOutline" label="Outline" iconURI="platform:/plugin/org.eclipse.ui.views/icons/full/eview16/outline_co.png" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_lZTnQAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.pde.runtime.LogView" label="Error Log" iconURI="platform:/plugin/org.eclipse.ui.views.log/icons/eview16/error_log.gif" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_lZUOUAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wb.core.StructureView" label="Structure" iconURI="platform:/plugin/org.eclipse.wb.core/icons/structure/properties_view.gif" tooltip="" category="WindowBuilder" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:WindowBuilder</tags>
  </descriptors>
  <descriptors xmi:id="_lZU1YAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wb.core.PaletteView" label="Palette" iconURI="platform:/plugin/org.eclipse.wb.core/icons/structure/palette.png" tooltip="" category="WindowBuilder" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:WindowBuilder</tags>
  </descriptors>
  <descriptors xmi:id="_lZVccAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.common.snippets.internal.ui.SnippetsView" label="Snippets" iconURI="platform:/plugin/org.eclipse.wst.common.snippets/icons/snippets_view.gif" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_lZWDgAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.xml.ui.views.annotations.XMLAnnotationsView" label="Documentation" iconURI="platform:/plugin/org.eclipse.wst.xml.ui/icons/full/obj16/comment_obj.gif" tooltip="" category="XML" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:XML</tags>
  </descriptors>
  <descriptors xmi:id="_lZWqkAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.xml.ui.contentmodel.view" label="Content Model" iconURI="platform:/plugin/org.eclipse.wst.xml.ui/icons/full/view16/hierarchy.gif" tooltip="" category="XML" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:XML</tags>
  </descriptors>
  <descriptors xmi:id="_lZXRoAPkEeeT-9Bzrt0dmg" elementId="ocaml.ocamlCompilerOutput" label="OCaml Compiler Output" iconURI="platform:/plugin/Ocaml/icons/caml16x16.gif" tooltip="" category="OCaml" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:OCaml</tags>
  </descriptors>
  <descriptors xmi:id="_lZX4sAPkEeeT-9Bzrt0dmg" elementId="ocaml.ocamlBrowserView" label="OCaml Browser" iconURI="platform:/plugin/Ocaml/icons/camlPurple16x16.gif" tooltip="" category="OCaml" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:OCaml</tags>
  </descriptors>
  <descriptors xmi:id="_lZYfwAPkEeeT-9Bzrt0dmg" elementId="Ocaml.ocamlToplevelView" label="OCaml Toplevel" iconURI="platform:/plugin/Ocaml/icons/toplevelViewIcon.gif" tooltip="" allowMultiple="true" category="OCaml" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:OCaml</tags>
  </descriptors>
  <descriptors xmi:id="_lZYfwQPkEeeT-9Bzrt0dmg" elementId="Ocaml.ocamlCustomToplevelView" label="OCaml Custom Toplevel" iconURI="platform:/plugin/Ocaml/icons/toplevelViewIcon.gif" tooltip="" allowMultiple="true" category="OCaml" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:OCaml</tags>
  </descriptors>
  <descriptors xmi:id="_lZZG0APkEeeT-9Bzrt0dmg" elementId="Ocaml.CallStackView" label="Ocaml Call Stack" iconURI="platform:/plugin/Ocaml/icons/stackframe.gif" tooltip="" category="Ocaml Debugging" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Ocaml Debugging</tags>
  </descriptors>
  <descriptors xmi:id="_lZZt4APkEeeT-9Bzrt0dmg" elementId="Ocaml.BreakpointsView" label="Ocaml Breakpoints" iconURI="platform:/plugin/Ocaml/icons/breakpoint_view.gif" tooltip="" category="Ocaml Debugging" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Ocaml Debugging</tags>
  </descriptors>
  <descriptors xmi:id="_lZaU8APkEeeT-9Bzrt0dmg" elementId="Ocaml.WatchView" label="Ocaml Variable Watch" iconURI="platform:/plugin/Ocaml/icons/watchlist.gif" tooltip="" category="Ocaml Debugging" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Ocaml Debugging</tags>
  </descriptors>
  <descriptors xmi:id="_lZa8AAPkEeeT-9Bzrt0dmg" elementId="Ocaml.ocamlASTView" label="AST" iconURI="platform:/plugin/Ocaml/icons/astview.gif" tooltip="" category="OCaml" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:OCaml</tags>
  </descriptors>
  <descriptors xmi:id="_lZcKIAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ant.ui.views.AntView" label="Ant" iconURI="platform:/plugin/org.eclipse.ant.ui/icons/full/eview16/ant_view.png" tooltip="" category="Ant" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Ant</tags>
  </descriptors>
  <descriptors xmi:id="_lZcxMAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.buildship.ui.views.taskview" label="Gradle Tasks" iconURI="platform:/plugin/org.eclipse.buildship.ui/icons/full/eview16/tasks_view.png" tooltip="" category="Gradle" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Gradle</tags>
  </descriptors>
  <descriptors xmi:id="_lZdYQAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.buildship.ui.views.executionview" label="Gradle Executions" iconURI="platform:/plugin/org.eclipse.buildship.ui/icons/full/eview16/executions_view.png" tooltip="" category="Gradle" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Gradle</tags>
  </descriptors>
  <descriptors xmi:id="_lZd_UAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.DebugView" label="Debug" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/debug_view.png" tooltip="" category="Debug" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Debug</tags>
  </descriptors>
  <descriptors xmi:id="_lZemYAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.BreakpointView" label="Breakpoints" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/breakpoint_view.png" tooltip="" allowMultiple="true" category="Debug" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Debug</tags>
  </descriptors>
  <descriptors xmi:id="_lZfNcAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.VariableView" label="Variables" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/variable_view.png" tooltip="" allowMultiple="true" category="Debug" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Debug</tags>
  </descriptors>
  <descriptors xmi:id="_lZf0gAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.ExpressionView" label="Expressions" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/watchlist_view.png" tooltip="" allowMultiple="true" category="Debug" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Debug</tags>
  </descriptors>
  <descriptors xmi:id="_lZgbkAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.RegisterView" label="Registers" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/register_view.png" tooltip="" allowMultiple="true" category="Debug" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Debug</tags>
  </descriptors>
  <descriptors xmi:id="_lZhCoAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.ModuleView" label="Modules" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/module_view.png" tooltip="" allowMultiple="true" category="Debug" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Debug</tags>
  </descriptors>
  <descriptors xmi:id="_lZhpsAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.MemoryView" label="Memory" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/memory_view.png" tooltip="" allowMultiple="true" category="Debug" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Debug</tags>
  </descriptors>
  <descriptors xmi:id="_lZiQwAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesView" label="Git Repositories" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/repo_rep.gif" tooltip="" category="Git" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Git</tags>
  </descriptors>
  <descriptors xmi:id="_lZi30APkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.StagingView" label="Git Staging" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/staging.png" tooltip="" category="Git" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Git</tags>
  </descriptors>
  <descriptors xmi:id="_lZje4APkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.InteractiveRebaseView" label="Git Interactive Rebase" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/rebase_interactive.gif" tooltip="" category="Git" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Git</tags>
  </descriptors>
  <descriptors xmi:id="_lZktAAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.CompareTreeView" label="Git Tree Compare" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/obj16/gitrepository.gif" tooltip="" category="Git" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Git</tags>
  </descriptors>
  <descriptors xmi:id="_lZktAQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.ReflogView" label="Git Reflog" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/reflog.gif" tooltip="" category="Git" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Git</tags>
  </descriptors>
  <descriptors xmi:id="_lZlUEAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.debug.ui.DisplayView" label="Display" iconURI="platform:/plugin/org.eclipse.jdt.debug.ui/icons/full/etool16/disp_sbook.gif" tooltip="" category="Debug" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Debug</tags>
  </descriptors>
  <descriptors xmi:id="_lZl7IAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.PackageExplorer" label="Package Explorer" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/package.png" tooltip="" category="Java" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java</tags>
  </descriptors>
  <descriptors xmi:id="_lZnJQAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.TypeHierarchy" label="Type Hierarchy" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/class_hi.png" tooltip="" category="Java" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java</tags>
  </descriptors>
  <descriptors xmi:id="_lZnJQQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.ProjectsView" label="Projects" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/projects.png" tooltip="" category="Java Browsing" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java Browsing</tags>
  </descriptors>
  <descriptors xmi:id="_lZnwUAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.PackagesView" label="Packages" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/packages.png" tooltip="" category="Java Browsing" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java Browsing</tags>
  </descriptors>
  <descriptors xmi:id="_lZoXYAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.TypesView" label="Types" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/types.png" tooltip="" category="Java Browsing" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java Browsing</tags>
  </descriptors>
  <descriptors xmi:id="_lZo-cAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.MembersView" label="Members" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/members.png" tooltip="" category="Java Browsing" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java Browsing</tags>
  </descriptors>
  <descriptors xmi:id="_lZo-cQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.callhierarchy.view" label="Call Hierarchy" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/call_hierarchy.png" tooltip="" allowMultiple="true" category="Java" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java</tags>
  </descriptors>
  <descriptors xmi:id="_lZplgAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.texteditor.TemplatesView" label="Templates" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/templates.png" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <descriptors xmi:id="_lZqMkAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.SourceView" label="Declaration" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/source.png" tooltip="" category="Java" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java</tags>
  </descriptors>
  <descriptors xmi:id="_lZqzoAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.JavadocView" label="Javadoc" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/javadoc.png" tooltip="" category="Java" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Java</tags>
  </descriptors>
  <descriptors xmi:id="_lZqzoQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.builds.navigator.builds" label="Builds" iconURI="platform:/plugin/org.eclipse.mylyn.builds.ui/icons/eview16/build-view.png" tooltip="" category="Mylyn" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Mylyn</tags>
  </descriptors>
  <descriptors xmi:id="_lZrasAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.commons.repositories.ui.navigator.Repositories" label="Team Repositories" iconURI="platform:/plugin/org.eclipse.mylyn.commons.repositories.ui/icons/eview16/repositories.gif" tooltip="" category="Mylyn" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Mylyn</tags>
  </descriptors>
  <descriptors xmi:id="_lZsBwAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.views.tasks" label="Task List" iconURI="platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.gif" tooltip="" allowMultiple="true" category="Mylyn" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Mylyn</tags>
  </descriptors>
  <descriptors xmi:id="_lZso0APkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.views.repositories" label="Task Repositories" iconURI="platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/repositories.gif" tooltip="" category="Mylyn" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Mylyn</tags>
  </descriptors>
  <descriptors xmi:id="_lZtP4APkEeeT-9Bzrt0dmg" elementId="org.eclipse.oomph.p2.ui.RepositoryExplorer" label="Repository Explorer" iconURI="platform:/plugin/org.eclipse.oomph.p2.ui/icons/obj16/repository.gif" tooltip="" category="Oomph" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Oomph</tags>
  </descriptors>
  <descriptors xmi:id="_lZt28APkEeeT-9Bzrt0dmg" elementId="org.eclipse.recommenders.apidocs.rcp.views.apidocs" label="API Docs" iconURI="platform:/plugin/org.eclipse.recommenders.apidocs.rcp/icons/view16/apidocs.png" tooltip="" category="Code Recommenders" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Code Recommenders</tags>
  </descriptors>
  <descriptors xmi:id="_lZueAAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.recommenders.models.rcp.views.projectCoordinates" label="Project Coordinates" iconURI="platform:/plugin/org.eclipse.recommenders.coordinates.rcp/icons/view16/depinsp.gif" tooltip="" category="Code Recommenders" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Code Recommenders</tags>
  </descriptors>
  <descriptors xmi:id="_lZvFEAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.recommenders.models.rcp.views.modelRepositories" label="Model Repositories" iconURI="platform:/plugin/org.eclipse.recommenders.models.rcp/icons/view16/depinsp.gif" tooltip="" category="Code Recommenders" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Code Recommenders</tags>
  </descriptors>
  <descriptors xmi:id="_lZvFEQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.recommenders.models.rcp.views.dependencyOverview" label="Dependency Overview" iconURI="platform:/plugin/org.eclipse.recommenders.models.rcp/icons/view16/depinsp.gif" tooltip="" category="Code Recommenders" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Code Recommenders</tags>
  </descriptors>
  <descriptors xmi:id="_lZvsIAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.recommenders.snipmatch.rcp.views.snippets" label="Snippets" iconURI="platform:/plugin/org.eclipse.recommenders.snipmatch.rcp/icons/view16/snippets.png" tooltip="" category="Code Recommenders" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:Code Recommenders</tags>
  </descriptors>
  <descriptors xmi:id="_lZwTMAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigator.ProjectExplorer" label="Project Explorer" iconURI="platform:/plugin/org.eclipse.ui.navigator.resources/icons/full/eview16/resource_persp.gif" tooltip="" category="General" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
    <tags>View</tags>
    <tags>categoryTag:General</tags>
  </descriptors>
  <trimContributions xmi:id="_2r10UF9tEeO-yojH_y4TJA" elementId="org.eclipse.ui.ide.application.trimcontribution.QuickAccess" contributorURI="platform:/plugin/org.eclipse.ui.ide.application" toBeRendered="false" parentId="org.eclipse.ui.main.toolbar" positionInParent="last">
    <children xsi:type="menu:ToolControl" xmi:id="_76uUAF9tEeO-yojH_y4TJA" elementId="Spacer Glue" contributorURI="platform:/plugin/org.eclipse.ui.ide.application" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.LayoutModifierToolControl">
      <tags>glue</tags>
      <tags>move_after:PerspectiveSpacer</tags>
      <tags>SHOW_RESTORE_MENU</tags>
    </children>
    <children xsi:type="menu:ToolControl" xmi:id="_8tJPcF9tEeO-yojH_y4TJA" elementId="SearchField" contributorURI="platform:/plugin/org.eclipse.ui.ide.application" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.quickaccess.SearchField">
      <tags>move_after:Spacer Glue</tags>
      <tags>HIDEABLE</tags>
      <tags>SHOW_RESTORE_MENU</tags>
    </children>
    <children xsi:type="menu:ToolControl" xmi:id="_9LgmcF9tEeO-yojH_y4TJA" elementId="Search-PS Glue" contributorURI="platform:/plugin/org.eclipse.ui.ide.application" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.LayoutModifierToolControl">
      <tags>glue</tags>
      <tags>move_after:SearchField</tags>
      <tags>SHOW_RESTORE_MENU</tags>
    </children>
  </trimContributions>
  <commands xmi:id="_lWTWkAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.correction.inlineLocal.assist" commandName="Quick Assist - Inline local variable" description="Invokes quick assist and selects 'Inline local variable'" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWTWkQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.select.pageUp" commandName="Select Page Up" description="Select to the top of the page" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9oAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.ResetQuickdiffBaseline" commandName="Reset quickdiff baseline" category="_lWSvgwPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWT9oQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.ResetQuickdiffBaselineTarget" name="Reset target (HEAD, HEAD^1)" optional="false"/>
  </commands>
  <commands xmi:id="_lWT9ogPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.surround.with.quickMenu" commandName="Surround With Quick Menu" description="Shows the Surround With quick menu" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9owPkEeeT-9Bzrt0dmg" elementId="Ocaml.openIntfImplCommand" commandName="Open interface/implementation" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9pAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.search.ui.openFileSearchPage" commandName="File Search" description="Open the Search dialog's file search page" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9pQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.correction.convertLocalToField.assist" commandName="Quick Assist - Convert local variable to field" description="Invokes quick assist and selects 'Convert local variable to field'" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9pgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.search.implementors.in.workspace" commandName="Implementors in Workspace" description="Search for implementors of the selected interface" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9pwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wb.core.commands.switch" commandName="Switch Source/Design Views" description="Switch between the Source and Design views." category="_lWSIcwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9qAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesViewAddRepository" commandName="Add a Git Repository" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9qQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.debug.ui.breakpoint.properties" commandName="Java Breakpoint Properties" description="View and edit the properties for a given Java breakpoint" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9qgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.correction.addThrowsDecl" commandName="Quick Fix - Add throws declaration" description="Invokes quick assist and selects 'Add throws declaration'" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9qwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.navigate.open.type.in.hierarchy" commandName="Open Type in Hierarchy" description="Open a type in the type hierarchy view" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9rAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.task.clearActiveTime" commandName="Clear Active Time" category="_lWSIfgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9rQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.ide.copyBuildIdCommand" commandName="Copy Build Id To Clipboard" description="Copies the build id to the clipboard." category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9rgPkEeeT-9Bzrt0dmg" elementId="Ocaml.spacesToTabsCommand" commandName="Convert Spaces to Tabs" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9rwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.buildship.ui.commands.refreshproject" commandName="Refresh Gradle Project" description="Refreshes the selected Gradle project" category="_lWSIdwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9sAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.select.textEnd" commandName="Select Text End" description="Select to the end of the text" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9sQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.context.ui.commands.task.attachContext" commandName="Attach Context" category="_lWSIfAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9sgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.deletePreviousWord" commandName="Delete Previous Word" description="Delete the previous word" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9swPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.goto.wordPrevious" commandName="Previous Word" description="Go to the previous word" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9tAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.search.declarations.in.workspace" commandName="Declaration in Workspace" description="Search for declarations of the selected element in the workspace" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9tQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.preferences" commandName="Preferences" description="Open the preferences dialog" category="_lWSIgwPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWT9tgPkEeeT-9Bzrt0dmg" elementId="preferencePageId" name="Preference Page"/>
  </commands>
  <commands xmi:id="_lWT9twPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.delimiter.unix" commandName="Convert Line Delimiters to Unix (LF, \n, 0A, &#xb6;)" description="Converts the line delimiters to Unix (LF, \n, 0A, &#xb6;)" category="_lWSIgQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9uAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.search.read.access.in.working.set" commandName="Read Access in Working Set" description="Search for read references to the selected element in a working set" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9uQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.commit.Squash" commandName="Squash Commits" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9ugPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.Edit" commandName="Edit Commit" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9uwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.epp.mpc.ui.command.showMarketplaceWizard" commandName="Eclipse Marketplace" description="Show the Eclipse Marketplace wizard" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9vAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.copy" commandName="Copy" description="Copy the selection to the clipboard" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9vQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.nextView" commandName="Next View" description="Switch to the next view" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9vgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.revertToSaved" commandName="Revert to Saved" description="Revert to the last saved state" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9vwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.properties.NewPropertySheetCommand" commandName="Properties" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9wAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ant.ui.toggleMarkOccurrences" commandName="Toggle Ant Mark Occurrences" description="Toggles mark occurrences in Ant editors" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9wQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigate.addToWorkingSet" commandName="Add to Working Set" description="Adds the selected object to a working set." category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9wgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.RunToLine" commandName="Run to Line" description="Resume and break when execution reaches the current line" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9wwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.junit.junitShortcut.debug" commandName="Debug JUnit Test" description="Debug JUnit Test" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9xAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.wikitext.ui.editor.showCheatSheetCommand" commandName="Show Markup Cheat Sheet" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9xQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.team.ui.TeamSynchronizingPerspective" commandName="Team Synchronizing" description="Open the Team Synchronizing Perspective" category="_lWSIjAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9xgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ant.ui.open.declaration.command" commandName="Open Declaration" description="Opens the Ant editor on the referenced element" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9xwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesViewPaste" commandName="Paste Repository Path or URI" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9yAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.showChangeRulerInformation" commandName="Show Quick Diff Ruler Tooltip" description="Displays quick diff or revision information for the caret line in a focused hover" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9yQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.upperCase" commandName="To Upper Case" description="Changes the selection to upper case" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWT9ygPkEeeT-9Bzrt0dmg" elementId="org.eclipse.recommenders.utils.rcp.commands.openBrowserDialog" commandName="Open a Web browser" category="_lWSvgwPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWUksAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.recommenders.utils.rcp.linkContribution.href" name="URI" optional="false"/>
  </commands>
  <commands xmi:id="_lWUksQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigate.goInto" commandName="Go Into" description="Navigate into the selected item" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUksgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.ConfigureFetch" commandName="Configure Upstream Fetch" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUkswPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.ConfigureUpstreamPush" commandName="Configure Upstream Push" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUktAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.OpenRunConfigurations" commandName="Run..." description="Open run launch configuration dialog" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUktQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.create.delegate.methods" commandName="Generate Delegate Methods" description="Add delegate methods for a type's fields" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUktgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.gef.ui.palette_view" commandName="Palette" category="_lWSIcQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUktwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.select.windowEnd" commandName="Select Window End" description="Select to the end of the window" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUkuAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.minimizePart" commandName="Minimize Active View or Editor" description="Minimizes the active view or editor" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUkuQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.context.ui.commands.task.clearContext" commandName="Clear Context" category="_lWSIfAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUkugPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.Untrack" commandName="Untrack" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUkuwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.sse.ui.add.block.comment" commandName="Add Block Comment" description="Add Block Comment" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUkvAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.showSystemMenu" commandName="Show System Menu" description="Show the system menu" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUkvQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.ToggleLineBreakpoint" commandName="Toggle Line Breakpoint" description="Creates or removes a line breakpoint" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUkvgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.searchForTask" commandName="Search Repository for Task" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUkvwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.debug.ui.commands.AllInstances" commandName="All Instances" description="View all instances of the selected type loaded in the target VM" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUkwAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.OpenInCommitViewerCommand" commandName="Open in Commit Viewer" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUkwQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.m2e.actions.LifeCycleTest.run" commandName="Run Maven Test" description="Run Maven Test" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUkwgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.toggle.comment" commandName="Toggle Comment" description="Toggle comment the selected lines" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUkwwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.correction.addImport" commandName="Quick Fix - Add import" description="Invokes quick assist and selects 'Add import'" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUkxAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.savePerspective" commandName="Save Perspective As" description="Save the current perspective" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUkxQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.internal.reflog.CheckoutCommand" commandName="Checkout" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUkxgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.move" commandName="Move..." description="Move the selected item" category="_lWSIgQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUkxwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.refactor.migrate.jar" commandName="Migrate JAR File" description="Migrate a JAR File to a new version" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUkyAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.correction.assignParamToField.assist" commandName="Quick Assist - Assign parameter to field" description="Invokes quick assist and selects 'Assign parameter to field'" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUkyQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.command.configureTrace" commandName="Configure Git Debug Trace" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUkygPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.maximizePart" commandName="Maximize Part" description="Maximize Part" category="_lWSIdQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUkywPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.move.inner.to.top.level" commandName="Move Type to New File" description="Move Type to New File" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUkzAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigate.linkWithEditor" commandName="Toggle Link with Editor " description="Toggles linking of a view's selection with the active editor's selection" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUkzQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.sse.ui.open.file.from.source" commandName="Open Selection" description="Open an editor on the selected link" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUkzgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.compare.ignoreWhiteSpace" commandName="Ignore White Space" description="Ignore white space where applicable" category="_lWSIggPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUkzwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.open.hierarchy" commandName="Quick Hierarchy" description="Show the quick hierarchy of the selected element" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUk0APkEeeT-9Bzrt0dmg" elementId="org.eclipse.oomph.setup.editor.importProjects" commandName="Import Projects" category="_lWSIegPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUk0QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.generate.constructor.using.fields" commandName="Generate Constructor using Fields" description="Choose fields to initialize and constructor from superclass to call " category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUk0gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.builds.ui.command.ShowTestResults" commandName="Show Test Results" category="_lWSIeAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUk0wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.toggleBlockSelectionMode" commandName="Toggle Block Selection" description="Toggle block / column selection in the current text editor" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUk1APkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.sse.ui.goto.matching.bracket" commandName="Matching Character" description="Go to Matching Character" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUk1QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.xml.ui.disable.grammar.constraints" commandName="Turn off Grammar Constraints" description="Turn off grammar Constraints" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUk1gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesViewRefresh" commandName="Refresh" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUk1wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.refactor.quickMenu" commandName="Show Refactor Quick Menu" description="Shows the refactor quick menu" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUk2APkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.commands.showElementInTypeHierarchyView" commandName="Show Java Element Type Hierarchy" description="Show a Java element in the Type Hierarchy view" category="_lWSIfQPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWUk2QPkEeeT-9Bzrt0dmg" elementId="elementRef" name="Java element reference" typeId="org.eclipse.jdt.ui.commands.javaElementReference" optional="false"/>
  </commands>
  <commands xmi:id="_lWUk2gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigate.goToResource" commandName="Go to" description="Go to a particular resource in the active view" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUk2wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.resetPerspective" commandName="Reset Perspective" description="Reset the current perspective to its default state" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUk3APkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.open.super.implementation" commandName="Open Super Implementation" description="Open the Implementation in the Super Type" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUk3QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.wikitext.ui.quickOutlineCommand" commandName="Quick Outline" description="Open a popup dialog with a quick outline of the current document" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUk3gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.project.buildLast" commandName="Repeat Working Set Build" description="Repeat the last working set build" category="_lWSIhgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUk3wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.project.buildProject" commandName="Build Project" description="Build the selected project" category="_lWSIhgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUk4APkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.CompareIndexWithHead" commandName="Compare File in Index with HEAD Revision" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUk4QPkEeeT-9Bzrt0dmg" elementId="Ocaml.contextInformationCommand" commandName="Show Tooltip Description" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUk4gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.override.methods" commandName="Override/Implement Methods" description="Override or implement methods from super types" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUk4wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.recommenders.snipmatch.rcp.commands.completion" commandName="Snipmatch Snippet Completion" description="Open a dialog to search for and insert code snippets" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWUk5APkEeeT-9Bzrt0dmg" elementId="org.eclipse.recommenders.utils.rcp.commands.openBrowser" commandName="Open a Web browser" category="_lWSvgwPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWVLwAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.recommenders.utils.rcp.linkContribution.href" name="URI" optional="false"/>
  </commands>
  <commands xmi:id="_lWVLwQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.discoveryWizardCommand" commandName="Discovery Wizard" description="shows the connector discovery wizard" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVLwgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.goto.textStart" commandName="Text Start" description="Go to the beginning of the text" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVLwwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.wikitext.ui.convertToDocbookCommand" commandName="Generate Docbook" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVLxAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.paste" commandName="Paste" description="Paste from the clipboard" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVLxQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.part.nextPage" commandName="Next Page" description="Switch to the next page" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVLxgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.change.type" commandName="Generalize Declared Type" description="Change the declaration of a selected variable to a more general type consistent with usage" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVLxwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.oomph.setup.editor.refreshCache" commandName="Refresh Remote Cache" category="_lWSIegPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVLyAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.debug.ui.javaAppletShortcut.run" commandName="Run Java Applet" description="Run Java Applet" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVLyQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.CreateBranch" commandName="Create Branch" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVLygPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigate.previous" commandName="Previous" description="Navigate to the previous item" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVLywPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.clean" commandName="Clean..." category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVLzAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesViewClone" commandName="Clone a Git Repository" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVLzQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.rename" commandName="Rename" description="Rename the selected item" category="_lWSIgQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVLzgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.clear.mark" commandName="Clear Mark" description="Clear the mark" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVLzwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.sse.ui.quick_outline" commandName="Quick Outline" description="Show the quick outline for the editor input" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL0APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.project.buildAll" commandName="Build All" description="Build all projects" category="_lWSIhgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL0QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.OpenInTextEditorCommand" commandName="Open in Text Editor" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL0gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesViewRemove" commandName="Remove Repository" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL0wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ant.ui.openExternalDoc" commandName="Open External Documentation" description="Open the External documentation for the current task in the Ant editor" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL1APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.cut.line.to.beginning" commandName="Cut to Beginning of Line" description="Cut to the beginning of a line of text" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL1QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.buildship.ui.commands.runtasks" commandName="Run Gradle Tasks" description="Runs all the selected Gradle tasks" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL1gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.toggleBreadcrumb" commandName="Toggle Java Editor Breadcrumb" description="Toggle the Java editor breadcrumb" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL1wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesViewCreateRepository" commandName="Create a Repository" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL2APkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.search.write.access.in.hierarchy" commandName="Write Access in Hierarchy" description="Search for write references of the selected element in its hierarchy" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL2QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.editors.revisions.rendering.cycle" commandName="Cycle Revision Coloring Mode" description="Cycles through the available coloring modes for revisions" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL2gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.recommenders.snipmatch.rcp.commands.createSnippet" commandName="Create Snippet..." description="Creates a new Snipmatch code snippet from the current editor&#x2019;s text selection" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL2wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ant.ui.renameInFile" commandName="Rename In File" description="Renames all references within the same buildfile" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL3APkEeeT-9Bzrt0dmg" elementId="Ocaml.camlp4formatterCommand" commandName="Format with camlp4" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL3QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.PushTags" commandName="Push Tags..." category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL3gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.open.type.hierarchy" commandName="Open Type Hierarchy" description="Open a type hierarchy on the selected element" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL3wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.ContinueRebase" commandName="Continue Rebase" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL4APkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.extract.interface" commandName="Extract Interface" description="Extract a set of members into a new interface and try to use the new interface" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL4QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.help.ui.closeTray" commandName="Close User Assistance Tray" description="Close the user assistance tray containing context help information and cheat sheets." category="_lWSIhQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL4gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ltk.ui.refactoring.commands.moveResources" commandName="Move Resources" description="Move the selected resources and notify LTK participants." category="_lWSIjQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL4wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.CreatePatch" commandName="Create Patch" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL5APkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.Resume" commandName="Resume" description="Resume" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL5QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.m2e.actions.LifeCycleGenerateSources.run" commandName="Run Maven Generate Sources" description="Run Maven Generate Sources" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL5gPkEeeT-9Bzrt0dmg" elementId="Ocaml.restartCommand" commandName="Restart" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL5wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.StepInto" commandName="Step Into" description="Step into" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL6APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.file.restartWorkbench" commandName="Restart" description="Restart the workbench" category="_lWSIgQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL6QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.context.ui.commands.open.context.dialog" commandName="Show Context Quick View" description="Show Context Quick View" category="_lWSIfAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL6gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.sse.ui.structure.select.previous" commandName="Select Previous Element" description="Expand selection to include previous sibling" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL6wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.toggleOverwrite" commandName="Toggle Overwrite" description="Toggle overwrite mode" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL7APkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.context.ui.commands.attachment.retrieveContext" commandName="Retrieve Context Attachment" category="_lWSIfAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL7QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.pull.up" commandName="Pull Up" description="Move members to a superclass" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVL7gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.folding.collapse_all" commandName="Collapse All" description="Collapses all folded regions" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy0APkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.debug.ui.commands.AddExceptionBreakpoint" commandName="Add Java Exception Breakpoint" description="Add a Java exception breakpoint" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy0QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.open.call.hierarchy" commandName="Open Call Hierarchy" description="Open a call hierarchy on the selected element" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy0gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesViewClearCredentials" commandName="Clear Credentials" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy0wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.wikitext.ui.convertToMarkupCommand" commandName="Generate Markup" category="_lWSvgwPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWVy1APkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.wikitext.ui.targetLanguage" name="TargetLanguage" optional="false"/>
  </commands>
  <commands xmi:id="_lWVy1QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.RefreshRepositoryTasks" commandName="Synchronize Changed" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy1gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.equinox.p2.ui.discovery.commands.ShowRepositoryCatalog" commandName="Show Repository Catalog" category="_lWSvgwPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWVy1wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.equinox.p2.ui.discovery.commands.RepositoryParameter" name="P2 Repository URI"/>
  </commands>
  <commands xmi:id="_lWVy2APkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.ToggleWatchpoint" commandName="Toggle Watchpoint" description="Creates or removes a watchpoint" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy2QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.closeRendering" commandName="Close Rendering" description="Close the selected rendering." category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy2gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesViewOpenInEditor" commandName="Open in Editor" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy2wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.showToolTip" commandName="Show Tooltip Description" category="_lWSIfgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy3APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.showViewMenu" commandName="Show View Menu" description="Show the view menu" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy3QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.context.ui.commands.task.copyContext" commandName="Copy Context" category="_lWSIfAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy3gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.Commit" commandName="Commit..." category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy3wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.inline" commandName="Inline" description="Inline a constant, local variable or method" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy4APkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.submodule.update" commandName="Update Submodule" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy4QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.shiftRight" commandName="Shift Right" description="Shift a block of text to the right" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy4gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.ProfileLast" commandName="Profile" description="Launch in profile mode" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy4wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigate.backwardHistory" commandName="Backward History" description="Move backward in the editor navigation history" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy5APkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.Pull" commandName="Pull" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy5QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.removeTrailingWhitespace" commandName="Remove Trailing Whitespace" description="Removes the trailing whitespace of each line" category="_lWSIgQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy5gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.findIncremental" commandName="Incremental Find" description="Incremental find" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy5wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.swap.mark" commandName="Swap Mark" description="Swap the mark with the cursor position" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy6APkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.correction.addCast" commandName="Quick Fix - Add cast" description="Invokes quick assist and selects 'Add cast'" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy6QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.context.ui.commands.interest.increment" commandName="Make Landmark" description="Make Landmark" category="_lWSIfAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy6gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.correction.assignToLocal.assist" commandName="Quick Assist - Assign to local variable" description="Invokes quick assist and selects 'Assign to local variable'" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy6wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.ImportChangedProjectsCommandId" commandName="Import Changed Projects" description="Import or create in local Git repository" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy7APkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.search.return.continue.targets" commandName="Search break/continue Target Occurrences in File" description="Search for break/continue target occurrences of a selected target name" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy7QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesViewConfigureFetch" commandName="Configure Fetch..." category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy7gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.create.getter.setter" commandName="Generate Getters and Setters" description="Generate Getter and Setter methods for type's fields" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy7wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.open.external.javadoc" commandName="Open Attached Javadoc" description="Open the attached Javadoc of the selected element in a browser" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy8APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.shiftLeft" commandName="Shift Left" description="Shift a block of text to the left" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy8QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.sse.ui.structure.select.next" commandName="Select Next Element" description="Expand selection to include next sibling" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy8gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.Push" commandName="Push..." category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy8wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.debug.ui.commands.AddClassPrepareBreakpoint" commandName="Add Class Load Breakpoint" description="Add a class load breakpoint" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy9APkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.select.next" commandName="Select Next Element" description="Expand selection to include next sibling" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy9QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.builds.ui.command.ShowBuildOutput" commandName="Show Build Output" category="_lWSIeAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy9gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesViewNewRemote" commandName="Create Remote..." category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy9wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.delete.line" commandName="Delete Line" description="Delete a line of text" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy-APkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.Restart" commandName="Restart" description="Restart a process or debug target without terminating and re-launching" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy-QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.stash.drop" commandName="Delete Stashed Commit..." category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy-gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.DebugPerspective" commandName="Debug" description="Open the debug perspective" category="_lWSIjAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy-wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.RenameBranch" commandName="Rename Branch..." category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy_APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigate.expandAll" commandName="Expand All" description="Expand the current tree" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy_QPkEeeT-9Bzrt0dmg" elementId="Ocaml.backstepCommand" commandName="Backstep" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVy_gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.specific_content_assist.command" commandName="Content Assist" description="A parameterizable command that invokes content assist with a single completion proposal category" category="_lWSIcgPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWVy_wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.specific_content_assist.category_id" name="type" optional="false"/>
  </commands>
  <commands xmi:id="_lWVzAAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.search.references.in.hierarchy" commandName="References in Hierarchy" description="Search for references of the selected element in its hierarchy" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVzAQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.file.saveAll" commandName="Save All" description="Save all current contents" category="_lWSIgQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVzAgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.remove.block.comment" commandName="Remove Block Comment" description="Remove the block comment enclosing the selection" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVzAwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.search.method.exits" commandName="Search Method Exit Occurrences in File" description="Search for method exit occurrences of a selected return type" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVzBAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.open.implementation" commandName="Open Implementation" description="Opens the Implementations of a method in its hierarchy" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVzBQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.junit.gotoTest" commandName="Referring Tests" description="Referring Tests" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVzBgPkEeeT-9Bzrt0dmg" elementId="Ocaml.commentSelectionProtectedCommand" commandName="Comment/Uncomment Selection (Protected)" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVzBwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.folding.collapseMembers" commandName="Collapse Members" description="Collapse all members" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWVzCAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.find.broken.nls.keys" commandName="Find Broken Externalized Strings" description="Finds undefined, duplicate and unused externalized string keys in property files" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ4APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.file.closeOthers" commandName="Close Others" description="Close all editors except the one that is active" category="_lWSIgQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ4QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.commands.showElementInPackageView" commandName="Show Java Element in Package Explorer" description="Select Java element in the Package Explorer view" category="_lWSIfQPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWWZ4gPkEeeT-9Bzrt0dmg" elementId="elementRef" name="Java element reference" typeId="org.eclipse.jdt.ui.commands.javaElementReference" optional="false"/>
  </commands>
  <commands xmi:id="_lWWZ4wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.editors.quickdiff.revertLine" commandName="Revert Line" description="Revert the current line" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ5APkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.OpenDebugConfigurations" commandName="Debug..." description="Open debug launch configuration dialog" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ5QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.oomph.setup.editor.performDropdown" commandName="Perform Dropdown" category="_lWSIegPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ5gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.SimpleFetch" commandName="Fetch from Upstream" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ5wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.previousEditor" commandName="Previous Editor" description="Switch to the previous editor" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ6APkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.debug.ui.commands.InstanceCount" commandName="Instance Count" description="View the instance count of the selected type loaded in the target VM" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ6QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.copy.qualified.name" commandName="Copy Qualified Name" description="Copy a fully qualified name to the system clipboard" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ6gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.findReplace" commandName="Find and Replace" description="Find and replace text" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ6wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.promote.local.variable" commandName="Convert Local Variable to Field" description="Convert a local variable to a field" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ7APkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.MergeTool" commandName="Merge Tool" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ7QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.ide.OpenMarkersView" commandName="Open Another" description="Open another view" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ7gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.command.shareProject" commandName="Share with Git" description="Share the project using Git" category="_lWSvgwPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWWZ7wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.command.projectNameParameter" name="Project" optional="false"/>
  </commands>
  <commands xmi:id="_lWWZ8APkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.convert.anonymous.to.nested" commandName="Convert Anonymous Class to Nested" description="Convert an anonymous class to a nested class" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ8QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.correction.changeToStatic" commandName="Quick Fix - Change to static access" description="Invokes quick assist and selects 'Change to static access'" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ8gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.equinox.p2.ui.sdk.installationDetails" commandName="Installation Details" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ8wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.team.ui.synchronizeAll" commandName="Synchronize..." description="Synchronize resources in the workspace with another location" category="_lWSIcAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ9APkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.newRendering" commandName="New Rendering" description="Add a new rendering." category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ9QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.m2e.profiles.ui.commands.selectMavenProfileCommand" commandName="Select Maven Profiles" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ9gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.nextEditor" commandName="Next Editor" description="Switch to the next editor" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ9wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.project.closeUnrelatedProjects" commandName="Close Unrelated Projects" description="Close unrelated projects" category="_lWSIhgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ-APkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.self.encapsulate.field" commandName="Encapsulate Field" description="Create getting and setting methods for the field and use only those to access the field" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ-QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.internal.reflog.CopyCommand" commandName="Copy SHA-1" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ-gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.new.subtask" commandName="New Subtask" category="_lWSIfgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ-wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.help.helpContents" commandName="Help Contents" description="Open the help contents" category="_lWSIhQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ_APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.delete" commandName="Delete" description="Delete the selection" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ_QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.Reset" commandName="Reset..." category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ_gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.delete.line.to.beginning" commandName="Delete to Beginning of Line" description="Delete to the beginning of a line of text" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWZ_wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.search.ui.performTextSearchWorkspace" commandName="Find Text in Workspace" description="Searches the files in the workspace for specific text." category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWaAAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.RenameBranch" commandName="Rename Branch" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWaAQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.Synchronize" commandName="Synchronize" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWaAgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.search.declarations.in.working.set" commandName="Declaration in Working Set" description="Search for declarations of the selected element in a working set" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWaAwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.sse.ui.remove.block.comment" commandName="Remove Block Comment" description="Remove Block Comment" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWaBAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.findPrevious" commandName="Find Previous" description="Find previous item" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWaBQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.ToggleBreakpoint" commandName="Toggle Breakpoint" description="Creates or removes a breakpoint" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWaBgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.navigate.gototype" commandName="Go to Type" description="Go to Type" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWaBwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.m2e.core.ui.command.openPom" commandName="Open Maven POM" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWaCAPkEeeT-9Bzrt0dmg" elementId="Ocaml.gotoMatchingDelimiterCommand" commandName="Goto Matching Delimiter" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWaCQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.addBookmark" commandName="Add Bookmark" description="Add a bookmark" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWaCgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.commit.Revert" commandName="Revert Commit" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWaCwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.commit.StashDrop" commandName="Delete Stashed Commit..." category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWaDAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.openTask" commandName="Open Task" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWaDQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.xsd.ui.refactor.rename.element" commandName="&amp;Rename XSD element" description="Rename XSD element" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWaDgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.scroll.lineUp" commandName="Scroll Line Up" description="Scroll up one line of text" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWaDwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.set.mark" commandName="Set Mark" description="Set the mark" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWaEAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.select.last" commandName="Restore Last Selection" description="Restore last selection" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWaEQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.java.ui.editor.folding.auto" commandName="Toggle Active Folding" description="Toggle Active Folding" category="_lWSIfwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWWaEgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.goToPreviousUnread" commandName="Go To Previous Unread Task" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXA8APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.folding.toggle" commandName="Toggle Folding" description="Toggles folding in the current editor" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXA8QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.toggleShowWhitespaceCharacters" commandName="Show Whitespace Characters" description="Shows whitespace characters in current text editor" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXA8gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.correction.splitJoinVariableDeclaration.assist" commandName="Quick Assist - Split/Join variable declaration" description="Invokes quick assist and selects 'Split/Join variable declaration'" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXA8wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.file.revert" commandName="Revert" description="Revert to the last saved state" category="_lWSIgQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXA9APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.showView" commandName="Show View" description="Shows a particular view" category="_lWSIcQPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWXA9QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.showView.viewId" name="View"/>
    <parameters xmi:id="_lWXA9gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.showView.secondaryId" name="Secondary Id"/>
    <parameters xmi:id="_lWXA9wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.views.showView.makeFast" name="As FastView"/>
  </commands>
  <commands xmi:id="_lWXA-APkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigate.showResourceByPath" commandName="Show Resource in Navigator" description="Show a resource in the Navigator given its path" category="_lWSIfQPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWXA-QPkEeeT-9Bzrt0dmg" elementId="resourcePath" name="Resource Path" typeId="org.eclipse.ui.ide.resourcePath" optional="false"/>
  </commands>
  <commands xmi:id="_lWXA-gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.Ignore" commandName="Ignore" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXA-wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.commit.Edit" commandName="Edit Commit" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXA_APkEeeT-9Bzrt0dmg" elementId="org.eclipse.oomph.ui.ToggleOfflineMode" commandName="Toggle Offline Mode" category="_lWSvggPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXA_QPkEeeT-9Bzrt0dmg" elementId="org.eclipse.oomph.setup.editor.openLog" commandName="Open Setup Log" category="_lWSIegPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXA_gPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.SkipAllBreakpoints" commandName="Skip All Breakpoints" description="Sets whether or not any breakpoint should suspend execution" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXA_wPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.delimiter.windows" commandName="Convert Line Delimiters to Windows (CRLF, \r\n, 0D0A, &#xa4;&#xb6;)" description="Converts the line delimiters to Windows (CRLF, \r\n, 0D0A, &#xa4;&#xb6;)" category="_lWSIgQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBAAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.findNext" commandName="Find Next" description="Find next item" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBAQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.project.buildAutomatically" commandName="Build Automatically" description="Toggle the workspace build automatically function" category="_lWSIhgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBAgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.file.import" commandName="Import" description="Import" category="_lWSIgQPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWXBAwPkEeeT-9Bzrt0dmg" elementId="importWizardId" name="Import Wizard"/>
  </commands>
  <commands xmi:id="_lWXBBAPkEeeT-9Bzrt0dmg" elementId="Ocaml.camlp4convertCommand" commandName="Convert from revised syntax to standard syntax with camlp4" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBBQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.Merge" commandName="Merge" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBBgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.switchToEditor" commandName="Switch to Editor" description="Switch to an editor" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBBwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.help.dynamicHelp" commandName="Dynamic Help" description="Open the dynamic help" category="_lWSIhQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBCAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigate.nextSubTab" commandName="Next Sub-Tab" description="Switch to the next sub-tab" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBCQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.comment" commandName="Comment" description="Turn the selected lines into Java comments" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBCgPkEeeT-9Bzrt0dmg" elementId="Ocaml.formatterCommand" commandName="Format" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBCwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.introduce.parameter" commandName="Introduce Parameter" description="Introduce a new method parameter based on the selected expression" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBDAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.addTaskRepository" commandName="Add Task Repository..." category="_lWSIfgPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWXBDQPkEeeT-9Bzrt0dmg" elementId="connectorKind" name="Repository Type"/>
  </commands>
  <commands xmi:id="_lWXBDgPkEeeT-9Bzrt0dmg" elementId="Ocaml.reverseCommand" commandName="Reverse" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBDwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.debug.ui.localJavaShortcut.run" commandName="Run Java Application" description="Run Java Application" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBEAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.activateTask" commandName="Activate Task" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBEQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.addTask" commandName="Add Task..." description="Add a task" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBEgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.CreateTag" commandName="Create Tag..." category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBEwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.search.occurrences.in.file.quickMenu" commandName="Show Occurrences in File Quick Menu" description="Shows the Occurrences in File quick menu" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBFAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.builds.ui.commands.OpenBuildElementWithBrowser" commandName="Open Build with Browser" category="_lWSIeAPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWXBFQPkEeeT-9Bzrt0dmg" elementId="element" name="Element"/>
  </commands>
  <commands xmi:id="_lWXBFgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.sse.ui.structure.select.enclosing" commandName="Select Enclosing Element" description="Expand selection to include enclosing element" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBFwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.toggleInsertMode" commandName="Toggle Insert Mode" description="Toggle insert mode" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBGAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.cheatsheets.openCheatSheet" commandName="Open Cheat Sheet" description="Open a Cheat Sheet." category="_lWSIhQPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWXBGQPkEeeT-9Bzrt0dmg" elementId="cheatSheetId" name="Identifier"/>
  </commands>
  <commands xmi:id="_lWXBGgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.file.closePart" commandName="Close Part" description="Close the active workbench part" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBGwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesViewDelete" commandName="Delete Repository" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBHAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.viewSource.command" commandName="View Unformatted Text" category="_lWSIfgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBHQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.editors.revisions.id.toggle" commandName="Toggle Revision Id Display" description="Toggles the display of the revision id" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBHgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.project.cleanAction" commandName="Build Clean" description="Discard old built state" category="_lWSIhgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBHwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.moveLineDown" commandName="Move Lines Down" description="Moves the selected lines down" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBIAPkEeeT-9Bzrt0dmg" elementId="Ocaml.runCommand" commandName="Run" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBIQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigate.back" commandName="Back" description="Navigate back" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBIgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.select.wordNext" commandName="Select Next Word" description="Select the next word" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBIwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.equinox.p2.ui.sdk.update" commandName="Check for Updates" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBJAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.goto.pageDown" commandName="Page Down" description="Go down one page" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBJQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.goto.textEnd" commandName="Text End" description="Go to the end of the text" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBJgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.JavaBrowsingPerspective" commandName="Java Browsing" description="Show the Java Browsing perspective" category="_lWSIjAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXBJwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.builds.ui.commands.OpenBuildElement" commandName="Open Build Element" category="_lWSIeAPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWXBKAPkEeeT-9Bzrt0dmg" elementId="element" name="Element"/>
  </commands>
  <commands xmi:id="_lWXBKQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.part.previousPage" commandName="Previous Page" description="Switch to the previous page" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoAAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.goto.matching.bracket" commandName="Go to Matching Bracket" description="Moves the cursor to the matching bracket" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoAQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.GarbageCollect" commandName="Collect Garbage" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoAgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.CompareWithWorkingTree" commandName="Compare with Working Tree" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoAwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.Branch" commandName="Branch" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoBAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.project.closeProject" commandName="Close Project" description="Close the selected project" category="_lWSIhgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoBQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.xml.ui.previousSibling" commandName="Previous Sibling" description="Go to Previous Sibling" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoBgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesViewConfigurePush" commandName="Configure Push..." category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoBwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.findIncrementalReverse" commandName="Incremental Find Reverse" description="Incremental find reverse" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoCAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.introduce.factory" commandName="Introduce Factory" description="Introduce a factory method to encapsulate invocation of the selected constructor" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoCQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ant.ui.antShortcut.run" commandName="Run Ant Build" description="Run Ant Build" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoCgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.stash.apply" commandName="Apply Stashed Changes" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoCwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.debug.ui.commands.Inspect" commandName="Inspect" description="Inspect result of evaluating selected text" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoDAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.commit.CherryPick" commandName="Cherry Pick" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoDQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.use.supertype" commandName="Use Supertype Where Possible" description="Change occurrences of a type to use a supertype instead" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoDgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.markTaskUnread" commandName="Mark Task Unread" category="_lWSIfgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoDwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.search.ui.performTextSearchFile" commandName="Find Text in File" description="Searches the files in the file for specific text." category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoEAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.goto.columnNext" commandName="Next Column" description="Go to the next column" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoEQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.Squash" commandName="Squash Commits" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoEgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.sse.ui.structure.select.last" commandName="Restore Last Selection" description="Restore last selection" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoEwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.search.ui.performTextSearchWorkingSet" commandName="Find Text in Working Set" description="Searches the files in the working set for specific text." category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoFAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.goto.wordNext" commandName="Next Word" description="Go to the next word" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoFQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.cut.line" commandName="Cut Line" description="Cut a line of text" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoFgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.builds.ui.command.NewTaskFromBuild" commandName="New Task From Build" category="_lWSIeAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoFwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.folding.expand_all" commandName="Expand All" description="Expands all folded regions" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoGAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.xsd.ui.refactor.makeElementGlobal" commandName="Make Local Element &amp;Global" description="Promotes local element to global level and replaces its references" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoGQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.quickdiff.toggle" commandName="Quick Diff Toggle" description="Toggles quick diff information display on the line number ruler" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoGgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.deleteNext" commandName="Delete Next" description="Delete the next character" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoGwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.FetchGerritChange" commandName="Fetch From Gerrit" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoHAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.correction.encapsulateField.assist" commandName="Quick Assist - Create getter/setter for field" description="Invokes quick assist and selects 'Create getter/setter for field'" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoHQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.oomph.setup.editor.openEditorDropdown" commandName="Open Setup Editor" category="_lWSIegPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoHgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.help.quickStartAction" commandName="Welcome" description="Show help for beginning users" category="_lWSIhQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoHwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.SynchronizeAll" commandName="Synchronize Changed" category="_lWSIfgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoIAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.debug.ui.commands.Watch" commandName="Watch" description="Create new watch expression" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoIQPkEeeT-9Bzrt0dmg" elementId="Ocaml.contentAssistCommand" commandName="Content Assist" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoIgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.Reword" commandName="Reword Commit" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoIwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.hideShowEditors" commandName="Toggle Shared Area Visibility" description="Toggles the visibility of the shared area" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoJAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.wikitext.context.ui.editor.folding.auto" commandName="Toggle Active Folding" description="Toggle Active Folding" category="_lWSIgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoJQPkEeeT-9Bzrt0dmg" elementId="Ocaml.toplevelQuickEvalCommand" commandName="Eval In Toplevel" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoJgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.OpenCommit" commandName="Open Git Commit" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoJwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.help.displayHelp" commandName="Display Help" description="Display a Help topic" category="_lWSIhQPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWXoKAPkEeeT-9Bzrt0dmg" elementId="href" name="Help topic href"/>
  </commands>
  <commands xmi:id="_lWXoKQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.folding.restore" commandName="Reset Structure" description="Resets the folding structure" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoKgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.select.pageDown" commandName="Select Page Down" description="Select to the bottom of the page" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoKwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ltk.ui.refactor.create.refactoring.script" commandName="Create Script" description="Create a refactoring script from refactorings on the local workspace" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoLAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.join.lines" commandName="Join Lines" description="Join lines of text" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoLQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.help.ui.indexcommand" commandName="Index" description="Show Keyword Index" category="_lWSIhQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWXoLgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.showContextMenu" commandName="Show Context Menu" description="Show the context menu" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPEAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.open.editor" commandName="Open Declaration" description="Open an editor on the selected element" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPEQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.clean.up" commandName="Clean Up" description="Solve problems and improve code style on selected resources" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPEgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.extract.local.variable" commandName="Extract Local Variable" description="Extracts an expression into a new local variable and uses the new local variable" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPEwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.oomph.p2.ui.ExploreRepository" commandName="Explore Repository" category="_lWSIigPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPFAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.debug.ui.localJavaShortcut.debug" commandName="Debug Java Application" description="Debug Java Application" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPFQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ltk.ui.refactor.show.refactoring.history" commandName="Open Refactoring History " description="Opens the refactoring history" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPFgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.search.read.access.in.hierarchy" commandName="Read Access in Hierarchy" description="Search for read references of the selected element in its hierarchy" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPFwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigate.forward" commandName="Forward" description="Navigate forward" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPGAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.correction.assist.proposals" commandName="Quick Fix" description="Suggest possible fixes for a problem" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPGQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.buildship.ui.commands.openbuildscript" commandName="Open Gradle Build Script" description="Opens the Gradle build script for the selected Gradle project" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPGgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.nextPerspective" commandName="Next Perspective" description="Switch to the next perspective" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPGwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.push.down" commandName="Push Down" description="Move members to subclasses" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPHAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.UpdateRepositoryConfiguration" commandName="Update Repository Configuration" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPHQPkEeeT-9Bzrt0dmg" elementId="Ocaml.markOccurrencesCommand" commandName="Mark Occurrences" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPHgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.buildship.ui.commands.openrunconfiguration" commandName="Open Gradle Run Configuration" description="Opens the Run Configuration for the selected Gradle tasks" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPHwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.commit.StashApply" commandName="Apply Stashed Changes" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPIAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.DeleteTag" commandName="&amp;Delete Tag" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPIQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.remove.occurrence.annotations" commandName="Remove Occurrence Annotations" description="Removes the occurrence annotations from the current editor" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPIgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.search.write.access.in.working.set" commandName="Write Access in Working Set" description="Search for write references to the selected element in a working set" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPIwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.pinEditor" commandName="Pin Editor" description="Pin the current editor" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPJAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigate.nextTab" commandName="Next Tab" description="Switch to the next tab" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPJQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.ShowVersions" commandName="Open" category="_lWSvgwPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWYPJgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.CompareMode" name="Compare mode"/>
  </commands>
  <commands xmi:id="_lWYPJwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.quickAccess" commandName="Quick Access" description="Quickly access UI elements" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPKAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.showInformation" commandName="Show Tooltip Description" description="Displays information for the current caret location in a focused hover" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPKQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.add.import" commandName="Add Import" description="Create import statement on selection" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPKgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.attachment.open" commandName="Open Attachment" category="_lWSIdQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPKwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.goto.pageUp" commandName="Page Up" description="Go up one page" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPLAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.goto.columnPrevious" commandName="Previous Column" description="Go to the previous column" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPLQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.submodule.sync" commandName="Sync Submodule" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPLgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.DeleteBranch" commandName="Delete Branch" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPLwPkEeeT-9Bzrt0dmg" elementId="Ocaml.backstepReturnCommand" commandName="Backstep Return" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPMAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.toggleMemoryMonitorsPane" commandName="Toggle Memory Monitors Pane" description="Toggle visibility of the Memory Monitors Pane" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPMQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.ConfigureUpstreamFetch" commandName="Configure Upstream Fetch" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPMgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.search.implementors.in.working.set" commandName="Implementors in Working Set" description="Search for implementors of the selected interface in a working set" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPMwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.Discard" commandName="Replace with File in Index" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPNAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.compare.selectNextChange" commandName="Select Next Change" description="Select Next Change" category="_lWSIggPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPNQPkEeeT-9Bzrt0dmg" elementId="Ocaml.stepOverCommand" commandName="Step Over" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPNgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesViewCreateBranch" commandName="Create Branch..." category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPNwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesViewCopyPath" commandName="Copy Path to Clipboard" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPOAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ltk.ui.refactoring.commands.renameResource" commandName="Rename Resource" description="Rename the selected resource and notify LTK participants." category="_lWSIjQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPOQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.builds.ui.command.NewTaskFromTest" commandName="New Task From Test" category="_lWSIeAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPOgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.oomph.setup.editor.perform.startup" commandName="Perform Setup Tasks (Startup)" category="_lWSIegPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPOwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.Rebase" commandName="Rebase on" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPPAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.file.properties" commandName="Properties" description="Display the properties of the selected item" category="_lWSIgQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPPQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.commit.ShowInHistory" commandName="Show in History" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPPgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.previousTask" commandName="Previous Task Command" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPPwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.showRulerAnnotationInformation" commandName="Show Ruler Annotation Tooltip" description="Displays annotation information for the caret line in a focused hover" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPQAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.ReplaceWithHead" commandName="Replace with HEAD revision" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPQQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.correction.renameInFile.assist" commandName="Quick Assist - Rename in file" description="Invokes quick assist and selects 'Rename in file'" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWYPQgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.recommenders.utils.rcp.commands.openPreferences" commandName="Open the preferences dialog" category="_lWSvgwPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWYPQwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.recommenders.utils.rcp.linkContribution.href" name="URI" optional="false"/>
  </commands>
  <commands xmi:id="_lWYPRAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.browser.openBrowser" commandName="Open Browser" description="Opens the default web browser." category="_lWSIgwPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWYPRQPkEeeT-9Bzrt0dmg" elementId="url" name="URL"/>
    <parameters xmi:id="_lWY2IAPkEeeT-9Bzrt0dmg" elementId="browserId" name="Browser Id"/>
    <parameters xmi:id="_lWY2IQPkEeeT-9Bzrt0dmg" elementId="name" name="Browser Name"/>
    <parameters xmi:id="_lWY2IgPkEeeT-9Bzrt0dmg" elementId="tooltip" name="Browser Tooltip"/>
  </commands>
  <commands xmi:id="_lWY2IwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.activeContextInfo" commandName="Show activeContext Info" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2JAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.markTaskReadGoToPreviousUnread" commandName="Mark Task Read and Go To Previous Unread Task" category="_lWSIfgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2JQPkEeeT-9Bzrt0dmg" elementId="Ocaml.openQuickOutlineCommand" commandName="Quick Outline" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2JgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.search.implement.occurrences" commandName="Search Implement Occurrences in File" description="Search for implement occurrences of a selected type" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2JwPkEeeT-9Bzrt0dmg" elementId="Ocaml.stepCommand" commandName="Step" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2KAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.select.textStart" commandName="Select Text Start" description="Select to the beginning of the text" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2KQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.extract.constant" commandName="Extract Constant" description="Extracts a constant into a new static field and uses the new static field" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2KgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.sse.ui.cleanup.document" commandName="Cleanup Document..." description="Cleanup document" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2KwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.DeleteBranch" commandName="Delete Branch..." category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2LAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.builds.ui.command.ShowBuildOutput.url" commandName="Show Build Output" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2LQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.contentAssist.contextInformation" commandName="Context Information" description="Show Context Information" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2LgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.file.saveAs" commandName="Save As" description="Save the current contents to another location" category="_lWSIgQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2LwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.ConfigurePush" commandName="Configure Upstream Push" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2MAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.previousPerspective" commandName="Previous Perspective" description="Switch to the previous perspective" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2MQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.splitEditor" commandName="Toggle Split Editor" description="Split or join the currently active editor." category="_lWSIgwPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWY2MgPkEeeT-9Bzrt0dmg" elementId="Splitter.isHorizontal" name="Orientation" optional="false"/>
  </commands>
  <commands xmi:id="_lWY2MwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigate.collapseAll" commandName="Collapse All" description="Collapse the current tree" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2NAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.compare.copyAllRightToLeft" commandName="Copy All from Right to Left" description="Copy All Changes from Right to Left" category="_lWSIggPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2NQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.command.nextpage" commandName="Next Page of Memory" description="Load next page of memory" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2NgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.command.gotoaddress" commandName="Go to Address" description="Go to Address" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2NwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.maximizePart" commandName="Maximize Active View or Editor" description="Toggles maximize/restore state of active view or editor" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2OAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.deactivateSelectedTask" commandName="Deactivate Selected Task" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2OQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.lockToolBar" commandName="Lock the Toolbars" description="Lock the Toolbars" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2OgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.newEditor" commandName="New Editor" description="Open another editor on the active editor's input" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2OwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.correction.qualifyField" commandName="Quick Fix - Qualify field access" description="Invokes quick assist and selects 'Qualify field access'" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2PAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.Disconnect" commandName="Disconnect" description="Disconnect" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2PQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.sse.ui.format" commandName="Format" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2PgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.search.ui.openSearchDialog" commandName="Open Search Dialog" description="Open the Search dialog" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2PwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.contentAssist.proposals" commandName="Content Assist" description="Content Assist" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2QAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigate.up" commandName="Up" description="Navigate up one level" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2QQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.activateEditor" commandName="Activate Editor" description="Activate the editor" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2QgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.search.write.access.in.workspace" commandName="Write Access in Workspace" description="Search for write references to the selected element in the workspace" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2QwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.m2e.core.ui.command.addPlugin" commandName="Add Maven Plugin" description="Add Maven Plugin" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2RAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigate.removeFromWorkingSet" commandName="Remove From Working Set" description="Removes the selected object from a working set." category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2RQPkEeeT-9Bzrt0dmg" elementId="sed.tabletree.expandAll" commandName="Expand All" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2RgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.delete.line.to.end" commandName="Delete to End of Line" description="Delete to the end of a line of text" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2RwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.modify.method.parameters" commandName="Change Method Signature" description="Change method signature includes parameter names and parameter order" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2SAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.commit.CreateBranch" commandName="Create Branch..." category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2SQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.openSelectedTask" commandName="Open Selected Task" category="_lWSIfgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2SgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesLinkWithSelection" commandName="Link with Selection" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2SwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.context.ui.commands.toggle.focus.active.view" commandName="Focus on Active Task" description="Toggle the focus on active task for the active view" category="_lWSIfAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2TAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.correction.extractLocal.assist" commandName="Quick Assist - Extract local variable (replace all occurrences)" description="Invokes quick assist and selects 'Extract local variable (replace all occurrences)'" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2TQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.Terminate" commandName="Terminate" description="Terminate" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2TgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.help.ui.ignoreMissingPlaceholders" commandName="Do not warn of missing documentation" description="Sets the help preferences to no longer report a warning about the current set of missing documents." category="_lWSIhQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2TwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.ShowRepositoriesView" commandName="Show Git Repositories View" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2UAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.ide.deleteCompleted" commandName="Delete Completed Tasks" description="Delete the tasks marked as completed" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2UQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.compare.compareWithOther" commandName="Compare With Other Resource" description="Compare resources, clipboard contents or editors" category="_lWSIggPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2UgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.goToNextUnread" commandName="Go To Next Unread Task" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2UwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.add.javadoc.comment" commandName="Add Javadoc Comment" description="Add a Javadoc comment stub to the member element" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2VAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.editors.revisions.author.toggle" commandName="Toggle Revision Author Display" description="Toggles the display of the revision author" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2VQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.goto.windowEnd" commandName="Window End" description="Go to the end of the window" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2VgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.CreatePatch" commandName="Create Patch" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWY2VwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.perspectives.showPerspective" commandName="Show Perspective" description="Show a particular perspective" category="_lWSIjAPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWZdMAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.perspectives.showPerspective.perspectiveId" name="Parameter"/>
    <parameters xmi:id="_lWZdMQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.perspectives.showPerspective.newWindow" name="In New Window"/>
  </commands>
  <commands xmi:id="_lWZdMgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RebaseInteractiveCurrent" commandName="%RebaseInteractiveCurrentHandler.name" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdMwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.openEditorDropDown" commandName="Quick Switch Editor" description="Open the editor drop down list" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdNAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.goto.line" commandName="Go to Line" description="Go to a specified line of text" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdNQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.editors.quickdiff.revert" commandName="Revert Lines" description="Revert the current selection, block or deleted lines" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdNgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.deleteNextWord" commandName="Delete Next Word" description="Delete the next word" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdNwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.debug.ui.javaAppletShortcut.debug" commandName="Debug Java Applet" description="Debug Java Applet" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdOAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.xml.ui.gotoMatchingTag" commandName="Matching Tag" description="Go to Matching Tag" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdOQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.toggleMarkOccurrences" commandName="Toggle Mark Occurrences" description="Toggles mark occurrences in Java editors" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdOgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.select.lineUp" commandName="Select Line Up" description="Extend the selection to the previous line of text" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdOwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.SkipRebase" commandName="Skip commit and continue" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdPAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.replace.invocations" commandName="Replace Invocations" description="Replace invocations of the selected method" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdPQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.search.declarations.in.hierarchy" commandName="Declaration in Hierarchy" description="Search for declarations of the selected element in its hierarchy" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdPgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.undo" commandName="Undo" description="Undo the last operation" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdPwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.SetQuickdiffBaseline" commandName="Set quickdiff baseline" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdQAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.submodule.add" commandName="Add Submodule" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdQQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.cut.line.to.end" commandName="Cut to End of Line" description="Cut to the end of a line of text" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdQgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.correction.convertAnonymousToLocal.assist" commandName="Quick Assist - Convert anonymous to local class" description="Invokes quick assist and selects 'Convert anonymous to local class'" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdQwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.compare.copyLeftToRight" commandName="Copy from Left to Right" description="Copy Current Change from Left to Right" category="_lWSIggPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdRAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.file.newQuickMenu" commandName="New menu" description="Open the New menu" category="_lWSIgQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdRQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.project.openProject" commandName="Open Project" description="Open a project" category="_lWSIhgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdRgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.file.openWorkspace" commandName="Switch Workspace" description="Open the workspace selection dialog" category="_lWSIgQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdRwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.actions.WatchCommand" commandName="Watch" description="Create a watch expression from the current selection and add it to the Expressions view" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdSAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.file.closeAll" commandName="Close All" description="Close all editors" category="_lWSIgQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdSQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.navigate.open.type" commandName="Open Type" description="Open a type in a Java editor" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdSgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.cut" commandName="Cut" description="Cut the selection to the clipboard" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdSwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.ShowBlame" commandName="Show Annotations" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdTAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.org.eclipse.egit.ui.AbortRebase" commandName="Abort Rebase" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdTQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.introduce.indirection" commandName="Introduce Indirection" description="Introduce an indirection to encapsulate invocations of a selected method" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdTgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.correction.addSuppressWarnings" commandName="Quick Fix - Add @SuppressWarnings" description="Invokes quick fix and selects 'Add @SuppressWarnings' " category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdTwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.Merge" commandName="Merge" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdUAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ltk.ui.refactor.apply.refactoring.script" commandName="Apply Script" description="Perform refactorings from a refactoring script on the local workspace" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdUQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.ReplaceWithRef" commandName="Replace with branch, tag, or reference" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdUgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.search.write.access.in.project" commandName="Write Access in Project" description="Search for write references to the selected element in the enclosing project" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdUwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.submitTask" commandName="Submit Task" description="Submits the currently open task" category="_lWSIdQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdVAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.project.properties" commandName="Properties" description="Display the properties of the selected item's project " category="_lWSIhgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdVQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.extract.superclass" commandName="Extract Superclass" description="Extract a set of members into a new superclass and try to use the new superclass" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdVgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.CompareVersionsInTree" commandName="Compare in Tree" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdVwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.xml.ui.reload.dependencies" commandName="Reload Dependencies" description="Reload Dependencies" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdWAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.sse.ui.generate.xml" commandName="&amp;XML File..." category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdWQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.select.columnPrevious" commandName="Select Previous Column" description="Select the previous column" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdWgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.toggleShowSelectedElementOnly" commandName="Show Selected Element Only" description="Show Selected Element Only" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdWwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.junit.junitShortcut.rerunFailedFirst" commandName="Rerun JUnit Test - Failures First" description="Rerun JUnit Test - Failures First" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdXAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.file.export" commandName="Export" description="Export" category="_lWSIgQPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWZdXQPkEeeT-9Bzrt0dmg" elementId="exportWizardId" name="Export Wizard"/>
  </commands>
  <commands xmi:id="_lWZdXgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.correction.extractLocalNotReplaceOccurrences.assist" commandName="Quick Assist - Extract local variable" description="Invokes quick assist and selects 'Extract local variable'" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdXwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.xsd.ui.refactor.makeTypeGlobal" commandName="Make &amp;Anonymous Type Global" description="Promotes anonymous type to global level and replaces its references" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdYAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesToggleBranchHierarchy" commandName="Toggle Branch Representation" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdYQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.search.implementors.in.project" commandName="Implementors in Project" description="Search for implementors of the selected interface in the enclosing project" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdYgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ltk.ui.refactoring.commands.deleteResources" commandName="Delete Resources" description="Delete the selected resources and notify LTK participants." category="_lWSIjQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdYwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.file.print" commandName="Print" description="Print" category="_lWSIgQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdZAPkEeeT-9Bzrt0dmg" elementId="Ocaml.shiftRightCommand" commandName="Shift Right" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdZQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.ApplyPatch" commandName="Apply Patch" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdZgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.junit.junitShortcut.rerunLast" commandName="Rerun JUnit Test" description="Rerun JUnit Test" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdZwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.debug.ui.commands.AllReferences" commandName="All References" description="Inspect all references to the selected object" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdaAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.JavaPerspective" commandName="Java" description="Show the Java perspective" category="_lWSIjAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdaQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.sse.ui.format.active.elements" commandName="Format Active Elements" description="Format active elements" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdagPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.showRulerContextMenu" commandName="Show Ruler Context Menu" description="Show the context menu for the ruler" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdawPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.indent" commandName="Correct Indentation" description="Corrects the indentation of the selected lines" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdbAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.ide.copyConfigCommand" commandName="Copy Configuration Data To Clipboard" description="Copies the configuration data (system properties, installed bundles, etc) to the clipboard." category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdbQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.search.references.in.working.set" commandName="References in Working Set" description="Search for references to the selected element in a working set" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdbgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.task.clearOutgoing" commandName="Clear Outgoing Changes" category="_lWSIfgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdbwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.folding.collapse" commandName="Collapse" description="Collapses the folded region at the current selection" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWZdcAPkEeeT-9Bzrt0dmg" elementId="Ocaml.shiftLeftCommand" commandName="Shift Left" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEQAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.smartEnterInverse" commandName="Insert Line Above Current Line" description="Adds a new line above the current line" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEQQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigate.forwardHistory" commandName="Forward History" description="Move forward in the editor navigation history" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEQgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.spy" commandName="Show Contributing Plug-in" description="Shows contribution information for the currently selected element" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEQwPkEeeT-9Bzrt0dmg" elementId="Ocaml.putBreakpointCommand" commandName="Put Breakpoint" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaERAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.help.helpSearch" commandName="Help Search" description="Open the help search" category="_lWSIhQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaERQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.infer.type.arguments" commandName="Infer Generic Type Arguments" description="Infer type arguments for references to generic classes and remove unnecessary casts" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaERgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.search.ui.performTextSearchProject" commandName="Find Text in Project" description="Searches the files in the project for specific text." category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaERwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.goto.lineDown" commandName="Line Down" description="Go down one line of text" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaESAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.builds.ui.command.ShowTestResults.url" commandName="Show Test Results" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaESQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.project.rebuildAll" commandName="Rebuild All" description="Rebuild all projects" category="_lWSIhgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaESgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.commit.Checkout" commandName="Checkout" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaESwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.m2e.actions.LifeCycleClean.run" commandName="Run Maven Clean" description="Run Maven Clean" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaETAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.gef.zoom_in" commandName="Zoom In" description="Zoom In" category="_lWSIjgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaETQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.gotoLastEditPosition" commandName="Last Edit Location" description="Last edit location" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaETgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.quick.format" commandName="Format Element" description="Format enclosing text element" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaETwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.open.hyperlink" commandName="Open Hyperlink" description="Opens the hyperlink at the caret location or opens a chooser if more than one hyperlink is available" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEUAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.wikitext.ui.convertToEclipseHelpCommand" commandName="Generate Eclipse Help (*.html and *-toc.xml)" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEUQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.command.prevpage" commandName="Previous Page of Memory" description="Load previous page of memory" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEUgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.debug.ui.commands.ForceReturn" commandName="Force Return" description="Forces return from method with value of selected expression " category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEUwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.openLocalFile" commandName="Open File..." description="Open a file" category="_lWSIgQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEVAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.Disconnect" commandName="Disconnect" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEVQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.ide.configureFilters" commandName="Configure Contents..." description="Configure the filters to apply to the markers view" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEVgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigate.previousTab" commandName="Previous Tab" description="Switch to the previous tab" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEVwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.select.previous" commandName="Select Previous Element" description="Expand selection to include previous sibling" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEWAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.dialogs.openMessageDialog" commandName="Open Message Dialog" description="Open a Message Dialog" category="_lWSIiQPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWaEWQPkEeeT-9Bzrt0dmg" elementId="title" name="Title"/>
    <parameters xmi:id="_lWaEWgPkEeeT-9Bzrt0dmg" elementId="message" name="Message"/>
    <parameters xmi:id="_lWaEWwPkEeeT-9Bzrt0dmg" elementId="imageType" name="Image Type Constant" typeId="org.eclipse.ui.dialogs.Integer"/>
    <parameters xmi:id="_lWaEXAPkEeeT-9Bzrt0dmg" elementId="defaultIndex" name="Default Button Index" typeId="org.eclipse.ui.dialogs.Integer"/>
    <parameters xmi:id="_lWaEXQPkEeeT-9Bzrt0dmg" elementId="buttonLabel0" name="First Button Label"/>
    <parameters xmi:id="_lWaEXgPkEeeT-9Bzrt0dmg" elementId="buttonLabel1" name="Second Button Label"/>
    <parameters xmi:id="_lWaEXwPkEeeT-9Bzrt0dmg" elementId="buttonLabel2" name="Third Button Label"/>
    <parameters xmi:id="_lWaEYAPkEeeT-9Bzrt0dmg" elementId="buttonLabel3" name="Fourth Button Label"/>
    <parameters xmi:id="_lWaEYQPkEeeT-9Bzrt0dmg" elementId="cancelReturns" name="Return Value on Cancel"/>
  </commands>
  <commands xmi:id="_lWaEYgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.goto.lineEnd" commandName="Line End" description="Go to the end of the line of text" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEYwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.file.refresh" commandName="Refresh" description="Refresh the selected items" category="_lWSIgQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEZAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.commit.CreateTag" commandName="Create Tag..." category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEZQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesViewChangeCredentials" commandName="Change Credentials" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEZgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.xml.ui.referencedFileErrors" commandName="Show Details..." description="Show Details..." category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEZwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.correction.extractMethodInplace.assist" commandName="Quick Assist - Extract method" description="Invokes quick assist and selects 'Extract to method'" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEaAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.closeAllPerspectives" commandName="Close All Perspectives" description="Close all open perspectives" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEaQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.RunLast" commandName="Run" description="Launch in run mode" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEagPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.externalTools.commands.OpenExternalToolsConfigurations" commandName="External Tools..." description="Open external tools launch configuration dialog" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEawPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.debug.ui.command.OpenFromClipboard" commandName="Open from Clipboard" description="Opens a Java element or a Java stack trace from clipboard" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEbAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.deletePrevious" commandName="Delete Previous" description="Delete the previous character" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEbQPkEeeT-9Bzrt0dmg" elementId="Ocaml.tabsToSpacesCommand" commandName="Convert Tabs to Spaces" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEbgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.select.lineStart" commandName="Select Line Start" description="Select to the beginning of the line of text" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEbwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.disconnected" commandName="Disconnected" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEcAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.commit.Reword" commandName="Reword Commit" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEcQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.editors.lineNumberToggle" commandName="Show Line Numbers" description="Toggle display of line numbers" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEcgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.select.columnNext" commandName="Select Next Column" description="Select the next column" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEcwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.CompareWithPrevious" commandName="Compare with Previous Revision" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEdAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.search.read.access.in.workspace" commandName="Read Access in Workspace" description="Search for read references to the selected element in the workspace" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEdQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.index.ui.command.ResetIndex" commandName="Refresh Search Index" category="_lWSIfgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEdgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.TerminateAndRelaunch" commandName="Terminate and Relaunch" description="Terminate and Relaunch" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEdwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.JavaHierarchyPerspective" commandName="Java Type Hierarchy" description="Show the Java Type Hierarchy perspective" category="_lWSIjAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEeAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesToggleBranchCommit" commandName="Toggle Latest Branch Commit" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEeQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.PushCommit" commandName="Push Commit..." category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEegPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.surround.with.try.multicatch" commandName="Surround with try/multi-catch Block" description="Surround the selected text with a try/multi-catch block" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEewPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.Tag" commandName="Tag" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEfAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.NoAssumeUnchanged" commandName="No Assume Unchanged" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEfQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.ide.showInSystemExplorer" commandName="Show In (System Explorer)" description="Show in system's explorer (file manager)" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEfgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.new.local.task" commandName="New Local Task" category="_lWSIfgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEfwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.select.lineDown" commandName="Select Line Down" description="Extend the selection to the next line of text" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEgAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.RemoveAllBreakpoints" commandName="Remove All Breakpoints" description="Removes all breakpoints" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEgQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.sort.members" commandName="Sort Members" description="Sort all members using the member order preference" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaEggPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigator.resources.nested.changeProjectPresentation" commandName="P&amp;rojects Presentation" category="_lWSvgwPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWaEgwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigator.resources.nested.enabled" name="&amp;Hierarchical"/>
    <parameters xmi:id="_lWarUAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.commands.radioStateParameter" name="Nested Project view - Radio State" optional="false"/>
  </commands>
  <commands xmi:id="_lWarUQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.showKeyAssist" commandName="Show Key Assist" description="Show the key assist dialog" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarUgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.lowerCase" commandName="To Lower Case" description="Changes the selection to lower case" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarUwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.m2e.discovery.ui" commandName="m2e Marketplace" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarVAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.CompareWithIndex" commandName="Compare with Index" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarVQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.introduce.parameter.object" commandName="Introduce Parameter Object" description="Introduce a parameter object to a selected method" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarVgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.markTaskIncomplete" commandName="Mark Task Incomplete" category="_lWSIfgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarVwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.file.save" commandName="Save" description="Save the current contents" category="_lWSIgQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarWAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.gef.zoom_out" commandName="Zoom Out" description="Zoom Out" category="_lWSIjgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarWQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.commands.openElementInEditor" commandName="Open Java Element" description="Open a Java element in its editor" category="_lWSIfQPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWarWgPkEeeT-9Bzrt0dmg" elementId="elementRef" name="Java element reference" typeId="org.eclipse.jdt.ui.commands.javaElementReference" optional="false"/>
  </commands>
  <commands xmi:id="_lWarWwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.search.references.in.project" commandName="References in Project" description="Search for references to the selected element in the enclosing project" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarXAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.AddToIndex" commandName="Add to Index" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarXQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.discovery.ui.discoveryWizardCommand" commandName="Discovery Wizard" description="shows the connector discovery wizard" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarXgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.buildship.ui.commands.refreshtaskview" commandName="Refresh View (Gradle Tasks)" description="Refreshes the Gradle Tasks view" category="_lWSIcQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarXwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.sse.ui.toggle.comment" commandName="Toggle Comment" description="Toggle Comment" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarYAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.team.ui.applyPatch" commandName="Apply Patch..." description="Apply a patch to one or more workspace projects." category="_lWSIcAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarYQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.markTaskReadGoToNextUnread" commandName="Mark Task Read and Go To Next Unread Task" category="_lWSIfgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarYgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.buildship.ui.commands.rundefaulttasks" commandName="Run Gradle Default Tasks" description="Runs the default tasks of the selected Gradle project" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarYwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.help.tipsAndTricksAction" commandName="Tips and Tricks" description="Open the tips and tricks help page" category="_lWSIhQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarZAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.select.lineEnd" commandName="Select Line End" description="Select to the end of the line of text" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarZQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.format" commandName="Format" description="Format the selected text" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarZgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.markTaskRead" commandName="Mark Task Read" category="_lWSIfgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarZwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.smartEnter" commandName="Insert Line Below Current Line" description="Adds a new line below the current line" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaraAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.goto.lineStart" commandName="Line Start" description="Go to the start of the line of text" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaraQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.xml.ui.cmnd.contentmodel.sych" commandName="Synch" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaragPkEeeT-9Bzrt0dmg" elementId="org.eclipse.oomph.setup.editor.synchronizePreferences" commandName="Synchronize Preferences" category="_lWSIegPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarawPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.select.wordPrevious" commandName="Select Previous Word" description="Select the previous word" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarbAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesViewConfigureBranch" commandName="Configure Branch" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarbQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.move.element" commandName="Move - Refactoring " description="Move the selected element to a new location" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarbgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.Suspend" commandName="Suspend" description="Suspend" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarbwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.hippieCompletion" commandName="Word Completion" description="Context insensitive completion" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarcAPkEeeT-9Bzrt0dmg" elementId="Ocaml.removeBreakpointsCommand" commandName="Remove Breakpoints" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarcQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.xsd.ui.refactor.renameTargetNamespace" commandName="Rename Target Namespace" description="Changes the target namespace of the schema" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarcgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.team.ui.synchronizeLast" commandName="Repeat last synchronization" description="Repeat the last synchronization" category="_lWSIcAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarcwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.folding.collapseComments" commandName="Collapse Comments" description="Collapse all comments" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWardAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.StepOver" commandName="Step Over" description="Step over" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWardQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.compare.selectPreviousChange" commandName="Select Previous Change" description="Select Previous Change" category="_lWSIggPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWardgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.generate.javadoc" commandName="Generate Javadoc" description="Generates Javadoc for a selectable set of Java resources" category="_lWSIhgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWardwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesViewConfigureGerritRemote" commandName="Gerrit Configuration..." category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWareAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.debug.ui.commands.StepIntoSelection" commandName="Step Into Selection" description="Step into the current selected statement" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWareQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.ide.configureColumns" commandName="Configure Columns..." description="Configure the columns in the markers view" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWaregPkEeeT-9Bzrt0dmg" elementId="org.eclipse.buildship.ui.shortcut.test.run" commandName="Run Gradle Test" description="Run Gradle test based on the current selection" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarewPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.ReplaceWithCommit" commandName="Replace with commit" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarfAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.file.exit" commandName="Exit" description="Exit the application" category="_lWSIgQPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWarfQPkEeeT-9Bzrt0dmg" elementId="mayPrompt" name="may prompt"/>
  </commands>
  <commands xmi:id="_lWarfgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.CompareWithHead" commandName="Compare with HEAD Revision" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarfwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesViewOpen" commandName="Open" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWargAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.deactivateAllTasks" commandName="Deactivate Task" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWargQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.ShowHistory" commandName="Show in History" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarggPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.DebugLast" commandName="Debug" description="Launch in debug mode" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWargwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.m2e.core.ui.command.updateProject" commandName="Update Project" description="Update Maven Project configuration and dependencies" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarhAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.wikitext.ui.convertToHtmlCommand" commandName="Generate HTML" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarhQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.SimplePush" commandName="Push to Upstream" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarhgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.previousView" commandName="Previous View" description="Switch to the previous view" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarhwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.addMemoryMonitor" commandName="Add Memory Block" description="Add memory block" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWariAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.junit.junitShortcut.run" commandName="Run JUnit Test" description="Run JUnit Test" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWariQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.generate.tostring" commandName="Generate toString()" description="Generates the toString() method for the type" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarigPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.organize.imports" commandName="Organize Imports" description="Evaluate all required imports and replace the current imports" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWariwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.selectAll" commandName="Select All" description="Select all" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarjAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.PushHeadToGerrit" commandName="Push Current Head to Gerrit" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarjQPkEeeT-9Bzrt0dmg" elementId="Ocaml.backstepOverCommand" commandName="Backstep Over" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarjgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.DropToFrame" commandName="Drop to Frame" description="Drop to Frame" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarjwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.show.outline" commandName="Quick Outline" description="Show the quick outline for the editor input" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarkAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.debug.ui.commands.Display" commandName="Display" description="Display result of evaluating selected text" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarkQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.goto.next.member" commandName="Go to Next Member" description="Move the caret to the next member of the compilation unit" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarkgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.search.exception.occurrences" commandName="Search Exception Occurrences in File" description="Search for exception occurrences of a selected exception type" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarkwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.folding.expand" commandName="Expand" description="Expands the folded region at the current selection" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarlAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.project.rebuildProject" commandName="Rebuild Project" description="Rebuild the selected projects" category="_lWSIhgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarlQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.ShowBlame" commandName="Show Annotations" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarlgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.correction.assignToField.assist" commandName="Quick Assist - Assign to field" description="Invokes quick assist and selects 'Assign to field'" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarlwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.extract.method" commandName="Extract Method" description="Extract a set of statements or an expression into a new method and use the new method" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarmAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.m2e.core.pomFileAction.run" commandName="Run Maven Build" description="Run Maven Build" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarmQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.openRemoteTask" commandName="Open Remote Task" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarmgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.nextMemoryBlock" commandName="Next Memory Monitor" description="Show renderings from next memory monitor." category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarmwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.internal.reflog.OpenInCommitViewerCommand" commandName="Open in Commit Viewer" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarnAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.m2e.actions.LifeCycleInstall.run" commandName="Run Maven Install" description="Run Maven Install" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarnQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.context.ui.commands.task.retrieveContext" commandName="Retrieve Context" category="_lWSIfAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarngPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.Fetch" commandName="Fetch" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWarnwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.copyLineDown" commandName="Copy Lines" description="Duplicates the selected lines and moves the selection to the copy" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSYAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.navigate.gotopackage" commandName="Go to Package" description="Go to Package" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSYQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.task.ui.editor.QuickOutline" commandName="Quick Outline" description="Show the quick outline for the editor input" category="_lWSIfgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSYgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.oomph.setup.editor.perform" commandName="Perform Setup Tasks" category="_lWSIegPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSYwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.help.installationDialog" commandName="Installation Information" description="Open the installation dialog" category="_lWSIhQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSZAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.goto.lineUp" commandName="Line Up" description="Go up one line of text" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSZQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.goto.windowStart" commandName="Window Start" description="Go to the start of the window" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSZgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.ToggleStepFilters" commandName="Use Step Filters" description="Toggles enablement of debug step filters" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSZwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.correction.addBlock.assist" commandName="Quick Assist - Replace statement with block" description="Invokes quick assist and selects 'Replace statement with block'" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSaAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.eof" commandName="EOF" description="Send end of file" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSaQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.commons.ui.command.AddRepository" commandName="Add Repository" category="_lWSvgQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSagPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wb.core.commands.empty" commandName="Empty command" description="Command which does nothing" category="_lWSIcwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSawPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigate.showInQuickMenu" commandName="Show In..." description="Open the Show In menu" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSbAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.copyLineUp" commandName="Duplicate Lines" description="Duplicates the selected lines and leaves the selection unchanged" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSbQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.ToggleMethodBreakpoint" commandName="Toggle Method Breakpoint" description="Creates or removes a method breakpoint" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSbgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.navigate.java.open.structure" commandName="Open Structure" description="Show the structure of the selected element" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSbwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.select.enclosing" commandName="Select Enclosing Element" description="Expand selection to include enclosing element" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbScAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ant.ui.antShortcut.debug" commandName="Debug Ant Build" description="Debug Ant Build" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbScQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigate.next" commandName="Next" description="Navigate to the next item" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbScgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesViewRenameBranch" commandName="Rename Branch..." category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbScwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.closePerspective" commandName="Close Perspective" description="Close the current perspective" category="_lWSIgwPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWbSdAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.closePerspective.perspectiveId" name="Perspective Id"/>
  </commands>
  <commands xmi:id="_lWbSdQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.AssumeUnchanged" commandName="Assume Unchanged" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSdgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.xml.ui.nextSibling" commandName="Next Sibling" description="Go to Next Sibling" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSdwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.cheatsheets.openCheatSheetURL" commandName="Open Cheat Sheet from URL" description="Open a Cheat Sheet from file at a specified URL." category="_lWSIhQPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWbSeAPkEeeT-9Bzrt0dmg" elementId="cheatSheetId" name="Identifier" optional="false"/>
    <parameters xmi:id="_lWbSeQPkEeeT-9Bzrt0dmg" elementId="name" name="Name" optional="false"/>
    <parameters xmi:id="_lWbSegPkEeeT-9Bzrt0dmg" elementId="url" name="URL" optional="false"/>
  </commands>
  <commands xmi:id="_lWbSewPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.bugs.commands.newTaskFromMarker" commandName="New Task from Marker..." description="Report as Bug from Marker" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSfAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.context.ui.commands.focus.view" commandName="Focus View" category="_lWSvgwPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWbSfQPkEeeT-9Bzrt0dmg" elementId="viewId" name="View ID to Focus" optional="false"/>
  </commands>
  <commands xmi:id="_lWbSfgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.StepReturn" commandName="Step Return" description="Step return" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSfwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.browser.openBundleResource" commandName="Open Resource in Browser" description="Opens a bundle resource in the default web browser." category="_lWSIgwPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWbSgAPkEeeT-9Bzrt0dmg" elementId="plugin" name="Plugin"/>
    <parameters xmi:id="_lWbSgQPkEeeT-9Bzrt0dmg" elementId="path" name="Path"/>
  </commands>
  <commands xmi:id="_lWbSggPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.PushBranch" commandName="Push Branch..." category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSgwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.m2e.core.ui.command.addDependency" commandName="Add Maven Dependency" description="Add Maven Dependency" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbShAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.debug.ui.commands.Execute" commandName="Execute" description="Evaluate selected text" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbShQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.add.block.comment" commandName="Add Block Comment" description="Enclose the selection with a block comment" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbShgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.help.aboutAction" commandName="About" description="Open the about dialog" category="_lWSIhQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbShwPkEeeT-9Bzrt0dmg" elementId="Ocaml.commentSelectionCommand" commandName="Comment/Uncomment Selection" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSiAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.annotate.classFile" commandName="Annotate Class File" description="Externally add Annotations to a Class File." category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSiQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.stash.create" commandName="Stash Changes..." category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSigPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.file.closeAllSaved" commandName="Close All Saved" description="Close all saved editors" category="_lWSIgQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSiwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.CheckoutCommand" commandName="Checkout" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSjAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.search.read.access.in.project" commandName="Read Access in Project" description="Search for read references to the selected element in the enclosing project" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSjQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.activateSelectedTask" commandName="Activate Selected Task" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSjgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.redo" commandName="Redo" description="Redo the last operation" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSjwPkEeeT-9Bzrt0dmg" elementId="Ocaml.terminateCommand" commandName="Terminate" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSkAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.search.references.in.workspace" commandName="References in Workspace" description="Search for references to the selected element in the workspace" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSkQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.sse.ui.format.document" commandName="Format" description="Format selection" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSkgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.m2e.editor.RenameArtifactAction" commandName="Rename Maven Artifact..." category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSkwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.correction.addNonNLS" commandName="Quick Fix - Add non-NLS tag" description="Invokes quick assist and selects 'Add non-NLS tag'" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSlAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigate.selectWorkingSets" commandName="Select Working Sets" description="Select the working sets that are applicable for this window." category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSlQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.rename.element" commandName="Rename - Refactoring " description="Rename the selected element" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSlgPkEeeT-9Bzrt0dmg" elementId="Ocaml.stepReturnCommand" commandName="Step Return" category="_lWSIewPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSlwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.RemoveFromIndex" commandName="Remove from Index" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSmAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.newWizard" commandName="New" description="Open the New item wizard" category="_lWSIgQPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWbSmQPkEeeT-9Bzrt0dmg" elementId="newWizardId" name="New Wizard"/>
  </commands>
  <commands xmi:id="_lWbSmgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.externalize.strings" commandName="Externalize Strings" description="Finds all strings that are not externalized and moves them into a separate property file" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSmwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.newWindow" commandName="New Window" description="Open another window" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSnAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.uncomment" commandName="Uncomment" description="Uncomment the selected Java comment lines" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSnQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.CherryPick" commandName="Cherry Pick" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSngPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.builds.ui.commands.CopyDetails" commandName="Copy Details" category="_lWSIeAPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWbSnwPkEeeT-9Bzrt0dmg" elementId="kind" name="Kind"/>
    <parameters xmi:id="_lWbSoAPkEeeT-9Bzrt0dmg" elementId="element" name="Element"/>
  </commands>
  <commands xmi:id="_lWbSoQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.file.close" commandName="Close" description="Close the active editor" category="_lWSIgQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSogPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.builds.ui.command.RunBuild" commandName="Run Build" category="_lWSIeAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWbSowPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.CompareVersions" commandName="Compare with each other" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5cAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.equinox.p2.ui.sdk.install" commandName="Install New Software..." category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5cQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.window.customizePerspective" commandName="Customize Perspective" description="Customize the current perspective" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5cgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.surround.with.try.catch" commandName="Surround with try/catch Block" description="Surround the selected text with a try/catch block" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5cwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.context.ui.commands.interest.decrement" commandName="Make Less Interesting" description="Make Less Interesting" category="_lWSIfAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5dAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.externaltools.ExternalToolMenuDelegateToolbar" commandName="Run Last Launched External Tool" description="Runs the last launched external Tool" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5dQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.CheckoutCommand" commandName="Checkout" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5dgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.goto.previous.member" commandName="Go to Previous Member" description="Move the caret to the previous member of the compilation unit" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5dwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.search.occurrences.in.file" commandName="Search All Occurrences in File" description="Search for all occurrences of the selected element in its declaring file" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5eAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.moveLineUp" commandName="Move Lines Up" description="Moves the selected lines up" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5eQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.Reset" commandName="Reset..." category="_lWSvgwPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWb5egPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.ResetMode" name="Reset mode" optional="false"/>
  </commands>
  <commands xmi:id="_lWb5ewPkEeeT-9Bzrt0dmg" elementId="org.eclipse.equinox.p2.ui.discovery.commands.ShowBundleCatalog" commandName="Show Bundle Catalog" category="_lWSvgwPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWb5fAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.equinox.p2.ui.discovery.commands.DirectoryParameter" name="Directory URL"/>
    <parameters xmi:id="_lWb5fQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.equinox.p2.ui.discovery.commands.TagsParameter" name="Tags"/>
  </commands>
  <commands xmi:id="_lWb5fgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.gotoBreadcrumb" commandName="Show In Breadcrumb" description="Shows the Java editor breadcrumb and sets the keyboard focus into it" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5fwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigate.previousSubTab" commandName="Previous Sub-Tab" description="Switch to the previous sub-tab" category="_lWSIfQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5gAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.generate.hashcode.equals" commandName="Generate hashCode() and equals()" description="Generates hashCode() and equals() methods for the type" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5gQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigate.showIn" commandName="Show In" category="_lWSIfQPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWb5ggPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigate.showIn.targetId" name="Show In Target Id" optional="false"/>
  </commands>
  <commands xmi:id="_lWb5gwPkEeeT-9Bzrt0dmg" elementId="sed.tabletree.collapseAll" commandName="Collapse All" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5hAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.dialogs.openInputDialog" commandName="Open Input Dialog" description="Open an Input Dialog" category="_lWSIiQPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWb5hQPkEeeT-9Bzrt0dmg" elementId="title" name="Title"/>
    <parameters xmi:id="_lWb5hgPkEeeT-9Bzrt0dmg" elementId="message" name="Message"/>
    <parameters xmi:id="_lWb5hwPkEeeT-9Bzrt0dmg" elementId="initialValue" name="Initial Value"/>
    <parameters xmi:id="_lWb5iAPkEeeT-9Bzrt0dmg" elementId="cancelReturns" name="Return Value on Cancel"/>
  </commands>
  <commands xmi:id="_lWb5iQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesViewRemoveRemote" commandName="Delete Remote" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5igPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RebaseCurrent" commandName="Rebase" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5iwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.extract.class" commandName="Extract Class..." description="Extracts fields into a new class" category="_lWSIhAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5jAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.correction.extractConstant.assist" commandName="Quick Assist - Extract constant" description="Invokes quick assist and selects 'Extract constant'" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5jQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.recommenders.rcp.commands.extensionDiscovery" commandName="Discover New Extensions" category="_lWSvgwPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWb5jgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.recommenders.utils.rcp.linkContribution.href" name="URI" optional="false"/>
  </commands>
  <commands xmi:id="_lWb5jwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.compare.copyRightToLeft" commandName="Copy from Right to Left" description="Copy Current Change from Right to Left" category="_lWSIggPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5kAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.ide.markCompleted" commandName="Mark Completed" description="Mark the selected tasks as completed" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5kQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.commands.OpenProfileConfigurations" commandName="Profile..." description="Open profile launch configuration dialog" category="_lWSIiAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5kgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.recenter" commandName="Recenter" description="Scroll cursor line to center, top and bottom" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5kwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.add.unimplemented.constructors" commandName="Generate Constructors from Superclass" description="Evaluate and add constructors from superclass" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5lAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.builds.ui.commands.OpenBuildElementWithBrowser.url" commandName="Open Build with Browser" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5lQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.select.windowStart" commandName="Select Window Start" description="Select to the start of the window" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5lgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.command.markTaskComplete" commandName="Mark Task Complete" category="_lWSIfgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5lwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.source.quickMenu" commandName="Show Source Quick Menu" description="Shows the source quick menu" category="_lWSvgAPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5mAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.edit.text.java.search.declarations.in.project" commandName="Declaration in Project" description="Search for declarations of the selected element in the enclosing project" category="_lWSIhwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5mQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.history.Revert" commandName="Revert Commit" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5mgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.edit.text.scroll.lineDown" commandName="Scroll Line Down" description="Scroll down one line of text" category="_lWSIeQPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5mwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.sse.ui.search.find.occurrences" commandName="Occurrences in File" description="Find occurrences of the selection in the file" category="_lWSIcgPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5nAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.ToggleCoolbarAction" commandName="Toggle Toolbar Visibility" description="Toggles the visibility of the window toolbar" category="_lWSIgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5nQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.RepositoriesViewImportProjects" commandName="Import Projects..." description="Import or create in local Git repository" category="_lWSIiwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5ngPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wst.sse.ui.outline.customFilter" commandName="&amp;Filters" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lWb5nwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.navigate.openResource" commandName="Open Resource" description="Open an editor on a particular resource" category="_lWSIfQPkEeeT-9Bzrt0dmg">
    <parameters xmi:id="_lWb5oAPkEeeT-9Bzrt0dmg" elementId="filePath" name="File Path" typeId="org.eclipse.ui.ide.resourcePath"/>
  </commands>
  <commands xmi:id="_lWb5oQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.compare.copyAllLeftToRight" commandName="Copy All from Left to Right" description="Copy All Changes from Left to Right" category="_lWSIggPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lakykAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.CompareWithCommit" commandName="org.eclipse.egit.ui.team.CompareWithCommit"/>
  <commands xmi:id="_lalZoAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.CompareWithRevision" commandName="org.eclipse.egit.ui.team.CompareWithRevision"/>
  <commands xmi:id="_lamAsAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.team.ReplaceWithPrevious" commandName="org.eclipse.egit.ui.team.ReplaceWithPrevious"/>
  <commands xmi:id="_liSkIAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.search.searchActionSet/org.eclipse.search.OpenSearchDialogPage" commandName="Search..." description="Search" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_liTLMAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.team.ui.actionSet/org.eclipse.team.ui.synchronizeAll" commandName="Synchronize..." description="Synchronize..." category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_liTLMQPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.team.ui.actionSet/org.eclipse.team.ui.ConfigureProject" commandName="Share Project..." description="Share the project with others using a version and configuration management system." category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_liTyQAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.ui.externaltools.ExternalToolsSet/org.eclipse.ui.externaltools.ExternalToolMenuDelegateMenu" commandName="External Tools" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_liWOgAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.wb.core.ui.actionset/org.eclipse.wb.core.wizards.actions.NewDesignerTypeDropDownAction" commandName="New Visual Class" description="Create new visual classes" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_liW1kAPkEeeT-9Bzrt0dmg" elementId="Ocaml.cleanCommand" commandName="Clean" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_liXcoAPkEeeT-9Bzrt0dmg" elementId="Ocaml.switchSpellCheckerCommand" commandName="Switch Spell Checker" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_liXcoQPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.ant.ui.actionSet.presentation/org.eclipse.ant.ui.toggleAutoReconcile" commandName="Toggle Ant Editor Auto Reconcile" description="Toggle Ant Editor Auto Reconcile" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_liYqwAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.launchActionSet/org.eclipse.debug.internal.ui.actions.RunWithConfigurationAction" commandName="Run As" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_liZR0APkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.launchActionSet/org.eclipse.debug.internal.ui.actions.RunHistoryMenuAction" commandName="Run History" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_liZR0QPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.launchActionSet/org.eclipse.debug.internal.ui.actions.RunDropDownAction" commandName="Run" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_liZ44APkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.launchActionSet/org.eclipse.debug.internal.ui.actions.DebugWithConfigurationAction" commandName="Debug As" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_liZ44QPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.launchActionSet/org.eclipse.debug.internal.ui.actions.DebugHistoryMenuAction" commandName="Debug History" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_liZ44gPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.launchActionSet/org.eclipse.debug.internal.ui.actions.DebugDropDownAction" commandName="Debug" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_liaf8APkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.profileActionSet/org.eclipse.debug.internal.ui.actions.ProfileDropDownAction" commandName="Profile" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_liaf8QPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.profileActionSet/org.eclipse.debug.internal.ui.actions.ProfileWithConfigurationAction" commandName="Profile As" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_liaf8gPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.profileActionSet/org.eclipse.debug.internal.ui.actions.ProfileHistoryMenuAction" commandName="Profile History" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_licVIAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.ui.JavaElementCreationActionSet/org.eclipse.jdt.ui.actions.NewTypeDropDown" commandName="Class..." description="New Java Class" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_licVIQPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.ui.JavaElementCreationActionSet/org.eclipse.jdt.ui.actions.OpenPackageWizard" commandName="Package..." description="New Java Package" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lic8MAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.ui.JavaElementCreationActionSet/org.eclipse.jdt.ui.actions.OpenProjectWizard" commandName="Java Project..." description="New Java Project" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lidjQAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.ui.SearchActionSet/org.eclipse.jdt.ui.actions.OpenJavaSearchPage" commandName="Java..." category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lieKUAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.mylyn.java.actionSet.browsing/org.eclipse.mylyn.java.ui.actions.ApplyMylynToBrowsingPerspectiveAction" commandName="Focus Browsing Perspective" description="Focus Java Browsing Views on Active Task" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lieKUQPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.mylyn.doc.actionSet/org.eclipse.mylyn.tasks.ui.bug.report" commandName="Report Bug or Enhancement..." description="Report Bug or Enhancement" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lieKUgPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.mylyn.tasks.ui.navigation.additions/org.eclipse.mylyn.tasks.ui.navigate.task.history" commandName="Activate Previous Task" description="Activate Previous Task" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_liexYAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.ui.cheatsheets.actionSet/org.eclipse.ui.cheatsheets.actions.CheatSheetHelpMenuAction" commandName="Cheat Sheets..." category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lifYcAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.m2e.jdt.ui.downloadSourcesContribution/org.eclipse.m2e.jdt.ui.downloadSourcesAction" commandName="label" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lifYcQPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.m2e.jdt.ui.downloadSourcesContribution_38/org.eclipse.m2e.jdt.ui.downloadSourcesAction_38" commandName="label" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lifYcgPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.ui.texteditor.ruler.actions/org.eclipse.ui.texteditor.BookmarkRulerAction" commandName="Text Editor Bookmark Ruler Action" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lifYcwPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.ui.texteditor.ruler.actions/org.eclipse.ui.texteditor.SelectRulerAction" commandName="Text Editor Ruler Single-Click" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lif_gAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" commandName="%AddBreakpoint.label" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lif_gQPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.ui.texteditor.ruler.actions/org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction" commandName="label" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_ligmkAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.wst.dtd.core.dtdsource.ruler.actions/org.eclipse.ui.texteditor.BookmarkRulerAction" commandName="Add Bookmark..." category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_ligmkQPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.wst.dtd.core.dtdsource.ruler.actions/org.eclipse.ui.texteditor.SelectRulerAction" commandName="Select Ruler" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_ligmkgPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.core.runtime.xml.source.ruler.actions/org.eclipse.ui.texteditor.BookmarkRulerAction" commandName="Add Bookmark..." category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_ligmkwPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.core.runtime.xml.source.ruler.actions/org.eclipse.ui.texteditor.SelectRulerAction" commandName="Select Ruler" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lihNoAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.ant.ui.BreakpointRulerActions/org.eclipse.ant.ui.actions.ManageBreakpointRulerAction" commandName="Toggle Breakpoint" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lihNoQPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ClassFileEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" commandName="Toggle Breakpoint" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lihNogPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.JavaSnippetToolbarActions/org.eclipse.jdt.debug.ui.SnippetExecute" commandName="Execute" description="Execute the Selected Text" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lih0sAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.JavaSnippetToolbarActions/org.eclipse.jdt.debug.ui.SnippetDisplay" commandName="Display" description="Display Result of Evaluating Selected Text" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lih0sQPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.JavaSnippetToolbarActions/org.eclipse.jdt.debug.ui.SnippetInspect" commandName="Inspect" description="Inspect Result of Evaluating Selected Text" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lih0sgPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.internal.ui.CompilationUnitEditor.ruler.actions/org.eclipse.jdt.internal.ui.javaeditor.BookmarkRulerAction" commandName="Java Editor Bookmark Ruler Action" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_liibwAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.internal.ui.CompilationUnitEditor.ruler.actions/org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction" commandName="Java Editor Ruler Single-Click" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_liibwQPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.internal.ui.ClassFileEditor.ruler.actions/org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction" commandName="Java Editor Ruler Single-Click" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_liibwgPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.internal.ui.PropertiesFileEditor.ruler.actions/org.eclipse.jdt.internal.ui.propertiesfileeditor.BookmarkRulerAction" commandName="Java Editor Bookmark Ruler Action" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lijC0APkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.internal.ui.PropertiesFileEditor.ruler.actions/org.eclipse.jdt.internal.ui.propertiesfileeditor.SelectRulerAction" commandName="Java Editor Ruler Single-Click" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lijC0QPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.wst.xsd.core.xsdsource.ruler.actions/org.eclipse.ui.texteditor.BookmarkRulerAction" commandName="Add Bookmark..." category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lijC0gPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.wst.xsd.core.xsdsource.ruler.actions/org.eclipse.ui.texteditor.SelectRulerAction" commandName="Select Ruler" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lijp4APkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.PulldownActions/org.eclipse.debug.ui.debugview.pulldown.ViewManagementAction" commandName="View Management..." category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lijp4QPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.debugview.toolbar/org.eclipse.debug.ui.debugview.toolbar.removeAllTerminated" commandName="Remove All Terminated" description="Remove All Terminated Launches" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lijp4gPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.breakpointsview.toolbar/org.eclipse.debug.ui.breakpointsView.toolbar.removeAll" commandName="Remove All" description="Remove All Breakpoints" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_likQ8APkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.breakpointsview.toolbar/org.eclipse.debug.ui.breakpointsView.toolbar.linkWithDebugView" commandName="Link with Debug View" description="Link with Debug View" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_likQ8QPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.breakpointsview.toolbar/org.eclipse.debug.ui.breakpointsView.toolbar.workingSets" commandName="Working Sets..." description="Manage Working Sets" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_likQ8gPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.breakpointsview.toolbar/org.eclipse.debug.ui.breakpointsView.toolbar.clearDefaultBreakpointGroup" commandName="Deselect Default Working Set" description="Deselect Default Working Set" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_likQ8wPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.breakpointsview.toolbar/org.eclipse.debug.ui.breakpointsView.toolbar.setDefaultBreakpointGroup" commandName="Select Default Working Set..." description="Select Default Working Set" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lik4AAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.breakpointsview.toolbar/org.eclipse.debug.ui.breakpointsView.toolbar.groupByAction" commandName="Group By" description="Show" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lik4AQPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.expressionsView.toolbar/org.eclipse.debug.ui.expresssionsView.toolbar.removeAll" commandName="Remove All" description="Remove All Expressions" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lik4AgPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.expressionsView.toolbar/org.eclipse.debug.ui.expresssionsView.toolbar.AddWatchExpression" commandName="Add Watch Expression..." description="Create a new watch expression" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lilfEAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.memoryView.toolbar/org.eclipse.debug.ui.PinMemoryBlockAction" commandName="Pin Memory Monitor" description="Pin Memory Monitor" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lilfEQPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.memoryView.toolbar/org.eclipse.debug.ui.NewMemoryViewAction" commandName="New Memory View" description="New Memory View" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lilfEgPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.memoryView.toolbar/org.eclipse.debug.ui.togglemonitors" commandName="Toggle Memory Monitors Pane" description="Toggle Memory Monitors Pane" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_limGIAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.memoryView.toolbar/org.eclipse.debug.ui.linkrenderingpanes" commandName="Link Memory Rendering Panes" description="Link Memory Rendering Panes" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_limGIQPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.memoryView.toolbar/org.eclipse.debug.ui.tablerendering.preferencesaction" commandName="Table Renderings Preferences..." description="&amp;Table Renderings Preferences..." category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_limGIgPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.memoryView.toolbar/org.eclipse.debug.ui.togglesplitpane" commandName="Toggle Split Pane" description="Toggle Split Pane" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_limGIwPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.memoryView.toolbar/org.eclipse.debug.ui.switchMemoryBlock" commandName="Switch Memory Monitor" description="Switch Memory Monitor" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_limtMAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.debug.ui.memoryView.toolbar/org.eclipse.debug.ui.memoryViewPreferencesAction" commandName="Preferences..." description="&amp;Preferences..." category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_limtMQPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.VariableViewActions/org.eclipse.jdt.debug.ui.variableViewActions.Preferences" commandName="Java Preferences..." description="Opens preferences for Java variables" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_limtMgPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.VariableViewActions/org.eclipse.jdt.debug.ui.variablesViewActions.AllReferencesInView" commandName="Show References" description="Shows references to each object in the variables view as an array of objects." category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_linUQAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.VariableViewActions/org.eclipse.jdt.debug.ui.variableViewActions.ShowNullEntries" commandName="Show Null Array Entries" description="Show Null Array Entries" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_linUQQPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.VariableViewActions/org.eclipse.jdt.debug.ui.variableViewActions.ShowQualified" commandName="Show Qualified Names" description="Show Qualified Names" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_linUQgPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.VariableViewActions/org.eclipse.jdt.debug.ui.variableViewActions.ShowStatic" commandName="Show Static Variables" description="Show Static Variables" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lin7UAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.VariableViewActions/org.eclipse.jdt.debug.ui.variableViewActions.ShowConstants" commandName="Show Constants" description="Show Constants" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lin7UQPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.ExpressionViewActions/org.eclipse.jdt.debug.ui.variableViewActions.Preferences" commandName="Java Preferences..." description="Opens preferences for Java variables" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lin7UgPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.ExpressionViewActions/org.eclipse.jdt.debug.ui.expressionViewActions.AllReferencesInView" commandName="Show References" description="Show &amp;References" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lin7UwPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.ExpressionViewActions/org.eclipse.jdt.debug.ui.variableViewActions.ShowNullEntries" commandName="Show Null Array Entries" description="Show Null Array Entries" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lioiYAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.ExpressionViewActions/org.eclipse.jdt.debug.ui.expressionViewActions.ShowQualified" commandName="Show Qualified Names" description="Show Qualified Names" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lioiYQPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.ExpressionViewActions/org.eclipse.jdt.debug.ui.expressionViewActions.ShowStatic" commandName="Show Static Variables" description="Show Static Variables" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lioiYgPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.ExpressionViewActions/org.eclipse.jdt.debug.ui.expressionViewActions.ShowConstants" commandName="Show Constants" description="Show Constants" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lipJcAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.BreakpointViewActions/org.eclipse.jdt.debug.ui.actions.AddException" commandName="Add Java Exception Breakpoint" description="Add Java Exception Breakpoint" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lipJcQPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.BreakpointViewActions/org.eclipse.jdt.debug.ui.breakpointViewActions.ShowQualified" commandName="Show Qualified Names" description="Show Qualified Names" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lipJcgPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.LaunchViewActions/org.eclipse.jdt.debug.ui.launchViewActions.ShowThreadGroups" commandName="Show Thread Groups" description="Show Thread Groups" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lipJcwPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.LaunchViewActions/org.eclipse.jdt.debug.ui.launchViewActions.ShowQualified" commandName="Show Qualified Names" description="Show Qualified Names" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lipwgAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.LaunchViewActions/org.eclipse.jdt.debug.ui.launchViewActions.ShowSystemThreads" commandName="Show System Threads" description="Show System Threads" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lipwgQPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.LaunchViewActions/org.eclipse.jdt.debug.ui.launchViewActions.ShowMonitorThreadInfo" commandName="Show Monitors" description="Show the Thread &amp; Monitor Information" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lipwggPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.DisplayViewActions/org.eclipse.jdt.debug.ui.displayViewToolbar.Watch" commandName="Watch" description="Create a Watch Expression from the Selected Text" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_liqXkAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.DisplayViewActions/org.eclipse.jdt.debug.ui.displayViewToolbar.Execute" commandName="Execute" description="Execute the Selected Text" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_liqXkQPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.DisplayViewActions/org.eclipse.jdt.debug.ui.displayViewToolbar.Display" commandName="Display" description="Display Result of Evaluating Selected Text" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_liqXkgPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.DisplayViewActions/org.eclipse.jdt.debug.ui.displayViewToolbar.Inspect" commandName="Inspect" description="Inspect Result of Evaluating Selected Text" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_liq-oAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.mylyn.context.ui.outline.contribution/org.eclipse.mylyn.context.ui.contentOutline.focus" commandName="Focus on Active Task" description="Focus on Active Task (Alt+click to reveal filtered elements)" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_liq-oQPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.mylyn.java.ui.markers.breakpoints.contribution/org.eclipse.mylyn.java.ui.actions.focus.markers.breakpoints" commandName="Focus on Active Task" description="Focus on Active Task" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_liq-ogPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.mylyn.ui.debug.view.contribution/org.eclipse.mylyn.ui.actions.FilterResourceNavigatorAction" commandName="Focus on Active Task (Experimental)" description="Focus on Active Task (Experimental)" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lirlsAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.mylyn.ui.projectexplorer.filter/org.eclipse.mylyn.ide.ui.actions.focus.projectExplorer" commandName="Focus on Active Task" description="Focus on Active Task (Alt+click to reveal filtered elements)" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lirlsQPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.mylyn.ui.resource.navigator.filter/org.eclipse.mylyn.ide.ui.actions.focus.resourceNavigator" commandName="Focus on Active Task" description="Focus on Active Task (Alt+click to reveal filtered elements)" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lirlsgPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.mylyn.problems.contribution/org.eclipse.mylyn.ide.ui.actions.focus.markers.problems" commandName="Focus on Active Task" description="Focus on Active Task" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lirlswPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.mylyn.markers.all.contribution/org.eclipse.mylyn.ide.ui.actions.focus.markers.all" commandName="Focus on Active Task" description="Focus on Active Task" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lisMwAPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.mylyn.markers.tasks.contribution/org.eclipse.mylyn.ide.ui.actions.focus.markers.tasks" commandName="Focus on Active Task" description="Focus on Active Task" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lisMwQPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.mylyn.markers.bookmarks.contribution/org.eclipse.mylyn.ide.ui.actions.focus.markers.bookmarks" commandName="Focus on Active Task" description="Focus on Active Task" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lisMwgPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.mylyn.java.explorer.contribution/org.eclipse.mylyn.java.actions.focus.packageExplorer" commandName="Focus on Active Task" description="Focus on Active Task (Alt+click to reveal filtered elements)" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lisz0APkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.mylyn.tasks.ui.actions.view/org.eclipse.mylyn.tasks.ui.search.open" commandName="Search Repository..." category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lisz0QPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.mylyn.tasks.ui.actions.view/org.eclipse.mylyn.tasks.ui.synchronize.changed" commandName="Synchronize Changed" description="Synchronize Changed" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lisz0gPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.mylyn.tasks.ui.actions.view/org.eclipse.mylyn.tasks.ui.tasks.restore" commandName="Restore Tasks from History..." category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lisz0wPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.mylyn.tasks.ui.actions.view/org.eclipse.mylyn.tasks.ui.open.repositories.view" commandName="Show Task Repositories View" description="Show Task Repositories View" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lita4APkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.mylyn.tasks.ui.actions.view/org.eclipse.mylyn.doc.legend.show.action" commandName="Show UI Legend" description="Show Tasks UI Legend" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <commands xmi:id="_lita4QPkEeeT-9Bzrt0dmg" elementId="AUTOGEN:::org.eclipse.mylyn.tasks.ui.actions.view/org.eclipse.mylyn.context.ui.actions.tasklist.focus" commandName="Focus on Workweek" description="Focus on Workweek" category="_lWSvgwPkEeeT-9Bzrt0dmg"/>
  <addons xmi:id="_lV8KOAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.e4.core.commands.service" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.core.commands/org.eclipse.e4.core.commands.CommandServiceAddon"/>
  <addons xmi:id="_lV8KOQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.e4.ui.contexts.service" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.services/org.eclipse.e4.ui.services.ContextServiceAddon"/>
  <addons xmi:id="_lV8KOgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.e4.ui.bindings.service" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.bindings/org.eclipse.e4.ui.bindings.BindingServiceAddon"/>
  <addons xmi:id="_lV8KOwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.e4.ui.workbench.commands.model" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.addons.CommandProcessingAddon"/>
  <addons xmi:id="_lV8KPAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.e4.ui.workbench.contexts.model" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.addons.ContextProcessingAddon"/>
  <addons xmi:id="_lV8KPQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.e4.ui.workbench.bindings.model" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.swt/org.eclipse.e4.ui.workbench.swt.util.BindingProcessingAddon"/>
  <addons xmi:id="_lV8KPgPkEeeT-9Bzrt0dmg" elementId="Cleanup Addon" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.cleanupaddon.CleanupAddon"/>
  <addons xmi:id="_lV8KPwPkEeeT-9Bzrt0dmg" elementId="DnD Addon" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.dndaddon.DnDAddon"/>
  <addons xmi:id="_lV8KQAPkEeeT-9Bzrt0dmg" elementId="MinMax Addon" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.minmax.MinMaxAddon"/>
  <addons xmi:id="_lV8KQQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.workbench.addon.0" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.addons.HandlerProcessingAddon"/>
  <addons xmi:id="_lWBpwAPkEeeT-9Bzrt0dmg" elementId="SplitterAddon" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.splitteraddon.SplitterAddon"/>
  <addons xmi:id="_dz0JgGOlEeSMMaPQU2nlzw" elementId="org.eclipse.ui.ide.application.addon.0" contributorURI="platform:/plugin/org.eclipse.ui.ide.application" contributionURI="bundleclass://org.eclipse.ui.ide.application/org.eclipse.ui.internal.ide.application.addons.ModelCleanupAddon"/>
  <categories xmi:id="_lWSIcAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.team.ui.category.team" name="Team" description="Actions that apply when working with a Team"/>
  <categories xmi:id="_lWSIcQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.category.views" name="Views" description="Commands for opening views"/>
  <categories xmi:id="_lWSIcgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.category.edit" name="Edit"/>
  <categories xmi:id="_lWSIcwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.wb.core.actions.category" name="WindowBuilder Pro" description="WindowBuilder Pro actions"/>
  <categories xmi:id="_lWSIdAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.wikitext.ui.editor.category" name="WikiText Markup Editing Commands" description="commands for editing lightweight markup"/>
  <categories xmi:id="_lWSIdQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.category.editor" name="Task Editor"/>
  <categories xmi:id="_lWSIdgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.ide.markerContents" name="Contents" description="The category for menu contents"/>
  <categories xmi:id="_lWSIdwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.buildship.ui.project" name="Buildship" description="Contains the Buildship specific commands"/>
  <categories xmi:id="_lWSIeAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.builds.ui.category.Commands" name="Builds"/>
  <categories xmi:id="_lWSIeQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.category.textEditor" name="Text Editing" description="Text Editing Commands"/>
  <categories xmi:id="_lWSIegPkEeeT-9Bzrt0dmg" elementId="org.eclipse.oomph.setup.category" name="Oomph Setup"/>
  <categories xmi:id="_lWSIewPkEeeT-9Bzrt0dmg" elementId="Ocaml.commandscategory" name="Ocaml Commands"/>
  <categories xmi:id="_lWSIfAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.context.ui.commands" name="Focused UI" description="Task-Focused Interface"/>
  <categories xmi:id="_lWSIfQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.category.navigate" name="Navigate"/>
  <categories xmi:id="_lWSIfgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.tasks.ui.commands" name="Task Repositories"/>
  <categories xmi:id="_lWSIfwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.java.ui.commands" name="Java Context" description="Java Task-Focused Interface Commands"/>
  <categories xmi:id="_lWSIgAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.wikitext.context.ui.commands" name="%commands.category.name" description="%commands.category.description"/>
  <categories xmi:id="_lWSIgQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.category.file" name="File"/>
  <categories xmi:id="_lWSIggPkEeeT-9Bzrt0dmg" elementId="org.eclipse.compare.ui.category.compare" name="Compare" description="Compare command category"/>
  <categories xmi:id="_lWSIgwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.category.window" name="Window"/>
  <categories xmi:id="_lWSIhAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.category.refactoring" name="Refactor - Java" description="Java Refactoring Actions"/>
  <categories xmi:id="_lWSIhQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.category.help" name="Help"/>
  <categories xmi:id="_lWSIhgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.category.project" name="Project"/>
  <categories xmi:id="_lWSIhwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.search.ui.category.search" name="Search" description="Search command category"/>
  <categories xmi:id="_lWSIiAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.debug.ui.category.run" name="Run/Debug" description="Run/Debug command category"/>
  <categories xmi:id="_lWSIiQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.category.dialogs" name="Dialogs" description="Commands for opening dialogs"/>
  <categories xmi:id="_lWSIigPkEeeT-9Bzrt0dmg" elementId="org.eclipse.oomph" name="Oomph"/>
  <categories xmi:id="_lWSIiwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.egit.ui.commandCategory" name="Git"/>
  <categories xmi:id="_lWSIjAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ui.category.perspectives" name="Perspectives" description="Commands for opening perspectives"/>
  <categories xmi:id="_lWSIjQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.ltk.ui.category.refactoring" name="Refactoring"/>
  <categories xmi:id="_lWSIjgPkEeeT-9Bzrt0dmg" elementId="org.eclipse.gef.category.view" name="View" description="View"/>
  <categories xmi:id="_lWSvgAPkEeeT-9Bzrt0dmg" elementId="org.eclipse.jdt.ui.category.source" name="Source" description="Java Source Actions"/>
  <categories xmi:id="_lWSvgQPkEeeT-9Bzrt0dmg" elementId="org.eclipse.mylyn.commons.repositories.ui.category.Team" name="Team"/>
  <categories xmi:id="_lWSvggPkEeeT-9Bzrt0dmg" elementId="org.eclipse.oomph.commands" name="Oomph"/>
  <categories xmi:id="_lWSvgwPkEeeT-9Bzrt0dmg" elementId="org.eclipse.core.commands.categories.autogenerated" name="Uncategorized" description="Commands that were either auto-generated or have no category"/>
</application:Application>
</file>

<file path="workspace/.metadata/.plugins/org.eclipse.epp.logging.aeri.ide/org.eclipse.epp.logging.aeri.ide.server/server-config.json">
{
  "version": "v1",
  "title": "Eclipse Automated Error Reporting",
  "timestamp": 1488966598178,
  "ttl": 10080,
  "helpUrl": "https://dev.eclipse.org/recommenders/community/aeri/v2/help/",
  "feedbackUrl": "http://ctrlflow.com/automated-error-reporting",
  "aboutUrl": "https://wiki.eclipse.org/EPP/Logging",
  "submitUrl": "https://dev.eclipse.org/recommenders/community/confess/0.6/reports/",
  "maxReportSize": 262144,
  "problemsUrl": "https://www.eclipse.org/downloads/download.php?r\u003d1\u0026file\u003d/technology/epp/logging/problems.zip",
  "problemsTtl": 20160,
  "connectTimeout": 10,
  "socketTimeout": 10,
  "acceptedProducts": [
    "org.eclipse.*",
    "org.fordiac.*"
  ],
  "acceptedPlugins": [
    "org.apache.log4j.*",
    "org.eclipse.*",
    "org.fordiac.*"
  ],
  "acceptedPackages": [
    "ch.qos.*",
    "com.cforcoding.*",
    "com.google.*",
    "com.gradleware.tooling.*",
    "com.mountainminds.eclemma.*",
    "com.naef.*",
    "com.sun.*",
    "java.*",
    "javafx.*",
    "javax.*",
    "org.apache.*",
    "org.eclipse.*",
    "org.fordiac.*",
    "org.gradle.*",
    "org.jacoco.*",
    "org.osgi.*",
    "org.slf4j.*",
    "sun.*"
  ],
  "requiredPackages": [
    "com.cforcoding.*",
    "com.gradleware.tooling.*",
    "com.mountainminds.eclemma.*",
    "com.naef.*",
    "org.eclipse.*",
    "org.fordiac.*",
    "org.gradle.*",
    "org.jacoco.*"
  ],
  "acceptOtherPackages": false,
  "acceptUiFreezes": true,
  "ignoredStatuses": [
    ":java.io.IOException:There is not enough space on the disk",
    ":java.net.*:",
    "org.eclipse.core.filesystem::Could not delete*",
    "org.eclipse.core.filesystem::Could not move*",
    "org.eclipse.core.resources:org.eclipse.core.internal.resources.ResourceException:Resource is out of sync with the file system*",
    "org.eclipse.core.runtime::Invalid input url*",
    "org.eclipse.epp.mpc.ui:java.io.IOException:",
    "org.eclipse.equinox.p2.*::",
    "org.eclipse.jface:java.io.IOException:Unable to resolve plug-in*",
    "org.eclipse.oomph.setup.core:$org.apache.http.ConnectionClosedException:",
    "org.eclipse.pde.core::The current target platform contains errors*",
    "org.eclipse.ui::Conflicting handlers for*"
  ],
  "problemsZipLastDownloadTimestamp": 1488966899454
}
</file>

<file path="workspace/.metadata/.plugins/org.eclipse.jdt.ui/dialog_settings.xml">
<?xml version="1.0" encoding="UTF-8"?>
<section name="Workbench">
	<section name="org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart">
		<item value="2" key="layout"/>
		<item value="true" key="group_libraries"/>
		<item value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#x0A;&lt;packageExplorer group_libraries=&quot;1&quot; layout=&quot;2&quot; linkWithEditor=&quot;0&quot; rootMode=&quot;1&quot; workingSetName=&quot;Aggregate for window 1488966598055&quot;&gt;&#x0A;&lt;customFilters userDefinedPatternsEnabled=&quot;false&quot;&gt;&#x0A;&lt;xmlDefinedFilters&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.StaticsFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.mylyn.java.ui.MembersFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonJavaProjectsFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer_patternFilterId_.*&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonSharedProjectsFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.SyntheticMembersFilter&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ContainedLibraryFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.m2e.MavenModuleFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.HideInnerClassFilesFilter&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.EmptyInnerPackageFilter&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ClosedProjectsFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.EmptyLibraryContainerFilter&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.PackageDeclarationFilter&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ImportDeclarationFilter&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonJavaElementFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.LibraryFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.CuAndClassFileFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.EmptyPackageFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonPublicFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.LocalTypesFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.FieldsFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;/xmlDefinedFilters&gt;&#x0A;&lt;/customFilters&gt;&#x0A;&lt;/packageExplorer&gt;" key="memento"/>
		<item value="1" key="rootMode"/>
		<item value="false" key="linkWithEditor"/>
	</section>
</section>
</file>

<file path="workspace/.metadata/.plugins/org.eclipse.jdt.ui/OpenTypeHistory.xml">
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<typeInfoHistroy/>
</file>

<file path="workspace/.metadata/.plugins/org.eclipse.jdt.ui/QualifiedTypeNameHistory.xml">
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy/>
</file>

<file path="workspace/.metadata/.plugins/org.eclipse.m2e.logback.configuration/logback.1.6.2.20150902-0002.xml">
<configuration scan="true">
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <pattern>%date [%thread] %-5level %logger{35} - %msg%n</pattern>
    </encoder>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>OFF</level> <!-- change to DEBUG to mimic '-consolelog' behaviour -->
    </filter>
  </appender>

  <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <File>${org.eclipse.m2e.log.dir}/0.log</File>
    <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
      <FileNamePattern>${org.eclipse.m2e.log.dir}/%i.log</FileNamePattern>
      <MinIndex>1</MinIndex>
      <MaxIndex>10</MaxIndex>
    </rollingPolicy>
    <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
      <MaxFileSize>100MB</MaxFileSize>
    </triggeringPolicy>
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <pattern>%date [%thread] %-5level %logger{35} - %msg%n</pattern>
    </encoder>
  </appender>

  <appender name="EclipseLog" class="org.eclipse.m2e.logback.appender.EclipseLogAppender">
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>WARN</level>
    </filter>
  </appender>

  <appender name="MavenConsoleLog" class="org.eclipse.m2e.logback.appender.MavenConsoleAppender">
  </appender>
        
  <root level="INFO">
    <appender-ref ref="FILE" />
    <appender-ref ref="STDOUT" />
    <appender-ref ref="EclipseLog" />
    <appender-ref ref="MavenConsoleLog" />
  </root>

  <logger name="com.ning.http.client" level="INFO" />
</configuration>
</file>

<file path="workspace/.metadata/.plugins/org.eclipse.oomph.setup/workspace.setup">
<?xml version="1.0" encoding="UTF-8"?>
<setup:Workspace
    xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:setup="http://www.eclipse.org/oomph/setup/1.0"
    name="workspace"/>
</file>

<file path="workspace/.metadata/.plugins/org.eclipse.ui.ide/dialog_settings.xml">
<?xml version="1.0" encoding="UTF-8"?>
<section name="Workbench">
	<section name="ExternalProjectImportWizard">
		<item value="false" key="WizardProjectsImportPage.STORE_NESTED_PROJECTS"/>
		<item value="false" key="WizardProjectsImportPage.STORE_COPY_PROJECT_ID"/>
		<item value="false" key="WizardProjectsImportPage.STORE_ARCHIVE_SELECTED"/>
		<list key="WizardProjectsImportPage.STORE_DIRECTORIES">
			<item value="/home/jose-agustin.barrachina/Documents/Compilation/"/>
		</list>
		<list key="WizardProjectsImportPage.STORE_ARCHIVES">
			<item value=""/>
		</list>
	</section>
</section>
</file>

<file path="workspace/.metadata/.plugins/org.eclipse.ui.intro/dialog_settings.xml">
<?xml version="1.0" encoding="UTF-8"?>
<section name="Workbench">
	<item value="1024" key="introLaunchBar.location"/>
</section>
</file>

<file path="workspace/.metadata/.plugins/org.eclipse.ui.workbench/dialog_settings.xml">
<?xml version="1.0" encoding="UTF-8"?>
<section name="Workbench">
	<section name="org.eclipse.ui.internal.QuickAccess">
		<item value="-1" key="dialogHeight"/>
		<item value="-1" key="dialogWidth"/>
		<list key="textEntries">
		</list>
		<list key="orderedElements">
		</list>
		<list key="orderedProviders">
		</list>
		<list key="textArray">
		</list>
	</section>
	<section name="ImportExportAction">
	</section>
</section>
</file>

<file path="workspace/.metadata/.plugins/org.eclipse.ui.workbench/workingsets.xml">
<?xml version="1.0" encoding="UTF-8"?>
<workingSetManager>
<workingSet aggregate="true" factoryID="org.eclipse.ui.internal.WorkingSetFactory" id="1488966598055_0" label="Window Working Set" name="Aggregate for window 1488966598055"/>
</workingSetManager>
</file>

<file path="workspace/.metadata/version.ini">
#Wed Mar 08 10:49:54 CET 2017
org.eclipse.core.runtime=2
org.eclipse.platform=4.5.2.v20160212-1500
</file>

</files>
